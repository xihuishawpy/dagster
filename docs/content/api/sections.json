{"api": {"apidocs": {"assets": {"alabaster_version": "0.7.12", "body": "<div class=\"section\" id=\"software-defined-assets\">\n<h1>Software-Defined Assets<a class=\"headerlink\" href=\"#software-defined-assets\" title=\"Permalink to this headline\">\u00b6</a></h1>\n<p>An asset is an object in persistent storage, such as a table, file, or persisted machine learning model. A software-defined asset is a Dagster object that couples an asset to the function and upstream assets that are used to produce its contents.</p>\n<dl class=\"py function\">\n<dt id=\"dagster.asset\">\n<code class=\"sig-prename descclassname\"><span class=\"pre\">&#64;</span></code><code class=\"sig-prename descclassname\"><span class=\"pre\">dagster.</span></code><code class=\"sig-name descname\"><span class=\"pre\">asset</span></code><span class=\"sig-paren\">(</span><em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">name</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">None</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">namespace</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">None</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">key_prefix</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">None</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">ins</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">None</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">non_argument_deps</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">None</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">metadata</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">None</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">description</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">None</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">config_schema</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">None</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">required_resource_keys</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">None</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">resource_defs</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">None</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">io_manager_def</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">None</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">io_manager_key</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">None</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">compute_kind</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">None</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">dagster_type</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">None</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">partitions_def</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">None</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">partition_mappings</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">None</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">op_tags</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">None</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">group_name</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">None</span></span></em><span class=\"sig-paren\">)</span><a class=\"reference internal\" href=\"../../../../_modules/dagster/core/asset_defs/decorators#asset\"><span class=\"viewcode-link\"><span class=\"pre\">[source]</span></span></a><a class=\"headerlink\" href=\"#dagster.asset\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Create a definition for how to compute an asset.</p>\n<dl class=\"simple\">\n<dt>A software-defined asset is the combination of:</dt><dd><ol class=\"arabic simple\">\n<li><p>An asset key, e.g. the name of a table.</p></li>\n<li><p>A function, which can be run to compute the contents of the asset.</p></li>\n<li><p>A set of upstream assets that are provided as inputs to the function when computing the asset.</p></li>\n</ol>\n</dd>\n</dl>\n<p>Unlike an op, whose dependencies are determined by the graph it lives inside, an asset knows\nabout the upstream assets it depends on. The upstream assets are inferred from the arguments\nto the decorated function. The name of the argument designates the name of the upstream asset.</p>\n<dl class=\"field-list simple\">\n<dt class=\"field-odd\">Parameters</dt>\n<dd class=\"field-odd\"><ul class=\"simple\">\n<li><p><strong>name</strong> (<em>Optional</em><em>[</em><a class=\"reference external\" href=\"https://docs.python.org/3/library/stdtypes.html#str\" title=\"(in Python v3.8)\"><em>str</em></a><em>]</em>) \u2013 The name of the asset.  If not provided, defaults to the name of the\ndecorated function.</p></li>\n<li><p><strong>namespace</strong> (<em>Optional</em><em>[</em><em>Sequence</em><em>[</em><a class=\"reference external\" href=\"https://docs.python.org/3/library/stdtypes.html#str\" title=\"(in Python v3.8)\"><em>str</em></a><em>]</em><em>]</em>) \u2013 <strong>Deprecated (use `key_prefix`)</strong>. The namespace that\nthe asset resides in.  The namespace + the name forms the asset key.</p></li>\n<li><p><strong>key_prefix</strong> (<em>Optional</em><em>[</em><em>Union</em><em>[</em><a class=\"reference external\" href=\"https://docs.python.org/3/library/stdtypes.html#str\" title=\"(in Python v3.8)\"><em>str</em></a><em>, </em><em>Sequence</em><em>[</em><a class=\"reference external\" href=\"https://docs.python.org/3/library/stdtypes.html#str\" title=\"(in Python v3.8)\"><em>str</em></a><em>]</em><em>]</em><em>]</em>) \u2013 If provided, the asset\u2019s key is the\nconcatenation of the key_prefix and the asset\u2019s name, which defaults to the name of\nthe decorated function.</p></li>\n<li><p><strong>ins</strong> (<em>Optional</em><em>[</em><em>Mapping</em><em>[</em><a class=\"reference external\" href=\"https://docs.python.org/3/library/stdtypes.html#str\" title=\"(in Python v3.8)\"><em>str</em></a><em>, </em><a class=\"reference internal\" href=\"#dagster.AssetIn\" title=\"dagster.AssetIn\"><em>AssetIn</em></a><em>]</em><em>]</em>) \u2013 A dictionary that maps input names to their metadata\nand namespaces.</p></li>\n<li><p><strong>non_argument_deps</strong> (<em>Optional</em><em>[</em><em>Union</em><em>[</em><em>Set</em><em>[</em><a class=\"reference internal\" href=\"ops#dagster.AssetKey\" title=\"dagster.AssetKey\"><em>AssetKey</em></a><em>]</em><em>, </em><em>Set</em><em>[</em><a class=\"reference external\" href=\"https://docs.python.org/3/library/stdtypes.html#str\" title=\"(in Python v3.8)\"><em>str</em></a><em>]</em><em>]</em><em>]</em>) \u2013 Set of asset keys that are\nupstream dependencies, but do not pass an input to the asset.</p></li>\n<li><p><strong>config_schema</strong> (<em>Optional</em><em>[</em><a class=\"reference internal\" href=\"config#dagster.ConfigSchema\" title=\"dagster.ConfigSchema\"><em>ConfigSchema</em></a>) \u2013 The configuration schema for the asset\u2019s underlying\nop. If set, Dagster will check that config provided for the op matches this schema and fail\nif it does not. If not set, Dagster will accept any config provided for the op.</p></li>\n<li><p><strong>metadata</strong> (<em>Optional</em><em>[</em><em>Dict</em><em>[</em><a class=\"reference external\" href=\"https://docs.python.org/3/library/stdtypes.html#str\" title=\"(in Python v3.8)\"><em>str</em></a><em>, </em><em>Any</em><em>]</em><em>]</em>) \u2013 A dict of metadata entries for the asset.</p></li>\n<li><p><strong>required_resource_keys</strong> (<em>Optional</em><em>[</em><em>Set</em><em>[</em><a class=\"reference external\" href=\"https://docs.python.org/3/library/stdtypes.html#str\" title=\"(in Python v3.8)\"><em>str</em></a><em>]</em><em>]</em>) \u2013 Set of resource handles required by the op.</p></li>\n<li><p><strong>io_manager_key</strong> (<em>Optional</em><em>[</em><a class=\"reference external\" href=\"https://docs.python.org/3/library/stdtypes.html#str\" title=\"(in Python v3.8)\"><em>str</em></a><em>]</em>) \u2013 The resource key of the IOManager used\nfor storing the output of the op as an asset, and for loading it in downstream ops\n(default: \u201cio_manager\u201d). Only one of io_manager_key and io_manager_def can be provided.</p></li>\n<li><p><strong>io_manager_def</strong> (<em>Optional</em><em>[</em><a class=\"reference internal\" href=\"io-managers#dagster.IOManagerDefinition\" title=\"dagster.IOManagerDefinition\"><em>IOManagerDefinition</em></a><em>]</em>) \u2013 The definition of the IOManager used for\nstoring the output of the op as an asset,  and for loading it in\ndownstream ops. Only one of io_manager_def and io_manager_key can be provided.</p></li>\n<li><p><strong>compute_kind</strong> (<em>Optional</em><em>[</em><a class=\"reference external\" href=\"https://docs.python.org/3/library/stdtypes.html#str\" title=\"(in Python v3.8)\"><em>str</em></a><em>]</em>) \u2013 A string to represent the kind of computation that produces\nthe asset, e.g. \u201cdbt\u201d or \u201cspark\u201d. It will be displayed in Dagit as a badge on the asset.</p></li>\n<li><p><strong>dagster_type</strong> (<em>Optional</em><em>[</em><a class=\"reference internal\" href=\"types#dagster.DagsterType\" title=\"dagster.DagsterType\"><em>DagsterType</em></a><em>]</em>) \u2013 Allows specifying type validation functions that\nwill be executed on the output of the decorated function after it runs.</p></li>\n<li><p><strong>partitions_def</strong> (<em>Optional</em><em>[</em><a class=\"reference internal\" href=\"partitions#dagster.PartitionsDefinition\" title=\"dagster.PartitionsDefinition\"><em>PartitionsDefinition</em></a><em>]</em>) \u2013 Defines the set of partition keys that\ncompose the asset.</p></li>\n<li><p><strong>partition_mappings</strong> (<em>Optional</em><em>[</em><em>Mapping</em><em>[</em><a class=\"reference external\" href=\"https://docs.python.org/3/library/stdtypes.html#str\" title=\"(in Python v3.8)\"><em>str</em></a><em>, </em><em>PartitionMapping</em><em>]</em><em>]</em>) \u2013 Defines how to map partition\nkeys for this asset to partition keys of upstream assets. Each key in the dictionary\ncorreponds to one of the input assets, and each value is a PartitionMapping.\nIf no entry is provided for a particular asset dependency, the partition mapping defaults\nto the default partition mapping for the partitions definition, which is typically maps\npartition keys to the same partition keys in upstream assets.</p></li>\n<li><p><strong>op_tags</strong> (<em>Optional</em><em>[</em><em>Dict</em><em>[</em><a class=\"reference external\" href=\"https://docs.python.org/3/library/stdtypes.html#str\" title=\"(in Python v3.8)\"><em>str</em></a><em>, </em><em>Any</em><em>]</em><em>]</em>) \u2013 A dictionary of tags for the op that computes the asset.\nFrameworks may expect and require certain metadata to be attached to a op. Values that\nare not strings will be json encoded and must meet the criteria that\n<cite>json.loads(json.dumps(value)) == value</cite>.</p></li>\n<li><p><strong>group_name</strong> (<em>Optional</em><em>[</em><a class=\"reference external\" href=\"https://docs.python.org/3/library/stdtypes.html#str\" title=\"(in Python v3.8)\"><em>str</em></a><em>]</em>) \u2013 A string name used to organize multiple assets into groups. If not provided,\nthe name \u201cdefault\u201d is used.</p></li>\n<li><p><strong>resource_defs</strong> (<em>Optional</em><em>[</em><em>Mapping</em><em>[</em><a class=\"reference external\" href=\"https://docs.python.org/3/library/stdtypes.html#str\" title=\"(in Python v3.8)\"><em>str</em></a><em>, </em><a class=\"reference internal\" href=\"resources#dagster.ResourceDefinition\" title=\"dagster.ResourceDefinition\"><em>ResourceDefinition</em></a><em>]</em><em>]</em>) \u2013 A mapping of resource keys to resource definitions. These resources\nwill be initialized during execution, and can be accessed from the\ncontext within the body of the function.</p></li>\n</ul>\n</dd>\n</dl>\n<p class=\"rubric\">Examples</p>\n<div class=\"highlight-python notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"nd\">@asset</span>\n<span class=\"k\">def</span> <span class=\"nf\">my_asset</span><span class=\"p\">(</span><span class=\"n\">my_upstream_asset</span><span class=\"p\">:</span> <span class=\"nb\">int</span><span class=\"p\">)</span> <span class=\"o\">-&gt;</span> <span class=\"nb\">int</span><span class=\"p\">:</span>\n    <span class=\"k\">return</span> <span class=\"n\">my_upstream_asset</span> <span class=\"o\">+</span> <span class=\"mi\">1</span>\n</pre></div>\n</div>\n</dd></dl>\n\n<dl class=\"py class\">\n<dt id=\"dagster.AssetIn\">\n<em class=\"property\"><span class=\"pre\">class</span> </em><code class=\"sig-prename descclassname\"><span class=\"pre\">dagster.</span></code><code class=\"sig-name descname\"><span class=\"pre\">AssetIn</span></code><span class=\"sig-paren\">(</span><em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">key</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">None</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">metadata</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">None</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">namespace</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">None</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">key_prefix</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">None</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">asset_key</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">None</span></span></em><span class=\"sig-paren\">)</span><a class=\"reference internal\" href=\"../../../../_modules/dagster/core/asset_defs/asset_in#AssetIn\"><span class=\"viewcode-link\"><span class=\"pre\">[source]</span></span></a><a class=\"headerlink\" href=\"#dagster.AssetIn\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Defines an asset dependency.</p>\n<dl class=\"py attribute\">\n<dt id=\"dagster.AssetIn.key_prefix\">\n<code class=\"sig-name descname\"><span class=\"pre\">key_prefix</span></code><a class=\"headerlink\" href=\"#dagster.AssetIn.key_prefix\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>If provided, the asset\u2019s key is the\nconcatenation of the key_prefix and the input name. Only one of the \u201ckey_prefix\u201d and\n\u201ckey\u201d arguments should be provided.</p>\n<dl class=\"field-list simple\">\n<dt class=\"field-odd\">Type</dt>\n<dd class=\"field-odd\"><p>Optional[Union[<a class=\"reference external\" href=\"https://docs.python.org/3/library/stdtypes.html#str\" title=\"(in Python v3.8)\">str</a>, Sequence[<a class=\"reference external\" href=\"https://docs.python.org/3/library/stdtypes.html#str\" title=\"(in Python v3.8)\">str</a>]]]</p>\n</dd>\n</dl>\n</dd></dl>\n\n<dl class=\"py attribute\">\n<dt id=\"dagster.AssetIn.key\">\n<code class=\"sig-name descname\"><span class=\"pre\">key</span></code><a class=\"headerlink\" href=\"#dagster.AssetIn.key\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>The asset\u2019s key. Only one of the\n\u201ckey_prefix\u201d and \u201ckey\u201d arguments should be provided.</p>\n<dl class=\"field-list simple\">\n<dt class=\"field-odd\">Type</dt>\n<dd class=\"field-odd\"><p>Optional[Union[<a class=\"reference external\" href=\"https://docs.python.org/3/library/stdtypes.html#str\" title=\"(in Python v3.8)\">str</a>, Sequence[<a class=\"reference external\" href=\"https://docs.python.org/3/library/stdtypes.html#str\" title=\"(in Python v3.8)\">str</a>], <a class=\"reference internal\" href=\"ops#dagster.AssetKey\" title=\"dagster.AssetKey\">AssetKey</a>]]</p>\n</dd>\n</dl>\n</dd></dl>\n\n<dl class=\"py attribute\">\n<dt id=\"dagster.AssetIn.metadata\">\n<code class=\"sig-name descname\"><span class=\"pre\">metadata</span></code><a class=\"headerlink\" href=\"#dagster.AssetIn.metadata\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>A dict of the metadata for the input.\nFor example, if you only need a subset of columns from an upstream table, you could\ninclude that in metadata and the IO manager that loads the upstream table could use the\nmetadata to determine which columns to load.</p>\n<dl class=\"field-list simple\">\n<dt class=\"field-odd\">Type</dt>\n<dd class=\"field-odd\"><p>Optional[Dict[<a class=\"reference external\" href=\"https://docs.python.org/3/library/stdtypes.html#str\" title=\"(in Python v3.8)\">str</a>, Any]]</p>\n</dd>\n</dl>\n</dd></dl>\n\n</dd></dl>\n\n<dl class=\"py class\">\n<dt id=\"dagster.SourceAsset\">\n<em class=\"property\"><span class=\"pre\">class</span> </em><code class=\"sig-prename descclassname\"><span class=\"pre\">dagster.</span></code><code class=\"sig-name descname\"><span class=\"pre\">SourceAsset</span></code><span class=\"sig-paren\">(</span><em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">key</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">metadata</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">None</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">io_manager_key</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">None</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">io_manager_def</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">None</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">description</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">None</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">partitions_def</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">None</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">_metadata_entries</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">None</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">group_name</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">None</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">resource_defs</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">None</span></span></em><span class=\"sig-paren\">)</span><a class=\"reference internal\" href=\"../../../../_modules/dagster/core/asset_defs/source_asset#SourceAsset\"><span class=\"viewcode-link\"><span class=\"pre\">[source]</span></span></a><a class=\"headerlink\" href=\"#dagster.SourceAsset\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>A SourceAsset represents an asset that will be loaded by (but not updated by) Dagster.</p>\n<dl class=\"py attribute\">\n<dt id=\"dagster.SourceAsset.key\">\n<code class=\"sig-name descname\"><span class=\"pre\">key</span></code><a class=\"headerlink\" href=\"#dagster.SourceAsset.key\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>The key of the asset.</p>\n<dl class=\"field-list simple\">\n<dt class=\"field-odd\">Type</dt>\n<dd class=\"field-odd\"><p>Union[<a class=\"reference internal\" href=\"ops#dagster.AssetKey\" title=\"dagster.AssetKey\">AssetKey</a>, Sequence[<a class=\"reference external\" href=\"https://docs.python.org/3/library/stdtypes.html#str\" title=\"(in Python v3.8)\">str</a>], <a class=\"reference external\" href=\"https://docs.python.org/3/library/stdtypes.html#str\" title=\"(in Python v3.8)\">str</a>]</p>\n</dd>\n</dl>\n</dd></dl>\n\n<dl class=\"py attribute\">\n<dt id=\"dagster.SourceAsset.metadata_entries\">\n<code class=\"sig-name descname\"><span class=\"pre\">metadata_entries</span></code><a class=\"headerlink\" href=\"#dagster.SourceAsset.metadata_entries\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Metadata associated with the asset.</p>\n<dl class=\"field-list simple\">\n<dt class=\"field-odd\">Type</dt>\n<dd class=\"field-odd\"><p>List[<a class=\"reference internal\" href=\"ops#dagster.MetadataEntry\" title=\"dagster.MetadataEntry\">MetadataEntry</a>]</p>\n</dd>\n</dl>\n</dd></dl>\n\n<dl class=\"py attribute\">\n<dt id=\"dagster.SourceAsset.io_manager_key\">\n<code class=\"sig-name descname\"><span class=\"pre\">io_manager_key</span></code><a class=\"headerlink\" href=\"#dagster.SourceAsset.io_manager_key\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>The key for the IOManager that will be used to load the contents of\nthe asset when it\u2019s used as an input to other assets inside a job.</p>\n<dl class=\"field-list simple\">\n<dt class=\"field-odd\">Type</dt>\n<dd class=\"field-odd\"><p>Optional[<a class=\"reference external\" href=\"https://docs.python.org/3/library/stdtypes.html#str\" title=\"(in Python v3.8)\">str</a>]</p>\n</dd>\n</dl>\n</dd></dl>\n\n<dl class=\"py attribute\">\n<dt id=\"dagster.SourceAsset.io_manager_def\">\n<code class=\"sig-name descname\"><span class=\"pre\">io_manager_def</span></code><a class=\"headerlink\" href=\"#dagster.SourceAsset.io_manager_def\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>The definition of the IOManager that will be used to load the contents of\nthe asset when it\u2019s used as an input to other assets inside a job.</p>\n<dl class=\"field-list simple\">\n<dt class=\"field-odd\">Type</dt>\n<dd class=\"field-odd\"><p>Optional[<a class=\"reference internal\" href=\"io-managers#dagster.IOManagerDefinition\" title=\"dagster.IOManagerDefinition\">IOManagerDefinition</a>]</p>\n</dd>\n</dl>\n</dd></dl>\n\n<dl class=\"py attribute\">\n<dt id=\"dagster.SourceAsset.description\">\n<code class=\"sig-name descname\"><span class=\"pre\">description</span></code><a class=\"headerlink\" href=\"#dagster.SourceAsset.description\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>The description of the asset.</p>\n<dl class=\"field-list simple\">\n<dt class=\"field-odd\">Type</dt>\n<dd class=\"field-odd\"><p>Optional[<a class=\"reference external\" href=\"https://docs.python.org/3/library/stdtypes.html#str\" title=\"(in Python v3.8)\">str</a>]</p>\n</dd>\n</dl>\n</dd></dl>\n\n<dl class=\"py attribute\">\n<dt id=\"dagster.SourceAsset.partitions_def\">\n<code class=\"sig-name descname\"><span class=\"pre\">partitions_def</span></code><a class=\"headerlink\" href=\"#dagster.SourceAsset.partitions_def\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Defines the set of partition keys that\ncompose the asset.</p>\n<dl class=\"field-list simple\">\n<dt class=\"field-odd\">Type</dt>\n<dd class=\"field-odd\"><p>Optional[<a class=\"reference internal\" href=\"partitions#dagster.PartitionsDefinition\" title=\"dagster.PartitionsDefinition\">PartitionsDefinition</a>]</p>\n</dd>\n</dl>\n</dd></dl>\n\n</dd></dl>\n\n<dl class=\"py function\">\n<dt id=\"dagster.define_asset_job\">\n<code class=\"sig-prename descclassname\"><span class=\"pre\">dagster.</span></code><code class=\"sig-name descname\"><span class=\"pre\">define_asset_job</span></code><span class=\"sig-paren\">(</span><em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">name</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">selection</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">None</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">config</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">None</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">description</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">None</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">tags</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">None</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">partitions_def</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">None</span></span></em><span class=\"sig-paren\">)</span><a class=\"reference internal\" href=\"../../../../_modules/dagster/core/definitions/unresolved_asset_job_definition#define_asset_job\"><span class=\"viewcode-link\"><span class=\"pre\">[source]</span></span></a><a class=\"headerlink\" href=\"#dagster.define_asset_job\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Creates a definition of a job which will materialize a selection of assets. This will only be\nresolved to a JobDefinition once placed in a repository.</p>\n<dl class=\"field-list simple\">\n<dt class=\"field-odd\">Parameters</dt>\n<dd class=\"field-odd\"><ul class=\"simple\">\n<li><p><strong>name</strong> (<a class=\"reference external\" href=\"https://docs.python.org/3/library/stdtypes.html#str\" title=\"(in Python v3.8)\"><em>str</em></a>) \u2013 The name for the job.</p></li>\n<li><p><strong>selection</strong> (<em>Union</em><em>[</em><a class=\"reference external\" href=\"https://docs.python.org/3/library/stdtypes.html#str\" title=\"(in Python v3.8)\"><em>str</em></a><em>, </em><em>Sequence</em><em>[</em><a class=\"reference external\" href=\"https://docs.python.org/3/library/stdtypes.html#str\" title=\"(in Python v3.8)\"><em>str</em></a><em>]</em><em>, </em><a class=\"reference internal\" href=\"#dagster.AssetSelection\" title=\"dagster.AssetSelection\"><em>AssetSelection</em></a><em>]</em>) \u2013 <p>A selection over the set of Assets available on your repository. This can be a string\nsuch as \u201cmy_asset*\u201d, a list of such strings (representing a union of these selections),\nor an AssetSelection object.</p>\n<p>This selection will be resolved to a set of Assets once the repository is loaded with a\nset of AssetsDefinitions.</p>\n</p></li>\n<li><p><strong>config</strong> \u2013 <p>Describes how the Job is parameterized at runtime.</p>\n<p>If no value is provided, then the schema for the job\u2019s run config is a standard\nformat based on its solids and resources.</p>\n<p>If a dictionary is provided, then it must conform to the standard config schema, and\nit will be used as the job\u2019s run config for the job whenever the job is executed.\nThe values provided will be viewable and editable in the Dagit playground, so be\ncareful with secrets.</p>\n<p>If a <a class=\"reference internal\" href=\"config#dagster.ConfigMapping\" title=\"dagster.ConfigMapping\"><code class=\"xref py py-class docutils literal notranslate\"><span class=\"pre\">ConfigMapping</span></code></a> object is provided, then the schema for the job\u2019s run config is\ndetermined by the config mapping, and the ConfigMapping, which should return\nconfiguration in the standard format to configure the job.</p>\n</p></li>\n<li><p><strong>tags</strong> (<em>Optional</em><em>[</em><em>Mapping</em><em>[</em><a class=\"reference external\" href=\"https://docs.python.org/3/library/stdtypes.html#str\" title=\"(in Python v3.8)\"><em>str</em></a><em>, </em><em>Any</em><em>]</em><em>]</em>) \u2013 Arbitrary information that will be attached to the execution of the Job.\nValues that are not strings will be json encoded and must meet the criteria that\n<cite>json.loads(json.dumps(value)) == value</cite>.  These tag values may be overwritten by tag\nvalues provided at invocation time.</p></li>\n<li><p><strong>description</strong> (<em>Optional</em><em>[</em><a class=\"reference external\" href=\"https://docs.python.org/3/library/stdtypes.html#str\" title=\"(in Python v3.8)\"><em>str</em></a><em>]</em>) \u2013 A description for the Job.</p></li>\n<li><p><strong>partitions_def</strong> (<em>Optional</em><em>[</em><a class=\"reference internal\" href=\"partitions#dagster.PartitionsDefinition\" title=\"dagster.PartitionsDefinition\"><em>PartitionsDefinition</em></a><em>]</em>) \u2013 Defines the set of partitions for this job. All AssetDefinitions selected for this job\nmust have a matching PartitionsDefinition.</p></li>\n</ul>\n</dd>\n<dt class=\"field-even\">Returns</dt>\n<dd class=\"field-even\"><p>The job, which can be placed inside a repository.</p>\n</dd>\n<dt class=\"field-odd\">Return type</dt>\n<dd class=\"field-odd\"><p>UnresolvedAssetJobDefinition</p>\n</dd>\n</dl>\n<p class=\"rubric\">Examples</p>\n<div class=\"highlight-python notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"c1\"># A job that targets all assets in the repository:</span>\n<span class=\"nd\">@asset</span>\n<span class=\"k\">def</span> <span class=\"nf\">asset1</span><span class=\"p\">():</span>\n    <span class=\"o\">...</span>\n\n<span class=\"nd\">@repository</span>\n<span class=\"k\">def</span> <span class=\"nf\">repo</span><span class=\"p\">():</span>\n    <span class=\"k\">return</span> <span class=\"p\">[</span><span class=\"n\">asset1</span><span class=\"p\">,</span> <span class=\"n\">define_asset_job</span><span class=\"p\">(</span><span class=\"s2\">&quot;all_assets&quot;</span><span class=\"p\">)]</span>\n\n<span class=\"c1\"># A job that targets all the assets in a group:</span>\n<span class=\"nd\">@repository</span>\n<span class=\"k\">def</span> <span class=\"nf\">repo</span><span class=\"p\">():</span>\n    <span class=\"k\">return</span> <span class=\"p\">[</span>\n        <span class=\"n\">assets</span><span class=\"p\">,</span>\n        <span class=\"n\">define_asset_job</span><span class=\"p\">(</span><span class=\"s2\">&quot;marketing_job&quot;</span><span class=\"p\">,</span> <span class=\"n\">selection</span><span class=\"o\">=</span><span class=\"n\">AssetSelection</span><span class=\"o\">.</span><span class=\"n\">groups</span><span class=\"p\">(</span><span class=\"s2\">&quot;marketing&quot;</span><span class=\"p\">)),</span>\n    <span class=\"p\">]</span>\n\n<span class=\"c1\"># Resources are supplied to the assets, not the job:</span>\n<span class=\"nd\">@asset</span><span class=\"p\">(</span><span class=\"n\">required_resource_keys</span><span class=\"o\">=</span><span class=\"p\">{</span><span class=\"s2\">&quot;slack_client&quot;</span><span class=\"p\">})</span>\n<span class=\"k\">def</span> <span class=\"nf\">asset1</span><span class=\"p\">():</span>\n    <span class=\"o\">...</span>\n\n<span class=\"nd\">@repository</span>\n<span class=\"k\">def</span> <span class=\"nf\">prod_repo</span><span class=\"p\">():</span>\n    <span class=\"k\">return</span> <span class=\"p\">[</span>\n        <span class=\"o\">*</span><span class=\"n\">with_resources</span><span class=\"p\">([</span><span class=\"n\">asset1</span><span class=\"p\">],</span> <span class=\"n\">resource_defs</span><span class=\"o\">=</span><span class=\"p\">{</span><span class=\"s2\">&quot;slack_client&quot;</span><span class=\"p\">:</span> <span class=\"n\">prod_slack_client</span><span class=\"p\">}),</span>\n        <span class=\"n\">define_asset_job</span><span class=\"p\">(</span><span class=\"s2\">&quot;all_assets&quot;</span><span class=\"p\">),</span>\n    <span class=\"p\">]</span>\n</pre></div>\n</div>\n</dd></dl>\n\n<dl class=\"py class\">\n<dt id=\"dagster.AssetSelection\">\n<em class=\"property\"><span class=\"pre\">class</span> </em><code class=\"sig-prename descclassname\"><span class=\"pre\">dagster.</span></code><code class=\"sig-name descname\"><span class=\"pre\">AssetSelection</span></code><a class=\"reference internal\" href=\"../../../../_modules/dagster/core/asset_defs/asset_selection#AssetSelection\"><span class=\"viewcode-link\"><span class=\"pre\">[source]</span></span></a><a class=\"headerlink\" href=\"#dagster.AssetSelection\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>An AssetSelection defines a query over a set of assets, normally all the assets in a repository.</p>\n<p>You can use the \u201c|\u201d and \u201c&amp;\u201d operators to create unions and intersections of asset selections,\nrespectively.</p>\n<p>AssetSelections are typically used with <a class=\"reference internal\" href=\"#dagster.define_asset_job\" title=\"dagster.define_asset_job\"><code class=\"xref py py-func docutils literal notranslate\"><span class=\"pre\">define_asset_job()</span></code></a>.</p>\n<p class=\"rubric\">Examples</p>\n<div class=\"highlight-python notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"c1\"># Select all assets in group &quot;marketing&quot;:</span>\n<span class=\"n\">AssetSelection</span><span class=\"o\">.</span><span class=\"n\">groups</span><span class=\"p\">(</span><span class=\"s2\">&quot;marketing&quot;</span><span class=\"p\">)</span> <span class=\"o\">&amp;</span> <span class=\"n\">AssetSelection</span><span class=\"o\">.</span><span class=\"n\">keys</span><span class=\"p\">(</span><span class=\"s2\">&quot;leads&quot;</span><span class=\"p\">)</span><span class=\"o\">.</span><span class=\"n\">downstream</span><span class=\"p\">()</span>\n\n<span class=\"c1\"># Select all assets in group &quot;marketing&quot;, as well as the asset with key &quot;promotion&quot;:</span>\n<span class=\"n\">AssetSelection</span><span class=\"o\">.</span><span class=\"n\">groups</span><span class=\"p\">(</span><span class=\"s2\">&quot;marketing&quot;</span><span class=\"p\">)</span> <span class=\"o\">|</span> <span class=\"n\">AssetSelection</span><span class=\"o\">.</span><span class=\"n\">keys</span><span class=\"p\">(</span><span class=\"s2\">&quot;promotion&quot;</span><span class=\"p\">)</span>\n\n<span class=\"c1\"># Select all assets in group &quot;marketing&quot; that are downstream of asset &quot;leads&quot;:</span>\n<span class=\"n\">AssetSelection</span><span class=\"o\">.</span><span class=\"n\">groups</span><span class=\"p\">(</span><span class=\"s2\">&quot;marketing&quot;</span><span class=\"p\">)</span> <span class=\"o\">&amp;</span> <span class=\"n\">AssetSelection</span><span class=\"o\">.</span><span class=\"n\">keys</span><span class=\"p\">(</span><span class=\"s2\">&quot;leads&quot;</span><span class=\"p\">)</span><span class=\"o\">.</span><span class=\"n\">downstream</span><span class=\"p\">()</span>\n</pre></div>\n</div>\n</dd></dl>\n\n<dl class=\"py function\">\n<dt id=\"dagster.load_assets_from_modules\">\n<code class=\"sig-prename descclassname\"><span class=\"pre\">dagster.</span></code><code class=\"sig-name descname\"><span class=\"pre\">load_assets_from_modules</span></code><span class=\"sig-paren\">(</span><em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">modules</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">group_name</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">None</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">key_prefix</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">None</span></span></em><span class=\"sig-paren\">)</span><a class=\"reference internal\" href=\"../../../../_modules/dagster/core/asset_defs/load_assets_from_modules#load_assets_from_modules\"><span class=\"viewcode-link\"><span class=\"pre\">[source]</span></span></a><a class=\"headerlink\" href=\"#dagster.load_assets_from_modules\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Constructs a list of assets and source assets from the given modules.</p>\n<dl class=\"field-list simple\">\n<dt class=\"field-odd\">Parameters</dt>\n<dd class=\"field-odd\"><ul class=\"simple\">\n<li><p><strong>modules</strong> (<em>Iterable</em><em>[</em><em>ModuleType</em><em>]</em>) \u2013 The Python modules to look for assets inside.</p></li>\n<li><p><strong>group_name</strong> (<em>Optional</em><em>[</em><a class=\"reference external\" href=\"https://docs.python.org/3/library/stdtypes.html#str\" title=\"(in Python v3.8)\"><em>str</em></a><em>]</em>) \u2013 Group name to apply to the loaded assets. The returned assets will be copies of the\nloaded objects, with the group name added.</p></li>\n<li><p><strong>key_prefix</strong> (<em>Optional</em><em>[</em><em>Union</em><em>[</em><a class=\"reference external\" href=\"https://docs.python.org/3/library/stdtypes.html#str\" title=\"(in Python v3.8)\"><em>str</em></a><em>, </em><em>List</em><em>[</em><a class=\"reference external\" href=\"https://docs.python.org/3/library/stdtypes.html#str\" title=\"(in Python v3.8)\"><em>str</em></a><em>]</em><em>]</em><em>]</em>) \u2013 Prefix to prepend to the keys of the loaded assets. The returned assets will be copies\nof the loaded objects, with the prefix prepended.</p></li>\n</ul>\n</dd>\n<dt class=\"field-even\">Returns</dt>\n<dd class=\"field-even\"><p>A list containing assets and source assets defined in the given modules.</p>\n</dd>\n<dt class=\"field-odd\">Return type</dt>\n<dd class=\"field-odd\"><p>List[Union[<a class=\"reference internal\" href=\"#dagster.AssetsDefinition\" title=\"dagster.AssetsDefinition\">AssetsDefinition</a>, <a class=\"reference internal\" href=\"#dagster.SourceAsset\" title=\"dagster.SourceAsset\">SourceAsset</a>]]</p>\n</dd>\n</dl>\n</dd></dl>\n\n<dl class=\"py function\">\n<dt id=\"dagster.load_assets_from_current_module\">\n<code class=\"sig-prename descclassname\"><span class=\"pre\">dagster.</span></code><code class=\"sig-name descname\"><span class=\"pre\">load_assets_from_current_module</span></code><span class=\"sig-paren\">(</span><em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">group_name</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">None</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">key_prefix</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">None</span></span></em><span class=\"sig-paren\">)</span><a class=\"reference internal\" href=\"../../../../_modules/dagster/core/asset_defs/load_assets_from_modules#load_assets_from_current_module\"><span class=\"viewcode-link\"><span class=\"pre\">[source]</span></span></a><a class=\"headerlink\" href=\"#dagster.load_assets_from_current_module\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Constructs a list of assets and source assets from the module where this function is called.</p>\n<dl class=\"field-list simple\">\n<dt class=\"field-odd\">Parameters</dt>\n<dd class=\"field-odd\"><ul class=\"simple\">\n<li><p><strong>group_name</strong> (<em>Optional</em><em>[</em><a class=\"reference external\" href=\"https://docs.python.org/3/library/stdtypes.html#str\" title=\"(in Python v3.8)\"><em>str</em></a><em>]</em>) \u2013 Group name to apply to the loaded assets. The returned assets will be copies of the\nloaded objects, with the group name added.</p></li>\n<li><p><strong>key_prefix</strong> (<em>Optional</em><em>[</em><em>Union</em><em>[</em><a class=\"reference external\" href=\"https://docs.python.org/3/library/stdtypes.html#str\" title=\"(in Python v3.8)\"><em>str</em></a><em>, </em><em>List</em><em>[</em><a class=\"reference external\" href=\"https://docs.python.org/3/library/stdtypes.html#str\" title=\"(in Python v3.8)\"><em>str</em></a><em>]</em><em>]</em><em>]</em>) \u2013 Prefix to prepend to the keys of the loaded assets. The returned assets will be copies\nof the loaded objects, with the prefix prepended.</p></li>\n</ul>\n</dd>\n<dt class=\"field-even\">Returns</dt>\n<dd class=\"field-even\"><p>A list containing assets and source assets defined in the module.</p>\n</dd>\n<dt class=\"field-odd\">Return type</dt>\n<dd class=\"field-odd\"><p>List[Union[<a class=\"reference internal\" href=\"#dagster.AssetsDefinition\" title=\"dagster.AssetsDefinition\">AssetsDefinition</a>, <a class=\"reference internal\" href=\"#dagster.SourceAsset\" title=\"dagster.SourceAsset\">SourceAsset</a>]]</p>\n</dd>\n</dl>\n</dd></dl>\n\n<dl class=\"py function\">\n<dt id=\"dagster.load_assets_from_package_module\">\n<code class=\"sig-prename descclassname\"><span class=\"pre\">dagster.</span></code><code class=\"sig-name descname\"><span class=\"pre\">load_assets_from_package_module</span></code><span class=\"sig-paren\">(</span><em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">package_module</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">group_name</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">None</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">key_prefix</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">None</span></span></em><span class=\"sig-paren\">)</span><a class=\"reference internal\" href=\"../../../../_modules/dagster/core/asset_defs/load_assets_from_modules#load_assets_from_package_module\"><span class=\"viewcode-link\"><span class=\"pre\">[source]</span></span></a><a class=\"headerlink\" href=\"#dagster.load_assets_from_package_module\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Constructs a list of assets and source assets that includes all asset\ndefinitions and source assets in all sub-modules of the given package module.</p>\n<p>A package module is the result of importing a package.</p>\n<dl class=\"field-list simple\">\n<dt class=\"field-odd\">Parameters</dt>\n<dd class=\"field-odd\"><ul class=\"simple\">\n<li><p><strong>package_module</strong> (<em>ModuleType</em>) \u2013 The package module to looks for assets inside.</p></li>\n<li><p><strong>group_name</strong> (<em>Optional</em><em>[</em><a class=\"reference external\" href=\"https://docs.python.org/3/library/stdtypes.html#str\" title=\"(in Python v3.8)\"><em>str</em></a><em>]</em>) \u2013 Group name to apply to the loaded assets. The returned assets will be copies of the\nloaded objects, with the group name added.</p></li>\n<li><p><strong>key_prefix</strong> (<em>Optional</em><em>[</em><em>Union</em><em>[</em><a class=\"reference external\" href=\"https://docs.python.org/3/library/stdtypes.html#str\" title=\"(in Python v3.8)\"><em>str</em></a><em>, </em><em>List</em><em>[</em><a class=\"reference external\" href=\"https://docs.python.org/3/library/stdtypes.html#str\" title=\"(in Python v3.8)\"><em>str</em></a><em>]</em><em>]</em><em>]</em>) \u2013 Prefix to prepend to the keys of the loaded assets. The returned assets will be copies\nof the loaded objects, with the prefix prepended.</p></li>\n</ul>\n</dd>\n<dt class=\"field-even\">Returns</dt>\n<dd class=\"field-even\"><p>A list containing assets and source assets defined in the module.</p>\n</dd>\n<dt class=\"field-odd\">Return type</dt>\n<dd class=\"field-odd\"><p>List[Union[<a class=\"reference internal\" href=\"#dagster.AssetsDefinition\" title=\"dagster.AssetsDefinition\">AssetsDefinition</a>, <a class=\"reference internal\" href=\"#dagster.SourceAsset\" title=\"dagster.SourceAsset\">SourceAsset</a>]]</p>\n</dd>\n</dl>\n</dd></dl>\n\n<dl class=\"py function\">\n<dt id=\"dagster.load_assets_from_package_name\">\n<code class=\"sig-prename descclassname\"><span class=\"pre\">dagster.</span></code><code class=\"sig-name descname\"><span class=\"pre\">load_assets_from_package_name</span></code><span class=\"sig-paren\">(</span><em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">package_name</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">group_name</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">None</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">key_prefix</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">None</span></span></em><span class=\"sig-paren\">)</span><a class=\"reference internal\" href=\"../../../../_modules/dagster/core/asset_defs/load_assets_from_modules#load_assets_from_package_name\"><span class=\"viewcode-link\"><span class=\"pre\">[source]</span></span></a><a class=\"headerlink\" href=\"#dagster.load_assets_from_package_name\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Constructs a list of assets and source assets that include all asset\ndefinitions and source assets in all sub-modules of the given package.</p>\n<dl class=\"field-list simple\">\n<dt class=\"field-odd\">Parameters</dt>\n<dd class=\"field-odd\"><ul class=\"simple\">\n<li><p><strong>package_name</strong> (<a class=\"reference external\" href=\"https://docs.python.org/3/library/stdtypes.html#str\" title=\"(in Python v3.8)\"><em>str</em></a>) \u2013 The name of a Python package to look for assets inside.</p></li>\n<li><p><strong>group_name</strong> (<em>Optional</em><em>[</em><a class=\"reference external\" href=\"https://docs.python.org/3/library/stdtypes.html#str\" title=\"(in Python v3.8)\"><em>str</em></a><em>]</em>) \u2013 Group name to apply to the loaded assets. The returned assets will be copies of the\nloaded objects, with the group name added.</p></li>\n<li><p><strong>key_prefix</strong> (<em>Optional</em><em>[</em><em>Union</em><em>[</em><a class=\"reference external\" href=\"https://docs.python.org/3/library/stdtypes.html#str\" title=\"(in Python v3.8)\"><em>str</em></a><em>, </em><em>List</em><em>[</em><a class=\"reference external\" href=\"https://docs.python.org/3/library/stdtypes.html#str\" title=\"(in Python v3.8)\"><em>str</em></a><em>]</em><em>]</em><em>]</em>) \u2013 Prefix to prepend to the keys of the loaded assets. The returned assets will be copies\nof the loaded objects, with the prefix prepended.</p></li>\n</ul>\n</dd>\n<dt class=\"field-even\">Returns</dt>\n<dd class=\"field-even\"><p>A list containing assets and source assets defined in the module.</p>\n</dd>\n<dt class=\"field-odd\">Return type</dt>\n<dd class=\"field-odd\"><p>List[Union[<a class=\"reference internal\" href=\"#dagster.AssetsDefinition\" title=\"dagster.AssetsDefinition\">AssetsDefinition</a>, <a class=\"reference internal\" href=\"#dagster.SourceAsset\" title=\"dagster.SourceAsset\">SourceAsset</a>]]</p>\n</dd>\n</dl>\n</dd></dl>\n\n<dl class=\"py class\">\n<dt id=\"dagster.AssetsDefinition\">\n<em class=\"property\"><span class=\"pre\">class</span> </em><code class=\"sig-prename descclassname\"><span class=\"pre\">dagster.</span></code><code class=\"sig-name descname\"><span class=\"pre\">AssetsDefinition</span></code><span class=\"sig-paren\">(</span><em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">keys_by_input_name</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">keys_by_output_name</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">node_def</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">partitions_def</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">None</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">partition_mappings</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">None</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">asset_deps</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">None</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">selected_asset_keys</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">None</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">can_subset</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">False</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">resource_defs</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">None</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">group_names_by_key</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">None</span></span></em><span class=\"sig-paren\">)</span><a class=\"reference internal\" href=\"../../../../_modules/dagster/core/asset_defs/assets#AssetsDefinition\"><span class=\"viewcode-link\"><span class=\"pre\">[source]</span></span></a><a class=\"headerlink\" href=\"#dagster.AssetsDefinition\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Defines a set of assets that are all produced by the same op or graph.</p>\n<p>AssetsDefinitions are typically not instantiated directly, but rather produced using the\n<a class=\"reference internal\" href=\"#dagster.asset\" title=\"dagster.asset\"><code class=\"xref py py-func docutils literal notranslate\"><span class=\"pre\">&#64;asset</span></code></a> or <a class=\"reference internal\" href=\"#dagster.multi_asset\" title=\"dagster.multi_asset\"><code class=\"xref py py-func docutils literal notranslate\"><span class=\"pre\">&#64;multi_asset</span></code></a> decorators.</p>\n<dl class=\"py attribute\">\n<dt id=\"dagster.AssetsDefinition.asset_deps\">\n<code class=\"sig-name descname\"><span class=\"pre\">asset_deps</span></code><a class=\"headerlink\" href=\"#dagster.AssetsDefinition.asset_deps\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Maps assets that are produced by this\ndef to assets that they depend on. The deps can be either \u201cinternal\u201d, meaning that they\nrefer to other assets that are produced by this def, or \u201cexternal\u201d, meaning that they\nrefer to assets that aren\u2019t produced by this def.</p>\n<dl class=\"field-list simple\">\n<dt class=\"field-odd\">Type</dt>\n<dd class=\"field-odd\"><p>Mapping[<a class=\"reference internal\" href=\"ops#dagster.AssetKey\" title=\"dagster.AssetKey\">AssetKey</a>, AbstractSet[<a class=\"reference internal\" href=\"ops#dagster.AssetKey\" title=\"dagster.AssetKey\">AssetKey</a>]]</p>\n</dd>\n</dl>\n</dd></dl>\n\n</dd></dl>\n\n<dl class=\"py function\">\n<dt id=\"dagster.multi_asset\">\n<code class=\"sig-prename descclassname\"><span class=\"pre\">&#64;</span></code><code class=\"sig-prename descclassname\"><span class=\"pre\">dagster.</span></code><code class=\"sig-name descname\"><span class=\"pre\">multi_asset</span></code><span class=\"sig-paren\">(</span><em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">outs</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">name</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">None</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">ins</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">None</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">non_argument_deps</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">None</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">description</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">None</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">config_schema</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">None</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">required_resource_keys</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">None</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">compute_kind</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">None</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">internal_asset_deps</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">None</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">partitions_def</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">None</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">partition_mappings</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">None</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">op_tags</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">None</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">can_subset</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">False</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">resource_defs</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">None</span></span></em><span class=\"sig-paren\">)</span><a class=\"reference internal\" href=\"../../../../_modules/dagster/core/asset_defs/decorators#multi_asset\"><span class=\"viewcode-link\"><span class=\"pre\">[source]</span></span></a><a class=\"headerlink\" href=\"#dagster.multi_asset\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Create a combined definition of multiple assets that are computed using the same op and same\nupstream assets.</p>\n<p>Each argument to the decorated function references an upstream asset that this asset depends on.\nThe name of the argument designates the name of the upstream asset.</p>\n<dl class=\"field-list simple\">\n<dt class=\"field-odd\">Parameters</dt>\n<dd class=\"field-odd\"><ul class=\"simple\">\n<li><p><strong>name</strong> (<em>Optional</em><em>[</em><a class=\"reference external\" href=\"https://docs.python.org/3/library/stdtypes.html#str\" title=\"(in Python v3.8)\"><em>str</em></a><em>]</em>) \u2013 The name of the op.</p></li>\n<li><p><strong>outs</strong> \u2013 (Optional[Dict[str, Out]]): The Outs representing the produced assets.</p></li>\n<li><p><strong>ins</strong> (<em>Optional</em><em>[</em><em>Mapping</em><em>[</em><a class=\"reference external\" href=\"https://docs.python.org/3/library/stdtypes.html#str\" title=\"(in Python v3.8)\"><em>str</em></a><em>, </em><a class=\"reference internal\" href=\"#dagster.AssetIn\" title=\"dagster.AssetIn\"><em>AssetIn</em></a><em>]</em><em>]</em>) \u2013 A dictionary that maps input names to their metadata\nand namespaces.</p></li>\n<li><p><strong>non_argument_deps</strong> (<em>Optional</em><em>[</em><em>Union</em><em>[</em><em>Set</em><em>[</em><a class=\"reference internal\" href=\"ops#dagster.AssetKey\" title=\"dagster.AssetKey\"><em>AssetKey</em></a><em>]</em><em>, </em><em>Set</em><em>[</em><a class=\"reference external\" href=\"https://docs.python.org/3/library/stdtypes.html#str\" title=\"(in Python v3.8)\"><em>str</em></a><em>]</em><em>]</em><em>]</em>) \u2013 Set of asset keys that are upstream\ndependencies, but do not pass an input to the multi_asset.</p></li>\n<li><p><strong>config_schema</strong> (<em>Optional</em><em>[</em><a class=\"reference internal\" href=\"config#dagster.ConfigSchema\" title=\"dagster.ConfigSchema\"><em>ConfigSchema</em></a>) \u2013 The configuration schema for the asset\u2019s underlying\nop. If set, Dagster will check that config provided for the op matches this schema and fail\nif it does not. If not set, Dagster will accept any config provided for the op.</p></li>\n<li><p><strong>required_resource_keys</strong> (<em>Optional</em><em>[</em><em>Set</em><em>[</em><a class=\"reference external\" href=\"https://docs.python.org/3/library/stdtypes.html#str\" title=\"(in Python v3.8)\"><em>str</em></a><em>]</em><em>]</em>) \u2013 Set of resource handles required by the underlying op.</p></li>\n<li><p><strong>io_manager_key</strong> (<em>Optional</em><em>[</em><a class=\"reference external\" href=\"https://docs.python.org/3/library/stdtypes.html#str\" title=\"(in Python v3.8)\"><em>str</em></a><em>]</em>) \u2013 The resource key of the IOManager used for storing the\noutput of the op as an asset, and for loading it in downstream ops\n(default: \u201cio_manager\u201d).</p></li>\n<li><p><strong>compute_kind</strong> (<em>Optional</em><em>[</em><a class=\"reference external\" href=\"https://docs.python.org/3/library/stdtypes.html#str\" title=\"(in Python v3.8)\"><em>str</em></a><em>]</em>) \u2013 A string to represent the kind of computation that produces\nthe asset, e.g. \u201cdbt\u201d or \u201cspark\u201d. It will be displayed in Dagit as a badge on the asset.</p></li>\n<li><p><strong>internal_asset_deps</strong> (<em>Optional</em><em>[</em><em>Mapping</em><em>[</em><a class=\"reference external\" href=\"https://docs.python.org/3/library/stdtypes.html#str\" title=\"(in Python v3.8)\"><em>str</em></a><em>, </em><em>Set</em><em>[</em><a class=\"reference internal\" href=\"ops#dagster.AssetKey\" title=\"dagster.AssetKey\"><em>AssetKey</em></a><em>]</em><em>]</em><em>]</em>) \u2013 By default, it is assumed\nthat all assets produced by a multi_asset depend on all assets that are consumed by that\nmulti asset. If this default is not correct, you pass in a map of output names to a\ncorrected set of AssetKeys that they depend on. Any AssetKeys in this list must be either\nused as input to the asset or produced within the op.</p></li>\n<li><p><strong>partitions_def</strong> (<em>Optional</em><em>[</em><a class=\"reference internal\" href=\"partitions#dagster.PartitionsDefinition\" title=\"dagster.PartitionsDefinition\"><em>PartitionsDefinition</em></a><em>]</em>) \u2013 Defines the set of partition keys that\ncompose the assets.</p></li>\n<li><p><strong>partition_mappings</strong> (<em>Optional</em><em>[</em><em>Mapping</em><em>[</em><a class=\"reference external\" href=\"https://docs.python.org/3/library/stdtypes.html#str\" title=\"(in Python v3.8)\"><em>str</em></a><em>, </em><em>PartitionMapping</em><em>]</em><em>]</em>) \u2013 Defines how to map partition\nkeys for this asset to partition keys of upstream assets. Each key in the dictionary\ncorreponds to one of the input assets, and each value is a PartitionMapping.\nIf no entry is provided for a particular asset dependency, the partition mapping defaults\nto the default partition mapping for the partitions definition, which is typically maps\npartition keys to the same partition keys in upstream assets.</p></li>\n<li><p><strong>op_tags</strong> (<em>Optional</em><em>[</em><em>Dict</em><em>[</em><a class=\"reference external\" href=\"https://docs.python.org/3/library/stdtypes.html#str\" title=\"(in Python v3.8)\"><em>str</em></a><em>, </em><em>Any</em><em>]</em><em>]</em>) \u2013 A dictionary of tags for the op that computes the asset.\nFrameworks may expect and require certain metadata to be attached to a op. Values that\nare not strings will be json encoded and must meet the criteria that\n<cite>json.loads(json.dumps(value)) == value</cite>.</p></li>\n<li><p><strong>can_subset</strong> (<a class=\"reference external\" href=\"https://docs.python.org/3/library/functions.html#bool\" title=\"(in Python v3.8)\"><em>bool</em></a>) \u2013 If this asset\u2019s computation can emit a subset of the asset\nkeys based on the context.selected_assets argument. Defaults to False.</p></li>\n<li><p><strong>resource_defs</strong> (<em>Optional</em><em>[</em><em>Mapping</em><em>[</em><a class=\"reference external\" href=\"https://docs.python.org/3/library/stdtypes.html#str\" title=\"(in Python v3.8)\"><em>str</em></a><em>, </em><a class=\"reference internal\" href=\"resources#dagster.ResourceDefinition\" title=\"dagster.ResourceDefinition\"><em>ResourceDefinition</em></a><em>]</em><em>]</em>) \u2013 A mapping of resource keys to resource definitions. These resources\nwill be initialized during execution, and can be accessed from the\ncontext within the body of the function.</p></li>\n</ul>\n</dd>\n</dl>\n</dd></dl>\n\n</div>\n", "current_page_name": "sections/api/apidocs/assets", "customsidebar": null, "display_toc": false, "meta": null, "metatags": "", "next": {"link": "../cli/", "title": "Dagster CLI"}, "page_source_suffix": ".rst", "parents": [], "prev": {"link": "../../../../", "title": "&lt;no title&gt;"}, "rellinks": [["genindex", "General Index", "I", "index"], ["py-modindex", "Python Module Index", "", "modules"], ["sections/api/apidocs/cli", "Dagster CLI", "N", "next"], ["index", "&lt;no title&gt;", "P", "previous"]], "sidebars": ["globaltoc.html", "searchbox.html"], "sourcename": "sections/api/apidocs/assets.rst.txt", "title": "Software-Defined Assets", "toc": "<ul>\n<li><a class=\"reference internal\" href=\"#\">Software-Defined Assets</a></li>\n</ul>\n"}, "cli": {"alabaster_version": "0.7.12", "body": "<div class=\"section\" id=\"dagster-cli\">\n<h1>Dagster CLI<a class=\"headerlink\" href=\"#dagster-cli\" title=\"Permalink to this headline\">\u00b6</a></h1>\n<div class=\"section\" id=\"dagster-asset\">\n<h2>dagster asset<a class=\"headerlink\" href=\"#dagster-asset\" title=\"Permalink to this headline\">\u00b6</a></h2>\n<p>Commands for working with Dagster assets.</p>\n<div class=\"highlight-shell notranslate\"><div class=\"highlight\"><pre><span></span>dagster asset <span class=\"o\">[</span>OPTIONS<span class=\"o\">]</span> COMMAND <span class=\"o\">[</span>ARGS<span class=\"o\">]</span>...\n</pre></div>\n</div>\n<p class=\"rubric\">Commands</p>\n<dl class=\"object\">\n<dt>\n<code class=\"sig-name descname\"><span class=\"pre\">wipe</span></code></dt>\n<dd><p>Eliminate asset key indexes from event logs.</p>\n</dd></dl>\n\n</div>\n<div class=\"section\" id=\"dagster-debug\">\n<h2>dagster debug<a class=\"headerlink\" href=\"#dagster-debug\" title=\"Permalink to this headline\">\u00b6</a></h2>\n<p>Commands for debugging Dagster pipeline/job runs.</p>\n<div class=\"highlight-shell notranslate\"><div class=\"highlight\"><pre><span></span>dagster debug <span class=\"o\">[</span>OPTIONS<span class=\"o\">]</span> COMMAND <span class=\"o\">[</span>ARGS<span class=\"o\">]</span>...\n</pre></div>\n</div>\n<p class=\"rubric\">Commands</p>\n<dl class=\"object\">\n<dt>\n<code class=\"sig-name descname\"><span class=\"pre\">export</span></code></dt>\n<dd><p>Export the relevant artifacts for a\u2026</p>\n</dd></dl>\n\n<dl class=\"object\">\n<dt>\n<code class=\"sig-name descname\"><span class=\"pre\">import</span></code></dt>\n<dd><p>Import the relevant artifacts for a\u2026</p>\n</dd></dl>\n\n</div>\n<div class=\"section\" id=\"dagster-instance\">\n<h2>dagster instance<a class=\"headerlink\" href=\"#dagster-instance\" title=\"Permalink to this headline\">\u00b6</a></h2>\n<p>Commands for working with the current Dagster instance.</p>\n<div class=\"highlight-shell notranslate\"><div class=\"highlight\"><pre><span></span>dagster instance <span class=\"o\">[</span>OPTIONS<span class=\"o\">]</span> COMMAND <span class=\"o\">[</span>ARGS<span class=\"o\">]</span>...\n</pre></div>\n</div>\n<p class=\"rubric\">Commands</p>\n<dl class=\"object\">\n<dt>\n<code class=\"sig-name descname\"><span class=\"pre\">info</span></code></dt>\n<dd><p>List the information about the current\u2026</p>\n</dd></dl>\n\n<dl class=\"object\">\n<dt>\n<code class=\"sig-name descname\"><span class=\"pre\">migrate</span></code></dt>\n<dd><p>Automatically migrate an out of date\u2026</p>\n</dd></dl>\n\n<dl class=\"object\">\n<dt>\n<code class=\"sig-name descname\"><span class=\"pre\">reindex</span></code></dt>\n<dd><p>Rebuild index over historical runs for\u2026</p>\n</dd></dl>\n\n</div>\n<div class=\"section\" id=\"dagster-job\">\n<h2>dagster job<a class=\"headerlink\" href=\"#dagster-job\" title=\"Permalink to this headline\">\u00b6</a></h2>\n<p>Commands for working with Dagster jobs.</p>\n<div class=\"highlight-shell notranslate\"><div class=\"highlight\"><pre><span></span>dagster job <span class=\"o\">[</span>OPTIONS<span class=\"o\">]</span> COMMAND <span class=\"o\">[</span>ARGS<span class=\"o\">]</span>...\n</pre></div>\n</div>\n<p class=\"rubric\">Commands</p>\n<dl class=\"object\">\n<dt>\n<code class=\"sig-name descname\"><span class=\"pre\">backfill</span></code></dt>\n<dd><p>Backfill a partitioned job.</p>\n</dd></dl>\n\n<dl class=\"object\">\n<dt>\n<code class=\"sig-name descname\"><span class=\"pre\">execute</span></code></dt>\n<dd><p>Execute a job.</p>\n</dd></dl>\n\n<dl class=\"object\">\n<dt>\n<code class=\"sig-name descname\"><span class=\"pre\">launch</span></code></dt>\n<dd><p>Launch a job using the run launcher\u2026</p>\n</dd></dl>\n\n<dl class=\"object\">\n<dt>\n<code class=\"sig-name descname\"><span class=\"pre\">list</span></code></dt>\n<dd><p>List the jobs in a repository.</p>\n</dd></dl>\n\n<dl class=\"object\">\n<dt>\n<code class=\"sig-name descname\"><span class=\"pre\">list_versions</span></code></dt>\n<dd><p>Display the freshness of memoized results\u2026</p>\n</dd></dl>\n\n<dl class=\"object\">\n<dt>\n<code class=\"sig-name descname\"><span class=\"pre\">print</span></code></dt>\n<dd><p>Print a job.</p>\n</dd></dl>\n\n<dl class=\"object\">\n<dt>\n<code class=\"sig-name descname\"><span class=\"pre\">scaffold_config</span></code></dt>\n<dd><p>Scaffold the config for a job.</p>\n</dd></dl>\n\n</div>\n<div class=\"section\" id=\"dagster-run\">\n<h2>dagster run<a class=\"headerlink\" href=\"#dagster-run\" title=\"Permalink to this headline\">\u00b6</a></h2>\n<p>Commands for working with Dagster pipeline/job runs.</p>\n<div class=\"highlight-shell notranslate\"><div class=\"highlight\"><pre><span></span>dagster run <span class=\"o\">[</span>OPTIONS<span class=\"o\">]</span> COMMAND <span class=\"o\">[</span>ARGS<span class=\"o\">]</span>...\n</pre></div>\n</div>\n<p class=\"rubric\">Commands</p>\n<dl class=\"object\">\n<dt>\n<code class=\"sig-name descname\"><span class=\"pre\">delete</span></code></dt>\n<dd><p>Delete a run by id and its associated\u2026</p>\n</dd></dl>\n\n<dl class=\"object\">\n<dt>\n<code class=\"sig-name descname\"><span class=\"pre\">list</span></code></dt>\n<dd><p>List the runs in the current Dagster\u2026</p>\n</dd></dl>\n\n<dl class=\"object\">\n<dt>\n<code class=\"sig-name descname\"><span class=\"pre\">wipe</span></code></dt>\n<dd><p>Eliminate all run history and event logs.</p>\n</dd></dl>\n\n</div>\n<div class=\"section\" id=\"dagster-schedule\">\n<h2>dagster schedule<a class=\"headerlink\" href=\"#dagster-schedule\" title=\"Permalink to this headline\">\u00b6</a></h2>\n<p>Commands for working with Dagster schedules.</p>\n<div class=\"highlight-shell notranslate\"><div class=\"highlight\"><pre><span></span>dagster schedule <span class=\"o\">[</span>OPTIONS<span class=\"o\">]</span> COMMAND <span class=\"o\">[</span>ARGS<span class=\"o\">]</span>...\n</pre></div>\n</div>\n<p class=\"rubric\">Commands</p>\n<dl class=\"object\">\n<dt>\n<code class=\"sig-name descname\"><span class=\"pre\">debug</span></code></dt>\n<dd><p>Debug information about the scheduler.</p>\n</dd></dl>\n\n<dl class=\"object\">\n<dt>\n<code class=\"sig-name descname\"><span class=\"pre\">list</span></code></dt>\n<dd><p>List all schedules that correspond to a\u2026</p>\n</dd></dl>\n\n<dl class=\"object\">\n<dt>\n<code class=\"sig-name descname\"><span class=\"pre\">logs</span></code></dt>\n<dd><p>Get logs for a schedule.</p>\n</dd></dl>\n\n<dl class=\"object\">\n<dt>\n<code class=\"sig-name descname\"><span class=\"pre\">preview</span></code></dt>\n<dd><p>Preview changes that will be performed by\u2026</p>\n</dd></dl>\n\n<dl class=\"object\">\n<dt>\n<code class=\"sig-name descname\"><span class=\"pre\">restart</span></code></dt>\n<dd><p>Restart a running schedule.</p>\n</dd></dl>\n\n<dl class=\"object\">\n<dt>\n<code class=\"sig-name descname\"><span class=\"pre\">start</span></code></dt>\n<dd><p>Start an existing schedule.</p>\n</dd></dl>\n\n<dl class=\"object\">\n<dt>\n<code class=\"sig-name descname\"><span class=\"pre\">stop</span></code></dt>\n<dd><p>Stop an existing schedule.</p>\n</dd></dl>\n\n<dl class=\"object\">\n<dt>\n<code class=\"sig-name descname\"><span class=\"pre\">wipe</span></code></dt>\n<dd><p>Delete the schedule history and turn off\u2026</p>\n</dd></dl>\n\n</div>\n<div class=\"section\" id=\"dagster-sensor\">\n<h2>dagster sensor<a class=\"headerlink\" href=\"#dagster-sensor\" title=\"Permalink to this headline\">\u00b6</a></h2>\n<p>Commands for working with Dagster sensors.</p>\n<div class=\"highlight-shell notranslate\"><div class=\"highlight\"><pre><span></span>dagster sensor <span class=\"o\">[</span>OPTIONS<span class=\"o\">]</span> COMMAND <span class=\"o\">[</span>ARGS<span class=\"o\">]</span>...\n</pre></div>\n</div>\n<p class=\"rubric\">Commands</p>\n<dl class=\"object\">\n<dt>\n<code class=\"sig-name descname\"><span class=\"pre\">cursor</span></code></dt>\n<dd><p>Set the cursor value for an existing sensor.</p>\n</dd></dl>\n\n<dl class=\"object\">\n<dt>\n<code class=\"sig-name descname\"><span class=\"pre\">list</span></code></dt>\n<dd><p>List all sensors that correspond to a\u2026</p>\n</dd></dl>\n\n<dl class=\"object\">\n<dt>\n<code class=\"sig-name descname\"><span class=\"pre\">preview</span></code></dt>\n<dd><p>Preview an existing sensor execution.</p>\n</dd></dl>\n\n<dl class=\"object\">\n<dt>\n<code class=\"sig-name descname\"><span class=\"pre\">start</span></code></dt>\n<dd><p>Start an existing sensor.</p>\n</dd></dl>\n\n<dl class=\"object\">\n<dt>\n<code class=\"sig-name descname\"><span class=\"pre\">stop</span></code></dt>\n<dd><p>Stop an existing sensor.</p>\n</dd></dl>\n\n</div>\n<div class=\"section\" id=\"dagster-graphql\">\n<h2>dagster-graphql<a class=\"headerlink\" href=\"#dagster-graphql\" title=\"Permalink to this headline\">\u00b6</a></h2>\n<p>Run a GraphQL query against the dagster interface to a specified repository or pipeline/job.</p>\n<p>Can only use ONE of \u2013workspace/-w, \u2013python-file/-f, \u2013module-name/-m, \u2013grpc-port, \u2013grpc-socket.</p>\n<p>Examples:</p>\n<ol class=\"arabic simple\">\n<li><p>dagster-graphql</p></li>\n<li><p>dagster-graphql -y path/to/workspace.yaml</p></li>\n<li><p>dagster-graphql -f path/to/file.py -a define_repo</p></li>\n<li><p>dagster-graphql -m some_module -a define_repo</p></li>\n<li><p>dagster-graphql -f path/to/file.py -a define_pipeline</p></li>\n<li><p>dagster-graphql -m some_module -a define_pipeline</p></li>\n</ol>\n<div class=\"highlight-shell notranslate\"><div class=\"highlight\"><pre><span></span>dagster-graphql <span class=\"o\">[</span>OPTIONS<span class=\"o\">]</span>\n</pre></div>\n</div>\n<p class=\"rubric\">Options</p>\n<dl class=\"std option\">\n<dt id=\"cmdoption-dagster-graphql-version\">\n<code class=\"sig-name descname\"><span class=\"pre\">--version</span></code><code class=\"sig-prename descclassname\"></code><a class=\"headerlink\" href=\"#cmdoption-dagster-graphql-version\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Show the version and exit.</p>\n</dd></dl>\n\n<dl class=\"std option\">\n<dt id=\"cmdoption-dagster-graphql-t\">\n<code class=\"sig-name descname\"><span class=\"pre\">-t</span></code><code class=\"sig-prename descclassname\"></code><code class=\"sig-prename descclassname\"><span class=\"pre\">,</span> </code><code class=\"sig-name descname\"><span class=\"pre\">--text</span></code><code class=\"sig-prename descclassname\"> <span class=\"pre\">&lt;text&gt;</span></code><a class=\"headerlink\" href=\"#cmdoption-dagster-graphql-t\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>GraphQL document to execute passed as a string</p>\n</dd></dl>\n\n<dl class=\"std option\">\n<dt id=\"cmdoption-dagster-graphql-f\">\n<code class=\"sig-name descname\"><span class=\"pre\">-f</span></code><code class=\"sig-prename descclassname\"></code><code class=\"sig-prename descclassname\"><span class=\"pre\">,</span> </code><code class=\"sig-name descname\"><span class=\"pre\">--file</span></code><code class=\"sig-prename descclassname\"> <span class=\"pre\">&lt;file&gt;</span></code><a class=\"headerlink\" href=\"#cmdoption-dagster-graphql-f\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>GraphQL document to execute passed as a file</p>\n</dd></dl>\n\n<dl class=\"std option\">\n<dt id=\"cmdoption-dagster-graphql-p\">\n<code class=\"sig-name descname\"><span class=\"pre\">-p</span></code><code class=\"sig-prename descclassname\"></code><code class=\"sig-prename descclassname\"><span class=\"pre\">,</span> </code><code class=\"sig-name descname\"><span class=\"pre\">--predefined</span></code><code class=\"sig-prename descclassname\"> <span class=\"pre\">&lt;predefined&gt;</span></code><a class=\"headerlink\" href=\"#cmdoption-dagster-graphql-p\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>GraphQL document to execute, from a predefined set provided by dagster-graphql.</p>\n<dl class=\"field-list simple\">\n<dt class=\"field-odd\">Options</dt>\n<dd class=\"field-odd\"><p>launchPipelineExecution</p>\n</dd>\n</dl>\n</dd></dl>\n\n<dl class=\"std option\">\n<dt id=\"cmdoption-dagster-graphql-v\">\n<code class=\"sig-name descname\"><span class=\"pre\">-v</span></code><code class=\"sig-prename descclassname\"></code><code class=\"sig-prename descclassname\"><span class=\"pre\">,</span> </code><code class=\"sig-name descname\"><span class=\"pre\">--variables</span></code><code class=\"sig-prename descclassname\"> <span class=\"pre\">&lt;variables&gt;</span></code><a class=\"headerlink\" href=\"#cmdoption-dagster-graphql-v\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>A JSON encoded string containing the variables for GraphQL execution.</p>\n</dd></dl>\n\n<dl class=\"std option\">\n<dt id=\"cmdoption-dagster-graphql-r\">\n<code class=\"sig-name descname\"><span class=\"pre\">-r</span></code><code class=\"sig-prename descclassname\"></code><code class=\"sig-prename descclassname\"><span class=\"pre\">,</span> </code><code class=\"sig-name descname\"><span class=\"pre\">--remote</span></code><code class=\"sig-prename descclassname\"> <span class=\"pre\">&lt;remote&gt;</span></code><a class=\"headerlink\" href=\"#cmdoption-dagster-graphql-r\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>A URL for a remote instance running dagit server to send the GraphQL request to.</p>\n</dd></dl>\n\n<dl class=\"std option\">\n<dt id=\"cmdoption-dagster-graphql-o\">\n<code class=\"sig-name descname\"><span class=\"pre\">-o</span></code><code class=\"sig-prename descclassname\"></code><code class=\"sig-prename descclassname\"><span class=\"pre\">,</span> </code><code class=\"sig-name descname\"><span class=\"pre\">--output</span></code><code class=\"sig-prename descclassname\"> <span class=\"pre\">&lt;output&gt;</span></code><a class=\"headerlink\" href=\"#cmdoption-dagster-graphql-o\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>A file path to store the GraphQL response to. This flag is useful when making pipeline/job execution queries, since pipeline/job execution causes logs to print to stdout and stderr.</p>\n</dd></dl>\n\n<dl class=\"std option\">\n<dt id=\"cmdoption-dagster-graphql-ephemeral-instance\">\n<code class=\"sig-name descname\"><span class=\"pre\">--ephemeral-instance</span></code><code class=\"sig-prename descclassname\"></code><a class=\"headerlink\" href=\"#cmdoption-dagster-graphql-ephemeral-instance\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Use an ephemeral DagsterInstance instead of resolving via DAGSTER_HOME</p>\n</dd></dl>\n\n<dl class=\"std option\">\n<dt id=\"cmdoption-dagster-graphql-empty-workspace\">\n<code class=\"sig-name descname\"><span class=\"pre\">--empty-workspace</span></code><code class=\"sig-prename descclassname\"></code><a class=\"headerlink\" href=\"#cmdoption-dagster-graphql-empty-workspace\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Allow an empty workspace</p>\n</dd></dl>\n\n<dl class=\"std option\">\n<dt id=\"cmdoption-dagster-graphql-w\">\n<code class=\"sig-name descname\"><span class=\"pre\">-w</span></code><code class=\"sig-prename descclassname\"></code><code class=\"sig-prename descclassname\"><span class=\"pre\">,</span> </code><code class=\"sig-name descname\"><span class=\"pre\">--workspace</span></code><code class=\"sig-prename descclassname\"> <span class=\"pre\">&lt;workspace&gt;</span></code><a class=\"headerlink\" href=\"#cmdoption-dagster-graphql-w\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Path to workspace file. Argument can be provided multiple times.</p>\n</dd></dl>\n\n<dl class=\"std option\">\n<dt id=\"cmdoption-dagster-graphql-d\">\n<code class=\"sig-name descname\"><span class=\"pre\">-d</span></code><code class=\"sig-prename descclassname\"></code><code class=\"sig-prename descclassname\"><span class=\"pre\">,</span> </code><code class=\"sig-name descname\"><span class=\"pre\">--working-directory</span></code><code class=\"sig-prename descclassname\"> <span class=\"pre\">&lt;working_directory&gt;</span></code><a class=\"headerlink\" href=\"#cmdoption-dagster-graphql-d\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Specify working directory to use when loading the repository or pipeline/job.</p>\n</dd></dl>\n\n<dl class=\"std option\">\n<dt id=\"cmdoption-dagster-graphql-0\">\n<code class=\"sig-name descname\"><span class=\"pre\">-f</span></code><code class=\"sig-prename descclassname\"></code><code class=\"sig-prename descclassname\"><span class=\"pre\">,</span> </code><code class=\"sig-name descname\"><span class=\"pre\">--python-file</span></code><code class=\"sig-prename descclassname\"> <span class=\"pre\">&lt;python_file&gt;</span></code><a class=\"headerlink\" href=\"#cmdoption-dagster-graphql-0\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Specify python file where repository or pipeline/job function lives</p>\n</dd></dl>\n\n<dl class=\"std option\">\n<dt id=\"cmdoption-dagster-graphql-package-name\">\n<code class=\"sig-name descname\"><span class=\"pre\">--package-name</span></code><code class=\"sig-prename descclassname\"> <span class=\"pre\">&lt;package_name&gt;</span></code><a class=\"headerlink\" href=\"#cmdoption-dagster-graphql-package-name\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Specify Python package where repository or pipeline/job function lives</p>\n</dd></dl>\n\n<dl class=\"std option\">\n<dt id=\"cmdoption-dagster-graphql-m\">\n<code class=\"sig-name descname\"><span class=\"pre\">-m</span></code><code class=\"sig-prename descclassname\"></code><code class=\"sig-prename descclassname\"><span class=\"pre\">,</span> </code><code class=\"sig-name descname\"><span class=\"pre\">--module-name</span></code><code class=\"sig-prename descclassname\"> <span class=\"pre\">&lt;module_name&gt;</span></code><a class=\"headerlink\" href=\"#cmdoption-dagster-graphql-m\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Specify module where repository or pipeline/job function lives</p>\n</dd></dl>\n\n<dl class=\"std option\">\n<dt id=\"cmdoption-dagster-graphql-a\">\n<code class=\"sig-name descname\"><span class=\"pre\">-a</span></code><code class=\"sig-prename descclassname\"></code><code class=\"sig-prename descclassname\"><span class=\"pre\">,</span> </code><code class=\"sig-name descname\"><span class=\"pre\">--attribute</span></code><code class=\"sig-prename descclassname\"> <span class=\"pre\">&lt;attribute&gt;</span></code><a class=\"headerlink\" href=\"#cmdoption-dagster-graphql-a\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Attribute that is either a 1) repository or pipeline/job or 2) a function that returns a repository or pipeline/job</p>\n</dd></dl>\n\n<dl class=\"std option\">\n<dt id=\"cmdoption-dagster-graphql-grpc-port\">\n<code class=\"sig-name descname\"><span class=\"pre\">--grpc-port</span></code><code class=\"sig-prename descclassname\"> <span class=\"pre\">&lt;grpc_port&gt;</span></code><a class=\"headerlink\" href=\"#cmdoption-dagster-graphql-grpc-port\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Port to use to connect to gRPC server</p>\n</dd></dl>\n\n<dl class=\"std option\">\n<dt id=\"cmdoption-dagster-graphql-grpc-socket\">\n<code class=\"sig-name descname\"><span class=\"pre\">--grpc-socket</span></code><code class=\"sig-prename descclassname\"> <span class=\"pre\">&lt;grpc_socket&gt;</span></code><a class=\"headerlink\" href=\"#cmdoption-dagster-graphql-grpc-socket\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Named socket to use to connect to gRPC server</p>\n</dd></dl>\n\n<dl class=\"std option\">\n<dt id=\"cmdoption-dagster-graphql-grpc-host\">\n<code class=\"sig-name descname\"><span class=\"pre\">--grpc-host</span></code><code class=\"sig-prename descclassname\"> <span class=\"pre\">&lt;grpc_host&gt;</span></code><a class=\"headerlink\" href=\"#cmdoption-dagster-graphql-grpc-host\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Host to use to connect to gRPC server, defaults to localhost</p>\n</dd></dl>\n\n<dl class=\"std option\">\n<dt id=\"cmdoption-dagster-graphql-use-ssl\">\n<code class=\"sig-name descname\"><span class=\"pre\">--use-ssl</span></code><code class=\"sig-prename descclassname\"></code><a class=\"headerlink\" href=\"#cmdoption-dagster-graphql-use-ssl\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Use a secure channel when connecting to the gRPC server</p>\n</dd></dl>\n\n<p class=\"rubric\">Environment variables</p>\n<span class=\"target\" id=\"dagster-graphql-working-directory-dagster-working-directory\"></span><dl class=\"std envvar\">\n<dt>\n<code class=\"sig-name descname\"><span class=\"pre\">DAGSTER_WORKING_DIRECTORY</span></code></dt>\n<dd><blockquote>\n<div><p>Provide a default for <a class=\"reference internal\" href=\"#cmdoption-dagster-graphql-d\"><code class=\"xref std std-option docutils literal notranslate\"><span class=\"pre\">--working-directory</span></code></a></p>\n</div></blockquote>\n</dd></dl>\n\n<span class=\"target\" id=\"dagster-graphql-python-file-dagster-python-file\"></span><dl class=\"std envvar\">\n<dt>\n<code class=\"sig-name descname\"><span class=\"pre\">DAGSTER_PYTHON_FILE</span></code></dt>\n<dd><blockquote>\n<div><p>Provide a default for <a class=\"reference internal\" href=\"#cmdoption-dagster-graphql-0\"><code class=\"xref std std-option docutils literal notranslate\"><span class=\"pre\">--python-file</span></code></a></p>\n</div></blockquote>\n</dd></dl>\n\n<span class=\"target\" id=\"dagster-graphql-package-name-dagster-package-name\"></span><dl class=\"std envvar\">\n<dt>\n<code class=\"sig-name descname\"><span class=\"pre\">DAGSTER_PACKAGE_NAME</span></code></dt>\n<dd><blockquote>\n<div><p>Provide a default for <a class=\"reference internal\" href=\"#cmdoption-dagster-graphql-package-name\"><code class=\"xref std std-option docutils literal notranslate\"><span class=\"pre\">--package-name</span></code></a></p>\n</div></blockquote>\n</dd></dl>\n\n<span class=\"target\" id=\"dagster-graphql-module-name-dagster-module-name\"></span><dl class=\"std envvar\">\n<dt>\n<code class=\"sig-name descname\"><span class=\"pre\">DAGSTER_MODULE_NAME</span></code></dt>\n<dd><blockquote>\n<div><p>Provide a default for <a class=\"reference internal\" href=\"#cmdoption-dagster-graphql-m\"><code class=\"xref std std-option docutils literal notranslate\"><span class=\"pre\">--module-name</span></code></a></p>\n</div></blockquote>\n</dd></dl>\n\n<span class=\"target\" id=\"dagster-graphql-attribute-dagster-attribute\"></span><dl class=\"std envvar\">\n<dt>\n<code class=\"sig-name descname\"><span class=\"pre\">DAGSTER_ATTRIBUTE</span></code></dt>\n<dd><blockquote>\n<div><p>Provide a default for <a class=\"reference internal\" href=\"#cmdoption-dagster-graphql-a\"><code class=\"xref std std-option docutils literal notranslate\"><span class=\"pre\">--attribute</span></code></a></p>\n</div></blockquote>\n</dd></dl>\n\n</div>\n<div class=\"section\" id=\"dagit\">\n<h2>dagit<a class=\"headerlink\" href=\"#dagit\" title=\"Permalink to this headline\">\u00b6</a></h2>\n<p>Run dagit. Loads a repository or pipeline/job.</p>\n<p>Can only use ONE of \u2013workspace/-w, \u2013python-file/-f, \u2013module-name/-m, \u2013grpc-port, \u2013grpc-socket.</p>\n<p>Examples:</p>\n<ol class=\"arabic simple\">\n<li><p>dagit (works if .workspace.yaml exists)</p></li>\n<li><p>dagit -w path/to/workspace.yaml</p></li>\n<li><p>dagit -f path/to/file.py</p></li>\n<li><p>dagit -f path/to/file.py -d path/to/working_directory</p></li>\n<li><p>dagit -m some_module</p></li>\n<li><p>dagit -f path/to/file.py -a define_repo</p></li>\n<li><p>dagit -m some_module -a define_repo</p></li>\n<li><p>dagit -p 3333</p></li>\n</ol>\n<p>Options can also provide arguments via environment variables prefixed with DAGIT</p>\n<p>For example, DAGIT_PORT=3333 dagit</p>\n<div class=\"highlight-shell notranslate\"><div class=\"highlight\"><pre><span></span>dagit <span class=\"o\">[</span>OPTIONS<span class=\"o\">]</span>\n</pre></div>\n</div>\n<p class=\"rubric\">Options</p>\n<dl class=\"std option\">\n<dt id=\"cmdoption-dagit-use-ssl\">\n<code class=\"sig-name descname\"><span class=\"pre\">--use-ssl</span></code><code class=\"sig-prename descclassname\"></code><a class=\"headerlink\" href=\"#cmdoption-dagit-use-ssl\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Use a secure channel when connecting to the gRPC server</p>\n</dd></dl>\n\n<dl class=\"std option\">\n<dt id=\"cmdoption-dagit-grpc-host\">\n<code class=\"sig-name descname\"><span class=\"pre\">--grpc-host</span></code><code class=\"sig-prename descclassname\"> <span class=\"pre\">&lt;grpc_host&gt;</span></code><a class=\"headerlink\" href=\"#cmdoption-dagit-grpc-host\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Host to use to connect to gRPC server, defaults to localhost</p>\n</dd></dl>\n\n<dl class=\"std option\">\n<dt id=\"cmdoption-dagit-grpc-socket\">\n<code class=\"sig-name descname\"><span class=\"pre\">--grpc-socket</span></code><code class=\"sig-prename descclassname\"> <span class=\"pre\">&lt;grpc_socket&gt;</span></code><a class=\"headerlink\" href=\"#cmdoption-dagit-grpc-socket\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Named socket to use to connect to gRPC server</p>\n</dd></dl>\n\n<dl class=\"std option\">\n<dt id=\"cmdoption-dagit-grpc-port\">\n<code class=\"sig-name descname\"><span class=\"pre\">--grpc-port</span></code><code class=\"sig-prename descclassname\"> <span class=\"pre\">&lt;grpc_port&gt;</span></code><a class=\"headerlink\" href=\"#cmdoption-dagit-grpc-port\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Port to use to connect to gRPC server</p>\n</dd></dl>\n\n<dl class=\"std option\">\n<dt id=\"cmdoption-dagit-a\">\n<code class=\"sig-name descname\"><span class=\"pre\">-a</span></code><code class=\"sig-prename descclassname\"></code><code class=\"sig-prename descclassname\"><span class=\"pre\">,</span> </code><code class=\"sig-name descname\"><span class=\"pre\">--attribute</span></code><code class=\"sig-prename descclassname\"> <span class=\"pre\">&lt;attribute&gt;</span></code><a class=\"headerlink\" href=\"#cmdoption-dagit-a\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Attribute that is either a 1) repository or pipeline/job or 2) a function that returns a repository or pipeline/job</p>\n</dd></dl>\n\n<dl class=\"std option\">\n<dt id=\"cmdoption-dagit-m\">\n<code class=\"sig-name descname\"><span class=\"pre\">-m</span></code><code class=\"sig-prename descclassname\"></code><code class=\"sig-prename descclassname\"><span class=\"pre\">,</span> </code><code class=\"sig-name descname\"><span class=\"pre\">--module-name</span></code><code class=\"sig-prename descclassname\"> <span class=\"pre\">&lt;module_name&gt;</span></code><a class=\"headerlink\" href=\"#cmdoption-dagit-m\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Specify module where repository or pipeline/job function lives</p>\n</dd></dl>\n\n<dl class=\"std option\">\n<dt id=\"cmdoption-dagit-package-name\">\n<code class=\"sig-name descname\"><span class=\"pre\">--package-name</span></code><code class=\"sig-prename descclassname\"> <span class=\"pre\">&lt;package_name&gt;</span></code><a class=\"headerlink\" href=\"#cmdoption-dagit-package-name\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Specify Python package where repository or pipeline/job function lives</p>\n</dd></dl>\n\n<dl class=\"std option\">\n<dt id=\"cmdoption-dagit-f\">\n<code class=\"sig-name descname\"><span class=\"pre\">-f</span></code><code class=\"sig-prename descclassname\"></code><code class=\"sig-prename descclassname\"><span class=\"pre\">,</span> </code><code class=\"sig-name descname\"><span class=\"pre\">--python-file</span></code><code class=\"sig-prename descclassname\"> <span class=\"pre\">&lt;python_file&gt;</span></code><a class=\"headerlink\" href=\"#cmdoption-dagit-f\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Specify python file where repository or pipeline/job function lives</p>\n</dd></dl>\n\n<dl class=\"std option\">\n<dt id=\"cmdoption-dagit-d\">\n<code class=\"sig-name descname\"><span class=\"pre\">-d</span></code><code class=\"sig-prename descclassname\"></code><code class=\"sig-prename descclassname\"><span class=\"pre\">,</span> </code><code class=\"sig-name descname\"><span class=\"pre\">--working-directory</span></code><code class=\"sig-prename descclassname\"> <span class=\"pre\">&lt;working_directory&gt;</span></code><a class=\"headerlink\" href=\"#cmdoption-dagit-d\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Specify working directory to use when loading the repository or pipeline/job.</p>\n</dd></dl>\n\n<dl class=\"std option\">\n<dt id=\"cmdoption-dagit-w\">\n<code class=\"sig-name descname\"><span class=\"pre\">-w</span></code><code class=\"sig-prename descclassname\"></code><code class=\"sig-prename descclassname\"><span class=\"pre\">,</span> </code><code class=\"sig-name descname\"><span class=\"pre\">--workspace</span></code><code class=\"sig-prename descclassname\"> <span class=\"pre\">&lt;workspace&gt;</span></code><a class=\"headerlink\" href=\"#cmdoption-dagit-w\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Path to workspace file. Argument can be provided multiple times.</p>\n</dd></dl>\n\n<dl class=\"std option\">\n<dt id=\"cmdoption-dagit-empty-workspace\">\n<code class=\"sig-name descname\"><span class=\"pre\">--empty-workspace</span></code><code class=\"sig-prename descclassname\"></code><a class=\"headerlink\" href=\"#cmdoption-dagit-empty-workspace\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Allow an empty workspace</p>\n</dd></dl>\n\n<dl class=\"std option\">\n<dt id=\"cmdoption-dagit-h\">\n<code class=\"sig-name descname\"><span class=\"pre\">-h</span></code><code class=\"sig-prename descclassname\"></code><code class=\"sig-prename descclassname\"><span class=\"pre\">,</span> </code><code class=\"sig-name descname\"><span class=\"pre\">--host</span></code><code class=\"sig-prename descclassname\"> <span class=\"pre\">&lt;host&gt;</span></code><a class=\"headerlink\" href=\"#cmdoption-dagit-h\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Host to run server on</p>\n<dl class=\"field-list simple\">\n<dt class=\"field-odd\">Default</dt>\n<dd class=\"field-odd\"><p>127.0.0.1</p>\n</dd>\n</dl>\n</dd></dl>\n\n<dl class=\"std option\">\n<dt id=\"cmdoption-dagit-p\">\n<code class=\"sig-name descname\"><span class=\"pre\">-p</span></code><code class=\"sig-prename descclassname\"></code><code class=\"sig-prename descclassname\"><span class=\"pre\">,</span> </code><code class=\"sig-name descname\"><span class=\"pre\">--port</span></code><code class=\"sig-prename descclassname\"> <span class=\"pre\">&lt;port&gt;</span></code><a class=\"headerlink\" href=\"#cmdoption-dagit-p\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Port to run server on.</p>\n<dl class=\"field-list simple\">\n<dt class=\"field-odd\">Default</dt>\n<dd class=\"field-odd\"><p>3000</p>\n</dd>\n</dl>\n</dd></dl>\n\n<dl class=\"std option\">\n<dt id=\"cmdoption-dagit-l\">\n<code class=\"sig-name descname\"><span class=\"pre\">-l</span></code><code class=\"sig-prename descclassname\"></code><code class=\"sig-prename descclassname\"><span class=\"pre\">,</span> </code><code class=\"sig-name descname\"><span class=\"pre\">--path-prefix</span></code><code class=\"sig-prename descclassname\"> <span class=\"pre\">&lt;path_prefix&gt;</span></code><a class=\"headerlink\" href=\"#cmdoption-dagit-l\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>The path prefix where Dagit will be hosted (eg: /dagit)</p>\n<dl class=\"field-list simple\">\n<dt class=\"field-odd\">Default</dt>\n<dd class=\"field-odd\"><p></p></dd>\n</dl>\n</dd></dl>\n\n<dl class=\"std option\">\n<dt id=\"cmdoption-dagit-db-statement-timeout\">\n<code class=\"sig-name descname\"><span class=\"pre\">--db-statement-timeout</span></code><code class=\"sig-prename descclassname\"> <span class=\"pre\">&lt;db_statement_timeout&gt;</span></code><a class=\"headerlink\" href=\"#cmdoption-dagit-db-statement-timeout\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>The timeout in milliseconds to set on database statements sent to the DagsterInstance. Not respected in all configurations.</p>\n<dl class=\"field-list simple\">\n<dt class=\"field-odd\">Default</dt>\n<dd class=\"field-odd\"><p>15000</p>\n</dd>\n</dl>\n</dd></dl>\n\n<dl class=\"std option\">\n<dt id=\"cmdoption-dagit-read-only\">\n<code class=\"sig-name descname\"><span class=\"pre\">--read-only</span></code><code class=\"sig-prename descclassname\"></code><a class=\"headerlink\" href=\"#cmdoption-dagit-read-only\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Start Dagit in read-only mode, where all mutations such as launching runs and turning schedules on/off are turned off.</p>\n</dd></dl>\n\n<dl class=\"std option\">\n<dt id=\"cmdoption-dagit-suppress-warnings\">\n<code class=\"sig-name descname\"><span class=\"pre\">--suppress-warnings</span></code><code class=\"sig-prename descclassname\"></code><a class=\"headerlink\" href=\"#cmdoption-dagit-suppress-warnings\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Filter all warnings when hosting Dagit.</p>\n</dd></dl>\n\n<dl class=\"std option\">\n<dt id=\"cmdoption-dagit-log-level\">\n<code class=\"sig-name descname\"><span class=\"pre\">--log-level</span></code><code class=\"sig-prename descclassname\"> <span class=\"pre\">&lt;log_level&gt;</span></code><a class=\"headerlink\" href=\"#cmdoption-dagit-log-level\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Set the log level for the uvicorn web server.</p>\n<dl class=\"field-list simple\">\n<dt class=\"field-odd\">Default</dt>\n<dd class=\"field-odd\"><p>warning</p>\n</dd>\n<dt class=\"field-even\">Options</dt>\n<dd class=\"field-even\"><p>critical|error|warning|info|debug|trace</p>\n</dd>\n</dl>\n</dd></dl>\n\n<dl class=\"std option\">\n<dt id=\"cmdoption-dagit-version\">\n<code class=\"sig-name descname\"><span class=\"pre\">--version</span></code><code class=\"sig-prename descclassname\"></code><a class=\"headerlink\" href=\"#cmdoption-dagit-version\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Show the version and exit.</p>\n</dd></dl>\n\n<p class=\"rubric\">Environment variables</p>\n<span class=\"target\" id=\"dagit-attribute-dagster-attribute\"></span><dl class=\"std envvar\">\n<dt>\n<code class=\"sig-name descname\"><span class=\"pre\">DAGSTER_ATTRIBUTE</span></code></dt>\n<dd><blockquote>\n<div><p>Provide a default for <a class=\"reference internal\" href=\"#cmdoption-dagit-a\"><code class=\"xref std std-option docutils literal notranslate\"><span class=\"pre\">--attribute</span></code></a></p>\n</div></blockquote>\n</dd></dl>\n\n<span class=\"target\" id=\"dagit-module-name-dagster-module-name\"></span><dl class=\"std envvar\">\n<dt>\n<code class=\"sig-name descname\"><span class=\"pre\">DAGSTER_MODULE_NAME</span></code></dt>\n<dd><blockquote>\n<div><p>Provide a default for <a class=\"reference internal\" href=\"#cmdoption-dagit-m\"><code class=\"xref std std-option docutils literal notranslate\"><span class=\"pre\">--module-name</span></code></a></p>\n</div></blockquote>\n</dd></dl>\n\n<span class=\"target\" id=\"dagit-package-name-dagster-package-name\"></span><dl class=\"std envvar\">\n<dt>\n<code class=\"sig-name descname\"><span class=\"pre\">DAGSTER_PACKAGE_NAME</span></code></dt>\n<dd><blockquote>\n<div><p>Provide a default for <a class=\"reference internal\" href=\"#cmdoption-dagit-package-name\"><code class=\"xref std std-option docutils literal notranslate\"><span class=\"pre\">--package-name</span></code></a></p>\n</div></blockquote>\n</dd></dl>\n\n<span class=\"target\" id=\"dagit-python-file-dagster-python-file\"></span><dl class=\"std envvar\">\n<dt>\n<code class=\"sig-name descname\"><span class=\"pre\">DAGSTER_PYTHON_FILE</span></code></dt>\n<dd><blockquote>\n<div><p>Provide a default for <a class=\"reference internal\" href=\"#cmdoption-dagit-f\"><code class=\"xref std std-option docutils literal notranslate\"><span class=\"pre\">--python-file</span></code></a></p>\n</div></blockquote>\n</dd></dl>\n\n<span class=\"target\" id=\"dagit-working-directory-dagster-working-directory\"></span><dl class=\"std envvar\">\n<dt>\n<code class=\"sig-name descname\"><span class=\"pre\">DAGSTER_WORKING_DIRECTORY</span></code></dt>\n<dd><blockquote>\n<div><p>Provide a default for <a class=\"reference internal\" href=\"#cmdoption-dagit-d\"><code class=\"xref std std-option docutils literal notranslate\"><span class=\"pre\">--working-directory</span></code></a></p>\n</div></blockquote>\n</dd></dl>\n\n</div>\n<div class=\"section\" id=\"dagster-daemon-run\">\n<h2>dagster-daemon run<a class=\"headerlink\" href=\"#dagster-daemon-run\" title=\"Permalink to this headline\">\u00b6</a></h2>\n<p>Run any daemons configured on the DagsterInstance.</p>\n<div class=\"highlight-shell notranslate\"><div class=\"highlight\"><pre><span></span>dagster-daemon run <span class=\"o\">[</span>OPTIONS<span class=\"o\">]</span>\n</pre></div>\n</div>\n<p class=\"rubric\">Options</p>\n<dl class=\"std option\">\n<dt id=\"cmdoption-dagster-daemon-run-use-ssl\">\n<code class=\"sig-name descname\"><span class=\"pre\">--use-ssl</span></code><code class=\"sig-prename descclassname\"></code><a class=\"headerlink\" href=\"#cmdoption-dagster-daemon-run-use-ssl\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Use a secure channel when connecting to the gRPC server</p>\n</dd></dl>\n\n<dl class=\"std option\">\n<dt id=\"cmdoption-dagster-daemon-run-grpc-host\">\n<code class=\"sig-name descname\"><span class=\"pre\">--grpc-host</span></code><code class=\"sig-prename descclassname\"> <span class=\"pre\">&lt;grpc_host&gt;</span></code><a class=\"headerlink\" href=\"#cmdoption-dagster-daemon-run-grpc-host\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Host to use to connect to gRPC server, defaults to localhost</p>\n</dd></dl>\n\n<dl class=\"std option\">\n<dt id=\"cmdoption-dagster-daemon-run-grpc-socket\">\n<code class=\"sig-name descname\"><span class=\"pre\">--grpc-socket</span></code><code class=\"sig-prename descclassname\"> <span class=\"pre\">&lt;grpc_socket&gt;</span></code><a class=\"headerlink\" href=\"#cmdoption-dagster-daemon-run-grpc-socket\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Named socket to use to connect to gRPC server</p>\n</dd></dl>\n\n<dl class=\"std option\">\n<dt id=\"cmdoption-dagster-daemon-run-grpc-port\">\n<code class=\"sig-name descname\"><span class=\"pre\">--grpc-port</span></code><code class=\"sig-prename descclassname\"> <span class=\"pre\">&lt;grpc_port&gt;</span></code><a class=\"headerlink\" href=\"#cmdoption-dagster-daemon-run-grpc-port\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Port to use to connect to gRPC server</p>\n</dd></dl>\n\n<dl class=\"std option\">\n<dt id=\"cmdoption-dagster-daemon-run-a\">\n<code class=\"sig-name descname\"><span class=\"pre\">-a</span></code><code class=\"sig-prename descclassname\"></code><code class=\"sig-prename descclassname\"><span class=\"pre\">,</span> </code><code class=\"sig-name descname\"><span class=\"pre\">--attribute</span></code><code class=\"sig-prename descclassname\"> <span class=\"pre\">&lt;attribute&gt;</span></code><a class=\"headerlink\" href=\"#cmdoption-dagster-daemon-run-a\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Attribute that is either a 1) repository or pipeline/job or 2) a function that returns a repository or pipeline/job</p>\n</dd></dl>\n\n<dl class=\"std option\">\n<dt id=\"cmdoption-dagster-daemon-run-m\">\n<code class=\"sig-name descname\"><span class=\"pre\">-m</span></code><code class=\"sig-prename descclassname\"></code><code class=\"sig-prename descclassname\"><span class=\"pre\">,</span> </code><code class=\"sig-name descname\"><span class=\"pre\">--module-name</span></code><code class=\"sig-prename descclassname\"> <span class=\"pre\">&lt;module_name&gt;</span></code><a class=\"headerlink\" href=\"#cmdoption-dagster-daemon-run-m\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Specify module where repository or pipeline/job function lives</p>\n</dd></dl>\n\n<dl class=\"std option\">\n<dt id=\"cmdoption-dagster-daemon-run-package-name\">\n<code class=\"sig-name descname\"><span class=\"pre\">--package-name</span></code><code class=\"sig-prename descclassname\"> <span class=\"pre\">&lt;package_name&gt;</span></code><a class=\"headerlink\" href=\"#cmdoption-dagster-daemon-run-package-name\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Specify Python package where repository or pipeline/job function lives</p>\n</dd></dl>\n\n<dl class=\"std option\">\n<dt id=\"cmdoption-dagster-daemon-run-f\">\n<code class=\"sig-name descname\"><span class=\"pre\">-f</span></code><code class=\"sig-prename descclassname\"></code><code class=\"sig-prename descclassname\"><span class=\"pre\">,</span> </code><code class=\"sig-name descname\"><span class=\"pre\">--python-file</span></code><code class=\"sig-prename descclassname\"> <span class=\"pre\">&lt;python_file&gt;</span></code><a class=\"headerlink\" href=\"#cmdoption-dagster-daemon-run-f\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Specify python file where repository or pipeline/job function lives</p>\n</dd></dl>\n\n<dl class=\"std option\">\n<dt id=\"cmdoption-dagster-daemon-run-d\">\n<code class=\"sig-name descname\"><span class=\"pre\">-d</span></code><code class=\"sig-prename descclassname\"></code><code class=\"sig-prename descclassname\"><span class=\"pre\">,</span> </code><code class=\"sig-name descname\"><span class=\"pre\">--working-directory</span></code><code class=\"sig-prename descclassname\"> <span class=\"pre\">&lt;working_directory&gt;</span></code><a class=\"headerlink\" href=\"#cmdoption-dagster-daemon-run-d\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Specify working directory to use when loading the repository or pipeline/job.</p>\n</dd></dl>\n\n<dl class=\"std option\">\n<dt id=\"cmdoption-dagster-daemon-run-w\">\n<code class=\"sig-name descname\"><span class=\"pre\">-w</span></code><code class=\"sig-prename descclassname\"></code><code class=\"sig-prename descclassname\"><span class=\"pre\">,</span> </code><code class=\"sig-name descname\"><span class=\"pre\">--workspace</span></code><code class=\"sig-prename descclassname\"> <span class=\"pre\">&lt;workspace&gt;</span></code><a class=\"headerlink\" href=\"#cmdoption-dagster-daemon-run-w\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Path to workspace file. Argument can be provided multiple times.</p>\n</dd></dl>\n\n<dl class=\"std option\">\n<dt id=\"cmdoption-dagster-daemon-run-empty-workspace\">\n<code class=\"sig-name descname\"><span class=\"pre\">--empty-workspace</span></code><code class=\"sig-prename descclassname\"></code><a class=\"headerlink\" href=\"#cmdoption-dagster-daemon-run-empty-workspace\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Allow an empty workspace</p>\n</dd></dl>\n\n<p class=\"rubric\">Environment variables</p>\n<span class=\"target\" id=\"dagster-daemon-run-attribute-dagster-attribute\"></span><dl class=\"std envvar\">\n<dt>\n<code class=\"sig-name descname\"><span class=\"pre\">DAGSTER_ATTRIBUTE</span></code></dt>\n<dd><blockquote>\n<div><p>Provide a default for <a class=\"reference internal\" href=\"#cmdoption-dagster-daemon-run-a\"><code class=\"xref std std-option docutils literal notranslate\"><span class=\"pre\">--attribute</span></code></a></p>\n</div></blockquote>\n</dd></dl>\n\n<span class=\"target\" id=\"dagster-daemon-run-module-name-dagster-module-name\"></span><dl class=\"std envvar\">\n<dt>\n<code class=\"sig-name descname\"><span class=\"pre\">DAGSTER_MODULE_NAME</span></code></dt>\n<dd><blockquote>\n<div><p>Provide a default for <a class=\"reference internal\" href=\"#cmdoption-dagster-daemon-run-m\"><code class=\"xref std std-option docutils literal notranslate\"><span class=\"pre\">--module-name</span></code></a></p>\n</div></blockquote>\n</dd></dl>\n\n<span class=\"target\" id=\"dagster-daemon-run-package-name-dagster-package-name\"></span><dl class=\"std envvar\">\n<dt>\n<code class=\"sig-name descname\"><span class=\"pre\">DAGSTER_PACKAGE_NAME</span></code></dt>\n<dd><blockquote>\n<div><p>Provide a default for <a class=\"reference internal\" href=\"#cmdoption-dagster-daemon-run-package-name\"><code class=\"xref std std-option docutils literal notranslate\"><span class=\"pre\">--package-name</span></code></a></p>\n</div></blockquote>\n</dd></dl>\n\n<span class=\"target\" id=\"dagster-daemon-run-python-file-dagster-python-file\"></span><dl class=\"std envvar\">\n<dt>\n<code class=\"sig-name descname\"><span class=\"pre\">DAGSTER_PYTHON_FILE</span></code></dt>\n<dd><blockquote>\n<div><p>Provide a default for <a class=\"reference internal\" href=\"#cmdoption-dagster-daemon-run-f\"><code class=\"xref std std-option docutils literal notranslate\"><span class=\"pre\">--python-file</span></code></a></p>\n</div></blockquote>\n</dd></dl>\n\n<span class=\"target\" id=\"dagster-daemon-run-working-directory-dagster-working-directory\"></span><dl class=\"std envvar\">\n<dt>\n<code class=\"sig-name descname\"><span class=\"pre\">DAGSTER_WORKING_DIRECTORY</span></code></dt>\n<dd><blockquote>\n<div><p>Provide a default for <a class=\"reference internal\" href=\"#cmdoption-dagster-daemon-run-d\"><code class=\"xref std std-option docutils literal notranslate\"><span class=\"pre\">--working-directory</span></code></a></p>\n</div></blockquote>\n</dd></dl>\n\n</div>\n<div class=\"section\" id=\"dagster-daemon-wipe\">\n<h2>dagster-daemon wipe<a class=\"headerlink\" href=\"#dagster-daemon-wipe\" title=\"Permalink to this headline\">\u00b6</a></h2>\n<p>Wipe all heartbeats from storage.</p>\n<div class=\"highlight-shell notranslate\"><div class=\"highlight\"><pre><span></span>dagster-daemon wipe <span class=\"o\">[</span>OPTIONS<span class=\"o\">]</span>\n</pre></div>\n</div>\n</div>\n<div class=\"section\" id=\"dagster-daemon-debug-heartbeat-dump\">\n<h2>dagster-daemon debug heartbeat-dump<a class=\"headerlink\" href=\"#dagster-daemon-debug-heartbeat-dump\" title=\"Permalink to this headline\">\u00b6</a></h2>\n<p>Log all heartbeat statuses</p>\n<div class=\"highlight-shell notranslate\"><div class=\"highlight\"><pre><span></span>dagster-daemon debug heartbeat-dump <span class=\"o\">[</span>OPTIONS<span class=\"o\">]</span>\n</pre></div>\n</div>\n</div>\n<div class=\"section\" id=\"dagster-api-grpc\">\n<h2>dagster api grpc<a class=\"headerlink\" href=\"#dagster-api-grpc\" title=\"Permalink to this headline\">\u00b6</a></h2>\n<p>Serve the Dagster inter-process API over GRPC</p>\n<div class=\"highlight-shell notranslate\"><div class=\"highlight\"><pre><span></span>dagster api grpc <span class=\"o\">[</span>OPTIONS<span class=\"o\">]</span>\n</pre></div>\n</div>\n<p class=\"rubric\">Options</p>\n<dl class=\"std option\">\n<dt id=\"cmdoption-dagster-api-grpc-p\">\n<code class=\"sig-name descname\"><span class=\"pre\">-p</span></code><code class=\"sig-prename descclassname\"></code><code class=\"sig-prename descclassname\"><span class=\"pre\">,</span> </code><code class=\"sig-name descname\"><span class=\"pre\">--port</span></code><code class=\"sig-prename descclassname\"> <span class=\"pre\">&lt;port&gt;</span></code><a class=\"headerlink\" href=\"#cmdoption-dagster-api-grpc-p\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Port over which to serve. You must pass one and only one of \u2013port/-p or \u2013socket/-s.</p>\n</dd></dl>\n\n<dl class=\"std option\">\n<dt id=\"cmdoption-dagster-api-grpc-s\">\n<code class=\"sig-name descname\"><span class=\"pre\">-s</span></code><code class=\"sig-prename descclassname\"></code><code class=\"sig-prename descclassname\"><span class=\"pre\">,</span> </code><code class=\"sig-name descname\"><span class=\"pre\">--socket</span></code><code class=\"sig-prename descclassname\"> <span class=\"pre\">&lt;socket&gt;</span></code><a class=\"headerlink\" href=\"#cmdoption-dagster-api-grpc-s\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Serve over a UDS socket. You must pass one and only one of \u2013port/-p or \u2013socket/-s.</p>\n</dd></dl>\n\n<dl class=\"std option\">\n<dt id=\"cmdoption-dagster-api-grpc-h\">\n<code class=\"sig-name descname\"><span class=\"pre\">-h</span></code><code class=\"sig-prename descclassname\"></code><code class=\"sig-prename descclassname\"><span class=\"pre\">,</span> </code><code class=\"sig-name descname\"><span class=\"pre\">--host</span></code><code class=\"sig-prename descclassname\"> <span class=\"pre\">&lt;host&gt;</span></code><a class=\"headerlink\" href=\"#cmdoption-dagster-api-grpc-h\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Hostname at which to serve. Default is localhost.</p>\n</dd></dl>\n\n<dl class=\"std option\">\n<dt id=\"cmdoption-dagster-api-grpc-n\">\n<code class=\"sig-name descname\"><span class=\"pre\">-n</span></code><code class=\"sig-prename descclassname\"></code><code class=\"sig-prename descclassname\"><span class=\"pre\">,</span> </code><code class=\"sig-name descname\"><span class=\"pre\">--max_workers</span></code><code class=\"sig-prename descclassname\"> <span class=\"pre\">&lt;max_workers&gt;</span></code><a class=\"headerlink\" href=\"#cmdoption-dagster-api-grpc-n\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Maximum number of (threaded) workers to use in the GRPC server</p>\n</dd></dl>\n\n<dl class=\"std option\">\n<dt id=\"cmdoption-dagster-api-grpc-heartbeat\">\n<code class=\"sig-name descname\"><span class=\"pre\">--heartbeat</span></code><code class=\"sig-prename descclassname\"></code><a class=\"headerlink\" href=\"#cmdoption-dagster-api-grpc-heartbeat\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>If set, the GRPC server will shut itself down when it fails to receive a heartbeat after a timeout configurable with \u2013heartbeat-timeout.</p>\n</dd></dl>\n\n<dl class=\"std option\">\n<dt id=\"cmdoption-dagster-api-grpc-heartbeat-timeout\">\n<code class=\"sig-name descname\"><span class=\"pre\">--heartbeat-timeout</span></code><code class=\"sig-prename descclassname\"> <span class=\"pre\">&lt;heartbeat_timeout&gt;</span></code><a class=\"headerlink\" href=\"#cmdoption-dagster-api-grpc-heartbeat-timeout\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Timeout after which to shutdown if \u2013heartbeat is set and a heartbeat is not received</p>\n</dd></dl>\n\n<dl class=\"std option\">\n<dt id=\"cmdoption-dagster-api-grpc-lazy-load-user-code\">\n<code class=\"sig-name descname\"><span class=\"pre\">--lazy-load-user-code</span></code><code class=\"sig-prename descclassname\"></code><a class=\"headerlink\" href=\"#cmdoption-dagster-api-grpc-lazy-load-user-code\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Wait until the first LoadRepositories call to actually load the repositories, instead of waiting to load them when the server is launched. Useful for surfacing errors when the server is managed directly from Dagit</p>\n</dd></dl>\n\n<dl class=\"std option\">\n<dt id=\"cmdoption-dagster-api-grpc-a\">\n<code class=\"sig-name descname\"><span class=\"pre\">-a</span></code><code class=\"sig-prename descclassname\"></code><code class=\"sig-prename descclassname\"><span class=\"pre\">,</span> </code><code class=\"sig-name descname\"><span class=\"pre\">--attribute</span></code><code class=\"sig-prename descclassname\"> <span class=\"pre\">&lt;attribute&gt;</span></code><a class=\"headerlink\" href=\"#cmdoption-dagster-api-grpc-a\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Attribute that is either a 1) repository or pipeline/job or 2) a function that returns a repository or pipeline/job</p>\n</dd></dl>\n\n<dl class=\"std option\">\n<dt id=\"cmdoption-dagster-api-grpc-m\">\n<code class=\"sig-name descname\"><span class=\"pre\">-m</span></code><code class=\"sig-prename descclassname\"></code><code class=\"sig-prename descclassname\"><span class=\"pre\">,</span> </code><code class=\"sig-name descname\"><span class=\"pre\">--module-name</span></code><code class=\"sig-prename descclassname\"> <span class=\"pre\">&lt;module_name&gt;</span></code><a class=\"headerlink\" href=\"#cmdoption-dagster-api-grpc-m\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Specify module where repository or pipeline/job function lives</p>\n</dd></dl>\n\n<dl class=\"std option\">\n<dt id=\"cmdoption-dagster-api-grpc-package-name\">\n<code class=\"sig-name descname\"><span class=\"pre\">--package-name</span></code><code class=\"sig-prename descclassname\"> <span class=\"pre\">&lt;package_name&gt;</span></code><a class=\"headerlink\" href=\"#cmdoption-dagster-api-grpc-package-name\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Specify Python package where repository or pipeline/job function lives</p>\n</dd></dl>\n\n<dl class=\"std option\">\n<dt id=\"cmdoption-dagster-api-grpc-f\">\n<code class=\"sig-name descname\"><span class=\"pre\">-f</span></code><code class=\"sig-prename descclassname\"></code><code class=\"sig-prename descclassname\"><span class=\"pre\">,</span> </code><code class=\"sig-name descname\"><span class=\"pre\">--python-file</span></code><code class=\"sig-prename descclassname\"> <span class=\"pre\">&lt;python_file&gt;</span></code><a class=\"headerlink\" href=\"#cmdoption-dagster-api-grpc-f\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Specify python file where repository or pipeline/job function lives</p>\n</dd></dl>\n\n<dl class=\"std option\">\n<dt id=\"cmdoption-dagster-api-grpc-d\">\n<code class=\"sig-name descname\"><span class=\"pre\">-d</span></code><code class=\"sig-prename descclassname\"></code><code class=\"sig-prename descclassname\"><span class=\"pre\">,</span> </code><code class=\"sig-name descname\"><span class=\"pre\">--working-directory</span></code><code class=\"sig-prename descclassname\"> <span class=\"pre\">&lt;working_directory&gt;</span></code><a class=\"headerlink\" href=\"#cmdoption-dagster-api-grpc-d\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Specify working directory to use when loading the repository or pipeline/job.</p>\n</dd></dl>\n\n<dl class=\"std option\">\n<dt id=\"cmdoption-dagster-api-grpc-use-python-environment-entry-point\">\n<code class=\"sig-name descname\"><span class=\"pre\">--use-python-environment-entry-point</span></code><code class=\"sig-prename descclassname\"></code><a class=\"headerlink\" href=\"#cmdoption-dagster-api-grpc-use-python-environment-entry-point\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>If this flag is set, the server will signal to clients that they should launch dagster commands using <cite>&lt;this server\u2019s python executable&gt; -m dagster</cite>, instead of the default <cite>dagster</cite> entry point. This is useful when there are multiple Python environments running in the same machine, so a single <cite>dagster</cite> entry point is not enough to uniquely determine the environment.</p>\n</dd></dl>\n\n<dl class=\"std option\">\n<dt id=\"cmdoption-dagster-api-grpc-empty-working-directory\">\n<code class=\"sig-name descname\"><span class=\"pre\">--empty-working-directory</span></code><code class=\"sig-prename descclassname\"></code><a class=\"headerlink\" href=\"#cmdoption-dagster-api-grpc-empty-working-directory\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Indicates that the working directory should be empty and should not set to the current directory as a default</p>\n</dd></dl>\n\n<dl class=\"std option\">\n<dt id=\"cmdoption-dagster-api-grpc-ipc-output-file\">\n<code class=\"sig-name descname\"><span class=\"pre\">--ipc-output-file</span></code><code class=\"sig-prename descclassname\"> <span class=\"pre\">&lt;ipc_output_file&gt;</span></code><a class=\"headerlink\" href=\"#cmdoption-dagster-api-grpc-ipc-output-file\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>[INTERNAL] This option should generally not be used by users. Internal param used by dagster when it automatically spawns gRPC servers to communicate the success or failure of the server launching.</p>\n</dd></dl>\n\n<dl class=\"std option\">\n<dt id=\"cmdoption-dagster-api-grpc-fixed-server-id\">\n<code class=\"sig-name descname\"><span class=\"pre\">--fixed-server-id</span></code><code class=\"sig-prename descclassname\"> <span class=\"pre\">&lt;fixed_server_id&gt;</span></code><a class=\"headerlink\" href=\"#cmdoption-dagster-api-grpc-fixed-server-id\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>[INTERNAL] This option should generally not be used by users. Internal param used by dagster to spawn a gRPC server with the specified server id.</p>\n</dd></dl>\n\n<dl class=\"std option\">\n<dt id=\"cmdoption-dagster-api-grpc-override-system-timezone\">\n<code class=\"sig-name descname\"><span class=\"pre\">--override-system-timezone</span></code><code class=\"sig-prename descclassname\"> <span class=\"pre\">&lt;override_system_timezone&gt;</span></code><a class=\"headerlink\" href=\"#cmdoption-dagster-api-grpc-override-system-timezone\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>[INTERNAL] This option should generally not be used by users. Override the system timezone for tests.</p>\n</dd></dl>\n\n<dl class=\"std option\">\n<dt id=\"cmdoption-dagster-api-grpc-log-level\">\n<code class=\"sig-name descname\"><span class=\"pre\">--log-level</span></code><code class=\"sig-prename descclassname\"> <span class=\"pre\">&lt;log_level&gt;</span></code><a class=\"headerlink\" href=\"#cmdoption-dagster-api-grpc-log-level\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Level at which to log output from the gRPC server process</p>\n</dd></dl>\n\n<dl class=\"std option\">\n<dt id=\"cmdoption-dagster-api-grpc-container-image\">\n<code class=\"sig-name descname\"><span class=\"pre\">--container-image</span></code><code class=\"sig-prename descclassname\"> <span class=\"pre\">&lt;container_image&gt;</span></code><a class=\"headerlink\" href=\"#cmdoption-dagster-api-grpc-container-image\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Container image to use to run code from this server.</p>\n</dd></dl>\n\n<dl class=\"std option\">\n<dt id=\"cmdoption-dagster-api-grpc-container-context\">\n<code class=\"sig-name descname\"><span class=\"pre\">--container-context</span></code><code class=\"sig-prename descclassname\"> <span class=\"pre\">&lt;container_context&gt;</span></code><a class=\"headerlink\" href=\"#cmdoption-dagster-api-grpc-container-context\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Serialized JSON with configuration for any containers created to run the code from this server.</p>\n</dd></dl>\n\n<p class=\"rubric\">Environment variables</p>\n<span class=\"target\" id=\"dagster-api-grpc-port-dagster-grpc-port\"></span><dl class=\"std envvar\">\n<dt>\n<code class=\"sig-name descname\"><span class=\"pre\">DAGSTER_GRPC_PORT</span></code></dt>\n<dd><blockquote>\n<div><p>Provide a default for <a class=\"reference internal\" href=\"#cmdoption-dagster-api-grpc-p\"><code class=\"xref std std-option docutils literal notranslate\"><span class=\"pre\">--port</span></code></a></p>\n</div></blockquote>\n</dd></dl>\n\n<span class=\"target\" id=\"dagster-api-grpc-socket-dagster-grpc-socket\"></span><dl class=\"std envvar\">\n<dt>\n<code class=\"sig-name descname\"><span class=\"pre\">DAGSTER_GRPC_SOCKET</span></code></dt>\n<dd><blockquote>\n<div><p>Provide a default for <a class=\"reference internal\" href=\"#cmdoption-dagster-api-grpc-s\"><code class=\"xref std std-option docutils literal notranslate\"><span class=\"pre\">--socket</span></code></a></p>\n</div></blockquote>\n</dd></dl>\n\n<span class=\"target\" id=\"dagster-api-grpc-host-dagster-grpc-host\"></span><dl class=\"std envvar\">\n<dt>\n<code class=\"sig-name descname\"><span class=\"pre\">DAGSTER_GRPC_HOST</span></code></dt>\n<dd><blockquote>\n<div><p>Provide a default for <a class=\"reference internal\" href=\"#cmdoption-dagster-api-grpc-h\"><code class=\"xref std std-option docutils literal notranslate\"><span class=\"pre\">--host</span></code></a></p>\n</div></blockquote>\n</dd></dl>\n\n<span class=\"target\" id=\"dagster-api-grpc-lazy-load-user-code-dagster-lazy-load-user-code\"></span><dl class=\"std envvar\">\n<dt>\n<code class=\"sig-name descname\"><span class=\"pre\">DAGSTER_LAZY_LOAD_USER_CODE</span></code></dt>\n<dd><blockquote>\n<div><p>Provide a default for <a class=\"reference internal\" href=\"#cmdoption-dagster-api-grpc-lazy-load-user-code\"><code class=\"xref std std-option docutils literal notranslate\"><span class=\"pre\">--lazy-load-user-code</span></code></a></p>\n</div></blockquote>\n</dd></dl>\n\n<span class=\"target\" id=\"dagster-api-grpc-attribute-dagster-attribute\"></span><dl class=\"std envvar\">\n<dt>\n<code class=\"sig-name descname\"><span class=\"pre\">DAGSTER_ATTRIBUTE</span></code></dt>\n<dd><blockquote>\n<div><p>Provide a default for <a class=\"reference internal\" href=\"#cmdoption-dagster-api-grpc-a\"><code class=\"xref std std-option docutils literal notranslate\"><span class=\"pre\">--attribute</span></code></a></p>\n</div></blockquote>\n</dd></dl>\n\n<span class=\"target\" id=\"dagster-api-grpc-module-name-dagster-module-name\"></span><dl class=\"std envvar\">\n<dt>\n<code class=\"sig-name descname\"><span class=\"pre\">DAGSTER_MODULE_NAME</span></code></dt>\n<dd><blockquote>\n<div><p>Provide a default for <a class=\"reference internal\" href=\"#cmdoption-dagster-api-grpc-m\"><code class=\"xref std std-option docutils literal notranslate\"><span class=\"pre\">--module-name</span></code></a></p>\n</div></blockquote>\n</dd></dl>\n\n<span class=\"target\" id=\"dagster-api-grpc-package-name-dagster-package-name\"></span><dl class=\"std envvar\">\n<dt>\n<code class=\"sig-name descname\"><span class=\"pre\">DAGSTER_PACKAGE_NAME</span></code></dt>\n<dd><blockquote>\n<div><p>Provide a default for <a class=\"reference internal\" href=\"#cmdoption-dagster-api-grpc-package-name\"><code class=\"xref std std-option docutils literal notranslate\"><span class=\"pre\">--package-name</span></code></a></p>\n</div></blockquote>\n</dd></dl>\n\n<span class=\"target\" id=\"dagster-api-grpc-python-file-dagster-python-file\"></span><dl class=\"std envvar\">\n<dt>\n<code class=\"sig-name descname\"><span class=\"pre\">DAGSTER_PYTHON_FILE</span></code></dt>\n<dd><blockquote>\n<div><p>Provide a default for <a class=\"reference internal\" href=\"#cmdoption-dagster-api-grpc-f\"><code class=\"xref std std-option docutils literal notranslate\"><span class=\"pre\">--python-file</span></code></a></p>\n</div></blockquote>\n</dd></dl>\n\n<span class=\"target\" id=\"dagster-api-grpc-working-directory-dagster-working-directory\"></span><dl class=\"std envvar\">\n<dt>\n<code class=\"sig-name descname\"><span class=\"pre\">DAGSTER_WORKING_DIRECTORY</span></code></dt>\n<dd><blockquote>\n<div><p>Provide a default for <a class=\"reference internal\" href=\"#cmdoption-dagster-api-grpc-d\"><code class=\"xref std std-option docutils literal notranslate\"><span class=\"pre\">--working-directory</span></code></a></p>\n</div></blockquote>\n</dd></dl>\n\n<span class=\"target\" id=\"dagster-api-grpc-use-python-environment-entry-point-dagster-use-python-environment-entry-point\"></span><dl class=\"std envvar\">\n<dt>\n<code class=\"sig-name descname\"><span class=\"pre\">DAGSTER_USE_PYTHON_ENVIRONMENT_ENTRY_POINT</span></code></dt>\n<dd><blockquote>\n<div><p>Provide a default for <a class=\"reference internal\" href=\"#cmdoption-dagster-api-grpc-use-python-environment-entry-point\"><code class=\"xref std std-option docutils literal notranslate\"><span class=\"pre\">--use-python-environment-entry-point</span></code></a></p>\n</div></blockquote>\n</dd></dl>\n\n<span class=\"target\" id=\"dagster-api-grpc-empty-working-directory-dagster-empty-working-directory\"></span><dl class=\"std envvar\">\n<dt>\n<code class=\"sig-name descname\"><span class=\"pre\">DAGSTER_EMPTY_WORKING_DIRECTORY</span></code></dt>\n<dd><blockquote>\n<div><p>Provide a default for <a class=\"reference internal\" href=\"#cmdoption-dagster-api-grpc-empty-working-directory\"><code class=\"xref std std-option docutils literal notranslate\"><span class=\"pre\">--empty-working-directory</span></code></a></p>\n</div></blockquote>\n</dd></dl>\n\n<span class=\"target\" id=\"dagster-api-grpc-container-image-dagster-container-image\"></span><dl class=\"std envvar\">\n<dt>\n<code class=\"sig-name descname\"><span class=\"pre\">DAGSTER_CONTAINER_IMAGE</span></code></dt>\n<dd><blockquote>\n<div><p>Provide a default for <a class=\"reference internal\" href=\"#cmdoption-dagster-api-grpc-container-image\"><code class=\"xref std std-option docutils literal notranslate\"><span class=\"pre\">--container-image</span></code></a></p>\n</div></blockquote>\n</dd></dl>\n\n<span class=\"target\" id=\"dagster-api-grpc-container-context-dagster-container-context\"></span><dl class=\"std envvar\">\n<dt>\n<code class=\"sig-name descname\"><span class=\"pre\">DAGSTER_CONTAINER_CONTEXT</span></code></dt>\n<dd><blockquote>\n<div><p>Provide a default for <a class=\"reference internal\" href=\"#cmdoption-dagster-api-grpc-container-context\"><code class=\"xref std std-option docutils literal notranslate\"><span class=\"pre\">--container-context</span></code></a></p>\n</div></blockquote>\n</dd></dl>\n\n</div>\n<div class=\"section\" id=\"legacy-apis\">\n<h2>Legacy APIs<a class=\"headerlink\" href=\"#legacy-apis\" title=\"Permalink to this headline\">\u00b6</a></h2>\n<div class=\"section\" id=\"dagster-pipeline\">\n<h3>dagster pipeline<a class=\"headerlink\" href=\"#dagster-pipeline\" title=\"Permalink to this headline\">\u00b6</a></h3>\n<p>Commands for working with Dagster pipelines/jobs.</p>\n<div class=\"highlight-shell notranslate\"><div class=\"highlight\"><pre><span></span>dagster pipeline <span class=\"o\">[</span>OPTIONS<span class=\"o\">]</span> COMMAND <span class=\"o\">[</span>ARGS<span class=\"o\">]</span>...\n</pre></div>\n</div>\n<p class=\"rubric\">Commands</p>\n<dl class=\"object\">\n<dt>\n<code class=\"sig-name descname\"><span class=\"pre\">backfill</span></code></dt>\n<dd><p>Backfill a partitioned pipeline/job.</p>\n</dd></dl>\n\n<dl class=\"object\">\n<dt>\n<code class=\"sig-name descname\"><span class=\"pre\">execute</span></code></dt>\n<dd><p>Execute a pipeline.</p>\n</dd></dl>\n\n<dl class=\"object\">\n<dt>\n<code class=\"sig-name descname\"><span class=\"pre\">launch</span></code></dt>\n<dd><p>Launch a pipeline using the run launcher\u2026</p>\n</dd></dl>\n\n<dl class=\"object\">\n<dt>\n<code class=\"sig-name descname\"><span class=\"pre\">list</span></code></dt>\n<dd><p>List the pipelines/jobs in a repository.</p>\n</dd></dl>\n\n<dl class=\"object\">\n<dt>\n<code class=\"sig-name descname\"><span class=\"pre\">list_versions</span></code></dt>\n<dd><p>Display the freshness of memoized results\u2026</p>\n</dd></dl>\n\n<dl class=\"object\">\n<dt>\n<code class=\"sig-name descname\"><span class=\"pre\">print</span></code></dt>\n<dd><p>Print a pipeline/job.</p>\n</dd></dl>\n\n<dl class=\"object\">\n<dt>\n<code class=\"sig-name descname\"><span class=\"pre\">scaffold_config</span></code></dt>\n<dd><p>Scaffold the config for a pipeline.</p>\n</dd></dl>\n\n</div>\n</div>\n</div>\n", "current_page_name": "sections/api/apidocs/cli", "customsidebar": null, "display_toc": true, "meta": null, "metatags": "", "next": {"link": "../config/", "title": "Config"}, "page_source_suffix": ".rst", "parents": [], "prev": {"link": "../assets/", "title": "Software-Defined Assets"}, "rellinks": [["genindex", "General Index", "I", "index"], ["py-modindex", "Python Module Index", "", "modules"], ["sections/api/apidocs/config", "Config", "N", "next"], ["sections/api/apidocs/assets", "Software-Defined Assets", "P", "previous"]], "sidebars": ["globaltoc.html", "searchbox.html"], "sourcename": "sections/api/apidocs/cli.rst.txt", "title": "Dagster CLI", "toc": "<ul>\n<li><a class=\"reference internal\" href=\"#\">Dagster CLI</a><ul>\n<li><a class=\"reference internal\" href=\"#dagster-asset\">dagster asset</a></li>\n<li><a class=\"reference internal\" href=\"#dagster-debug\">dagster debug</a></li>\n<li><a class=\"reference internal\" href=\"#dagster-instance\">dagster instance</a></li>\n<li><a class=\"reference internal\" href=\"#dagster-job\">dagster job</a></li>\n<li><a class=\"reference internal\" href=\"#dagster-run\">dagster run</a></li>\n<li><a class=\"reference internal\" href=\"#dagster-schedule\">dagster schedule</a></li>\n<li><a class=\"reference internal\" href=\"#dagster-sensor\">dagster sensor</a></li>\n<li><a class=\"reference internal\" href=\"#dagster-graphql\">dagster-graphql</a></li>\n<li><a class=\"reference internal\" href=\"#dagit\">dagit</a></li>\n<li><a class=\"reference internal\" href=\"#dagster-daemon-run\">dagster-daemon run</a></li>\n<li><a class=\"reference internal\" href=\"#dagster-daemon-wipe\">dagster-daemon wipe</a></li>\n<li><a class=\"reference internal\" href=\"#dagster-daemon-debug-heartbeat-dump\">dagster-daemon debug heartbeat-dump</a></li>\n<li><a class=\"reference internal\" href=\"#dagster-api-grpc\">dagster api grpc</a></li>\n<li><a class=\"reference internal\" href=\"#legacy-apis\">Legacy APIs</a><ul>\n<li><a class=\"reference internal\" href=\"#dagster-pipeline\">dagster pipeline</a></li>\n</ul>\n</li>\n</ul>\n</li>\n</ul>\n"}, "config": {"alabaster_version": "0.7.12", "body": "<div class=\"section\" id=\"config\">\n<h1>Config<a class=\"headerlink\" href=\"#config\" title=\"Permalink to this headline\">\u00b6</a></h1>\n<div class=\"section\" id=\"config-types\">\n<h2>Config Types<a class=\"headerlink\" href=\"#config-types\" title=\"Permalink to this headline\">\u00b6</a></h2>\n<p>The following types are used to describe the schema of configuration\ndata via <code class=\"docutils literal notranslate\"><span class=\"pre\">config</span></code>. They are used in conjunction with the\nbuiltin types above.</p>\n<dl class=\"py class\">\n<dt id=\"dagster.ConfigSchema\">\n<em class=\"property\"><span class=\"pre\">class</span> </em><code class=\"sig-prename descclassname\"><span class=\"pre\">dagster.</span></code><code class=\"sig-name descname\"><span class=\"pre\">ConfigSchema</span></code><a class=\"reference internal\" href=\"../../../../_modules/dagster/config/config_schema#ConfigSchema\"><span class=\"viewcode-link\"><span class=\"pre\">[source]</span></span></a><a class=\"headerlink\" href=\"#dagster.ConfigSchema\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>This is a placeholder type. Any time that it appears in documentation, it means that any of\nthe following types are acceptable:</p>\n<ol class=\"arabic simple\">\n<li><p>A Python scalar type that resolves to a Dagster config type\n(<a class=\"reference external\" href=\"https://docs.python.org/3/library/functions.html#int\" title=\"(in Python v3.8)\"><code class=\"docutils literal notranslate\"><span class=\"pre\">int</span></code></a>, <a class=\"reference external\" href=\"https://docs.python.org/3/library/functions.html#float\" title=\"(in Python v3.8)\"><code class=\"docutils literal notranslate\"><span class=\"pre\">float</span></code></a>, <a class=\"reference external\" href=\"https://docs.python.org/3/library/functions.html#bool\" title=\"(in Python v3.8)\"><code class=\"docutils literal notranslate\"><span class=\"pre\">bool</span></code></a>,\nor <a class=\"reference external\" href=\"https://docs.python.org/3/library/stdtypes.html#str\" title=\"(in Python v3.8)\"><code class=\"docutils literal notranslate\"><span class=\"pre\">str</span></code></a>). For example:</p>\n<ul class=\"simple\">\n<li><p><code class=\"docutils literal notranslate\"><span class=\"pre\">&#64;op(config_schema=int)</span></code></p></li>\n<li><p><code class=\"docutils literal notranslate\"><span class=\"pre\">&#64;op(config_schema=str)</span></code></p></li>\n</ul>\n</li>\n<li><p>A built-in python collection (<a class=\"reference external\" href=\"https://docs.python.org/3/library/stdtypes.html#list\" title=\"(in Python v3.8)\"><code class=\"docutils literal notranslate\"><span class=\"pre\">list</span></code></a>, or <a class=\"reference external\" href=\"https://docs.python.org/3/library/stdtypes.html#dict\" title=\"(in Python v3.8)\"><code class=\"docutils literal notranslate\"><span class=\"pre\">dict</span></code></a>).\n<a class=\"reference external\" href=\"https://docs.python.org/3/library/stdtypes.html#list\" title=\"(in Python v3.8)\"><code class=\"docutils literal notranslate\"><span class=\"pre\">list</span></code></a> is exactly equivalent to <a class=\"reference internal\" href=\"#dagster.Array\" title=\"dagster.Array\"><code class=\"xref py py-class docutils literal notranslate\"><span class=\"pre\">Array</span></code></a> [\n<code class=\"xref py py-class docutils literal notranslate\"><span class=\"pre\">Any</span></code> ] and <a class=\"reference external\" href=\"https://docs.python.org/3/library/stdtypes.html#dict\" title=\"(in Python v3.8)\"><code class=\"docutils literal notranslate\"><span class=\"pre\">dict</span></code></a> is equivalent to\n<a class=\"reference internal\" href=\"#dagster.Permissive\" title=\"dagster.Permissive\"><code class=\"xref py py-class docutils literal notranslate\"><span class=\"pre\">Permissive</span></code></a>. For example:</p>\n<ul class=\"simple\">\n<li><p><code class=\"docutils literal notranslate\"><span class=\"pre\">&#64;op(config_schema=list)</span></code></p></li>\n<li><p><code class=\"docutils literal notranslate\"><span class=\"pre\">&#64;op(config_schema=dict)</span></code></p></li>\n</ul>\n</li>\n<li><p>A Dagster config type:</p>\n<ul class=\"simple\">\n<li><p><code class=\"xref py py-data docutils literal notranslate\"><span class=\"pre\">Any</span></code></p></li>\n<li><p><a class=\"reference internal\" href=\"#dagster.Array\" title=\"dagster.Array\"><code class=\"xref py py-class docutils literal notranslate\"><span class=\"pre\">Array</span></code></a></p></li>\n<li><p><code class=\"xref py py-data docutils literal notranslate\"><span class=\"pre\">Bool</span></code></p></li>\n<li><p><a class=\"reference internal\" href=\"#dagster.Enum\" title=\"dagster.Enum\"><code class=\"xref py py-data docutils literal notranslate\"><span class=\"pre\">Enum</span></code></a></p></li>\n<li><p><code class=\"xref py py-data docutils literal notranslate\"><span class=\"pre\">Float</span></code></p></li>\n<li><p><code class=\"xref py py-data docutils literal notranslate\"><span class=\"pre\">Int</span></code></p></li>\n<li><p><a class=\"reference internal\" href=\"#dagster.IntSource\" title=\"dagster.IntSource\"><code class=\"xref py py-data docutils literal notranslate\"><span class=\"pre\">IntSource</span></code></a></p></li>\n<li><p><a class=\"reference internal\" href=\"#dagster.Noneable\" title=\"dagster.Noneable\"><code class=\"xref py py-data docutils literal notranslate\"><span class=\"pre\">Noneable</span></code></a></p></li>\n<li><p><a class=\"reference internal\" href=\"#dagster.Permissive\" title=\"dagster.Permissive\"><code class=\"xref py py-class docutils literal notranslate\"><span class=\"pre\">Permissive</span></code></a></p></li>\n<li><p><a class=\"reference internal\" href=\"#dagster.Map\" title=\"dagster.Map\"><code class=\"xref py py-class docutils literal notranslate\"><span class=\"pre\">Map</span></code></a></p></li>\n<li><p><a class=\"reference internal\" href=\"#dagster.ScalarUnion\" title=\"dagster.ScalarUnion\"><code class=\"xref py py-class docutils literal notranslate\"><span class=\"pre\">ScalarUnion</span></code></a></p></li>\n<li><p><a class=\"reference internal\" href=\"#dagster.Selector\" title=\"dagster.Selector\"><code class=\"xref py py-class docutils literal notranslate\"><span class=\"pre\">Selector</span></code></a></p></li>\n<li><p><a class=\"reference internal\" href=\"#dagster.Shape\" title=\"dagster.Shape\"><code class=\"xref py py-class docutils literal notranslate\"><span class=\"pre\">Shape</span></code></a></p></li>\n<li><p><code class=\"xref py py-data docutils literal notranslate\"><span class=\"pre\">String</span></code></p></li>\n<li><p><a class=\"reference internal\" href=\"#dagster.StringSource\" title=\"dagster.StringSource\"><code class=\"xref py py-data docutils literal notranslate\"><span class=\"pre\">StringSource</span></code></a></p></li>\n</ul>\n</li>\n<li><p>A bare python dictionary, which will be automatically wrapped in\n<a class=\"reference internal\" href=\"#dagster.Shape\" title=\"dagster.Shape\"><code class=\"xref py py-class docutils literal notranslate\"><span class=\"pre\">Shape</span></code></a>. Values of the dictionary are resolved recursively\naccording to the same rules. For example:</p>\n<ul class=\"simple\">\n<li><p><code class=\"docutils literal notranslate\"><span class=\"pre\">{'some_config':</span> <span class=\"pre\">str}</span></code> is equivalent to <code class=\"docutils literal notranslate\"><span class=\"pre\">Shape({'some_config:</span> <span class=\"pre\">str})</span></code>.</p></li>\n<li><dl class=\"simple\">\n<dt><code class=\"docutils literal notranslate\"><span class=\"pre\">{'some_config1':</span> <span class=\"pre\">{'some_config2':</span> <span class=\"pre\">str}}</span></code> is equivalent to</dt><dd><p><code class=\"docutils literal notranslate\"><span class=\"pre\">Shape({'some_config1:</span> <span class=\"pre\">Shape({'some_config2:</span> <span class=\"pre\">str})})</span></code>.</p>\n</dd>\n</dl>\n</li>\n</ul>\n</li>\n<li><p>A bare python list of length one, whose single element will be wrapped in a\n<a class=\"reference internal\" href=\"#dagster.Array\" title=\"dagster.Array\"><code class=\"xref py py-class docutils literal notranslate\"><span class=\"pre\">Array</span></code></a> is resolved recursively according to the same\nrules. For example:</p>\n<ul class=\"simple\">\n<li><p><code class=\"docutils literal notranslate\"><span class=\"pre\">[str]</span></code> is equivalent to <code class=\"docutils literal notranslate\"><span class=\"pre\">Array[str]</span></code>.</p></li>\n<li><p><code class=\"docutils literal notranslate\"><span class=\"pre\">[[str]]</span></code> is equivalent to <code class=\"docutils literal notranslate\"><span class=\"pre\">Array[Array[str]]</span></code>.</p></li>\n<li><p><code class=\"docutils literal notranslate\"><span class=\"pre\">[{'some_config':</span> <span class=\"pre\">str}]</span></code> is equivalent to <code class=\"docutils literal notranslate\"><span class=\"pre\">Array(Shape({'some_config:</span> <span class=\"pre\">str}))</span></code>.</p></li>\n</ul>\n</li>\n<li><p>An instance of <a class=\"reference internal\" href=\"#dagster.Field\" title=\"dagster.Field\"><code class=\"xref py py-class docutils literal notranslate\"><span class=\"pre\">Field</span></code></a>.</p></li>\n</ol>\n</dd></dl>\n\n<dl class=\"py class\">\n<dt id=\"dagster.Field\">\n<em class=\"property\"><span class=\"pre\">class</span> </em><code class=\"sig-prename descclassname\"><span class=\"pre\">dagster.</span></code><code class=\"sig-name descname\"><span class=\"pre\">Field</span></code><span class=\"sig-paren\">(</span><em class=\"sig-param\"><span class=\"pre\">config</span></em>, <em class=\"sig-param\"><span class=\"pre\">default_value=&lt;class</span> <span class=\"pre\">'dagster.config.field_utils.__FieldValueSentinel'&gt;</span></em>, <em class=\"sig-param\"><span class=\"pre\">is_required=None</span></em>, <em class=\"sig-param\"><span class=\"pre\">description=None</span></em><span class=\"sig-paren\">)</span><a class=\"reference internal\" href=\"../../../../_modules/dagster/config/field#Field\"><span class=\"viewcode-link\"><span class=\"pre\">[source]</span></span></a><a class=\"headerlink\" href=\"#dagster.Field\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Defines the schema for a configuration field.</p>\n<p>Fields are used in config schema instead of bare types when one wants to add a description,\na default value, or to mark it as not required.</p>\n<p>Config fields are parsed according to their schemas in order to yield values available at\njob execution time through the config system. Config fields can be set on ops, on\nloaders and materializers for custom, and on other pluggable components of the system, such as\nresources, loggers, and executors.</p>\n<dl class=\"field-list simple\">\n<dt class=\"field-odd\">Parameters</dt>\n<dd class=\"field-odd\"><ul class=\"simple\">\n<li><p><strong>config</strong> (<em>Any</em>) \u2013 <p>The schema for the config. This value can be any of:</p>\n<ol class=\"arabic simple\">\n<li><p>A Python primitive type that resolves to a Dagster config type\n(<a class=\"reference external\" href=\"https://docs.python.org/3/library/functions.html#int\" title=\"(in Python v3.8)\"><code class=\"docutils literal notranslate\"><span class=\"pre\">int</span></code></a>, <a class=\"reference external\" href=\"https://docs.python.org/3/library/functions.html#float\" title=\"(in Python v3.8)\"><code class=\"docutils literal notranslate\"><span class=\"pre\">float</span></code></a>, <a class=\"reference external\" href=\"https://docs.python.org/3/library/functions.html#bool\" title=\"(in Python v3.8)\"><code class=\"docutils literal notranslate\"><span class=\"pre\">bool</span></code></a>,\n<a class=\"reference external\" href=\"https://docs.python.org/3/library/stdtypes.html#str\" title=\"(in Python v3.8)\"><code class=\"docutils literal notranslate\"><span class=\"pre\">str</span></code></a>, or <a class=\"reference external\" href=\"https://docs.python.org/3/library/stdtypes.html#list\" title=\"(in Python v3.8)\"><code class=\"docutils literal notranslate\"><span class=\"pre\">list</span></code></a>).</p></li>\n<li><p>A Dagster config type:</p>\n<ul>\n<li><p><code class=\"xref py py-data docutils literal notranslate\"><span class=\"pre\">Any</span></code></p></li>\n<li><p><a class=\"reference internal\" href=\"#dagster.Array\" title=\"dagster.Array\"><code class=\"xref py py-class docutils literal notranslate\"><span class=\"pre\">Array</span></code></a></p></li>\n<li><p><code class=\"xref py py-data docutils literal notranslate\"><span class=\"pre\">Bool</span></code></p></li>\n<li><p><a class=\"reference internal\" href=\"#dagster.Enum\" title=\"dagster.Enum\"><code class=\"xref py py-data docutils literal notranslate\"><span class=\"pre\">Enum</span></code></a></p></li>\n<li><p><code class=\"xref py py-data docutils literal notranslate\"><span class=\"pre\">Float</span></code></p></li>\n<li><p><code class=\"xref py py-data docutils literal notranslate\"><span class=\"pre\">Int</span></code></p></li>\n<li><p><a class=\"reference internal\" href=\"#dagster.IntSource\" title=\"dagster.IntSource\"><code class=\"xref py py-data docutils literal notranslate\"><span class=\"pre\">IntSource</span></code></a></p></li>\n<li><p><a class=\"reference internal\" href=\"#dagster.Noneable\" title=\"dagster.Noneable\"><code class=\"xref py py-data docutils literal notranslate\"><span class=\"pre\">Noneable</span></code></a></p></li>\n<li><p><a class=\"reference internal\" href=\"#dagster.Permissive\" title=\"dagster.Permissive\"><code class=\"xref py py-class docutils literal notranslate\"><span class=\"pre\">Permissive</span></code></a></p></li>\n<li><p><a class=\"reference internal\" href=\"#dagster.ScalarUnion\" title=\"dagster.ScalarUnion\"><code class=\"xref py py-class docutils literal notranslate\"><span class=\"pre\">ScalarUnion</span></code></a></p></li>\n<li><p><a class=\"reference internal\" href=\"#dagster.Selector\" title=\"dagster.Selector\"><code class=\"xref py py-class docutils literal notranslate\"><span class=\"pre\">Selector</span></code></a></p></li>\n<li><p><a class=\"reference internal\" href=\"#dagster.Shape\" title=\"dagster.Shape\"><code class=\"xref py py-class docutils literal notranslate\"><span class=\"pre\">Shape</span></code></a></p></li>\n<li><p><code class=\"xref py py-data docutils literal notranslate\"><span class=\"pre\">String</span></code></p></li>\n<li><p><a class=\"reference internal\" href=\"#dagster.StringSource\" title=\"dagster.StringSource\"><code class=\"xref py py-data docutils literal notranslate\"><span class=\"pre\">StringSource</span></code></a></p></li>\n</ul>\n</li>\n<li><p>A bare python dictionary, which will be automatically wrapped in\n<a class=\"reference internal\" href=\"#dagster.Shape\" title=\"dagster.Shape\"><code class=\"xref py py-class docutils literal notranslate\"><span class=\"pre\">Shape</span></code></a>. Values of the dictionary are resolved recursively\naccording to the same rules.</p></li>\n<li><p>A bare python list of length one which itself is config type.\nBecomes <a class=\"reference internal\" href=\"#dagster.Array\" title=\"dagster.Array\"><code class=\"xref py py-class docutils literal notranslate\"><span class=\"pre\">Array</span></code></a> with list element as an argument.</p></li>\n</ol>\n</p></li>\n<li><p><strong>default_value</strong> (<em>Any</em>) \u2013 <p>A default value for this field, conformant to the schema set by the <code class=\"docutils literal notranslate\"><span class=\"pre\">dagster_type</span></code>\nargument. If a default value is provided, <code class=\"docutils literal notranslate\"><span class=\"pre\">is_required</span></code> should be <code class=\"docutils literal notranslate\"><span class=\"pre\">False</span></code>.</p>\n<p>Note: for config types that do post processing such as Enum, this value must be\nthe pre processed version, ie use <code class=\"docutils literal notranslate\"><span class=\"pre\">ExampleEnum.VALUE.name</span></code> instead of\n<code class=\"docutils literal notranslate\"><span class=\"pre\">ExampleEnum.VALUE</span></code></p>\n</p></li>\n<li><p><strong>is_required</strong> (<a class=\"reference external\" href=\"https://docs.python.org/3/library/functions.html#bool\" title=\"(in Python v3.8)\"><em>bool</em></a>) \u2013 Whether the presence of this field is required. Defaults to true. If <code class=\"docutils literal notranslate\"><span class=\"pre\">is_required</span></code>\nis <code class=\"docutils literal notranslate\"><span class=\"pre\">True</span></code>, no default value should be provided.</p></li>\n<li><p><strong>description</strong> (<a class=\"reference external\" href=\"https://docs.python.org/3/library/stdtypes.html#str\" title=\"(in Python v3.8)\"><em>str</em></a>) \u2013 A human-readable description of this config field.</p></li>\n</ul>\n</dd>\n</dl>\n<p>Examples:</p>\n<div class=\"highlight-python notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"nd\">@op</span><span class=\"p\">(</span>\n    <span class=\"n\">config_schema</span><span class=\"o\">=</span><span class=\"p\">{</span>\n        <span class=\"s1\">&#39;word&#39;</span><span class=\"p\">:</span> <span class=\"n\">Field</span><span class=\"p\">(</span><span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"n\">description</span><span class=\"o\">=</span><span class=\"s1\">&#39;I am a word.&#39;</span><span class=\"p\">),</span>\n        <span class=\"s1\">&#39;repeats&#39;</span><span class=\"p\">:</span> <span class=\"n\">Field</span><span class=\"p\">(</span><span class=\"n\">Int</span><span class=\"p\">,</span> <span class=\"n\">default_value</span><span class=\"o\">=</span><span class=\"mi\">1</span><span class=\"p\">,</span> <span class=\"n\">is_required</span><span class=\"o\">=</span><span class=\"kc\">False</span><span class=\"p\">),</span>\n    <span class=\"p\">}</span>\n<span class=\"p\">)</span>\n<span class=\"k\">def</span> <span class=\"nf\">repeat_word</span><span class=\"p\">(</span><span class=\"n\">context</span><span class=\"p\">):</span>\n    <span class=\"k\">return</span> <span class=\"n\">context</span><span class=\"o\">.</span><span class=\"n\">op_config</span><span class=\"p\">[</span><span class=\"s1\">&#39;word&#39;</span><span class=\"p\">]</span> <span class=\"o\">*</span> <span class=\"n\">context</span><span class=\"o\">.</span><span class=\"n\">op_config</span><span class=\"p\">[</span><span class=\"s1\">&#39;repeats&#39;</span><span class=\"p\">]</span>\n</pre></div>\n</div>\n</dd></dl>\n\n<dl class=\"py class\">\n<dt id=\"dagster.Selector\">\n<em class=\"property\"><span class=\"pre\">class</span> </em><code class=\"sig-prename descclassname\"><span class=\"pre\">dagster.</span></code><code class=\"sig-name descname\"><span class=\"pre\">Selector</span></code><span class=\"sig-paren\">(</span><em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">fields</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">description</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">None</span></span></em><span class=\"sig-paren\">)</span><a class=\"reference internal\" href=\"../../../../_modules/dagster/config/field_utils#Selector\"><span class=\"viewcode-link\"><span class=\"pre\">[source]</span></span></a><a class=\"headerlink\" href=\"#dagster.Selector\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Define a config field requiring the user to select one option.</p>\n<p>Selectors are used when you want to be able to present several different options in config but\nallow only one to be selected. For example, a single input might be read in from either a csv\nfile or a parquet file, but not both at once.</p>\n<p>Note that in some other type systems this might be called an \u2018input union\u2019.</p>\n<p>Functionally, a selector is like a <code class=\"xref py py-class docutils literal notranslate\"><span class=\"pre\">Dict</span></code>, except that only one key from the dict can\nbe specified in valid config.</p>\n<dl class=\"field-list simple\">\n<dt class=\"field-odd\">Parameters</dt>\n<dd class=\"field-odd\"><p><strong>fields</strong> (<em>Dict</em><em>[</em><a class=\"reference external\" href=\"https://docs.python.org/3/library/stdtypes.html#str\" title=\"(in Python v3.8)\"><em>str</em></a><em>, </em><a class=\"reference internal\" href=\"#dagster.Field\" title=\"dagster.Field\"><em>Field</em></a><em>]</em>) \u2013 The fields from which the user must select.</p>\n</dd>\n</dl>\n<p><strong>Examples:</strong></p>\n<div class=\"highlight-python notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"nd\">@op</span><span class=\"p\">(</span>\n    <span class=\"n\">config_schema</span><span class=\"o\">=</span><span class=\"n\">Field</span><span class=\"p\">(</span>\n        <span class=\"n\">Selector</span><span class=\"p\">(</span>\n            <span class=\"p\">{</span>\n                <span class=\"s1\">&#39;haw&#39;</span><span class=\"p\">:</span> <span class=\"p\">{</span><span class=\"s1\">&#39;whom&#39;</span><span class=\"p\">:</span> <span class=\"n\">Field</span><span class=\"p\">(</span><span class=\"n\">String</span><span class=\"p\">,</span> <span class=\"n\">default_value</span><span class=\"o\">=</span><span class=\"s1\">&#39;honua&#39;</span><span class=\"p\">,</span> <span class=\"n\">is_required</span><span class=\"o\">=</span><span class=\"kc\">False</span><span class=\"p\">)},</span>\n                <span class=\"s1\">&#39;cn&#39;</span><span class=\"p\">:</span> <span class=\"p\">{</span><span class=\"s1\">&#39;whom&#39;</span><span class=\"p\">:</span> <span class=\"n\">Field</span><span class=\"p\">(</span><span class=\"n\">String</span><span class=\"p\">,</span> <span class=\"n\">default_value</span><span class=\"o\">=</span><span class=\"s1\">&#39;\u4e16\u754c&#39;</span><span class=\"p\">,</span> <span class=\"n\">is_required</span><span class=\"o\">=</span><span class=\"kc\">False</span><span class=\"p\">)},</span>\n                <span class=\"s1\">&#39;en&#39;</span><span class=\"p\">:</span> <span class=\"p\">{</span><span class=\"s1\">&#39;whom&#39;</span><span class=\"p\">:</span> <span class=\"n\">Field</span><span class=\"p\">(</span><span class=\"n\">String</span><span class=\"p\">,</span> <span class=\"n\">default_value</span><span class=\"o\">=</span><span class=\"s1\">&#39;world&#39;</span><span class=\"p\">,</span> <span class=\"n\">is_required</span><span class=\"o\">=</span><span class=\"kc\">False</span><span class=\"p\">)},</span>\n            <span class=\"p\">}</span>\n        <span class=\"p\">),</span>\n        <span class=\"n\">is_required</span><span class=\"o\">=</span><span class=\"kc\">False</span><span class=\"p\">,</span>\n        <span class=\"n\">default_value</span><span class=\"o\">=</span><span class=\"p\">{</span><span class=\"s1\">&#39;en&#39;</span><span class=\"p\">:</span> <span class=\"p\">{</span><span class=\"s1\">&#39;whom&#39;</span><span class=\"p\">:</span> <span class=\"s1\">&#39;world&#39;</span><span class=\"p\">}},</span>\n    <span class=\"p\">)</span>\n<span class=\"p\">)</span>\n<span class=\"k\">def</span> <span class=\"nf\">hello_world_with_default</span><span class=\"p\">(</span><span class=\"n\">context</span><span class=\"p\">):</span>\n    <span class=\"k\">if</span> <span class=\"s1\">&#39;haw&#39;</span> <span class=\"ow\">in</span> <span class=\"n\">context</span><span class=\"o\">.</span><span class=\"n\">op_config</span><span class=\"p\">:</span>\n        <span class=\"k\">return</span> <span class=\"s1\">&#39;Aloha </span><span class=\"si\">{whom}</span><span class=\"s1\">!&#39;</span><span class=\"o\">.</span><span class=\"n\">format</span><span class=\"p\">(</span><span class=\"n\">whom</span><span class=\"o\">=</span><span class=\"n\">context</span><span class=\"o\">.</span><span class=\"n\">op_config</span><span class=\"p\">[</span><span class=\"s1\">&#39;haw&#39;</span><span class=\"p\">][</span><span class=\"s1\">&#39;whom&#39;</span><span class=\"p\">])</span>\n    <span class=\"k\">if</span> <span class=\"s1\">&#39;cn&#39;</span> <span class=\"ow\">in</span> <span class=\"n\">context</span><span class=\"o\">.</span><span class=\"n\">op_config</span><span class=\"p\">:</span>\n        <span class=\"k\">return</span> <span class=\"s1\">&#39;\u4f60\u597d\uff0c</span><span class=\"si\">{whom}</span><span class=\"s1\">!&#39;</span><span class=\"o\">.</span><span class=\"n\">format</span><span class=\"p\">(</span><span class=\"n\">whom</span><span class=\"o\">=</span><span class=\"n\">context</span><span class=\"o\">.</span><span class=\"n\">op_config</span><span class=\"p\">[</span><span class=\"s1\">&#39;cn&#39;</span><span class=\"p\">][</span><span class=\"s1\">&#39;whom&#39;</span><span class=\"p\">])</span>\n    <span class=\"k\">if</span> <span class=\"s1\">&#39;en&#39;</span> <span class=\"ow\">in</span> <span class=\"n\">context</span><span class=\"o\">.</span><span class=\"n\">op_config</span><span class=\"p\">:</span>\n        <span class=\"k\">return</span> <span class=\"s1\">&#39;Hello, </span><span class=\"si\">{whom}</span><span class=\"s1\">!&#39;</span><span class=\"o\">.</span><span class=\"n\">format</span><span class=\"p\">(</span><span class=\"n\">whom</span><span class=\"o\">=</span><span class=\"n\">context</span><span class=\"o\">.</span><span class=\"n\">op_config</span><span class=\"p\">[</span><span class=\"s1\">&#39;en&#39;</span><span class=\"p\">][</span><span class=\"s1\">&#39;whom&#39;</span><span class=\"p\">])</span>\n</pre></div>\n</div>\n</dd></dl>\n\n<dl class=\"py class\">\n<dt id=\"dagster.Permissive\">\n<em class=\"property\"><span class=\"pre\">class</span> </em><code class=\"sig-prename descclassname\"><span class=\"pre\">dagster.</span></code><code class=\"sig-name descname\"><span class=\"pre\">Permissive</span></code><span class=\"sig-paren\">(</span><em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">fields</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">None</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">description</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">None</span></span></em><span class=\"sig-paren\">)</span><a class=\"reference internal\" href=\"../../../../_modules/dagster/config/field_utils#Permissive\"><span class=\"viewcode-link\"><span class=\"pre\">[source]</span></span></a><a class=\"headerlink\" href=\"#dagster.Permissive\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Defines a config dict with a partially specified schema.</p>\n<p>A permissive dict allows partial specification of the config schema. Any fields with a\nspecified schema will be type checked. Other fields will be allowed, but will be ignored by\nthe type checker.</p>\n<dl class=\"field-list simple\">\n<dt class=\"field-odd\">Parameters</dt>\n<dd class=\"field-odd\"><p><strong>fields</strong> (<em>Dict</em><em>[</em><a class=\"reference external\" href=\"https://docs.python.org/3/library/stdtypes.html#str\" title=\"(in Python v3.8)\"><em>str</em></a><em>, </em><a class=\"reference internal\" href=\"#dagster.Field\" title=\"dagster.Field\"><em>Field</em></a><em>]</em>) \u2013 The partial specification of the config dict.</p>\n</dd>\n</dl>\n<p><strong>Examples:</strong></p>\n<div class=\"highlight-python notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"nd\">@op</span><span class=\"p\">(</span><span class=\"n\">config_schema</span><span class=\"o\">=</span><span class=\"n\">Field</span><span class=\"p\">(</span><span class=\"n\">Permissive</span><span class=\"p\">({</span><span class=\"s1\">&#39;required&#39;</span><span class=\"p\">:</span> <span class=\"n\">Field</span><span class=\"p\">(</span><span class=\"n\">String</span><span class=\"p\">)})))</span>\n<span class=\"k\">def</span> <span class=\"nf\">map_config_op</span><span class=\"p\">(</span><span class=\"n\">context</span><span class=\"p\">)</span> <span class=\"o\">-&gt;</span> <span class=\"n\">List</span><span class=\"p\">:</span>\n    <span class=\"k\">return</span> <span class=\"nb\">sorted</span><span class=\"p\">(</span><span class=\"nb\">list</span><span class=\"p\">(</span><span class=\"n\">context</span><span class=\"o\">.</span><span class=\"n\">op_config</span><span class=\"o\">.</span><span class=\"n\">items</span><span class=\"p\">()))</span>\n</pre></div>\n</div>\n</dd></dl>\n\n<dl class=\"py class\">\n<dt id=\"dagster.Shape\">\n<em class=\"property\"><span class=\"pre\">class</span> </em><code class=\"sig-prename descclassname\"><span class=\"pre\">dagster.</span></code><code class=\"sig-name descname\"><span class=\"pre\">Shape</span></code><span class=\"sig-paren\">(</span><em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">fields</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">description</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">None</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">field_aliases</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">None</span></span></em><span class=\"sig-paren\">)</span><a class=\"reference internal\" href=\"../../../../_modules/dagster/config/field_utils#Shape\"><span class=\"viewcode-link\"><span class=\"pre\">[source]</span></span></a><a class=\"headerlink\" href=\"#dagster.Shape\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Schema for configuration data with string keys and typed values via <a class=\"reference internal\" href=\"#dagster.Field\" title=\"dagster.Field\"><code class=\"xref py py-class docutils literal notranslate\"><span class=\"pre\">Field</span></code></a>.</p>\n<p>Unlike <a class=\"reference internal\" href=\"#dagster.Permissive\" title=\"dagster.Permissive\"><code class=\"xref py py-class docutils literal notranslate\"><span class=\"pre\">Permissive</span></code></a>, unspecified fields are not allowed and will throw a\n<a class=\"reference internal\" href=\"errors#dagster.DagsterInvalidConfigError\" title=\"dagster.DagsterInvalidConfigError\"><code class=\"xref py py-class docutils literal notranslate\"><span class=\"pre\">DagsterInvalidConfigError</span></code></a>.</p>\n<dl class=\"field-list simple\">\n<dt class=\"field-odd\">Parameters</dt>\n<dd class=\"field-odd\"><ul class=\"simple\">\n<li><p><strong>fields</strong> (<em>Dict</em><em>[</em><a class=\"reference external\" href=\"https://docs.python.org/3/library/stdtypes.html#str\" title=\"(in Python v3.8)\"><em>str</em></a><em>, </em><a class=\"reference internal\" href=\"#dagster.Field\" title=\"dagster.Field\"><em>Field</em></a><em>]</em>) \u2013 The specification of the config dict.</p></li>\n<li><p><strong>field_aliases</strong> (<em>Dict</em><em>[</em><a class=\"reference external\" href=\"https://docs.python.org/3/library/stdtypes.html#str\" title=\"(in Python v3.8)\"><em>str</em></a><em>, </em><a class=\"reference external\" href=\"https://docs.python.org/3/library/stdtypes.html#str\" title=\"(in Python v3.8)\"><em>str</em></a><em>]</em>) \u2013 Maps a string key to an alias that can be used instead of the original key. For example,\nan entry {\u201csolids\u201d: \u201cops\u201d} means that someone could use \u201cops\u201d instead of \u201csolids\u201d as a\ntop level string key.</p></li>\n</ul>\n</dd>\n</dl>\n</dd></dl>\n\n<dl class=\"py class\">\n<dt id=\"dagster.Map\">\n<em class=\"property\"><span class=\"pre\">class</span> </em><code class=\"sig-prename descclassname\"><span class=\"pre\">dagster.</span></code><code class=\"sig-name descname\"><span class=\"pre\">Map</span></code><span class=\"sig-paren\">(</span><em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">key_type</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">inner_type</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">key_label_name</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">None</span></span></em><span class=\"sig-paren\">)</span><a class=\"reference internal\" href=\"../../../../_modules/dagster/config/field_utils#Map\"><span class=\"viewcode-link\"><span class=\"pre\">[source]</span></span></a><a class=\"headerlink\" href=\"#dagster.Map\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Defines a config dict with arbitrary scalar keys and typed values.</p>\n<p>A map can contrain arbitrary keys of the specified scalar type, each of which has\ntype checked values. Unlike <a class=\"reference internal\" href=\"#dagster.Shape\" title=\"dagster.Shape\"><code class=\"xref py py-class docutils literal notranslate\"><span class=\"pre\">Shape</span></code></a> and <a class=\"reference internal\" href=\"#dagster.Permissive\" title=\"dagster.Permissive\"><code class=\"xref py py-class docutils literal notranslate\"><span class=\"pre\">Permissive</span></code></a>, scalar\nkeys other than strings can be used, and unlike <a class=\"reference internal\" href=\"#dagster.Permissive\" title=\"dagster.Permissive\"><code class=\"xref py py-class docutils literal notranslate\"><span class=\"pre\">Permissive</span></code></a>, all\nvalues are type checked.\n:param key_type: The type of keys this map can contain. Must be a scalar type.\n:type key_type: type\n:param inner_type: The type of the values that this map type can contain.\n:type inner_type: type\n:param key_label_name: Optional name which describes the role of keys in the map.\n:type key_label_name: string</p>\n<p><strong>Examples:</strong></p>\n<div class=\"highlight-python notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"nd\">@op</span><span class=\"p\">(</span><span class=\"n\">config_schema</span><span class=\"o\">=</span><span class=\"n\">Field</span><span class=\"p\">(</span><span class=\"n\">Map</span><span class=\"p\">({</span><span class=\"nb\">str</span><span class=\"p\">:</span> <span class=\"nb\">int</span><span class=\"p\">})))</span>\n<span class=\"k\">def</span> <span class=\"nf\">partially_specified_config</span><span class=\"p\">(</span><span class=\"n\">context</span><span class=\"p\">)</span> <span class=\"o\">-&gt;</span> <span class=\"n\">List</span><span class=\"p\">:</span>\n    <span class=\"k\">return</span> <span class=\"nb\">sorted</span><span class=\"p\">(</span><span class=\"nb\">list</span><span class=\"p\">(</span><span class=\"n\">context</span><span class=\"o\">.</span><span class=\"n\">op_config</span><span class=\"o\">.</span><span class=\"n\">items</span><span class=\"p\">()))</span>\n</pre></div>\n</div>\n</dd></dl>\n\n<dl class=\"py class\">\n<dt id=\"dagster.Array\">\n<em class=\"property\"><span class=\"pre\">class</span> </em><code class=\"sig-prename descclassname\"><span class=\"pre\">dagster.</span></code><code class=\"sig-name descname\"><span class=\"pre\">Array</span></code><span class=\"sig-paren\">(</span><em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">inner_type</span></span></em><span class=\"sig-paren\">)</span><a class=\"reference internal\" href=\"../../../../_modules/dagster/config/config_type#Array\"><span class=\"viewcode-link\"><span class=\"pre\">[source]</span></span></a><a class=\"headerlink\" href=\"#dagster.Array\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Defines an array (list) configuration type that contains values of type <code class=\"docutils literal notranslate\"><span class=\"pre\">inner_type</span></code>.</p>\n<dl class=\"field-list simple\">\n<dt class=\"field-odd\">Parameters</dt>\n<dd class=\"field-odd\"><p><strong>inner_type</strong> (<a class=\"reference external\" href=\"https://docs.python.org/3/library/functions.html#type\" title=\"(in Python v3.8)\"><em>type</em></a>) \u2013 The type of the values that this configuration type can contain.</p>\n</dd>\n</dl>\n</dd></dl>\n\n<dl class=\"py class\">\n<dt id=\"dagster.Noneable\">\n<em class=\"property\"><span class=\"pre\">class</span> </em><code class=\"sig-prename descclassname\"><span class=\"pre\">dagster.</span></code><code class=\"sig-name descname\"><span class=\"pre\">Noneable</span></code><span class=\"sig-paren\">(</span><em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">inner_type</span></span></em><span class=\"sig-paren\">)</span><a class=\"reference internal\" href=\"../../../../_modules/dagster/config/config_type#Noneable\"><span class=\"viewcode-link\"><span class=\"pre\">[source]</span></span></a><a class=\"headerlink\" href=\"#dagster.Noneable\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Defines a configuration type that is the union of <code class=\"docutils literal notranslate\"><span class=\"pre\">NoneType</span></code> and the type <code class=\"docutils literal notranslate\"><span class=\"pre\">inner_type</span></code>.</p>\n<dl class=\"field-list simple\">\n<dt class=\"field-odd\">Parameters</dt>\n<dd class=\"field-odd\"><p><strong>inner_type</strong> (<a class=\"reference external\" href=\"https://docs.python.org/3/library/functions.html#type\" title=\"(in Python v3.8)\"><em>type</em></a>) \u2013 The type of the values that this configuration type can contain.</p>\n</dd>\n</dl>\n<p><strong>Examples:</strong></p>\n<div class=\"highlight-python notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"n\">config_schema</span><span class=\"o\">=</span><span class=\"p\">{</span><span class=\"s2\">&quot;name&quot;</span><span class=\"p\">:</span> <span class=\"n\">Noneable</span><span class=\"p\">(</span><span class=\"nb\">str</span><span class=\"p\">)}</span>\n\n<span class=\"n\">config</span><span class=\"o\">=</span><span class=\"p\">{</span><span class=\"s2\">&quot;name&quot;</span><span class=\"p\">:</span> <span class=\"s2\">&quot;Hello&quot;</span><span class=\"p\">}</span>  <span class=\"c1\"># Ok</span>\n<span class=\"n\">config</span><span class=\"o\">=</span><span class=\"p\">{</span><span class=\"s2\">&quot;name&quot;</span><span class=\"p\">:</span> <span class=\"kc\">None</span><span class=\"p\">}</span>     <span class=\"c1\"># Ok</span>\n<span class=\"n\">config</span><span class=\"o\">=</span><span class=\"p\">{}</span>                 <span class=\"c1\"># Error</span>\n</pre></div>\n</div>\n</dd></dl>\n\n<dl class=\"py class\">\n<dt id=\"dagster.Enum\">\n<em class=\"property\"><span class=\"pre\">class</span> </em><code class=\"sig-prename descclassname\"><span class=\"pre\">dagster.</span></code><code class=\"sig-name descname\"><span class=\"pre\">Enum</span></code><span class=\"sig-paren\">(</span><em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">name</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">enum_values</span></span></em><span class=\"sig-paren\">)</span><a class=\"reference internal\" href=\"../../../../_modules/dagster/config/config_type#Enum\"><span class=\"viewcode-link\"><span class=\"pre\">[source]</span></span></a><a class=\"headerlink\" href=\"#dagster.Enum\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Defines a enum configuration type that allows one of a defined set of possible values.</p>\n<dl class=\"field-list simple\">\n<dt class=\"field-odd\">Parameters</dt>\n<dd class=\"field-odd\"><ul class=\"simple\">\n<li><p><strong>name</strong> (<a class=\"reference external\" href=\"https://docs.python.org/3/library/stdtypes.html#str\" title=\"(in Python v3.8)\"><em>str</em></a>) \u2013 The name of the enum configuration type.</p></li>\n<li><p><strong>enum_values</strong> (<em>List</em><em>[</em><a class=\"reference internal\" href=\"#dagster.EnumValue\" title=\"dagster.EnumValue\"><em>EnumValue</em></a><em>]</em>) \u2013 The set of possible values for the enum configuration type.</p></li>\n</ul>\n</dd>\n</dl>\n<p><strong>Examples:</strong></p>\n<div class=\"highlight-python notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"nd\">@op</span><span class=\"p\">(</span>\n    <span class=\"n\">config_schema</span><span class=\"o\">=</span><span class=\"n\">Field</span><span class=\"p\">(</span>\n        <span class=\"n\">Enum</span><span class=\"p\">(</span>\n            <span class=\"s1\">&#39;CowboyType&#39;</span><span class=\"p\">,</span>\n            <span class=\"p\">[</span>\n                <span class=\"n\">EnumValue</span><span class=\"p\">(</span><span class=\"s1\">&#39;good&#39;</span><span class=\"p\">),</span>\n                <span class=\"n\">EnumValue</span><span class=\"p\">(</span><span class=\"s1\">&#39;bad&#39;</span><span class=\"p\">),</span>\n                <span class=\"n\">EnumValue</span><span class=\"p\">(</span><span class=\"s1\">&#39;ugly&#39;</span><span class=\"p\">),</span>\n            <span class=\"p\">]</span>\n        <span class=\"p\">)</span>\n    <span class=\"p\">)</span>\n<span class=\"p\">)</span>\n<span class=\"k\">def</span> <span class=\"nf\">resolve_standoff</span><span class=\"p\">(</span><span class=\"n\">context</span><span class=\"p\">):</span>\n    <span class=\"c1\"># ...</span>\n</pre></div>\n</div>\n<dl class=\"py method\">\n<dt id=\"dagster.Enum.from_python_enum\">\n<em class=\"property\"><span class=\"pre\">classmethod</span> </em><code class=\"sig-name descname\"><span class=\"pre\">from_python_enum</span></code><span class=\"sig-paren\">(</span><em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">enum</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">name</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">None</span></span></em><span class=\"sig-paren\">)</span><a class=\"reference internal\" href=\"../../../../_modules/dagster/config/config_type#Enum.from_python_enum\"><span class=\"viewcode-link\"><span class=\"pre\">[source]</span></span></a><a class=\"headerlink\" href=\"#dagster.Enum.from_python_enum\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Create a Dagster enum corresponding to an existing Python enum.</p>\n<dl class=\"field-list simple\">\n<dt class=\"field-odd\">Parameters</dt>\n<dd class=\"field-odd\"><ul class=\"simple\">\n<li><p><strong>enum</strong> (<em>enum.EnumMeta</em>) \u2013 The class representing the enum.</p></li>\n<li><p><strong>name</strong> (<em>Optional</em><em>[</em><a class=\"reference external\" href=\"https://docs.python.org/3/library/stdtypes.html#str\" title=\"(in Python v3.8)\"><em>str</em></a><em>]</em>) \u2013 The name for the enum. If not present, <cite>enum.__name__</cite> will be used.</p></li>\n</ul>\n</dd>\n</dl>\n<p>Example:</p>\n<div class=\"highlight-python notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"k\">class</span> <span class=\"nc\">Color</span><span class=\"p\">(</span><span class=\"n\">enum</span><span class=\"o\">.</span><span class=\"n\">Enum</span><span class=\"p\">):</span>\n    <span class=\"n\">RED</span> <span class=\"o\">=</span> <span class=\"n\">enum</span><span class=\"o\">.</span><span class=\"n\">auto</span><span class=\"p\">()</span>\n    <span class=\"n\">GREEN</span> <span class=\"o\">=</span> <span class=\"n\">enum</span><span class=\"o\">.</span><span class=\"n\">auto</span><span class=\"p\">()</span>\n    <span class=\"n\">BLUE</span> <span class=\"o\">=</span> <span class=\"n\">enum</span><span class=\"o\">.</span><span class=\"n\">auto</span><span class=\"p\">()</span>\n\n<span class=\"nd\">@op</span><span class=\"p\">(</span>\n    <span class=\"n\">config_schema</span><span class=\"o\">=</span><span class=\"p\">{</span><span class=\"s2\">&quot;color&quot;</span><span class=\"p\">:</span> <span class=\"n\">Field</span><span class=\"p\">(</span><span class=\"n\">Enum</span><span class=\"o\">.</span><span class=\"n\">from_python_enum</span><span class=\"p\">(</span><span class=\"n\">Color</span><span class=\"p\">))}</span>\n<span class=\"p\">)</span>\n<span class=\"k\">def</span> <span class=\"nf\">select_color</span><span class=\"p\">(</span><span class=\"n\">context</span><span class=\"p\">):</span>\n    <span class=\"c1\"># ...</span>\n</pre></div>\n</div>\n</dd></dl>\n\n</dd></dl>\n\n<dl class=\"py class\">\n<dt id=\"dagster.EnumValue\">\n<em class=\"property\"><span class=\"pre\">class</span> </em><code class=\"sig-prename descclassname\"><span class=\"pre\">dagster.</span></code><code class=\"sig-name descname\"><span class=\"pre\">EnumValue</span></code><span class=\"sig-paren\">(</span><em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">config_value</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">python_value</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">None</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">description</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">None</span></span></em><span class=\"sig-paren\">)</span><a class=\"reference internal\" href=\"../../../../_modules/dagster/config/config_type#EnumValue\"><span class=\"viewcode-link\"><span class=\"pre\">[source]</span></span></a><a class=\"headerlink\" href=\"#dagster.EnumValue\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Define an entry in a <a class=\"reference internal\" href=\"#dagster.Enum\" title=\"dagster.Enum\"><code class=\"xref py py-class docutils literal notranslate\"><span class=\"pre\">Enum</span></code></a>.</p>\n<dl class=\"field-list simple\">\n<dt class=\"field-odd\">Parameters</dt>\n<dd class=\"field-odd\"><ul class=\"simple\">\n<li><p><strong>config_value</strong> (<a class=\"reference external\" href=\"https://docs.python.org/3/library/stdtypes.html#str\" title=\"(in Python v3.8)\"><em>str</em></a>) \u2013 The string representation of the config to accept when passed.</p></li>\n<li><p><strong>python_value</strong> (<em>Optional</em><em>[</em><em>Any</em><em>]</em>) \u2013 The python value to convert the enum entry in to. Defaults to the <code class=\"docutils literal notranslate\"><span class=\"pre\">config_value</span></code>.</p></li>\n<li><p><strong>description</strong> (<em>Optional</em><em>[</em><a class=\"reference external\" href=\"https://docs.python.org/3/library/stdtypes.html#str\" title=\"(in Python v3.8)\"><em>str</em></a><em>]</em>) \u2013 A human-readable description of the enum entry.</p></li>\n</ul>\n</dd>\n</dl>\n</dd></dl>\n\n<dl class=\"py class\">\n<dt id=\"dagster.ScalarUnion\">\n<em class=\"property\"><span class=\"pre\">class</span> </em><code class=\"sig-prename descclassname\"><span class=\"pre\">dagster.</span></code><code class=\"sig-name descname\"><span class=\"pre\">ScalarUnion</span></code><span class=\"sig-paren\">(</span><em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">scalar_type</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">non_scalar_schema</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">_key</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">None</span></span></em><span class=\"sig-paren\">)</span><a class=\"reference internal\" href=\"../../../../_modules/dagster/config/config_type#ScalarUnion\"><span class=\"viewcode-link\"><span class=\"pre\">[source]</span></span></a><a class=\"headerlink\" href=\"#dagster.ScalarUnion\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Defines a configuration type that accepts a scalar value OR a non-scalar value like a\n<code class=\"xref py py-class docutils literal notranslate\"><span class=\"pre\">List</span></code>, <code class=\"xref py py-class docutils literal notranslate\"><span class=\"pre\">Dict</span></code>, or <a class=\"reference internal\" href=\"#dagster.Selector\" title=\"dagster.Selector\"><code class=\"xref py py-class docutils literal notranslate\"><span class=\"pre\">Selector</span></code></a>.</p>\n<p>This allows runtime scalars to be configured without a dictionary with the key <code class=\"docutils literal notranslate\"><span class=\"pre\">value</span></code> and\ninstead just use the scalar value directly. However this still leaves the option to\nload scalars from a json or pickle file.</p>\n<dl class=\"field-list simple\">\n<dt class=\"field-odd\">Parameters</dt>\n<dd class=\"field-odd\"><ul class=\"simple\">\n<li><p><strong>scalar_type</strong> (<a class=\"reference external\" href=\"https://docs.python.org/3/library/functions.html#type\" title=\"(in Python v3.8)\"><em>type</em></a>) \u2013 The scalar type of values that this configuration type can hold. For example,\n<a class=\"reference external\" href=\"https://docs.python.org/3/library/functions.html#int\" title=\"(in Python v3.8)\"><code class=\"docutils literal notranslate\"><span class=\"pre\">int</span></code></a>, <a class=\"reference external\" href=\"https://docs.python.org/3/library/functions.html#float\" title=\"(in Python v3.8)\"><code class=\"docutils literal notranslate\"><span class=\"pre\">float</span></code></a>, <a class=\"reference external\" href=\"https://docs.python.org/3/library/functions.html#bool\" title=\"(in Python v3.8)\"><code class=\"docutils literal notranslate\"><span class=\"pre\">bool</span></code></a>,\nor <a class=\"reference external\" href=\"https://docs.python.org/3/library/stdtypes.html#str\" title=\"(in Python v3.8)\"><code class=\"docutils literal notranslate\"><span class=\"pre\">str</span></code></a>.</p></li>\n<li><p><strong>non_scalar_schema</strong> (<a class=\"reference internal\" href=\"#dagster.ConfigSchema\" title=\"dagster.ConfigSchema\"><em>ConfigSchema</em></a>) \u2013 The schema of a non-scalar Dagster configuration type. For example, <code class=\"xref py py-class docutils literal notranslate\"><span class=\"pre\">List</span></code>,\n<code class=\"xref py py-class docutils literal notranslate\"><span class=\"pre\">Dict</span></code>, or <a class=\"reference internal\" href=\"#dagster.Selector\" title=\"dagster.Selector\"><code class=\"xref py py-class docutils literal notranslate\"><span class=\"pre\">Selector</span></code></a>.</p></li>\n<li><p><strong>key</strong> (<em>Optional</em><em>[</em><a class=\"reference external\" href=\"https://docs.python.org/3/library/stdtypes.html#str\" title=\"(in Python v3.8)\"><em>str</em></a><em>]</em>) \u2013 The configuation type\u2019s unique key. If not set, then the key will be set to\n<code class=\"docutils literal notranslate\"><span class=\"pre\">ScalarUnion.{scalar_type}-{non_scalar_schema}</span></code>.</p></li>\n</ul>\n</dd>\n</dl>\n<p><strong>Examples:</strong></p>\n<div class=\"highlight-yaml notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"nt\">graph</span><span class=\"p\">:</span><span class=\"w\"></span>\n<span class=\"w\">  </span><span class=\"nt\">transform_word</span><span class=\"p\">:</span><span class=\"w\"></span>\n<span class=\"w\">    </span><span class=\"nt\">inputs</span><span class=\"p\">:</span><span class=\"w\"></span>\n<span class=\"w\">      </span><span class=\"nt\">word</span><span class=\"p\">:</span><span class=\"w\"></span>\n<span class=\"w\">        </span><span class=\"nt\">value</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"l l-Scalar l-Scalar-Plain\">foobar</span><span class=\"w\"></span>\n</pre></div>\n</div>\n<p>becomes, optionally,</p>\n<div class=\"highlight-yaml notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"nt\">graph</span><span class=\"p\">:</span><span class=\"w\"></span>\n<span class=\"w\">  </span><span class=\"nt\">transform_word</span><span class=\"p\">:</span><span class=\"w\"></span>\n<span class=\"w\">    </span><span class=\"nt\">inputs</span><span class=\"p\">:</span><span class=\"w\"></span>\n<span class=\"w\">      </span><span class=\"nt\">word</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"l l-Scalar l-Scalar-Plain\">foobar</span><span class=\"w\"></span>\n</pre></div>\n</div>\n</dd></dl>\n\n<dl class=\"py attribute\">\n<dt id=\"dagster.StringSource\">\n<code class=\"sig-prename descclassname\"><span class=\"pre\">dagster.</span></code><code class=\"sig-name descname\"><span class=\"pre\">StringSource</span></code><a class=\"headerlink\" href=\"#dagster.StringSource\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Use this type when you want to read a string config value from an environment variable. The value\npassed to a config field of this type may either be a string literal, or a selector describing\nhow to look up the value from the executing process\u2019s environment variables.</p>\n<p><strong>Examples:</strong></p>\n<div class=\"highlight-python notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"kn\">from</span> <span class=\"nn\">dagster</span> <span class=\"kn\">import</span> <span class=\"n\">job</span><span class=\"p\">,</span> <span class=\"n\">op</span><span class=\"p\">,</span> <span class=\"n\">StringSource</span>\n\n<span class=\"nd\">@op</span><span class=\"p\">(</span><span class=\"n\">config_schema</span><span class=\"o\">=</span><span class=\"n\">StringSource</span><span class=\"p\">)</span>\n<span class=\"k\">def</span> <span class=\"nf\">secret_op</span><span class=\"p\">(</span><span class=\"n\">context</span><span class=\"p\">)</span> <span class=\"o\">-&gt;</span> <span class=\"nb\">str</span><span class=\"p\">:</span>\n    <span class=\"k\">return</span> <span class=\"n\">context</span><span class=\"o\">.</span><span class=\"n\">op_config</span>\n\n<span class=\"nd\">@job</span>\n<span class=\"k\">def</span> <span class=\"nf\">secret_job</span><span class=\"p\">():</span>\n    <span class=\"n\">secret_op</span><span class=\"p\">()</span>\n\n<span class=\"n\">secret_job</span><span class=\"o\">.</span><span class=\"n\">execute_in_process</span><span class=\"p\">(</span>\n    <span class=\"n\">run_config</span><span class=\"o\">=</span><span class=\"p\">{</span>\n        <span class=\"s1\">&#39;ops&#39;</span><span class=\"p\">:</span> <span class=\"p\">{</span><span class=\"s1\">&#39;secret_op&#39;</span><span class=\"p\">:</span> <span class=\"p\">{</span><span class=\"s1\">&#39;config&#39;</span><span class=\"p\">:</span> <span class=\"s1\">&#39;test_value&#39;</span><span class=\"p\">}}</span>\n    <span class=\"p\">}</span>\n<span class=\"p\">)</span>\n\n<span class=\"n\">secret_job</span><span class=\"o\">.</span><span class=\"n\">execute_in_process</span><span class=\"p\">(</span>\n    <span class=\"n\">run_config</span><span class=\"o\">=</span><span class=\"p\">{</span>\n        <span class=\"s1\">&#39;ops&#39;</span><span class=\"p\">:</span> <span class=\"p\">{</span><span class=\"s1\">&#39;secret_op&#39;</span><span class=\"p\">:</span> <span class=\"p\">{</span><span class=\"s1\">&#39;config&#39;</span><span class=\"p\">:</span> <span class=\"p\">{</span><span class=\"s1\">&#39;env&#39;</span><span class=\"p\">:</span> <span class=\"s1\">&#39;VERY_SECRET_ENV_VARIABLE&#39;</span><span class=\"p\">}}}</span>\n    <span class=\"p\">}</span>\n<span class=\"p\">)</span>\n</pre></div>\n</div>\n</dd></dl>\n\n<dl class=\"py attribute\">\n<dt id=\"dagster.IntSource\">\n<code class=\"sig-prename descclassname\"><span class=\"pre\">dagster.</span></code><code class=\"sig-name descname\"><span class=\"pre\">IntSource</span></code><a class=\"headerlink\" href=\"#dagster.IntSource\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Use this type when you want to read an integer config value from an environment variable. The\nvalue passed to a config field of this type may either be a integer literal, or a selector\ndescribing how to look up the value from the executing process\u2019s environment variables.</p>\n<p><strong>Examples:</strong></p>\n<div class=\"highlight-python notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"kn\">from</span> <span class=\"nn\">dagster</span> <span class=\"kn\">import</span> <span class=\"n\">job</span><span class=\"p\">,</span> <span class=\"n\">op</span><span class=\"p\">,</span> <span class=\"n\">IntSource</span>\n\n<span class=\"nd\">@op</span><span class=\"p\">(</span><span class=\"n\">config_schema</span><span class=\"o\">=</span><span class=\"n\">IntSource</span><span class=\"p\">)</span>\n<span class=\"k\">def</span> <span class=\"nf\">secret_int_op</span><span class=\"p\">(</span><span class=\"n\">context</span><span class=\"p\">)</span> <span class=\"o\">-&gt;</span> <span class=\"nb\">int</span><span class=\"p\">:</span>\n    <span class=\"k\">return</span> <span class=\"n\">context</span><span class=\"o\">.</span><span class=\"n\">op_config</span>\n\n<span class=\"nd\">@job</span>\n<span class=\"k\">def</span> <span class=\"nf\">secret_job</span><span class=\"p\">():</span>\n    <span class=\"n\">secret_int_op</span><span class=\"p\">()</span>\n\n<span class=\"n\">secret_job</span><span class=\"o\">.</span><span class=\"n\">execute_in_process</span><span class=\"p\">(</span>\n    <span class=\"n\">run_config</span><span class=\"o\">=</span><span class=\"p\">{</span>\n        <span class=\"s1\">&#39;ops&#39;</span><span class=\"p\">:</span> <span class=\"p\">{</span><span class=\"s1\">&#39;secret_int_op&#39;</span><span class=\"p\">:</span> <span class=\"p\">{</span><span class=\"s1\">&#39;config&#39;</span><span class=\"p\">:</span> <span class=\"mi\">1234</span><span class=\"p\">}}</span>\n    <span class=\"p\">}</span>\n<span class=\"p\">)</span>\n\n<span class=\"n\">secret_job</span><span class=\"o\">.</span><span class=\"n\">execute_in_process</span><span class=\"p\">(</span>\n    <span class=\"n\">run_config</span><span class=\"o\">=</span><span class=\"p\">{</span>\n        <span class=\"s1\">&#39;ops&#39;</span><span class=\"p\">:</span> <span class=\"p\">{</span><span class=\"s1\">&#39;secret_int_op&#39;</span><span class=\"p\">:</span> <span class=\"p\">{</span><span class=\"s1\">&#39;config&#39;</span><span class=\"p\">:</span> <span class=\"p\">{</span><span class=\"s1\">&#39;env&#39;</span><span class=\"p\">:</span> <span class=\"s1\">&#39;VERY_SECRET_ENV_VARIABLE_INT&#39;</span><span class=\"p\">}}}</span>\n    <span class=\"p\">}</span>\n<span class=\"p\">)</span>\n</pre></div>\n</div>\n</dd></dl>\n\n<dl class=\"py attribute\">\n<dt id=\"dagster.BoolSource\">\n<code class=\"sig-prename descclassname\"><span class=\"pre\">dagster.</span></code><code class=\"sig-name descname\"><span class=\"pre\">BoolSource</span></code><a class=\"headerlink\" href=\"#dagster.BoolSource\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Use this type when you want to read an boolean config value from an environment variable. The\nvalue passed to a config field of this type may either be a boolean literal, or a selector\ndescribing how to look up the value from the executing process\u2019s environment variables. Set the\nvalue of the corresponding environment variable to <code class=\"docutils literal notranslate\"><span class=\"pre\">&quot;&quot;</span></code> to indicate <code class=\"docutils literal notranslate\"><span class=\"pre\">False</span></code>.</p>\n<p><strong>Examples:</strong></p>\n<div class=\"highlight-python notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"kn\">from</span> <span class=\"nn\">dagster</span> <span class=\"kn\">import</span> <span class=\"n\">job</span><span class=\"p\">,</span> <span class=\"n\">op</span><span class=\"p\">,</span> <span class=\"n\">BoolSource</span>\n\n<span class=\"nd\">@op</span><span class=\"p\">(</span><span class=\"n\">config_schema</span><span class=\"o\">=</span><span class=\"n\">BoolSource</span><span class=\"p\">)</span>\n<span class=\"k\">def</span> <span class=\"nf\">secret_bool_op</span><span class=\"p\">(</span><span class=\"n\">context</span><span class=\"p\">)</span> <span class=\"o\">-&gt;</span> <span class=\"nb\">bool</span><span class=\"p\">:</span>\n    <span class=\"k\">return</span> <span class=\"n\">context</span><span class=\"o\">.</span><span class=\"n\">op_config</span>\n\n<span class=\"nd\">@job</span>\n<span class=\"k\">def</span> <span class=\"nf\">secret_job</span><span class=\"p\">():</span>\n    <span class=\"n\">secret_bool_op</span><span class=\"p\">()</span>\n\n<span class=\"n\">secret_job</span><span class=\"o\">.</span><span class=\"n\">execute_in_process</span><span class=\"p\">(</span>\n    <span class=\"n\">run_config</span><span class=\"o\">=</span><span class=\"p\">{</span>\n        <span class=\"s1\">&#39;ops&#39;</span><span class=\"p\">:</span> <span class=\"p\">{</span><span class=\"s1\">&#39;secret_bool_op&#39;</span><span class=\"p\">:</span> <span class=\"p\">{</span><span class=\"s1\">&#39;config&#39;</span><span class=\"p\">:</span> <span class=\"kc\">False</span><span class=\"p\">}}</span>\n    <span class=\"p\">}</span>\n<span class=\"p\">)</span>\n\n<span class=\"n\">secret_job</span><span class=\"o\">.</span><span class=\"n\">execute_in_process</span><span class=\"p\">(</span>\n    <span class=\"n\">run_config</span><span class=\"o\">=</span><span class=\"p\">{</span>\n        <span class=\"s1\">&#39;ops&#39;</span><span class=\"p\">:</span> <span class=\"p\">{</span><span class=\"s1\">&#39;secret_bool_op&#39;</span><span class=\"p\">:</span> <span class=\"p\">{</span><span class=\"s1\">&#39;config&#39;</span><span class=\"p\">:</span> <span class=\"p\">{</span><span class=\"s1\">&#39;env&#39;</span><span class=\"p\">:</span> <span class=\"s1\">&#39;VERY_SECRET_ENV_VARIABLE_BOOL&#39;</span><span class=\"p\">}}}</span>\n    <span class=\"p\">}</span>\n<span class=\"p\">)</span>\n</pre></div>\n</div>\n</dd></dl>\n\n</div>\n<div class=\"section\" id=\"config-utilities\">\n<h2>Config Utilities<a class=\"headerlink\" href=\"#config-utilities\" title=\"Permalink to this headline\">\u00b6</a></h2>\n<dl class=\"py class\">\n<dt id=\"dagster.ConfigMapping\">\n<em class=\"property\"><span class=\"pre\">class</span> </em><code class=\"sig-prename descclassname\"><span class=\"pre\">dagster.</span></code><code class=\"sig-name descname\"><span class=\"pre\">ConfigMapping</span></code><span class=\"sig-paren\">(</span><em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">config_fn</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">config_schema</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">None</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">receive_processed_config_values</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">None</span></span></em><span class=\"sig-paren\">)</span><a class=\"reference internal\" href=\"../../../../_modules/dagster/core/definitions/config#ConfigMapping\"><span class=\"viewcode-link\"><span class=\"pre\">[source]</span></span></a><a class=\"headerlink\" href=\"#dagster.ConfigMapping\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Defines a config mapping for a graph (or job).</p>\n<p>By specifying a config mapping function, you can override the configuration for the child\nops and graphs contained within a graph.</p>\n<p>Config mappings require the configuration schema to be specified as <code class=\"docutils literal notranslate\"><span class=\"pre\">config_schema</span></code>, which will\nbe exposed as the configuration schema for the graph, as well as a configuration mapping\nfunction, <code class=\"docutils literal notranslate\"><span class=\"pre\">config_fn</span></code>, which maps the config provided to the composite solid to the config\nthat will be provided to the child nodes.</p>\n<dl class=\"field-list simple\">\n<dt class=\"field-odd\">Parameters</dt>\n<dd class=\"field-odd\"><ul class=\"simple\">\n<li><p><strong>config_fn</strong> (<em>Callable</em><em>[</em><em>[</em><a class=\"reference external\" href=\"https://docs.python.org/3/library/stdtypes.html#dict\" title=\"(in Python v3.8)\"><em>dict</em></a><em>]</em><em>, </em><a class=\"reference external\" href=\"https://docs.python.org/3/library/stdtypes.html#dict\" title=\"(in Python v3.8)\"><em>dict</em></a><em>]</em>) \u2013 The function that will be called\nto map the graph config to a config appropriate for the child nodes.</p></li>\n<li><p><strong>config_schema</strong> (<a class=\"reference internal\" href=\"#dagster.ConfigSchema\" title=\"dagster.ConfigSchema\"><em>ConfigSchema</em></a>) \u2013 The schema of the graph config.</p></li>\n<li><p><strong>receive_processed_config_values</strong> (<em>Optional</em><em>[</em><a class=\"reference external\" href=\"https://docs.python.org/3/library/functions.html#bool\" title=\"(in Python v3.8)\"><em>bool</em></a><em>]</em>) \u2013 If true, config values provided to the config_fn\nwill be converted to their dagster types before being passed in. For example, if this\nvalue is true, enum config passed to config_fn will be actual enums, while if false,\nthen enum config passed to config_fn will be strings.</p></li>\n</ul>\n</dd>\n</dl>\n</dd></dl>\n\n<dl class=\"py function\">\n<dt id=\"dagster.configured\">\n<code class=\"sig-prename descclassname\"><span class=\"pre\">&#64;</span></code><code class=\"sig-prename descclassname\"><span class=\"pre\">dagster.</span></code><code class=\"sig-name descname\"><span class=\"pre\">configured</span></code><span class=\"sig-paren\">(</span><em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">configurable</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">config_schema</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">None</span></span></em>, <em class=\"sig-param\"><span class=\"o\"><span class=\"pre\">**</span></span><span class=\"n\"><span class=\"pre\">kwargs</span></span></em><span class=\"sig-paren\">)</span><a class=\"reference internal\" href=\"../../../../_modules/dagster/core/definitions/configurable#configured\"><span class=\"viewcode-link\"><span class=\"pre\">[source]</span></span></a><a class=\"headerlink\" href=\"#dagster.configured\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>A decorator that makes it easy to create a function-configured version of an object.\nThe following definition types can be configured using this function:</p>\n<ul class=\"simple\">\n<li><p><a class=\"reference internal\" href=\"solids#dagster.CompositeSolidDefinition\" title=\"dagster.CompositeSolidDefinition\"><code class=\"xref py py-class docutils literal notranslate\"><span class=\"pre\">CompositeSolidDefinition</span></code></a></p></li>\n<li><p><a class=\"reference internal\" href=\"internals#dagster.ExecutorDefinition\" title=\"dagster.ExecutorDefinition\"><code class=\"xref py py-class docutils literal notranslate\"><span class=\"pre\">ExecutorDefinition</span></code></a></p></li>\n<li><p><a class=\"reference internal\" href=\"loggers#dagster.LoggerDefinition\" title=\"dagster.LoggerDefinition\"><code class=\"xref py py-class docutils literal notranslate\"><span class=\"pre\">LoggerDefinition</span></code></a></p></li>\n<li><p><a class=\"reference internal\" href=\"resources#dagster.ResourceDefinition\" title=\"dagster.ResourceDefinition\"><code class=\"xref py py-class docutils literal notranslate\"><span class=\"pre\">ResourceDefinition</span></code></a></p></li>\n<li><p><a class=\"reference internal\" href=\"solids#dagster.SolidDefinition\" title=\"dagster.SolidDefinition\"><code class=\"xref py py-class docutils literal notranslate\"><span class=\"pre\">SolidDefinition</span></code></a></p></li>\n</ul>\n<p>If the config that will be supplied to the object is constant, you may alternatively invoke this\nand call the result with a dict of config values to be curried. Examples of both strategies\nbelow.</p>\n<dl class=\"field-list simple\">\n<dt class=\"field-odd\">Parameters</dt>\n<dd class=\"field-odd\"><ul class=\"simple\">\n<li><p><strong>configurable</strong> (<em>ConfigurableDefinition</em>) \u2013 An object that can be configured.</p></li>\n<li><p><strong>config_schema</strong> (<a class=\"reference internal\" href=\"#dagster.ConfigSchema\" title=\"dagster.ConfigSchema\"><em>ConfigSchema</em></a>) \u2013 The config schema that the inputs to the decorated function\nmust satisfy.</p></li>\n<li><p><strong>**kwargs</strong> \u2013 Arbitrary keyword arguments that will be passed to the initializer of the returned\nobject.</p></li>\n</ul>\n</dd>\n<dt class=\"field-even\">Returns</dt>\n<dd class=\"field-even\"><p>(Callable[[Union[Any, Callable[[Any], Any]]], ConfigurableDefinition])</p>\n</dd>\n</dl>\n<p><strong>Examples:</strong></p>\n<div class=\"highlight-python notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"n\">dev_s3</span> <span class=\"o\">=</span> <span class=\"n\">configured</span><span class=\"p\">(</span><span class=\"n\">s3_resource</span><span class=\"p\">,</span> <span class=\"n\">name</span><span class=\"o\">=</span><span class=\"s2\">&quot;dev_s3&quot;</span><span class=\"p\">)({</span><span class=\"s1\">&#39;bucket&#39;</span><span class=\"p\">:</span> <span class=\"s1\">&#39;dev&#39;</span><span class=\"p\">})</span>\n\n<span class=\"nd\">@configured</span><span class=\"p\">(</span><span class=\"n\">s3_resource</span><span class=\"p\">)</span>\n<span class=\"k\">def</span> <span class=\"nf\">dev_s3</span><span class=\"p\">(</span><span class=\"n\">_</span><span class=\"p\">):</span>\n    <span class=\"k\">return</span> <span class=\"p\">{</span><span class=\"s1\">&#39;bucket&#39;</span><span class=\"p\">:</span> <span class=\"s1\">&#39;dev&#39;</span><span class=\"p\">}</span>\n\n<span class=\"nd\">@configured</span><span class=\"p\">(</span><span class=\"n\">s3_resource</span><span class=\"p\">,</span> <span class=\"p\">{</span><span class=\"s1\">&#39;bucket_prefix&#39;</span><span class=\"p\">,</span> <span class=\"nb\">str</span><span class=\"p\">})</span>\n<span class=\"k\">def</span> <span class=\"nf\">dev_s3</span><span class=\"p\">(</span><span class=\"n\">config</span><span class=\"p\">):</span>\n    <span class=\"k\">return</span> <span class=\"p\">{</span><span class=\"s1\">&#39;bucket&#39;</span><span class=\"p\">:</span> <span class=\"n\">config</span><span class=\"p\">[</span><span class=\"s1\">&#39;bucket_prefix&#39;</span><span class=\"p\">]</span> <span class=\"o\">+</span> <span class=\"s1\">&#39;dev&#39;</span><span class=\"p\">}</span>\n</pre></div>\n</div>\n</dd></dl>\n\n</div>\n</div>\n", "current_page_name": "sections/api/apidocs/config", "customsidebar": null, "display_toc": true, "meta": null, "metatags": "", "next": {"link": "../errors/", "title": "Errors"}, "page_source_suffix": ".rst", "parents": [], "prev": {"link": "../cli/", "title": "Dagster CLI"}, "rellinks": [["genindex", "General Index", "I", "index"], ["py-modindex", "Python Module Index", "", "modules"], ["sections/api/apidocs/errors", "Errors", "N", "next"], ["sections/api/apidocs/cli", "Dagster CLI", "P", "previous"]], "sidebars": ["globaltoc.html", "searchbox.html"], "sourcename": "sections/api/apidocs/config.rst.txt", "title": "Config", "toc": "<ul>\n<li><a class=\"reference internal\" href=\"#\">Config</a><ul>\n<li><a class=\"reference internal\" href=\"#config-types\">Config Types</a></li>\n<li><a class=\"reference internal\" href=\"#config-utilities\">Config Utilities</a></li>\n</ul>\n</li>\n</ul>\n"}, "dynamic": {"alabaster_version": "0.7.12", "body": "<div class=\"section\" id=\"dynamic-mapping-collect\">\n<h1>Dynamic Mapping &amp; Collect<a class=\"headerlink\" href=\"#dynamic-mapping-collect\" title=\"Permalink to this headline\">\u00b6</a></h1>\n<p>These APIs provide the means for a simple kind of <em>dynamic orchestration</em> \u2014 where the work to be orchestrated is determined not at pipeline definition time but at runtime, dependent on data that\u2019s observed as part of pipeline execution.</p>\n<dl class=\"py class\">\n<dt id=\"dagster.DynamicOut\">\n<em class=\"property\"><span class=\"pre\">class</span> </em><code class=\"sig-prename descclassname\"><span class=\"pre\">dagster.</span></code><code class=\"sig-name descname\"><span class=\"pre\">DynamicOut</span></code><span class=\"sig-paren\">(</span><em class=\"sig-param\"><span class=\"pre\">dagster_type=&lt;class</span> <span class=\"pre\">'dagster.core.definitions.utils.NoValueSentinel'&gt;</span></em>, <em class=\"sig-param\"><span class=\"pre\">description=None</span></em>, <em class=\"sig-param\"><span class=\"pre\">is_required=True</span></em>, <em class=\"sig-param\"><span class=\"pre\">io_manager_key=None</span></em>, <em class=\"sig-param\"><span class=\"pre\">metadata=None</span></em>, <em class=\"sig-param\"><span class=\"pre\">asset_key=None</span></em>, <em class=\"sig-param\"><span class=\"pre\">asset_partitions=None</span></em>, <em class=\"sig-param\"><span class=\"pre\">asset_partitions_def=None</span></em><span class=\"sig-paren\">)</span><a class=\"reference internal\" href=\"../../../../_modules/dagster/core/definitions/output#DynamicOut\"><span class=\"viewcode-link\"><span class=\"pre\">[source]</span></span></a><a class=\"headerlink\" href=\"#dagster.DynamicOut\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Variant of <a class=\"reference internal\" href=\"ops#dagster.Out\" title=\"dagster.Out\"><code class=\"xref py py-class docutils literal notranslate\"><span class=\"pre\">Out</span></code></a> for an output that will dynamically alter the graph at\nruntime.</p>\n<p>When using in a composition function such as <a class=\"reference internal\" href=\"graphs#dagster.graph\" title=\"dagster.graph\"><code class=\"xref py py-func docutils literal notranslate\"><span class=\"pre\">&#64;graph</span></code></a>,\ndynamic outputs must be used with either</p>\n<ul class=\"simple\">\n<li><p><code class=\"docutils literal notranslate\"><span class=\"pre\">map</span></code> - clone downstream ops for each separate <a class=\"reference internal\" href=\"#dagster.DynamicOut\" title=\"dagster.DynamicOut\"><code class=\"xref py py-class docutils literal notranslate\"><span class=\"pre\">DynamicOut</span></code></a></p></li>\n<li><p><code class=\"docutils literal notranslate\"><span class=\"pre\">collect</span></code> - gather across all <a class=\"reference internal\" href=\"#dagster.DynamicOut\" title=\"dagster.DynamicOut\"><code class=\"xref py py-class docutils literal notranslate\"><span class=\"pre\">DynamicOut</span></code></a> in to a list</p></li>\n</ul>\n<p>Uses the same constructor as <a class=\"reference internal\" href=\"ops#dagster.Out\" title=\"dagster.Out\"><code class=\"xref py py-class docutils literal notranslate\"><span class=\"pre\">Out</span></code></a></p>\n<blockquote>\n<div><div class=\"highlight-python notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"nd\">@op</span><span class=\"p\">(</span>\n    <span class=\"n\">config_schema</span><span class=\"o\">=</span><span class=\"p\">{</span>\n        <span class=\"s2\">&quot;path&quot;</span><span class=\"p\">:</span> <span class=\"n\">Field</span><span class=\"p\">(</span><span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"n\">default_value</span><span class=\"o\">=</span><span class=\"n\">file_relative_path</span><span class=\"p\">(</span><span class=\"vm\">__file__</span><span class=\"p\">,</span> <span class=\"s2\">&quot;sample&quot;</span><span class=\"p\">))</span>\n    <span class=\"p\">},</span>\n    <span class=\"n\">out</span><span class=\"o\">=</span><span class=\"n\">DynamicOut</span><span class=\"p\">(</span><span class=\"nb\">str</span><span class=\"p\">),</span>\n<span class=\"p\">)</span>\n<span class=\"k\">def</span> <span class=\"nf\">files_in_directory</span><span class=\"p\">(</span><span class=\"n\">context</span><span class=\"p\">):</span>\n    <span class=\"n\">path</span> <span class=\"o\">=</span> <span class=\"n\">context</span><span class=\"o\">.</span><span class=\"n\">op_config</span><span class=\"p\">[</span><span class=\"s2\">&quot;path&quot;</span><span class=\"p\">]</span>\n    <span class=\"n\">dirname</span><span class=\"p\">,</span> <span class=\"n\">_</span><span class=\"p\">,</span> <span class=\"n\">filenames</span> <span class=\"o\">=</span> <span class=\"nb\">next</span><span class=\"p\">(</span><span class=\"n\">os</span><span class=\"o\">.</span><span class=\"n\">walk</span><span class=\"p\">(</span><span class=\"n\">path</span><span class=\"p\">))</span>\n    <span class=\"k\">for</span> <span class=\"n\">file</span> <span class=\"ow\">in</span> <span class=\"n\">filenames</span><span class=\"p\">:</span>\n        <span class=\"k\">yield</span> <span class=\"n\">DynamicOutput</span><span class=\"p\">(</span><span class=\"n\">os</span><span class=\"o\">.</span><span class=\"n\">path</span><span class=\"o\">.</span><span class=\"n\">join</span><span class=\"p\">(</span><span class=\"n\">dirname</span><span class=\"p\">,</span> <span class=\"n\">file</span><span class=\"p\">),</span> <span class=\"n\">mapping_key</span><span class=\"o\">=</span><span class=\"n\">_clean</span><span class=\"p\">(</span><span class=\"n\">file</span><span class=\"p\">))</span>\n\n<span class=\"nd\">@job</span>\n<span class=\"k\">def</span> <span class=\"nf\">process_directory</span><span class=\"p\">():</span>\n    <span class=\"n\">files</span> <span class=\"o\">=</span> <span class=\"n\">files_in_directory</span><span class=\"p\">()</span>\n\n    <span class=\"c1\"># use map to invoke an op on each dynamic output</span>\n    <span class=\"n\">file_results</span> <span class=\"o\">=</span> <span class=\"n\">files</span><span class=\"o\">.</span><span class=\"n\">map</span><span class=\"p\">(</span><span class=\"n\">process_file</span><span class=\"p\">)</span>\n\n    <span class=\"c1\"># use collect to gather the results in to a list</span>\n    <span class=\"n\">summarize_directory</span><span class=\"p\">(</span><span class=\"n\">file_results</span><span class=\"o\">.</span><span class=\"n\">collect</span><span class=\"p\">())</span>\n</pre></div>\n</div>\n</div></blockquote>\n</dd></dl>\n\n<dl class=\"py class\">\n<dt id=\"dagster.DynamicOutput\">\n<em class=\"property\"><span class=\"pre\">class</span> </em><code class=\"sig-prename descclassname\"><span class=\"pre\">dagster.</span></code><code class=\"sig-name descname\"><span class=\"pre\">DynamicOutput</span></code><span class=\"sig-paren\">(</span><em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">value</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">mapping_key</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">output_name</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">'result'</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">metadata_entries</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">None</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">metadata</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">None</span></span></em><span class=\"sig-paren\">)</span><a class=\"reference internal\" href=\"../../../../_modules/dagster/core/definitions/events#DynamicOutput\"><span class=\"viewcode-link\"><span class=\"pre\">[source]</span></span></a><a class=\"headerlink\" href=\"#dagster.DynamicOutput\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Variant of <a class=\"reference internal\" href=\"ops#dagster.Output\" title=\"dagster.Output\"><code class=\"xref py py-class docutils literal notranslate\"><span class=\"pre\">Output</span></code></a> used to support\ndynamic mapping &amp; collect. Each <code class=\"docutils literal notranslate\"><span class=\"pre\">DynamicOutput</span></code> produced by an op represents\none item in a set that can be processed individually with <code class=\"docutils literal notranslate\"><span class=\"pre\">map</span></code> or gathered\nwith <code class=\"docutils literal notranslate\"><span class=\"pre\">collect</span></code>.</p>\n<p>Each <code class=\"docutils literal notranslate\"><span class=\"pre\">DynamicOutput</span></code> must have a unique <code class=\"docutils literal notranslate\"><span class=\"pre\">mapping_key</span></code> to distinguish it with it\u2019s set.</p>\n<dl class=\"field-list simple\">\n<dt class=\"field-odd\">Parameters</dt>\n<dd class=\"field-odd\"><ul class=\"simple\">\n<li><p><strong>value</strong> (<em>Any</em>) \u2013 The value returned by the compute function.</p></li>\n<li><p><strong>mapping_key</strong> (<a class=\"reference external\" href=\"https://docs.python.org/3/library/stdtypes.html#str\" title=\"(in Python v3.8)\"><em>str</em></a>) \u2013 The key that uniquely identifies this dynamic value relative to its peers.\nThis key will be used to identify the downstream ops when mapped, ie\n<code class=\"docutils literal notranslate\"><span class=\"pre\">mapped_op[example_mapping_key]</span></code></p></li>\n<li><p><strong>output_name</strong> (<em>Optional</em><em>[</em><a class=\"reference external\" href=\"https://docs.python.org/3/library/stdtypes.html#str\" title=\"(in Python v3.8)\"><em>str</em></a><em>]</em>) \u2013 Name of the corresponding <a class=\"reference internal\" href=\"#dagster.DynamicOut\" title=\"dagster.DynamicOut\"><code class=\"xref py py-class docutils literal notranslate\"><span class=\"pre\">DynamicOut</span></code></a> defined on the op.\n(default: \u201cresult\u201d)</p></li>\n<li><p><strong>metadata_entries</strong> (<em>Optional</em><em>[</em><em>Union</em><em>[</em><a class=\"reference internal\" href=\"ops#dagster.MetadataEntry\" title=\"dagster.MetadataEntry\"><em>MetadataEntry</em></a><em>, </em><em>PartitionMetadataEntry</em><em>]</em><em>]</em>) \u2013 (Experimental) A set of metadata entries to attach to events related to this output.</p></li>\n<li><p><strong>metadata</strong> (<em>Optional</em><em>[</em><em>Dict</em><em>[</em><a class=\"reference external\" href=\"https://docs.python.org/3/library/stdtypes.html#str\" title=\"(in Python v3.8)\"><em>str</em></a><em>, </em><em>Union</em><em>[</em><a class=\"reference external\" href=\"https://docs.python.org/3/library/stdtypes.html#str\" title=\"(in Python v3.8)\"><em>str</em></a><em>, </em><a class=\"reference external\" href=\"https://docs.python.org/3/library/functions.html#float\" title=\"(in Python v3.8)\"><em>float</em></a><em>, </em><a class=\"reference external\" href=\"https://docs.python.org/3/library/functions.html#int\" title=\"(in Python v3.8)\"><em>int</em></a><em>, </em><em>Dict</em><em>, </em><a class=\"reference internal\" href=\"ops#dagster.MetadataValue\" title=\"dagster.MetadataValue\"><em>MetadataValue</em></a><em>]</em><em>]</em><em>]</em>) \u2013 Arbitrary metadata about the failure.  Keys are displayed string labels, and values are\none of the following: string, float, int, JSON-serializable dict, JSON-serializable\nlist, and one of the data classes returned by a MetadataValue static method.</p></li>\n</ul>\n</dd>\n</dl>\n</dd></dl>\n\n</div>\n", "current_page_name": "sections/api/apidocs/dynamic", "customsidebar": null, "display_toc": false, "meta": null, "metatags": "", "next": {"link": "../types/", "title": "Types"}, "page_source_suffix": ".rst", "parents": [], "prev": {"link": "../solids/", "title": "[Legacy] Solids"}, "rellinks": [["genindex", "General Index", "I", "index"], ["py-modindex", "Python Module Index", "", "modules"], ["sections/api/apidocs/types", "Types", "N", "next"], ["sections/api/apidocs/solids", "[Legacy] Solids", "P", "previous"]], "sidebars": ["globaltoc.html", "searchbox.html"], "sourcename": "sections/api/apidocs/dynamic.rst.txt", "title": "Dynamic Mapping &amp; Collect", "toc": "<ul>\n<li><a class=\"reference internal\" href=\"#\">Dynamic Mapping &amp; Collect</a></li>\n</ul>\n"}, "errors": {"alabaster_version": "0.7.12", "body": "<div class=\"section\" id=\"module-dagster.core.errors\">\n<span id=\"errors\"></span><h1>Errors<a class=\"headerlink\" href=\"#module-dagster.core.errors\" title=\"Permalink to this headline\">\u00b6</a></h1>\n<p>Core Dagster error classes.</p>\n<p>All errors thrown by the Dagster framework inherit from <a class=\"reference internal\" href=\"#dagster.DagsterError\" title=\"dagster.DagsterError\"><code class=\"xref py py-class docutils literal notranslate\"><span class=\"pre\">DagsterError</span></code></a>. Users\nshould not subclass this base class for their own exceptions.</p>\n<p>There is another exception base class, <a class=\"reference internal\" href=\"#dagster.DagsterUserCodeExecutionError\" title=\"dagster.DagsterUserCodeExecutionError\"><code class=\"xref py py-class docutils literal notranslate\"><span class=\"pre\">DagsterUserCodeExecutionError</span></code></a>, which is\nused by the framework in concert with the <a class=\"reference internal\" href=\"internals#dagster.core.errors.user_code_error_boundary\" title=\"dagster.core.errors.user_code_error_boundary\"><code class=\"xref py py-func docutils literal notranslate\"><span class=\"pre\">user_code_error_boundary()</span></code></a>.</p>\n<p>Dagster uses this construct to wrap user code into which it calls. User code can perform arbitrary\ncomputations and may itself throw exceptions. The error boundary catches these user code-generated\nexceptions, and then reraises them wrapped in a subclass of\n<a class=\"reference internal\" href=\"#dagster.DagsterUserCodeExecutionError\" title=\"dagster.DagsterUserCodeExecutionError\"><code class=\"xref py py-class docutils literal notranslate\"><span class=\"pre\">DagsterUserCodeExecutionError</span></code></a>.</p>\n<p>The wrapped exceptions include additional context for the original exceptions, injected by the\nDagster runtime.</p>\n<dl class=\"py exception\">\n<dt id=\"dagster.DagsterError\">\n<em class=\"property\"><span class=\"pre\">exception</span> </em><code class=\"sig-prename descclassname\"><span class=\"pre\">dagster.</span></code><code class=\"sig-name descname\"><span class=\"pre\">DagsterError</span></code><a class=\"reference internal\" href=\"../../../../_modules/dagster/core/errors#DagsterError\"><span class=\"viewcode-link\"><span class=\"pre\">[source]</span></span></a><a class=\"headerlink\" href=\"#dagster.DagsterError\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Base class for all errors thrown by the Dagster framework.</p>\n<p>Users should not subclass this base class for their own exceptions.</p>\n</dd></dl>\n\n<dl class=\"py exception\">\n<dt id=\"dagster.DagsterConfigMappingFunctionError\">\n<em class=\"property\"><span class=\"pre\">exception</span> </em><code class=\"sig-prename descclassname\"><span class=\"pre\">dagster.</span></code><code class=\"sig-name descname\"><span class=\"pre\">DagsterConfigMappingFunctionError</span></code><span class=\"sig-paren\">(</span><em class=\"sig-param\"><span class=\"o\"><span class=\"pre\">*</span></span><span class=\"n\"><span class=\"pre\">args</span></span></em>, <em class=\"sig-param\"><span class=\"o\"><span class=\"pre\">**</span></span><span class=\"n\"><span class=\"pre\">kwargs</span></span></em><span class=\"sig-paren\">)</span><a class=\"reference internal\" href=\"../../../../_modules/dagster/core/errors#DagsterConfigMappingFunctionError\"><span class=\"viewcode-link\"><span class=\"pre\">[source]</span></span></a><a class=\"headerlink\" href=\"#dagster.DagsterConfigMappingFunctionError\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Indicates that an unexpected error occurred while executing the body of a config mapping\nfunction defined in a <a class=\"reference internal\" href=\"jobs#dagster.JobDefinition\" title=\"dagster.JobDefinition\"><code class=\"xref py py-class docutils literal notranslate\"><span class=\"pre\">JobDefinition</span></code></a> or <cite>~dagster.GraphDefinition</cite> during\nconfig parsing.</p>\n</dd></dl>\n\n<dl class=\"py exception\">\n<dt id=\"dagster.DagsterEventLogInvalidForRun\">\n<em class=\"property\"><span class=\"pre\">exception</span> </em><code class=\"sig-prename descclassname\"><span class=\"pre\">dagster.</span></code><code class=\"sig-name descname\"><span class=\"pre\">DagsterEventLogInvalidForRun</span></code><span class=\"sig-paren\">(</span><em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">run_id</span></span></em><span class=\"sig-paren\">)</span><a class=\"reference internal\" href=\"../../../../_modules/dagster/core/errors#DagsterEventLogInvalidForRun\"><span class=\"viewcode-link\"><span class=\"pre\">[source]</span></span></a><a class=\"headerlink\" href=\"#dagster.DagsterEventLogInvalidForRun\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Raised when the event logs for a historical run are malformed or invalid.</p>\n</dd></dl>\n\n<dl class=\"py exception\">\n<dt id=\"dagster.DagsterExecutionStepExecutionError\">\n<em class=\"property\"><span class=\"pre\">exception</span> </em><code class=\"sig-prename descclassname\"><span class=\"pre\">dagster.</span></code><code class=\"sig-name descname\"><span class=\"pre\">DagsterExecutionStepExecutionError</span></code><span class=\"sig-paren\">(</span><em class=\"sig-param\"><span class=\"o\"><span class=\"pre\">*</span></span><span class=\"n\"><span class=\"pre\">args</span></span></em>, <em class=\"sig-param\"><span class=\"o\"><span class=\"pre\">**</span></span><span class=\"n\"><span class=\"pre\">kwargs</span></span></em><span class=\"sig-paren\">)</span><a class=\"reference internal\" href=\"../../../../_modules/dagster/core/errors#DagsterExecutionStepExecutionError\"><span class=\"viewcode-link\"><span class=\"pre\">[source]</span></span></a><a class=\"headerlink\" href=\"#dagster.DagsterExecutionStepExecutionError\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Indicates an error occurred while executing the body of an execution step.</p>\n</dd></dl>\n\n<dl class=\"py exception\">\n<dt id=\"dagster.DagsterExecutionStepNotFoundError\">\n<em class=\"property\"><span class=\"pre\">exception</span> </em><code class=\"sig-prename descclassname\"><span class=\"pre\">dagster.</span></code><code class=\"sig-name descname\"><span class=\"pre\">DagsterExecutionStepNotFoundError</span></code><span class=\"sig-paren\">(</span><em class=\"sig-param\"><span class=\"o\"><span class=\"pre\">*</span></span><span class=\"n\"><span class=\"pre\">args</span></span></em>, <em class=\"sig-param\"><span class=\"o\"><span class=\"pre\">**</span></span><span class=\"n\"><span class=\"pre\">kwargs</span></span></em><span class=\"sig-paren\">)</span><a class=\"reference internal\" href=\"../../../../_modules/dagster/core/errors#DagsterExecutionStepNotFoundError\"><span class=\"viewcode-link\"><span class=\"pre\">[source]</span></span></a><a class=\"headerlink\" href=\"#dagster.DagsterExecutionStepNotFoundError\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Thrown when the user specifies execution step keys that do not exist.</p>\n</dd></dl>\n\n<dl class=\"py exception\">\n<dt id=\"dagster.DagsterInvalidConfigError\">\n<em class=\"property\"><span class=\"pre\">exception</span> </em><code class=\"sig-prename descclassname\"><span class=\"pre\">dagster.</span></code><code class=\"sig-name descname\"><span class=\"pre\">DagsterInvalidConfigError</span></code><span class=\"sig-paren\">(</span><em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">preamble</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">errors</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">config_value</span></span></em>, <em class=\"sig-param\"><span class=\"o\"><span class=\"pre\">*</span></span><span class=\"n\"><span class=\"pre\">args</span></span></em>, <em class=\"sig-param\"><span class=\"o\"><span class=\"pre\">**</span></span><span class=\"n\"><span class=\"pre\">kwargs</span></span></em><span class=\"sig-paren\">)</span><a class=\"reference internal\" href=\"../../../../_modules/dagster/core/errors#DagsterInvalidConfigError\"><span class=\"viewcode-link\"><span class=\"pre\">[source]</span></span></a><a class=\"headerlink\" href=\"#dagster.DagsterInvalidConfigError\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Thrown when provided config is invalid (does not type check against the relevant config\nschema).</p>\n</dd></dl>\n\n<dl class=\"py exception\">\n<dt id=\"dagster.DagsterInvalidConfigDefinitionError\">\n<em class=\"property\"><span class=\"pre\">exception</span> </em><code class=\"sig-prename descclassname\"><span class=\"pre\">dagster.</span></code><code class=\"sig-name descname\"><span class=\"pre\">DagsterInvalidConfigDefinitionError</span></code><span class=\"sig-paren\">(</span><em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">original_root</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">current_value</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">stack</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">reason</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">None</span></span></em>, <em class=\"sig-param\"><span class=\"o\"><span class=\"pre\">**</span></span><span class=\"n\"><span class=\"pre\">kwargs</span></span></em><span class=\"sig-paren\">)</span><a class=\"reference internal\" href=\"../../../../_modules/dagster/core/errors#DagsterInvalidConfigDefinitionError\"><span class=\"viewcode-link\"><span class=\"pre\">[source]</span></span></a><a class=\"headerlink\" href=\"#dagster.DagsterInvalidConfigDefinitionError\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Indicates that you have attempted to construct a config with an invalid value</p>\n<dl class=\"simple\">\n<dt>Acceptable values for config types are any of:</dt><dd><ol class=\"arabic simple\">\n<li><dl class=\"simple\">\n<dt>A Python primitive type that resolves to a Dagster config type</dt><dd><p>(<a class=\"reference external\" href=\"https://docs.python.org/3/library/functions.html#int\" title=\"(in Python v3.8)\"><code class=\"docutils literal notranslate\"><span class=\"pre\">int</span></code></a>, <a class=\"reference external\" href=\"https://docs.python.org/3/library/functions.html#float\" title=\"(in Python v3.8)\"><code class=\"docutils literal notranslate\"><span class=\"pre\">float</span></code></a>, <a class=\"reference external\" href=\"https://docs.python.org/3/library/functions.html#bool\" title=\"(in Python v3.8)\"><code class=\"docutils literal notranslate\"><span class=\"pre\">bool</span></code></a>,\n<a class=\"reference external\" href=\"https://docs.python.org/3/library/stdtypes.html#str\" title=\"(in Python v3.8)\"><code class=\"docutils literal notranslate\"><span class=\"pre\">str</span></code></a>, or <a class=\"reference external\" href=\"https://docs.python.org/3/library/stdtypes.html#list\" title=\"(in Python v3.8)\"><code class=\"docutils literal notranslate\"><span class=\"pre\">list</span></code></a>).</p>\n</dd>\n</dl>\n</li>\n<li><dl class=\"simple\">\n<dt>A Dagster config type: <code class=\"xref py py-data docutils literal notranslate\"><span class=\"pre\">Int</span></code>, <code class=\"xref py py-data docutils literal notranslate\"><span class=\"pre\">Float</span></code>,</dt><dd><p><code class=\"xref py py-data docutils literal notranslate\"><span class=\"pre\">Bool</span></code>, <code class=\"xref py py-data docutils literal notranslate\"><span class=\"pre\">String</span></code>,\n<a class=\"reference internal\" href=\"config#dagster.StringSource\" title=\"dagster.StringSource\"><code class=\"xref py py-data docutils literal notranslate\"><span class=\"pre\">StringSource</span></code></a>, <code class=\"xref py py-data docutils literal notranslate\"><span class=\"pre\">Any</span></code>,\n<a class=\"reference internal\" href=\"config#dagster.Array\" title=\"dagster.Array\"><code class=\"xref py py-class docutils literal notranslate\"><span class=\"pre\">Array</span></code></a>, <a class=\"reference internal\" href=\"config#dagster.Noneable\" title=\"dagster.Noneable\"><code class=\"xref py py-data docutils literal notranslate\"><span class=\"pre\">Noneable</span></code></a>, <a class=\"reference internal\" href=\"config#dagster.Enum\" title=\"dagster.Enum\"><code class=\"xref py py-data docutils literal notranslate\"><span class=\"pre\">Enum</span></code></a>,\n<a class=\"reference internal\" href=\"config#dagster.Selector\" title=\"dagster.Selector\"><code class=\"xref py py-class docutils literal notranslate\"><span class=\"pre\">Selector</span></code></a>, <a class=\"reference internal\" href=\"config#dagster.Shape\" title=\"dagster.Shape\"><code class=\"xref py py-class docutils literal notranslate\"><span class=\"pre\">Shape</span></code></a>, or\n<a class=\"reference internal\" href=\"config#dagster.Permissive\" title=\"dagster.Permissive\"><code class=\"xref py py-class docutils literal notranslate\"><span class=\"pre\">Permissive</span></code></a>.</p>\n</dd>\n</dl>\n</li>\n<li><dl class=\"simple\">\n<dt>A bare python dictionary, which will be automatically wrapped in</dt><dd><p><a class=\"reference internal\" href=\"config#dagster.Shape\" title=\"dagster.Shape\"><code class=\"xref py py-class docutils literal notranslate\"><span class=\"pre\">Shape</span></code></a>. Values of the dictionary are resolved recursively\naccording to the same rules.</p>\n</dd>\n</dl>\n</li>\n<li><dl class=\"simple\">\n<dt>A bare python list of length one which itself is config type.</dt><dd><p>Becomes <a class=\"reference internal\" href=\"config#dagster.Array\" title=\"dagster.Array\"><code class=\"xref py py-class docutils literal notranslate\"><span class=\"pre\">Array</span></code></a> with list element as an argument.</p>\n</dd>\n</dl>\n</li>\n<li><p>An instance of <a class=\"reference internal\" href=\"config#dagster.Field\" title=\"dagster.Field\"><code class=\"xref py py-class docutils literal notranslate\"><span class=\"pre\">Field</span></code></a>.</p></li>\n</ol>\n</dd>\n</dl>\n</dd></dl>\n\n<dl class=\"py exception\">\n<dt id=\"dagster.DagsterInvalidDefinitionError\">\n<em class=\"property\"><span class=\"pre\">exception</span> </em><code class=\"sig-prename descclassname\"><span class=\"pre\">dagster.</span></code><code class=\"sig-name descname\"><span class=\"pre\">DagsterInvalidDefinitionError</span></code><a class=\"reference internal\" href=\"../../../../_modules/dagster/core/errors#DagsterInvalidDefinitionError\"><span class=\"viewcode-link\"><span class=\"pre\">[source]</span></span></a><a class=\"headerlink\" href=\"#dagster.DagsterInvalidDefinitionError\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Indicates that the rules for a definition have been violated by the user.</p>\n</dd></dl>\n\n<dl class=\"py exception\">\n<dt id=\"dagster.DagsterInvariantViolationError\">\n<em class=\"property\"><span class=\"pre\">exception</span> </em><code class=\"sig-prename descclassname\"><span class=\"pre\">dagster.</span></code><code class=\"sig-name descname\"><span class=\"pre\">DagsterInvariantViolationError</span></code><a class=\"reference internal\" href=\"../../../../_modules/dagster/core/errors#DagsterInvariantViolationError\"><span class=\"viewcode-link\"><span class=\"pre\">[source]</span></span></a><a class=\"headerlink\" href=\"#dagster.DagsterInvariantViolationError\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Indicates the user has violated a well-defined invariant that can only be enforced\nat runtime.</p>\n</dd></dl>\n\n<dl class=\"py exception\">\n<dt id=\"dagster.DagsterResourceFunctionError\">\n<em class=\"property\"><span class=\"pre\">exception</span> </em><code class=\"sig-prename descclassname\"><span class=\"pre\">dagster.</span></code><code class=\"sig-name descname\"><span class=\"pre\">DagsterResourceFunctionError</span></code><span class=\"sig-paren\">(</span><em class=\"sig-param\"><span class=\"o\"><span class=\"pre\">*</span></span><span class=\"n\"><span class=\"pre\">args</span></span></em>, <em class=\"sig-param\"><span class=\"o\"><span class=\"pre\">**</span></span><span class=\"n\"><span class=\"pre\">kwargs</span></span></em><span class=\"sig-paren\">)</span><a class=\"reference internal\" href=\"../../../../_modules/dagster/core/errors#DagsterResourceFunctionError\"><span class=\"viewcode-link\"><span class=\"pre\">[source]</span></span></a><a class=\"headerlink\" href=\"#dagster.DagsterResourceFunctionError\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Indicates an error occurred while executing the body of the <code class=\"docutils literal notranslate\"><span class=\"pre\">resource_fn</span></code> in a\n<a class=\"reference internal\" href=\"resources#dagster.ResourceDefinition\" title=\"dagster.ResourceDefinition\"><code class=\"xref py py-class docutils literal notranslate\"><span class=\"pre\">ResourceDefinition</span></code></a> during resource initialization.</p>\n</dd></dl>\n\n<dl class=\"py exception\">\n<dt id=\"dagster.DagsterRunNotFoundError\">\n<em class=\"property\"><span class=\"pre\">exception</span> </em><code class=\"sig-prename descclassname\"><span class=\"pre\">dagster.</span></code><code class=\"sig-name descname\"><span class=\"pre\">DagsterRunNotFoundError</span></code><span class=\"sig-paren\">(</span><em class=\"sig-param\"><span class=\"o\"><span class=\"pre\">*</span></span><span class=\"n\"><span class=\"pre\">args</span></span></em>, <em class=\"sig-param\"><span class=\"o\"><span class=\"pre\">**</span></span><span class=\"n\"><span class=\"pre\">kwargs</span></span></em><span class=\"sig-paren\">)</span><a class=\"reference internal\" href=\"../../../../_modules/dagster/core/errors#DagsterRunNotFoundError\"><span class=\"viewcode-link\"><span class=\"pre\">[source]</span></span></a><a class=\"headerlink\" href=\"#dagster.DagsterRunNotFoundError\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Thrown when a run cannot be found in run storage.</p>\n</dd></dl>\n\n<dl class=\"py exception\">\n<dt id=\"dagster.DagsterStepOutputNotFoundError\">\n<em class=\"property\"><span class=\"pre\">exception</span> </em><code class=\"sig-prename descclassname\"><span class=\"pre\">dagster.</span></code><code class=\"sig-name descname\"><span class=\"pre\">DagsterStepOutputNotFoundError</span></code><span class=\"sig-paren\">(</span><em class=\"sig-param\"><span class=\"o\"><span class=\"pre\">*</span></span><span class=\"n\"><span class=\"pre\">args</span></span></em>, <em class=\"sig-param\"><span class=\"o\"><span class=\"pre\">**</span></span><span class=\"n\"><span class=\"pre\">kwargs</span></span></em><span class=\"sig-paren\">)</span><a class=\"reference internal\" href=\"../../../../_modules/dagster/core/errors#DagsterStepOutputNotFoundError\"><span class=\"viewcode-link\"><span class=\"pre\">[source]</span></span></a><a class=\"headerlink\" href=\"#dagster.DagsterStepOutputNotFoundError\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Indicates that previous step outputs required for an execution step to proceed are not\navailable.</p>\n</dd></dl>\n\n<dl class=\"py exception\">\n<dt id=\"dagster.DagsterSubprocessError\">\n<em class=\"property\"><span class=\"pre\">exception</span> </em><code class=\"sig-prename descclassname\"><span class=\"pre\">dagster.</span></code><code class=\"sig-name descname\"><span class=\"pre\">DagsterSubprocessError</span></code><span class=\"sig-paren\">(</span><em class=\"sig-param\"><span class=\"o\"><span class=\"pre\">*</span></span><span class=\"n\"><span class=\"pre\">args</span></span></em>, <em class=\"sig-param\"><span class=\"o\"><span class=\"pre\">**</span></span><span class=\"n\"><span class=\"pre\">kwargs</span></span></em><span class=\"sig-paren\">)</span><a class=\"reference internal\" href=\"../../../../_modules/dagster/core/errors#DagsterSubprocessError\"><span class=\"viewcode-link\"><span class=\"pre\">[source]</span></span></a><a class=\"headerlink\" href=\"#dagster.DagsterSubprocessError\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>An exception has occurred in one or more of the child processes dagster manages.\nThis error forwards the message and stack trace for all of the collected errors.</p>\n</dd></dl>\n\n<dl class=\"py exception\">\n<dt id=\"dagster.DagsterTypeCheckDidNotPass\">\n<em class=\"property\"><span class=\"pre\">exception</span> </em><code class=\"sig-prename descclassname\"><span class=\"pre\">dagster.</span></code><code class=\"sig-name descname\"><span class=\"pre\">DagsterTypeCheckDidNotPass</span></code><span class=\"sig-paren\">(</span><em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">description</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">None</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">metadata_entries</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">None</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">dagster_type</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">None</span></span></em><span class=\"sig-paren\">)</span><a class=\"reference internal\" href=\"../../../../_modules/dagster/core/errors#DagsterTypeCheckDidNotPass\"><span class=\"viewcode-link\"><span class=\"pre\">[source]</span></span></a><a class=\"headerlink\" href=\"#dagster.DagsterTypeCheckDidNotPass\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Indicates that a type check failed.</p>\n<p>This is raised when <code class=\"docutils literal notranslate\"><span class=\"pre\">raise_on_error</span></code> is <code class=\"docutils literal notranslate\"><span class=\"pre\">True</span></code> in calls to the synchronous job and\ngraph execution APIs (e.g. <cite>graph.execute_in_process()</cite>, <cite>job.execute_in_process()</cite> \u2013 typically\nwithin a test), and a <a class=\"reference internal\" href=\"types#dagster.DagsterType\" title=\"dagster.DagsterType\"><code class=\"xref py py-class docutils literal notranslate\"><span class=\"pre\">DagsterType</span></code></a>\u2019s type check fails by returning either\n<code class=\"docutils literal notranslate\"><span class=\"pre\">False</span></code> or an instance of <a class=\"reference internal\" href=\"ops#dagster.TypeCheck\" title=\"dagster.TypeCheck\"><code class=\"xref py py-class docutils literal notranslate\"><span class=\"pre\">TypeCheck</span></code></a> whose <code class=\"docutils literal notranslate\"><span class=\"pre\">success</span></code> member is <code class=\"docutils literal notranslate\"><span class=\"pre\">False</span></code>.</p>\n</dd></dl>\n\n<dl class=\"py exception\">\n<dt id=\"dagster.DagsterTypeCheckError\">\n<em class=\"property\"><span class=\"pre\">exception</span> </em><code class=\"sig-prename descclassname\"><span class=\"pre\">dagster.</span></code><code class=\"sig-name descname\"><span class=\"pre\">DagsterTypeCheckError</span></code><span class=\"sig-paren\">(</span><em class=\"sig-param\"><span class=\"o\"><span class=\"pre\">*</span></span><span class=\"n\"><span class=\"pre\">args</span></span></em>, <em class=\"sig-param\"><span class=\"o\"><span class=\"pre\">**</span></span><span class=\"n\"><span class=\"pre\">kwargs</span></span></em><span class=\"sig-paren\">)</span><a class=\"reference internal\" href=\"../../../../_modules/dagster/core/errors#DagsterTypeCheckError\"><span class=\"viewcode-link\"><span class=\"pre\">[source]</span></span></a><a class=\"headerlink\" href=\"#dagster.DagsterTypeCheckError\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Indicates an error in the op type system at runtime. E.g. a op receives an\nunexpected input, or produces an output that does not match the type of the output definition.</p>\n</dd></dl>\n\n<dl class=\"py exception\">\n<dt id=\"dagster.DagsterUnknownResourceError\">\n<em class=\"property\"><span class=\"pre\">exception</span> </em><code class=\"sig-prename descclassname\"><span class=\"pre\">dagster.</span></code><code class=\"sig-name descname\"><span class=\"pre\">DagsterUnknownResourceError</span></code><span class=\"sig-paren\">(</span><em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">resource_name</span></span></em>, <em class=\"sig-param\"><span class=\"o\"><span class=\"pre\">*</span></span><span class=\"n\"><span class=\"pre\">args</span></span></em>, <em class=\"sig-param\"><span class=\"o\"><span class=\"pre\">**</span></span><span class=\"n\"><span class=\"pre\">kwargs</span></span></em><span class=\"sig-paren\">)</span><a class=\"reference internal\" href=\"../../../../_modules/dagster/core/errors#DagsterUnknownResourceError\"><span class=\"viewcode-link\"><span class=\"pre\">[source]</span></span></a><a class=\"headerlink\" href=\"#dagster.DagsterUnknownResourceError\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Indicates that an unknown resource was accessed in the body of an execution step. May often\nhappen by accessing a resource in the compute function of an op without first supplying the\nop with the correct <cite>required_resource_keys</cite> argument.</p>\n</dd></dl>\n\n<dl class=\"py exception\">\n<dt id=\"dagster.DagsterUnmetExecutorRequirementsError\">\n<em class=\"property\"><span class=\"pre\">exception</span> </em><code class=\"sig-prename descclassname\"><span class=\"pre\">dagster.</span></code><code class=\"sig-name descname\"><span class=\"pre\">DagsterUnmetExecutorRequirementsError</span></code><a class=\"reference internal\" href=\"../../../../_modules/dagster/core/errors#DagsterUnmetExecutorRequirementsError\"><span class=\"viewcode-link\"><span class=\"pre\">[source]</span></span></a><a class=\"headerlink\" href=\"#dagster.DagsterUnmetExecutorRequirementsError\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Indicates the resolved executor is incompatible with the state of other systems\nsuch as the <code class=\"xref py py-class docutils literal notranslate\"><span class=\"pre\">DagsterInstance</span></code> or system storage configuration.</p>\n</dd></dl>\n\n<dl class=\"py exception\">\n<dt id=\"dagster.DagsterUserCodeExecutionError\">\n<em class=\"property\"><span class=\"pre\">exception</span> </em><code class=\"sig-prename descclassname\"><span class=\"pre\">dagster.</span></code><code class=\"sig-name descname\"><span class=\"pre\">DagsterUserCodeExecutionError</span></code><span class=\"sig-paren\">(</span><em class=\"sig-param\"><span class=\"o\"><span class=\"pre\">*</span></span><span class=\"n\"><span class=\"pre\">args</span></span></em>, <em class=\"sig-param\"><span class=\"o\"><span class=\"pre\">**</span></span><span class=\"n\"><span class=\"pre\">kwargs</span></span></em><span class=\"sig-paren\">)</span><a class=\"reference internal\" href=\"../../../../_modules/dagster/core/errors#DagsterUserCodeExecutionError\"><span class=\"viewcode-link\"><span class=\"pre\">[source]</span></span></a><a class=\"headerlink\" href=\"#dagster.DagsterUserCodeExecutionError\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>This is the base class for any exception that is meant to wrap an\n<a class=\"reference external\" href=\"https://docs.python.org/3/library/exceptions.html#Exception\" title=\"(in Python v3.8)\"><code class=\"docutils literal notranslate\"><span class=\"pre\">Exception</span></code></a> thrown by user code. It wraps that existing user code.\nThe <code class=\"docutils literal notranslate\"><span class=\"pre\">original_exc_info</span></code> argument to the constructor is meant to be a tuple of the type\nreturned by <a class=\"reference external\" href=\"https://docs.python.org/3/library/sys.html#sys.exc_info\" title=\"(in Python v3.8)\"><code class=\"xref py py-func docutils literal notranslate\"><span class=\"pre\">sys.exc_info</span></code></a> at the call site of the constructor.</p>\n<p>Users should not subclass this base class for their own exceptions and should instead throw\nfreely from user code. User exceptions will be automatically wrapped and rethrown.</p>\n</dd></dl>\n\n</div>\n", "current_page_name": "sections/api/apidocs/errors", "customsidebar": null, "display_toc": false, "meta": null, "metatags": "", "next": {"link": "../execution/", "title": "Execution"}, "page_source_suffix": ".rst", "parents": [], "prev": {"link": "../config/", "title": "Config"}, "rellinks": [["genindex", "General Index", "I", "index"], ["py-modindex", "Python Module Index", "", "modules"], ["sections/api/apidocs/execution", "Execution", "N", "next"], ["sections/api/apidocs/config", "Config", "P", "previous"]], "sidebars": ["globaltoc.html", "searchbox.html"], "sourcename": "sections/api/apidocs/errors.rst.txt", "title": "Errors", "toc": "<ul>\n<li><a class=\"reference internal\" href=\"#\">Errors</a></li>\n</ul>\n"}, "execution": {"alabaster_version": "0.7.12", "body": "<div class=\"section\" id=\"execution\">\n<h1>Execution<a class=\"headerlink\" href=\"#execution\" title=\"Permalink to this headline\">\u00b6</a></h1>\n<div class=\"section\" id=\"materializing-assets\">\n<h2>Materializing Assets<a class=\"headerlink\" href=\"#materializing-assets\" title=\"Permalink to this headline\">\u00b6</a></h2>\n<dl class=\"py function\">\n<dt id=\"dagster.materialize\">\n<code class=\"sig-prename descclassname\"><span class=\"pre\">dagster.</span></code><code class=\"sig-name descname\"><span class=\"pre\">materialize</span></code><span class=\"sig-paren\">(</span><em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">assets</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">run_config</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">None</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">instance</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">None</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">partition_key</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">None</span></span></em><span class=\"sig-paren\">)</span><a class=\"reference internal\" href=\"../../../../_modules/dagster/core/asset_defs/materialize#materialize\"><span class=\"viewcode-link\"><span class=\"pre\">[source]</span></span></a><a class=\"headerlink\" href=\"#dagster.materialize\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Executes a single-threaded, in-process run which materializes provided assets.</p>\n<p>By default, will materialize assets to the local filesystem.</p>\n<dl class=\"field-list simple\">\n<dt class=\"field-odd\">Parameters</dt>\n<dd class=\"field-odd\"><ul class=\"simple\">\n<li><p><strong>assets</strong> (<em>Sequence</em><em>[</em><em>Union</em><em>[</em><a class=\"reference internal\" href=\"assets#dagster.AssetsDefinition\" title=\"dagster.AssetsDefinition\"><em>AssetsDefinition</em></a><em>, </em><a class=\"reference internal\" href=\"assets#dagster.SourceAsset\" title=\"dagster.SourceAsset\"><em>SourceAsset</em></a><em>]</em><em>]</em>) \u2013 The assets to materialize. Can also provide <a class=\"reference internal\" href=\"assets#dagster.SourceAsset\" title=\"dagster.SourceAsset\"><code class=\"xref py py-class docutils literal notranslate\"><span class=\"pre\">SourceAsset</span></code></a> objects to fill dependencies for asset defs.</p></li>\n<li><p><strong>run_config</strong> (<em>Optional</em><em>[</em><em>Any</em><em>]</em>) \u2013 The run config to use for the run that materializes the assets.</p></li>\n<li><p><strong>partition_key</strong> \u2013 (Optional[str])\nThe string partition key that specifies the run config to execute. Can only be used\nto select run config for assets with partitioned config.</p></li>\n</ul>\n</dd>\n<dt class=\"field-even\">Returns</dt>\n<dd class=\"field-even\"><p>The result of the execution.</p>\n</dd>\n<dt class=\"field-odd\">Return type</dt>\n<dd class=\"field-odd\"><p><a class=\"reference internal\" href=\"#dagster.ExecuteInProcessResult\" title=\"dagster.ExecuteInProcessResult\">ExecuteInProcessResult</a></p>\n</dd>\n</dl>\n</dd></dl>\n\n<dl class=\"py function\">\n<dt id=\"dagster.materialize_to_memory\">\n<code class=\"sig-prename descclassname\"><span class=\"pre\">dagster.</span></code><code class=\"sig-name descname\"><span class=\"pre\">materialize_to_memory</span></code><span class=\"sig-paren\">(</span><em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">assets</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">run_config</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">None</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">instance</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">None</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">resources</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">None</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">partition_key</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">None</span></span></em><span class=\"sig-paren\">)</span><a class=\"reference internal\" href=\"../../../../_modules/dagster/core/asset_defs/materialize#materialize_to_memory\"><span class=\"viewcode-link\"><span class=\"pre\">[source]</span></span></a><a class=\"headerlink\" href=\"#dagster.materialize_to_memory\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Executes a single-threaded, in-process run which materializes provided assets.</p>\n<p>By default, will materialize assets to memory, meaning results will not be\npersisted. This behavior can be changed by overriding the default io\nmanager key \u201cio_manager\u201d, or providing custom io manager keys to assets.</p>\n<dl class=\"field-list simple\">\n<dt class=\"field-odd\">Parameters</dt>\n<dd class=\"field-odd\"><ul class=\"simple\">\n<li><p><strong>assets</strong> (<em>Sequence</em><em>[</em><em>Union</em><em>[</em><a class=\"reference internal\" href=\"assets#dagster.AssetsDefinition\" title=\"dagster.AssetsDefinition\"><em>AssetsDefinition</em></a><em>, </em><a class=\"reference internal\" href=\"assets#dagster.SourceAsset\" title=\"dagster.SourceAsset\"><em>SourceAsset</em></a><em>]</em><em>]</em>) \u2013 The assets to materialize. Can also provide <a class=\"reference internal\" href=\"assets#dagster.SourceAsset\" title=\"dagster.SourceAsset\"><code class=\"xref py py-class docutils literal notranslate\"><span class=\"pre\">SourceAsset</span></code></a> objects to fill dependencies for asset defs.</p></li>\n<li><p><strong>run_config</strong> (<em>Optional</em><em>[</em><em>Any</em><em>]</em>) \u2013 The run config to use for the run that materializes the assets.</p></li>\n<li><p><strong>resources</strong> (<em>Optional</em><em>[</em><em>Mapping</em><em>[</em><a class=\"reference external\" href=\"https://docs.python.org/3/library/stdtypes.html#str\" title=\"(in Python v3.8)\"><em>str</em></a><em>, </em><a class=\"reference external\" href=\"https://docs.python.org/3/library/functions.html#object\" title=\"(in Python v3.8)\"><em>object</em></a><em>]</em><em>]</em>) \u2013 The resources needed for execution. Can provide resource instances\ndirectly, or resource definitions. Note that if provided resources\nconflict with resources directly on assets, an error will be thrown.</p></li>\n<li><p><strong>partition_key</strong> \u2013 (Optional[str])\nThe string partition key that specifies the run config to execute. Can only be used\nto select run config for assets with partitioned config.</p></li>\n</ul>\n</dd>\n<dt class=\"field-even\">Returns</dt>\n<dd class=\"field-even\"><p>The result of the execution.</p>\n</dd>\n<dt class=\"field-odd\">Return type</dt>\n<dd class=\"field-odd\"><p><a class=\"reference internal\" href=\"#dagster.ExecuteInProcessResult\" title=\"dagster.ExecuteInProcessResult\">ExecuteInProcessResult</a></p>\n</dd>\n</dl>\n</dd></dl>\n\n</div>\n<div class=\"section\" id=\"executing-jobs\">\n<h2>Executing Jobs<a class=\"headerlink\" href=\"#executing-jobs\" title=\"Permalink to this headline\">\u00b6</a></h2>\n<dl class=\"py class\">\n<dt>\n<em class=\"property\"><span class=\"pre\">class</span> </em><code class=\"sig-prename descclassname\"><span class=\"pre\">dagster.</span></code><code class=\"sig-name descname\"><span class=\"pre\">JobDefinition</span></code><span class=\"sig-paren\">(</span><em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">graph_def</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">resource_defs</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">None</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">executor_def</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">None</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">logger_defs</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">None</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">config_mapping</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">None</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">partitioned_config</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">None</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">name</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">None</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">description</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">None</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">preset_defs</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">None</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">tags</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">None</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">metadata</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">None</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">hook_defs</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">None</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">op_retry_policy</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">None</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">version_strategy</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">None</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">_subset_selection_data</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">None</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">asset_layer</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">None</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">_input_values</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">None</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">_metadata_entries</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">None</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">_executor_def_specified</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">False</span></span></em><span class=\"sig-paren\">)</span><a class=\"reference internal\" href=\"../../../../_modules/dagster/core/definitions/job_definition#JobDefinition\"><span class=\"viewcode-link\"><span class=\"pre\">[source]</span></span></a></dt>\n<dd><dl class=\"py method\">\n<dt>\n<code class=\"sig-name descname\"><span class=\"pre\">execute_in_process</span></code><span class=\"sig-paren\">(</span><em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">run_config</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">None</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">instance</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">None</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">partition_key</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">None</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">raise_on_error</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">True</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">op_selection</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">None</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">asset_selection</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">None</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">run_id</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">None</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">input_values</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">None</span></span></em><span class=\"sig-paren\">)</span><a class=\"reference internal\" href=\"../../../../_modules/dagster/core/definitions/job_definition#JobDefinition.execute_in_process\"><span class=\"viewcode-link\"><span class=\"pre\">[source]</span></span></a></dt>\n<dd><p>Execute the Job in-process, gathering results in-memory.</p>\n<p>The <cite>executor_def</cite> on the Job will be ignored, and replaced with the in-process executor.\nIf using the default <cite>io_manager</cite>, it will switch from filesystem to in-memory.</p>\n<dl class=\"field-list simple\">\n<dt class=\"field-odd\">Parameters</dt>\n<dd class=\"field-odd\"><ul class=\"simple\">\n<li><p><strong>(</strong><strong>Optional</strong><strong>[</strong><strong>Dict</strong><strong>[</strong><strong>str</strong> (<em>run_config</em>) \u2013 The configuration for the run</p></li>\n<li><p><strong>Any</strong><strong>]</strong><strong>]</strong> \u2013 The configuration for the run</p></li>\n<li><p><strong>instance</strong> (<em>Optional</em><em>[</em><a class=\"reference internal\" href=\"internals#dagster.DagsterInstance\" title=\"dagster.DagsterInstance\"><em>DagsterInstance</em></a><em>]</em>) \u2013 The instance to execute against, an ephemeral one will be used if none provided.</p></li>\n<li><p><strong>partition_key</strong> \u2013 (Optional[str])\nThe string partition key that specifies the run config to execute. Can only be used\nto select run config for jobs with partitioned config.</p></li>\n<li><p><strong>raise_on_error</strong> (<em>Optional</em><em>[</em><a class=\"reference external\" href=\"https://docs.python.org/3/library/functions.html#bool\" title=\"(in Python v3.8)\"><em>bool</em></a><em>]</em>) \u2013 Whether or not to raise exceptions when they occur.\nDefaults to <code class=\"docutils literal notranslate\"><span class=\"pre\">True</span></code>.</p></li>\n<li><p><strong>op_selection</strong> (<em>Optional</em><em>[</em><em>List</em><em>[</em><a class=\"reference external\" href=\"https://docs.python.org/3/library/stdtypes.html#str\" title=\"(in Python v3.8)\"><em>str</em></a><em>]</em><em>]</em>) \u2013 A list of op selection queries (including single op\nnames) to execute. For example:\n* <code class=\"docutils literal notranslate\"><span class=\"pre\">['some_op']</span></code>: selects <code class=\"docutils literal notranslate\"><span class=\"pre\">some_op</span></code> itself.\n* <code class=\"docutils literal notranslate\"><span class=\"pre\">['*some_op']</span></code>: select <code class=\"docutils literal notranslate\"><span class=\"pre\">some_op</span></code> and all its ancestors (upstream dependencies).\n* <code class=\"docutils literal notranslate\"><span class=\"pre\">['*some_op+++']</span></code>: select <code class=\"docutils literal notranslate\"><span class=\"pre\">some_op</span></code>, all its ancestors, and its descendants\n(downstream dependencies) within 3 levels down.\n* <code class=\"docutils literal notranslate\"><span class=\"pre\">['*some_op',</span> <span class=\"pre\">'other_op_a',</span> <span class=\"pre\">'other_op_b+']</span></code>: select <code class=\"docutils literal notranslate\"><span class=\"pre\">some_op</span></code> and all its\nancestors, <code class=\"docutils literal notranslate\"><span class=\"pre\">other_op_a</span></code> itself, and <code class=\"docutils literal notranslate\"><span class=\"pre\">other_op_b</span></code> and its direct child ops.</p></li>\n<li><p><strong>input_values</strong> (<em>Optional</em><em>[</em><em>Mapping</em><em>[</em><a class=\"reference external\" href=\"https://docs.python.org/3/library/stdtypes.html#str\" title=\"(in Python v3.8)\"><em>str</em></a><em>, </em><em>Any</em><em>]</em><em>]</em>) \u2013 A dictionary that maps python objects to the top-level inputs of the job. Input values provided here will override input values that have been provided to the job directly.</p></li>\n</ul>\n</dd>\n<dt class=\"field-even\">Returns</dt>\n<dd class=\"field-even\"><p><a class=\"reference internal\" href=\"#dagster.ExecuteInProcessResult\" title=\"dagster.ExecuteInProcessResult\"><code class=\"xref py py-class docutils literal notranslate\"><span class=\"pre\">ExecuteInProcessResult</span></code></a></p>\n</dd>\n</dl>\n</dd></dl>\n\n</dd></dl>\n\n</div>\n<div class=\"section\" id=\"executing-graphs\">\n<h2>Executing Graphs<a class=\"headerlink\" href=\"#executing-graphs\" title=\"Permalink to this headline\">\u00b6</a></h2>\n<dl class=\"py class\">\n<dt>\n<em class=\"property\"><span class=\"pre\">class</span> </em><code class=\"sig-prename descclassname\"><span class=\"pre\">dagster.</span></code><code class=\"sig-name descname\"><span class=\"pre\">GraphDefinition</span></code><span class=\"sig-paren\">(</span><em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">name</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">description</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">None</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">node_defs</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">None</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">dependencies</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">None</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">input_mappings</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">None</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">output_mappings</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">None</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">config</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">None</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">tags</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">None</span></span></em>, <em class=\"sig-param\"><span class=\"o\"><span class=\"pre\">**</span></span><span class=\"n\"><span class=\"pre\">kwargs</span></span></em><span class=\"sig-paren\">)</span><a class=\"reference internal\" href=\"../../../../_modules/dagster/core/definitions/graph_definition#GraphDefinition\"><span class=\"viewcode-link\"><span class=\"pre\">[source]</span></span></a></dt>\n<dd><p>Defines a Dagster graph.</p>\n<p>A graph is made up of</p>\n<ul class=\"simple\">\n<li><p>Nodes, which can either be an op (the functional unit of computation), or another graph.</p></li>\n<li><p>Dependencies, which determine how the values produced by nodes as outputs flow from\none node to another. This tells Dagster how to arrange nodes into a directed, acyclic graph\n(DAG) of compute.</p></li>\n</ul>\n<p>End users should prefer the <a class=\"reference internal\" href=\"graphs#dagster.graph\" title=\"dagster.graph\"><code class=\"xref py py-func docutils literal notranslate\"><span class=\"pre\">&#64;graph</span></code></a> decorator. GraphDefinition is generally\nintended to be used by framework authors or for programatically generated graphs.</p>\n<dl class=\"field-list simple\">\n<dt class=\"field-odd\">Parameters</dt>\n<dd class=\"field-odd\"><ul class=\"simple\">\n<li><p><strong>name</strong> (<a class=\"reference external\" href=\"https://docs.python.org/3/library/stdtypes.html#str\" title=\"(in Python v3.8)\"><em>str</em></a>) \u2013 The name of the graph. Must be unique within any <a class=\"reference internal\" href=\"graphs#dagster.GraphDefinition\" title=\"dagster.GraphDefinition\"><code class=\"xref py py-class docutils literal notranslate\"><span class=\"pre\">GraphDefinition</span></code></a>\nor <a class=\"reference internal\" href=\"jobs#dagster.JobDefinition\" title=\"dagster.JobDefinition\"><code class=\"xref py py-class docutils literal notranslate\"><span class=\"pre\">JobDefinition</span></code></a> containing the graph.</p></li>\n<li><p><strong>description</strong> (<em>Optional</em><em>[</em><a class=\"reference external\" href=\"https://docs.python.org/3/library/stdtypes.html#str\" title=\"(in Python v3.8)\"><em>str</em></a><em>]</em>) \u2013 A human-readable description of the pipeline.</p></li>\n<li><p><strong>node_defs</strong> (<em>Optional</em><em>[</em><em>List</em><em>[</em><em>NodeDefinition</em><em>]</em><em>]</em>) \u2013 The set of ops / graphs used in this graph.</p></li>\n<li><p><strong>dependencies</strong> (<em>Optional</em><em>[</em><em>Dict</em><em>[</em><em>Union</em><em>[</em><a class=\"reference external\" href=\"https://docs.python.org/3/library/stdtypes.html#str\" title=\"(in Python v3.8)\"><em>str</em></a><em>, </em><a class=\"reference internal\" href=\"graphs#dagster.NodeInvocation\" title=\"dagster.NodeInvocation\"><em>NodeInvocation</em></a><em>]</em><em>, </em><em>Dict</em><em>[</em><a class=\"reference external\" href=\"https://docs.python.org/3/library/stdtypes.html#str\" title=\"(in Python v3.8)\"><em>str</em></a><em>, </em><a class=\"reference internal\" href=\"graphs#dagster.DependencyDefinition\" title=\"dagster.DependencyDefinition\"><em>DependencyDefinition</em></a><em>]</em><em>]</em><em>]</em>) \u2013 A structure that declares the dependencies of each op\u2019s inputs on the outputs of other\nops in the graph. Keys of the top level dict are either the string names of ops in the\ngraph or, in the case of aliased ops, <a class=\"reference internal\" href=\"graphs#dagster.NodeInvocation\" title=\"dagster.NodeInvocation\"><code class=\"xref py py-class docutils literal notranslate\"><span class=\"pre\">NodeInvocations</span></code></a>.\nValues of the top level dict are themselves dicts, which map input names belonging to\nthe op or aliased op to <a class=\"reference internal\" href=\"graphs#dagster.DependencyDefinition\" title=\"dagster.DependencyDefinition\"><code class=\"xref py py-class docutils literal notranslate\"><span class=\"pre\">DependencyDefinitions</span></code></a>.</p></li>\n<li><p><strong>input_mappings</strong> (<em>Optional</em><em>[</em><em>List</em><em>[</em><a class=\"reference internal\" href=\"solids#dagster.InputMapping\" title=\"dagster.InputMapping\"><em>InputMapping</em></a><em>]</em><em>]</em>) \u2013 Defines the inputs to the nested graph, and\nhow they map to the inputs of its constituent ops.</p></li>\n<li><p><strong>output_mappings</strong> (<em>Optional</em><em>[</em><em>List</em><em>[</em><a class=\"reference internal\" href=\"solids#dagster.OutputMapping\" title=\"dagster.OutputMapping\"><em>OutputMapping</em></a><em>]</em><em>]</em>) \u2013 Defines the outputs of the nested graph,\nand how they map from the outputs of its constituent ops.</p></li>\n<li><p><strong>config</strong> (<em>Optional</em><em>[</em><a class=\"reference internal\" href=\"config#dagster.ConfigMapping\" title=\"dagster.ConfigMapping\"><em>ConfigMapping</em></a><em>]</em>) \u2013 Defines the config of the graph, and how its schema maps\nto the config of its constituent ops.</p></li>\n<li><p><strong>tags</strong> (<em>Optional</em><em>[</em><em>Dict</em><em>[</em><a class=\"reference external\" href=\"https://docs.python.org/3/library/stdtypes.html#str\" title=\"(in Python v3.8)\"><em>str</em></a><em>, </em><em>Any</em><em>]</em><em>]</em>) \u2013 Arbitrary metadata for any execution of the graph.\nValues that are not strings will be json encoded and must meet the criteria that\n<cite>json.loads(json.dumps(value)) == value</cite>.  These tag values may be overwritten by tag\nvalues provided at invocation time.</p></li>\n</ul>\n</dd>\n</dl>\n<p class=\"rubric\">Examples</p>\n<div class=\"highlight-python notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"nd\">@op</span>\n<span class=\"k\">def</span> <span class=\"nf\">return_one</span><span class=\"p\">():</span>\n    <span class=\"k\">return</span> <span class=\"mi\">1</span>\n\n<span class=\"nd\">@op</span>\n<span class=\"k\">def</span> <span class=\"nf\">add_one</span><span class=\"p\">(</span><span class=\"n\">num</span><span class=\"p\">):</span>\n    <span class=\"k\">return</span> <span class=\"n\">num</span> <span class=\"o\">+</span> <span class=\"mi\">1</span>\n\n<span class=\"n\">graph_def</span> <span class=\"o\">=</span> <span class=\"n\">GraphDefinition</span><span class=\"p\">(</span>\n    <span class=\"n\">name</span><span class=\"o\">=</span><span class=\"s1\">&#39;basic&#39;</span><span class=\"p\">,</span>\n    <span class=\"n\">node_defs</span><span class=\"o\">=</span><span class=\"p\">[</span><span class=\"n\">return_one</span><span class=\"p\">,</span> <span class=\"n\">add_one</span><span class=\"p\">],</span>\n    <span class=\"n\">dependencies</span><span class=\"o\">=</span><span class=\"p\">{</span><span class=\"s1\">&#39;add_one&#39;</span><span class=\"p\">:</span> <span class=\"p\">{</span><span class=\"s1\">&#39;num&#39;</span><span class=\"p\">:</span> <span class=\"n\">DependencyDefinition</span><span class=\"p\">(</span><span class=\"s1\">&#39;return_one&#39;</span><span class=\"p\">)}},</span>\n<span class=\"p\">)</span>\n</pre></div>\n</div>\n<dl class=\"py method\">\n<dt>\n<code class=\"sig-name descname\"><span class=\"pre\">execute_in_process</span></code><span class=\"sig-paren\">(</span><em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">run_config</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">None</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">instance</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">None</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">resources</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">None</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">raise_on_error</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">True</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">op_selection</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">None</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">run_id</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">None</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">input_values</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">None</span></span></em><span class=\"sig-paren\">)</span><a class=\"reference internal\" href=\"../../../../_modules/dagster/core/definitions/graph_definition#GraphDefinition.execute_in_process\"><span class=\"viewcode-link\"><span class=\"pre\">[source]</span></span></a></dt>\n<dd><p>Execute this graph in-process, collecting results in-memory.</p>\n<dl class=\"field-list simple\">\n<dt class=\"field-odd\">Parameters</dt>\n<dd class=\"field-odd\"><ul class=\"simple\">\n<li><p><strong>run_config</strong> (<em>Optional</em><em>[</em><em>Dict</em><em>[</em><a class=\"reference external\" href=\"https://docs.python.org/3/library/stdtypes.html#str\" title=\"(in Python v3.8)\"><em>str</em></a><em>, </em><em>Any</em><em>]</em><em>]</em>) \u2013 Run config to provide to execution. The configuration for the underlying graph\nshould exist under the \u201cops\u201d key.</p></li>\n<li><p><strong>instance</strong> (<em>Optional</em><em>[</em><a class=\"reference internal\" href=\"internals#dagster.DagsterInstance\" title=\"dagster.DagsterInstance\"><em>DagsterInstance</em></a><em>]</em>) \u2013 The instance to execute against, an ephemeral one will be used if none provided.</p></li>\n<li><p><strong>resources</strong> (<em>Optional</em><em>[</em><em>Dict</em><em>[</em><a class=\"reference external\" href=\"https://docs.python.org/3/library/stdtypes.html#str\" title=\"(in Python v3.8)\"><em>str</em></a><em>, </em><em>Any</em><em>]</em><em>]</em>) \u2013 The resources needed if any are required. Can provide resource instances directly,\nor resource definitions.</p></li>\n<li><p><strong>raise_on_error</strong> (<em>Optional</em><em>[</em><a class=\"reference external\" href=\"https://docs.python.org/3/library/functions.html#bool\" title=\"(in Python v3.8)\"><em>bool</em></a><em>]</em>) \u2013 Whether or not to raise exceptions when they occur.\nDefaults to <code class=\"docutils literal notranslate\"><span class=\"pre\">True</span></code>.</p></li>\n<li><p><strong>op_selection</strong> (<em>Optional</em><em>[</em><em>List</em><em>[</em><a class=\"reference external\" href=\"https://docs.python.org/3/library/stdtypes.html#str\" title=\"(in Python v3.8)\"><em>str</em></a><em>]</em><em>]</em>) \u2013 A list of op selection queries (including single op\nnames) to execute. For example:\n* <code class=\"docutils literal notranslate\"><span class=\"pre\">['some_op']</span></code>: selects <code class=\"docutils literal notranslate\"><span class=\"pre\">some_op</span></code> itself.\n* <code class=\"docutils literal notranslate\"><span class=\"pre\">['*some_op']</span></code>: select <code class=\"docutils literal notranslate\"><span class=\"pre\">some_op</span></code> and all its ancestors (upstream dependencies).\n* <code class=\"docutils literal notranslate\"><span class=\"pre\">['*some_op+++']</span></code>: select <code class=\"docutils literal notranslate\"><span class=\"pre\">some_op</span></code>, all its ancestors, and its descendants\n(downstream dependencies) within 3 levels down.\n* <code class=\"docutils literal notranslate\"><span class=\"pre\">['*some_op',</span> <span class=\"pre\">'other_op_a',</span> <span class=\"pre\">'other_op_b+']</span></code>: select <code class=\"docutils literal notranslate\"><span class=\"pre\">some_op</span></code> and all its\nancestors, <code class=\"docutils literal notranslate\"><span class=\"pre\">other_op_a</span></code> itself, and <code class=\"docutils literal notranslate\"><span class=\"pre\">other_op_b</span></code> and its direct child ops.</p></li>\n<li><p><strong>input_values</strong> (<em>Optional</em><em>[</em><em>Mapping</em><em>[</em><a class=\"reference external\" href=\"https://docs.python.org/3/library/stdtypes.html#str\" title=\"(in Python v3.8)\"><em>str</em></a><em>, </em><em>Any</em><em>]</em><em>]</em>) \u2013 A dictionary that maps python objects to the top-level inputs of the graph.</p></li>\n</ul>\n</dd>\n<dt class=\"field-even\">Returns</dt>\n<dd class=\"field-even\"><p><a class=\"reference internal\" href=\"#dagster.ExecuteInProcessResult\" title=\"dagster.ExecuteInProcessResult\"><code class=\"xref py py-class docutils literal notranslate\"><span class=\"pre\">ExecuteInProcessResult</span></code></a></p>\n</dd>\n</dl>\n</dd></dl>\n\n</dd></dl>\n\n</div>\n<div class=\"section\" id=\"execution-results\">\n<h2>Execution results<a class=\"headerlink\" href=\"#execution-results\" title=\"Permalink to this headline\">\u00b6</a></h2>\n<dl class=\"py class\">\n<dt id=\"dagster.ExecuteInProcessResult\">\n<em class=\"property\"><span class=\"pre\">class</span> </em><code class=\"sig-prename descclassname\"><span class=\"pre\">dagster.</span></code><code class=\"sig-name descname\"><span class=\"pre\">ExecuteInProcessResult</span></code><span class=\"sig-paren\">(</span><em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">node_def</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">all_events</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">dagster_run</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">output_capture</span></span></em><span class=\"sig-paren\">)</span><a class=\"reference internal\" href=\"../../../../_modules/dagster/core/execution/execute_in_process_result#ExecuteInProcessResult\"><span class=\"viewcode-link\"><span class=\"pre\">[source]</span></span></a><a class=\"headerlink\" href=\"#dagster.ExecuteInProcessResult\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><dl class=\"py method\">\n<dt id=\"dagster.ExecuteInProcessResult.all_events\">\n<em class=\"property\"><span class=\"pre\">property</span> </em><code class=\"sig-name descname\"><span class=\"pre\">all_events</span></code><a class=\"headerlink\" href=\"#dagster.ExecuteInProcessResult.all_events\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>All dagster events emitted during in-process execution.</p>\n<dl class=\"field-list simple\">\n<dt class=\"field-odd\">Type</dt>\n<dd class=\"field-odd\"><p>List[<a class=\"reference internal\" href=\"#dagster.DagsterEvent\" title=\"dagster.DagsterEvent\">DagsterEvent</a>]</p>\n</dd>\n</dl>\n</dd></dl>\n\n<dl class=\"py method\">\n<dt id=\"dagster.ExecuteInProcessResult.all_node_events\">\n<em class=\"property\"><span class=\"pre\">property</span> </em><code class=\"sig-name descname\"><span class=\"pre\">all_node_events</span></code><a class=\"headerlink\" href=\"#dagster.ExecuteInProcessResult.all_node_events\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>All dagster events from the in-process execution.</p>\n<dl class=\"field-list simple\">\n<dt class=\"field-odd\">Type</dt>\n<dd class=\"field-odd\"><p>List[<a class=\"reference internal\" href=\"#dagster.DagsterEvent\" title=\"dagster.DagsterEvent\">DagsterEvent</a>]</p>\n</dd>\n</dl>\n</dd></dl>\n\n<dl class=\"py method\">\n<dt id=\"dagster.ExecuteInProcessResult.dagster_run\">\n<em class=\"property\"><span class=\"pre\">property</span> </em><code class=\"sig-name descname\"><span class=\"pre\">dagster_run</span></code><a class=\"headerlink\" href=\"#dagster.ExecuteInProcessResult.dagster_run\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>the DagsterRun object for the completed execution.</p>\n<dl class=\"field-list simple\">\n<dt class=\"field-odd\">Type</dt>\n<dd class=\"field-odd\"><p>DagsterRun</p>\n</dd>\n</dl>\n</dd></dl>\n\n<dl class=\"py method\">\n<dt id=\"dagster.ExecuteInProcessResult.events_for_node\">\n<code class=\"sig-name descname\"><span class=\"pre\">events_for_node</span></code><span class=\"sig-paren\">(</span><em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">node_name</span></span></em><span class=\"sig-paren\">)</span><a class=\"reference internal\" href=\"../../../../_modules/dagster/core/execution/execute_in_process_result#ExecuteInProcessResult.events_for_node\"><span class=\"viewcode-link\"><span class=\"pre\">[source]</span></span></a><a class=\"headerlink\" href=\"#dagster.ExecuteInProcessResult.events_for_node\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Retrieves all dagster events for a specific node.</p>\n<dl class=\"field-list simple\">\n<dt class=\"field-odd\">Parameters</dt>\n<dd class=\"field-odd\"><p><strong>node_name</strong> (<a class=\"reference external\" href=\"https://docs.python.org/3/library/stdtypes.html#str\" title=\"(in Python v3.8)\"><em>str</em></a>) \u2013 The name of the node for which outputs should be retrieved.</p>\n</dd>\n<dt class=\"field-even\">Returns</dt>\n<dd class=\"field-even\"><p>A list of all dagster events associated with provided node name.</p>\n</dd>\n<dt class=\"field-odd\">Return type</dt>\n<dd class=\"field-odd\"><p>List[<a class=\"reference internal\" href=\"#dagster.DagsterEvent\" title=\"dagster.DagsterEvent\">DagsterEvent</a>]</p>\n</dd>\n</dl>\n</dd></dl>\n\n<dl class=\"py method\">\n<dt id=\"dagster.ExecuteInProcessResult.get_job_failure_event\">\n<code class=\"sig-name descname\"><span class=\"pre\">get_job_failure_event</span></code><span class=\"sig-paren\">(</span><span class=\"sig-paren\">)</span><a class=\"reference internal\" href=\"../../../../_modules/dagster/core/execution/execute_in_process_result#ExecuteInProcessResult.get_job_failure_event\"><span class=\"viewcode-link\"><span class=\"pre\">[source]</span></span></a><a class=\"headerlink\" href=\"#dagster.ExecuteInProcessResult.get_job_failure_event\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Returns a DagsterEvent with type DagsterEventType.PIPELINE_FAILURE if it ocurred during\nexecution</p>\n</dd></dl>\n\n<dl class=\"py method\">\n<dt id=\"dagster.ExecuteInProcessResult.get_job_success_event\">\n<code class=\"sig-name descname\"><span class=\"pre\">get_job_success_event</span></code><span class=\"sig-paren\">(</span><span class=\"sig-paren\">)</span><a class=\"reference internal\" href=\"../../../../_modules/dagster/core/execution/execute_in_process_result#ExecuteInProcessResult.get_job_success_event\"><span class=\"viewcode-link\"><span class=\"pre\">[source]</span></span></a><a class=\"headerlink\" href=\"#dagster.ExecuteInProcessResult.get_job_success_event\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Returns a DagsterEvent with type DagsterEventType.PIPELINE_SUCCESS if it ocurred during\nexecution</p>\n</dd></dl>\n\n<dl class=\"py method\">\n<dt id=\"dagster.ExecuteInProcessResult.output_for_node\">\n<code class=\"sig-name descname\"><span class=\"pre\">output_for_node</span></code><span class=\"sig-paren\">(</span><em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">node_str</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">output_name</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">'result'</span></span></em><span class=\"sig-paren\">)</span><a class=\"reference internal\" href=\"../../../../_modules/dagster/core/execution/execute_in_process_result#ExecuteInProcessResult.output_for_node\"><span class=\"viewcode-link\"><span class=\"pre\">[source]</span></span></a><a class=\"headerlink\" href=\"#dagster.ExecuteInProcessResult.output_for_node\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Retrieves output value with a particular name from the in-process run of the job.</p>\n<dl class=\"field-list simple\">\n<dt class=\"field-odd\">Parameters</dt>\n<dd class=\"field-odd\"><ul class=\"simple\">\n<li><p><strong>node_str</strong> (<a class=\"reference external\" href=\"https://docs.python.org/3/library/stdtypes.html#str\" title=\"(in Python v3.8)\"><em>str</em></a>) \u2013 Name of the op/graph whose output should be retrieved. If the intended\ngraph/op is nested within another graph, the syntax is <cite>outer_graph.inner_node</cite>.</p></li>\n<li><p><strong>output_name</strong> (<em>Optional</em><em>[</em><a class=\"reference external\" href=\"https://docs.python.org/3/library/stdtypes.html#str\" title=\"(in Python v3.8)\"><em>str</em></a><em>]</em>) \u2013 Name of the output on the op/graph to retrieve. Defaults to\n<cite>result</cite>, the default output name in dagster.</p></li>\n</ul>\n</dd>\n<dt class=\"field-even\">Returns</dt>\n<dd class=\"field-even\"><p>The value of the retrieved output.</p>\n</dd>\n<dt class=\"field-odd\">Return type</dt>\n<dd class=\"field-odd\"><p>Any</p>\n</dd>\n</dl>\n</dd></dl>\n\n<dl class=\"py method\">\n<dt id=\"dagster.ExecuteInProcessResult.output_value\">\n<code class=\"sig-name descname\"><span class=\"pre\">output_value</span></code><span class=\"sig-paren\">(</span><em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">output_name</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">'result'</span></span></em><span class=\"sig-paren\">)</span><a class=\"reference internal\" href=\"../../../../_modules/dagster/core/execution/execute_in_process_result#ExecuteInProcessResult.output_value\"><span class=\"viewcode-link\"><span class=\"pre\">[source]</span></span></a><a class=\"headerlink\" href=\"#dagster.ExecuteInProcessResult.output_value\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Retrieves output of top-level job, if an output is returned.</p>\n<p>If the top-level job has no output, calling this method will result in a\nDagsterInvariantViolationError.</p>\n<dl class=\"field-list simple\">\n<dt class=\"field-odd\">Parameters</dt>\n<dd class=\"field-odd\"><p><strong>output_name</strong> (<em>Optional</em><em>[</em><a class=\"reference external\" href=\"https://docs.python.org/3/library/stdtypes.html#str\" title=\"(in Python v3.8)\"><em>str</em></a><em>]</em>) \u2013 The name of the output to retrieve. Defaults to <cite>result</cite>,\nthe default output name in dagster.</p>\n</dd>\n<dt class=\"field-even\">Returns</dt>\n<dd class=\"field-even\"><p>The value of the retrieved output.</p>\n</dd>\n<dt class=\"field-odd\">Return type</dt>\n<dd class=\"field-odd\"><p>Any</p>\n</dd>\n</dl>\n</dd></dl>\n\n<dl class=\"py method\">\n<dt id=\"dagster.ExecuteInProcessResult.run_id\">\n<em class=\"property\"><span class=\"pre\">property</span> </em><code class=\"sig-name descname\"><span class=\"pre\">run_id</span></code><a class=\"headerlink\" href=\"#dagster.ExecuteInProcessResult.run_id\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>The run id for the executed run</p>\n<dl class=\"field-list simple\">\n<dt class=\"field-odd\">Type</dt>\n<dd class=\"field-odd\"><p><a class=\"reference external\" href=\"https://docs.python.org/3/library/stdtypes.html#str\" title=\"(in Python v3.8)\">str</a></p>\n</dd>\n</dl>\n</dd></dl>\n\n<dl class=\"py method\">\n<dt id=\"dagster.ExecuteInProcessResult.success\">\n<em class=\"property\"><span class=\"pre\">property</span> </em><code class=\"sig-name descname\"><span class=\"pre\">success</span></code><a class=\"headerlink\" href=\"#dagster.ExecuteInProcessResult.success\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Whether execution was successful.</p>\n<dl class=\"field-list simple\">\n<dt class=\"field-odd\">Type</dt>\n<dd class=\"field-odd\"><p><a class=\"reference external\" href=\"https://docs.python.org/3/library/functions.html#bool\" title=\"(in Python v3.8)\">bool</a></p>\n</dd>\n</dl>\n</dd></dl>\n\n</dd></dl>\n\n<dl class=\"py class\">\n<dt id=\"dagster.DagsterEvent\">\n<em class=\"property\"><span class=\"pre\">class</span> </em><code class=\"sig-prename descclassname\"><span class=\"pre\">dagster.</span></code><code class=\"sig-name descname\"><span class=\"pre\">DagsterEvent</span></code><span class=\"sig-paren\">(</span><em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">event_type_value</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">pipeline_name</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">step_handle</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">None</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">solid_handle</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">None</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">step_kind_value</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">None</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">logging_tags</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">None</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">event_specific_data</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">None</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">message</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">None</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">pid</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">None</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">step_key</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">None</span></span></em><span class=\"sig-paren\">)</span><a class=\"reference internal\" href=\"../../../../_modules/dagster/core/events#DagsterEvent\"><span class=\"viewcode-link\"><span class=\"pre\">[source]</span></span></a><a class=\"headerlink\" href=\"#dagster.DagsterEvent\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Events yielded by solid and pipeline execution.</p>\n<p>Users should not instantiate this class.</p>\n<dl class=\"py attribute\">\n<dt id=\"dagster.DagsterEvent.event_type_value\">\n<code class=\"sig-name descname\"><span class=\"pre\">event_type_value</span></code><a class=\"headerlink\" href=\"#dagster.DagsterEvent.event_type_value\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Value for a DagsterEventType.</p>\n<dl class=\"field-list simple\">\n<dt class=\"field-odd\">Type</dt>\n<dd class=\"field-odd\"><p><a class=\"reference external\" href=\"https://docs.python.org/3/library/stdtypes.html#str\" title=\"(in Python v3.8)\">str</a></p>\n</dd>\n</dl>\n</dd></dl>\n\n<dl class=\"py attribute\">\n<dt id=\"dagster.DagsterEvent.pipeline_name\">\n<code class=\"sig-name descname\"><span class=\"pre\">pipeline_name</span></code><a class=\"headerlink\" href=\"#dagster.DagsterEvent.pipeline_name\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><dl class=\"field-list simple\">\n<dt class=\"field-odd\">Type</dt>\n<dd class=\"field-odd\"><p><a class=\"reference external\" href=\"https://docs.python.org/3/library/stdtypes.html#str\" title=\"(in Python v3.8)\">str</a></p>\n</dd>\n</dl>\n</dd></dl>\n\n<dl class=\"py attribute\">\n<dt id=\"dagster.DagsterEvent.solid_handle\">\n<code class=\"sig-name descname\"><span class=\"pre\">solid_handle</span></code><a class=\"headerlink\" href=\"#dagster.DagsterEvent.solid_handle\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><dl class=\"field-list simple\">\n<dt class=\"field-odd\">Type</dt>\n<dd class=\"field-odd\"><p>NodeHandle</p>\n</dd>\n</dl>\n</dd></dl>\n\n<dl class=\"py attribute\">\n<dt id=\"dagster.DagsterEvent.step_kind_value\">\n<code class=\"sig-name descname\"><span class=\"pre\">step_kind_value</span></code><a class=\"headerlink\" href=\"#dagster.DagsterEvent.step_kind_value\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Value for a StepKind.</p>\n<dl class=\"field-list simple\">\n<dt class=\"field-odd\">Type</dt>\n<dd class=\"field-odd\"><p><a class=\"reference external\" href=\"https://docs.python.org/3/library/stdtypes.html#str\" title=\"(in Python v3.8)\">str</a></p>\n</dd>\n</dl>\n</dd></dl>\n\n<dl class=\"py attribute\">\n<dt id=\"dagster.DagsterEvent.logging_tags\">\n<code class=\"sig-name descname\"><span class=\"pre\">logging_tags</span></code><a class=\"headerlink\" href=\"#dagster.DagsterEvent.logging_tags\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><dl class=\"field-list simple\">\n<dt class=\"field-odd\">Type</dt>\n<dd class=\"field-odd\"><p>Dict[<a class=\"reference external\" href=\"https://docs.python.org/3/library/stdtypes.html#str\" title=\"(in Python v3.8)\">str</a>, <a class=\"reference external\" href=\"https://docs.python.org/3/library/stdtypes.html#str\" title=\"(in Python v3.8)\">str</a>]</p>\n</dd>\n</dl>\n</dd></dl>\n\n<dl class=\"py attribute\">\n<dt id=\"dagster.DagsterEvent.event_specific_data\">\n<code class=\"sig-name descname\"><span class=\"pre\">event_specific_data</span></code><a class=\"headerlink\" href=\"#dagster.DagsterEvent.event_specific_data\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Type must correspond to event_type_value.</p>\n<dl class=\"field-list simple\">\n<dt class=\"field-odd\">Type</dt>\n<dd class=\"field-odd\"><p>Any</p>\n</dd>\n</dl>\n</dd></dl>\n\n<dl class=\"py attribute\">\n<dt id=\"dagster.DagsterEvent.message\">\n<code class=\"sig-name descname\"><span class=\"pre\">message</span></code><a class=\"headerlink\" href=\"#dagster.DagsterEvent.message\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><dl class=\"field-list simple\">\n<dt class=\"field-odd\">Type</dt>\n<dd class=\"field-odd\"><p><a class=\"reference external\" href=\"https://docs.python.org/3/library/stdtypes.html#str\" title=\"(in Python v3.8)\">str</a></p>\n</dd>\n</dl>\n</dd></dl>\n\n<dl class=\"py attribute\">\n<dt id=\"dagster.DagsterEvent.pid\">\n<code class=\"sig-name descname\"><span class=\"pre\">pid</span></code><a class=\"headerlink\" href=\"#dagster.DagsterEvent.pid\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><dl class=\"field-list simple\">\n<dt class=\"field-odd\">Type</dt>\n<dd class=\"field-odd\"><p><a class=\"reference external\" href=\"https://docs.python.org/3/library/functions.html#int\" title=\"(in Python v3.8)\">int</a></p>\n</dd>\n</dl>\n</dd></dl>\n\n<dl class=\"py attribute\">\n<dt id=\"dagster.DagsterEvent.step_key\">\n<code class=\"sig-name descname\"><span class=\"pre\">step_key</span></code><a class=\"headerlink\" href=\"#dagster.DagsterEvent.step_key\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>DEPRECATED</p>\n<dl class=\"field-list simple\">\n<dt class=\"field-odd\">Type</dt>\n<dd class=\"field-odd\"><p>Optional[<a class=\"reference external\" href=\"https://docs.python.org/3/library/stdtypes.html#str\" title=\"(in Python v3.8)\">str</a>]</p>\n</dd>\n</dl>\n</dd></dl>\n\n<dl class=\"py method\">\n<dt id=\"dagster.DagsterEvent.event_type\">\n<em class=\"property\"><span class=\"pre\">property</span> </em><code class=\"sig-name descname\"><span class=\"pre\">event_type</span></code><a class=\"headerlink\" href=\"#dagster.DagsterEvent.event_type\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>The type of this event.</p>\n<dl class=\"field-list simple\">\n<dt class=\"field-odd\">Type</dt>\n<dd class=\"field-odd\"><p><a class=\"reference internal\" href=\"#dagster.DagsterEventType\" title=\"dagster.DagsterEventType\">DagsterEventType</a></p>\n</dd>\n</dl>\n</dd></dl>\n\n</dd></dl>\n\n<dl class=\"py class\">\n<dt id=\"dagster.DagsterEventType\">\n<em class=\"property\"><span class=\"pre\">class</span> </em><code class=\"sig-prename descclassname\"><span class=\"pre\">dagster.</span></code><code class=\"sig-name descname\"><span class=\"pre\">DagsterEventType</span></code><span class=\"sig-paren\">(</span><em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">value</span></span></em><span class=\"sig-paren\">)</span><a class=\"reference internal\" href=\"../../../../_modules/dagster/core/events#DagsterEventType\"><span class=\"viewcode-link\"><span class=\"pre\">[source]</span></span></a><a class=\"headerlink\" href=\"#dagster.DagsterEventType\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>The types of events that may be yielded by solid and pipeline execution.</p>\n<dl class=\"py attribute\">\n<dt id=\"dagster.DagsterEventType.ALERT_FAILURE\">\n<code class=\"sig-name descname\"><span class=\"pre\">ALERT_FAILURE</span></code><em class=\"property\"> <span class=\"pre\">=</span> <span class=\"pre\">'ALERT_FAILURE'</span></em><a class=\"headerlink\" href=\"#dagster.DagsterEventType.ALERT_FAILURE\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd></dd></dl>\n\n<dl class=\"py attribute\">\n<dt id=\"dagster.DagsterEventType.ALERT_START\">\n<code class=\"sig-name descname\"><span class=\"pre\">ALERT_START</span></code><em class=\"property\"> <span class=\"pre\">=</span> <span class=\"pre\">'ALERT_START'</span></em><a class=\"headerlink\" href=\"#dagster.DagsterEventType.ALERT_START\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd></dd></dl>\n\n<dl class=\"py attribute\">\n<dt id=\"dagster.DagsterEventType.ALERT_SUCCESS\">\n<code class=\"sig-name descname\"><span class=\"pre\">ALERT_SUCCESS</span></code><em class=\"property\"> <span class=\"pre\">=</span> <span class=\"pre\">'ALERT_SUCCESS'</span></em><a class=\"headerlink\" href=\"#dagster.DagsterEventType.ALERT_SUCCESS\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd></dd></dl>\n\n<dl class=\"py attribute\">\n<dt id=\"dagster.DagsterEventType.ASSET_MATERIALIZATION\">\n<code class=\"sig-name descname\"><span class=\"pre\">ASSET_MATERIALIZATION</span></code><em class=\"property\"> <span class=\"pre\">=</span> <span class=\"pre\">'ASSET_MATERIALIZATION'</span></em><a class=\"headerlink\" href=\"#dagster.DagsterEventType.ASSET_MATERIALIZATION\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd></dd></dl>\n\n<dl class=\"py attribute\">\n<dt id=\"dagster.DagsterEventType.ASSET_MATERIALIZATION_PLANNED\">\n<code class=\"sig-name descname\"><span class=\"pre\">ASSET_MATERIALIZATION_PLANNED</span></code><em class=\"property\"> <span class=\"pre\">=</span> <span class=\"pre\">'ASSET_MATERIALIZATION_PLANNED'</span></em><a class=\"headerlink\" href=\"#dagster.DagsterEventType.ASSET_MATERIALIZATION_PLANNED\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd></dd></dl>\n\n<dl class=\"py attribute\">\n<dt id=\"dagster.DagsterEventType.ASSET_OBSERVATION\">\n<code class=\"sig-name descname\"><span class=\"pre\">ASSET_OBSERVATION</span></code><em class=\"property\"> <span class=\"pre\">=</span> <span class=\"pre\">'ASSET_OBSERVATION'</span></em><a class=\"headerlink\" href=\"#dagster.DagsterEventType.ASSET_OBSERVATION\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd></dd></dl>\n\n<dl class=\"py attribute\">\n<dt id=\"dagster.DagsterEventType.ASSET_STORE_OPERATION\">\n<code class=\"sig-name descname\"><span class=\"pre\">ASSET_STORE_OPERATION</span></code><em class=\"property\"> <span class=\"pre\">=</span> <span class=\"pre\">'ASSET_STORE_OPERATION'</span></em><a class=\"headerlink\" href=\"#dagster.DagsterEventType.ASSET_STORE_OPERATION\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd></dd></dl>\n\n<dl class=\"py attribute\">\n<dt id=\"dagster.DagsterEventType.ENGINE_EVENT\">\n<code class=\"sig-name descname\"><span class=\"pre\">ENGINE_EVENT</span></code><em class=\"property\"> <span class=\"pre\">=</span> <span class=\"pre\">'ENGINE_EVENT'</span></em><a class=\"headerlink\" href=\"#dagster.DagsterEventType.ENGINE_EVENT\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd></dd></dl>\n\n<dl class=\"py attribute\">\n<dt id=\"dagster.DagsterEventType.HANDLED_OUTPUT\">\n<code class=\"sig-name descname\"><span class=\"pre\">HANDLED_OUTPUT</span></code><em class=\"property\"> <span class=\"pre\">=</span> <span class=\"pre\">'HANDLED_OUTPUT'</span></em><a class=\"headerlink\" href=\"#dagster.DagsterEventType.HANDLED_OUTPUT\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd></dd></dl>\n\n<dl class=\"py attribute\">\n<dt id=\"dagster.DagsterEventType.HOOK_COMPLETED\">\n<code class=\"sig-name descname\"><span class=\"pre\">HOOK_COMPLETED</span></code><em class=\"property\"> <span class=\"pre\">=</span> <span class=\"pre\">'HOOK_COMPLETED'</span></em><a class=\"headerlink\" href=\"#dagster.DagsterEventType.HOOK_COMPLETED\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd></dd></dl>\n\n<dl class=\"py attribute\">\n<dt id=\"dagster.DagsterEventType.HOOK_ERRORED\">\n<code class=\"sig-name descname\"><span class=\"pre\">HOOK_ERRORED</span></code><em class=\"property\"> <span class=\"pre\">=</span> <span class=\"pre\">'HOOK_ERRORED'</span></em><a class=\"headerlink\" href=\"#dagster.DagsterEventType.HOOK_ERRORED\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd></dd></dl>\n\n<dl class=\"py attribute\">\n<dt id=\"dagster.DagsterEventType.HOOK_SKIPPED\">\n<code class=\"sig-name descname\"><span class=\"pre\">HOOK_SKIPPED</span></code><em class=\"property\"> <span class=\"pre\">=</span> <span class=\"pre\">'HOOK_SKIPPED'</span></em><a class=\"headerlink\" href=\"#dagster.DagsterEventType.HOOK_SKIPPED\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd></dd></dl>\n\n<dl class=\"py attribute\">\n<dt id=\"dagster.DagsterEventType.LOADED_INPUT\">\n<code class=\"sig-name descname\"><span class=\"pre\">LOADED_INPUT</span></code><em class=\"property\"> <span class=\"pre\">=</span> <span class=\"pre\">'LOADED_INPUT'</span></em><a class=\"headerlink\" href=\"#dagster.DagsterEventType.LOADED_INPUT\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd></dd></dl>\n\n<dl class=\"py attribute\">\n<dt id=\"dagster.DagsterEventType.LOGS_CAPTURED\">\n<code class=\"sig-name descname\"><span class=\"pre\">LOGS_CAPTURED</span></code><em class=\"property\"> <span class=\"pre\">=</span> <span class=\"pre\">'LOGS_CAPTURED'</span></em><a class=\"headerlink\" href=\"#dagster.DagsterEventType.LOGS_CAPTURED\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd></dd></dl>\n\n<dl class=\"py attribute\">\n<dt id=\"dagster.DagsterEventType.OBJECT_STORE_OPERATION\">\n<code class=\"sig-name descname\"><span class=\"pre\">OBJECT_STORE_OPERATION</span></code><em class=\"property\"> <span class=\"pre\">=</span> <span class=\"pre\">'OBJECT_STORE_OPERATION'</span></em><a class=\"headerlink\" href=\"#dagster.DagsterEventType.OBJECT_STORE_OPERATION\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd></dd></dl>\n\n<dl class=\"py attribute\">\n<dt id=\"dagster.DagsterEventType.PIPELINE_CANCELED\">\n<code class=\"sig-name descname\"><span class=\"pre\">PIPELINE_CANCELED</span></code><em class=\"property\"> <span class=\"pre\">=</span> <span class=\"pre\">'PIPELINE_CANCELED'</span></em><a class=\"headerlink\" href=\"#dagster.DagsterEventType.PIPELINE_CANCELED\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd></dd></dl>\n\n<dl class=\"py attribute\">\n<dt id=\"dagster.DagsterEventType.PIPELINE_CANCELING\">\n<code class=\"sig-name descname\"><span class=\"pre\">PIPELINE_CANCELING</span></code><em class=\"property\"> <span class=\"pre\">=</span> <span class=\"pre\">'PIPELINE_CANCELING'</span></em><a class=\"headerlink\" href=\"#dagster.DagsterEventType.PIPELINE_CANCELING\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd></dd></dl>\n\n<dl class=\"py attribute\">\n<dt id=\"dagster.DagsterEventType.PIPELINE_DEQUEUED\">\n<code class=\"sig-name descname\"><span class=\"pre\">PIPELINE_DEQUEUED</span></code><em class=\"property\"> <span class=\"pre\">=</span> <span class=\"pre\">'PIPELINE_DEQUEUED'</span></em><a class=\"headerlink\" href=\"#dagster.DagsterEventType.PIPELINE_DEQUEUED\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd></dd></dl>\n\n<dl class=\"py attribute\">\n<dt id=\"dagster.DagsterEventType.PIPELINE_ENQUEUED\">\n<code class=\"sig-name descname\"><span class=\"pre\">PIPELINE_ENQUEUED</span></code><em class=\"property\"> <span class=\"pre\">=</span> <span class=\"pre\">'PIPELINE_ENQUEUED'</span></em><a class=\"headerlink\" href=\"#dagster.DagsterEventType.PIPELINE_ENQUEUED\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd></dd></dl>\n\n<dl class=\"py attribute\">\n<dt id=\"dagster.DagsterEventType.PIPELINE_FAILURE\">\n<code class=\"sig-name descname\"><span class=\"pre\">PIPELINE_FAILURE</span></code><em class=\"property\"> <span class=\"pre\">=</span> <span class=\"pre\">'PIPELINE_FAILURE'</span></em><a class=\"headerlink\" href=\"#dagster.DagsterEventType.PIPELINE_FAILURE\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd></dd></dl>\n\n<dl class=\"py attribute\">\n<dt id=\"dagster.DagsterEventType.PIPELINE_START\">\n<code class=\"sig-name descname\"><span class=\"pre\">PIPELINE_START</span></code><em class=\"property\"> <span class=\"pre\">=</span> <span class=\"pre\">'PIPELINE_START'</span></em><a class=\"headerlink\" href=\"#dagster.DagsterEventType.PIPELINE_START\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd></dd></dl>\n\n<dl class=\"py attribute\">\n<dt id=\"dagster.DagsterEventType.PIPELINE_STARTING\">\n<code class=\"sig-name descname\"><span class=\"pre\">PIPELINE_STARTING</span></code><em class=\"property\"> <span class=\"pre\">=</span> <span class=\"pre\">'PIPELINE_STARTING'</span></em><a class=\"headerlink\" href=\"#dagster.DagsterEventType.PIPELINE_STARTING\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd></dd></dl>\n\n<dl class=\"py attribute\">\n<dt id=\"dagster.DagsterEventType.PIPELINE_SUCCESS\">\n<code class=\"sig-name descname\"><span class=\"pre\">PIPELINE_SUCCESS</span></code><em class=\"property\"> <span class=\"pre\">=</span> <span class=\"pre\">'PIPELINE_SUCCESS'</span></em><a class=\"headerlink\" href=\"#dagster.DagsterEventType.PIPELINE_SUCCESS\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd></dd></dl>\n\n<dl class=\"py attribute\">\n<dt id=\"dagster.DagsterEventType.RESOURCE_INIT_FAILURE\">\n<code class=\"sig-name descname\"><span class=\"pre\">RESOURCE_INIT_FAILURE</span></code><em class=\"property\"> <span class=\"pre\">=</span> <span class=\"pre\">'RESOURCE_INIT_FAILURE'</span></em><a class=\"headerlink\" href=\"#dagster.DagsterEventType.RESOURCE_INIT_FAILURE\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd></dd></dl>\n\n<dl class=\"py attribute\">\n<dt id=\"dagster.DagsterEventType.RESOURCE_INIT_STARTED\">\n<code class=\"sig-name descname\"><span class=\"pre\">RESOURCE_INIT_STARTED</span></code><em class=\"property\"> <span class=\"pre\">=</span> <span class=\"pre\">'RESOURCE_INIT_STARTED'</span></em><a class=\"headerlink\" href=\"#dagster.DagsterEventType.RESOURCE_INIT_STARTED\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd></dd></dl>\n\n<dl class=\"py attribute\">\n<dt id=\"dagster.DagsterEventType.RESOURCE_INIT_SUCCESS\">\n<code class=\"sig-name descname\"><span class=\"pre\">RESOURCE_INIT_SUCCESS</span></code><em class=\"property\"> <span class=\"pre\">=</span> <span class=\"pre\">'RESOURCE_INIT_SUCCESS'</span></em><a class=\"headerlink\" href=\"#dagster.DagsterEventType.RESOURCE_INIT_SUCCESS\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd></dd></dl>\n\n<dl class=\"py attribute\">\n<dt id=\"dagster.DagsterEventType.RUN_CANCELED\">\n<code class=\"sig-name descname\"><span class=\"pre\">RUN_CANCELED</span></code><em class=\"property\"> <span class=\"pre\">=</span> <span class=\"pre\">'PIPELINE_CANCELED'</span></em><a class=\"headerlink\" href=\"#dagster.DagsterEventType.RUN_CANCELED\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd></dd></dl>\n\n<dl class=\"py attribute\">\n<dt id=\"dagster.DagsterEventType.RUN_CANCELING\">\n<code class=\"sig-name descname\"><span class=\"pre\">RUN_CANCELING</span></code><em class=\"property\"> <span class=\"pre\">=</span> <span class=\"pre\">'PIPELINE_CANCELING'</span></em><a class=\"headerlink\" href=\"#dagster.DagsterEventType.RUN_CANCELING\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd></dd></dl>\n\n<dl class=\"py attribute\">\n<dt id=\"dagster.DagsterEventType.RUN_DEQUEUED\">\n<code class=\"sig-name descname\"><span class=\"pre\">RUN_DEQUEUED</span></code><em class=\"property\"> <span class=\"pre\">=</span> <span class=\"pre\">'PIPELINE_DEQUEUED'</span></em><a class=\"headerlink\" href=\"#dagster.DagsterEventType.RUN_DEQUEUED\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd></dd></dl>\n\n<dl class=\"py attribute\">\n<dt id=\"dagster.DagsterEventType.RUN_ENQUEUED\">\n<code class=\"sig-name descname\"><span class=\"pre\">RUN_ENQUEUED</span></code><em class=\"property\"> <span class=\"pre\">=</span> <span class=\"pre\">'PIPELINE_ENQUEUED'</span></em><a class=\"headerlink\" href=\"#dagster.DagsterEventType.RUN_ENQUEUED\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd></dd></dl>\n\n<dl class=\"py attribute\">\n<dt id=\"dagster.DagsterEventType.RUN_FAILURE\">\n<code class=\"sig-name descname\"><span class=\"pre\">RUN_FAILURE</span></code><em class=\"property\"> <span class=\"pre\">=</span> <span class=\"pre\">'PIPELINE_FAILURE'</span></em><a class=\"headerlink\" href=\"#dagster.DagsterEventType.RUN_FAILURE\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd></dd></dl>\n\n<dl class=\"py attribute\">\n<dt id=\"dagster.DagsterEventType.RUN_START\">\n<code class=\"sig-name descname\"><span class=\"pre\">RUN_START</span></code><em class=\"property\"> <span class=\"pre\">=</span> <span class=\"pre\">'PIPELINE_START'</span></em><a class=\"headerlink\" href=\"#dagster.DagsterEventType.RUN_START\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd></dd></dl>\n\n<dl class=\"py attribute\">\n<dt id=\"dagster.DagsterEventType.RUN_STARTING\">\n<code class=\"sig-name descname\"><span class=\"pre\">RUN_STARTING</span></code><em class=\"property\"> <span class=\"pre\">=</span> <span class=\"pre\">'PIPELINE_STARTING'</span></em><a class=\"headerlink\" href=\"#dagster.DagsterEventType.RUN_STARTING\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd></dd></dl>\n\n<dl class=\"py attribute\">\n<dt id=\"dagster.DagsterEventType.RUN_SUCCESS\">\n<code class=\"sig-name descname\"><span class=\"pre\">RUN_SUCCESS</span></code><em class=\"property\"> <span class=\"pre\">=</span> <span class=\"pre\">'PIPELINE_SUCCESS'</span></em><a class=\"headerlink\" href=\"#dagster.DagsterEventType.RUN_SUCCESS\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd></dd></dl>\n\n<dl class=\"py attribute\">\n<dt id=\"dagster.DagsterEventType.STEP_EXPECTATION_RESULT\">\n<code class=\"sig-name descname\"><span class=\"pre\">STEP_EXPECTATION_RESULT</span></code><em class=\"property\"> <span class=\"pre\">=</span> <span class=\"pre\">'STEP_EXPECTATION_RESULT'</span></em><a class=\"headerlink\" href=\"#dagster.DagsterEventType.STEP_EXPECTATION_RESULT\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd></dd></dl>\n\n<dl class=\"py attribute\">\n<dt id=\"dagster.DagsterEventType.STEP_FAILURE\">\n<code class=\"sig-name descname\"><span class=\"pre\">STEP_FAILURE</span></code><em class=\"property\"> <span class=\"pre\">=</span> <span class=\"pre\">'STEP_FAILURE'</span></em><a class=\"headerlink\" href=\"#dagster.DagsterEventType.STEP_FAILURE\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd></dd></dl>\n\n<dl class=\"py attribute\">\n<dt id=\"dagster.DagsterEventType.STEP_INPUT\">\n<code class=\"sig-name descname\"><span class=\"pre\">STEP_INPUT</span></code><em class=\"property\"> <span class=\"pre\">=</span> <span class=\"pre\">'STEP_INPUT'</span></em><a class=\"headerlink\" href=\"#dagster.DagsterEventType.STEP_INPUT\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd></dd></dl>\n\n<dl class=\"py attribute\">\n<dt id=\"dagster.DagsterEventType.STEP_OUTPUT\">\n<code class=\"sig-name descname\"><span class=\"pre\">STEP_OUTPUT</span></code><em class=\"property\"> <span class=\"pre\">=</span> <span class=\"pre\">'STEP_OUTPUT'</span></em><a class=\"headerlink\" href=\"#dagster.DagsterEventType.STEP_OUTPUT\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd></dd></dl>\n\n<dl class=\"py attribute\">\n<dt id=\"dagster.DagsterEventType.STEP_RESTARTED\">\n<code class=\"sig-name descname\"><span class=\"pre\">STEP_RESTARTED</span></code><em class=\"property\"> <span class=\"pre\">=</span> <span class=\"pre\">'STEP_RESTARTED'</span></em><a class=\"headerlink\" href=\"#dagster.DagsterEventType.STEP_RESTARTED\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd></dd></dl>\n\n<dl class=\"py attribute\">\n<dt id=\"dagster.DagsterEventType.STEP_SKIPPED\">\n<code class=\"sig-name descname\"><span class=\"pre\">STEP_SKIPPED</span></code><em class=\"property\"> <span class=\"pre\">=</span> <span class=\"pre\">'STEP_SKIPPED'</span></em><a class=\"headerlink\" href=\"#dagster.DagsterEventType.STEP_SKIPPED\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd></dd></dl>\n\n<dl class=\"py attribute\">\n<dt id=\"dagster.DagsterEventType.STEP_START\">\n<code class=\"sig-name descname\"><span class=\"pre\">STEP_START</span></code><em class=\"property\"> <span class=\"pre\">=</span> <span class=\"pre\">'STEP_START'</span></em><a class=\"headerlink\" href=\"#dagster.DagsterEventType.STEP_START\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd></dd></dl>\n\n<dl class=\"py attribute\">\n<dt id=\"dagster.DagsterEventType.STEP_SUCCESS\">\n<code class=\"sig-name descname\"><span class=\"pre\">STEP_SUCCESS</span></code><em class=\"property\"> <span class=\"pre\">=</span> <span class=\"pre\">'STEP_SUCCESS'</span></em><a class=\"headerlink\" href=\"#dagster.DagsterEventType.STEP_SUCCESS\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd></dd></dl>\n\n<dl class=\"py attribute\">\n<dt id=\"dagster.DagsterEventType.STEP_UP_FOR_RETRY\">\n<code class=\"sig-name descname\"><span class=\"pre\">STEP_UP_FOR_RETRY</span></code><em class=\"property\"> <span class=\"pre\">=</span> <span class=\"pre\">'STEP_UP_FOR_RETRY'</span></em><a class=\"headerlink\" href=\"#dagster.DagsterEventType.STEP_UP_FOR_RETRY\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd></dd></dl>\n\n<dl class=\"py attribute\">\n<dt id=\"dagster.DagsterEventType.STEP_WORKER_STARTED\">\n<code class=\"sig-name descname\"><span class=\"pre\">STEP_WORKER_STARTED</span></code><em class=\"property\"> <span class=\"pre\">=</span> <span class=\"pre\">'STEP_WORKER_STARTED'</span></em><a class=\"headerlink\" href=\"#dagster.DagsterEventType.STEP_WORKER_STARTED\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd></dd></dl>\n\n<dl class=\"py attribute\">\n<dt id=\"dagster.DagsterEventType.STEP_WORKER_STARTING\">\n<code class=\"sig-name descname\"><span class=\"pre\">STEP_WORKER_STARTING</span></code><em class=\"property\"> <span class=\"pre\">=</span> <span class=\"pre\">'STEP_WORKER_STARTING'</span></em><a class=\"headerlink\" href=\"#dagster.DagsterEventType.STEP_WORKER_STARTING\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd></dd></dl>\n\n</dd></dl>\n\n</div>\n<div class=\"section\" id=\"reconstructable-jobs\">\n<h2>Reconstructable jobs<a class=\"headerlink\" href=\"#reconstructable-jobs\" title=\"Permalink to this headline\">\u00b6</a></h2>\n<dl class=\"py class\">\n<dt id=\"dagster.reconstructable\">\n<em class=\"property\"><span class=\"pre\">class</span> </em><code class=\"sig-prename descclassname\"><span class=\"pre\">dagster.</span></code><code class=\"sig-name descname\"><span class=\"pre\">reconstructable</span></code><span class=\"sig-paren\">(</span><em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">target</span></span></em><span class=\"sig-paren\">)</span><a class=\"reference internal\" href=\"../../../../_modules/dagster/core/definitions/reconstruct#reconstructable\"><span class=\"viewcode-link\"><span class=\"pre\">[source]</span></span></a><a class=\"headerlink\" href=\"#dagster.reconstructable\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Create a <code class=\"xref py py-class docutils literal notranslate\"><span class=\"pre\">ReconstructablePipeline</span></code> from a\nfunction that returns a <a class=\"reference internal\" href=\"pipeline#dagster.PipelineDefinition\" title=\"dagster.PipelineDefinition\"><code class=\"xref py py-class docutils literal notranslate\"><span class=\"pre\">PipelineDefinition</span></code></a>/<a class=\"reference internal\" href=\"jobs#dagster.JobDefinition\" title=\"dagster.JobDefinition\"><code class=\"xref py py-class docutils literal notranslate\"><span class=\"pre\">JobDefinition</span></code></a>,\nor a function decorated with <a class=\"reference internal\" href=\"pipeline#dagster.pipeline\" title=\"dagster.pipeline\"><code class=\"xref py py-func docutils literal notranslate\"><span class=\"pre\">&#64;pipeline</span></code></a>/<a class=\"reference internal\" href=\"jobs#dagster.job\" title=\"dagster.job\"><code class=\"xref py py-func docutils literal notranslate\"><span class=\"pre\">&#64;job</span></code></a>.</p>\n<p>When your pipeline/job must cross process boundaries, e.g., for execution on multiple nodes or\nin different systems (like <code class=\"docutils literal notranslate\"><span class=\"pre\">dagstermill</span></code>), Dagster must know how to reconstruct the pipeline/job\non the other side of the process boundary.</p>\n<p>Passing a job created with <code class=\"docutils literal notranslate\"><span class=\"pre\">~dagster.GraphDefinition.to_job</span></code> to <code class=\"docutils literal notranslate\"><span class=\"pre\">reconstructable()</span></code>,\nrequires you to wrap that job\u2019s definition in a module-scoped function, and pass that function\ninstead:</p>\n<div class=\"highlight-python notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"kn\">from</span> <span class=\"nn\">dagster</span> <span class=\"kn\">import</span> <span class=\"n\">graph</span><span class=\"p\">,</span> <span class=\"n\">reconstructable</span>\n\n<span class=\"nd\">@graph</span>\n<span class=\"k\">def</span> <span class=\"nf\">my_graph</span><span class=\"p\">():</span>\n    <span class=\"o\">...</span>\n\n<span class=\"k\">def</span> <span class=\"nf\">define_my_job</span><span class=\"p\">():</span>\n    <span class=\"k\">return</span> <span class=\"n\">my_graph</span><span class=\"o\">.</span><span class=\"n\">to_job</span><span class=\"p\">()</span>\n\n<span class=\"n\">reconstructable</span><span class=\"p\">(</span><span class=\"n\">define_my_job</span><span class=\"p\">)</span>\n</pre></div>\n</div>\n<p>This function implements a very conservative strategy for reconstruction, so that its behavior\nis easy to predict, but as a consequence it is not able to reconstruct certain kinds of pipelines\nor jobs, such as those defined by lambdas, in nested scopes (e.g., dynamically within a method\ncall), or in interactive environments such as the Python REPL or Jupyter notebooks.</p>\n<p>If you need to reconstruct objects constructed in these ways, you should use\n<code class=\"xref py py-func docutils literal notranslate\"><span class=\"pre\">build_reconstructable_job()</span></code> instead, which allows you to\nspecify your own reconstruction strategy.</p>\n<p>Examples:</p>\n<div class=\"highlight-python notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"kn\">from</span> <span class=\"nn\">dagster</span> <span class=\"kn\">import</span> <span class=\"n\">job</span><span class=\"p\">,</span> <span class=\"n\">reconstructable</span>\n\n<span class=\"nd\">@job</span>\n<span class=\"k\">def</span> <span class=\"nf\">foo_job</span><span class=\"p\">():</span>\n    <span class=\"o\">...</span>\n\n<span class=\"n\">reconstructable_foo_job</span> <span class=\"o\">=</span> <span class=\"n\">reconstructable</span><span class=\"p\">(</span><span class=\"n\">foo_job</span><span class=\"p\">)</span>\n\n\n<span class=\"nd\">@graph</span>\n<span class=\"k\">def</span> <span class=\"nf\">foo</span><span class=\"p\">():</span>\n    <span class=\"o\">...</span>\n\n<span class=\"k\">def</span> <span class=\"nf\">make_bar_job</span><span class=\"p\">():</span>\n    <span class=\"k\">return</span> <span class=\"n\">foo</span><span class=\"o\">.</span><span class=\"n\">to_job</span><span class=\"p\">()</span>\n\n<span class=\"n\">reconstructable_bar_job</span> <span class=\"o\">=</span> <span class=\"n\">reconstructable</span><span class=\"p\">(</span><span class=\"n\">make_bar_job</span><span class=\"p\">)</span>\n</pre></div>\n</div>\n</dd></dl>\n\n</div>\n<div class=\"section\" id=\"executors\">\n<h2>Executors<a class=\"headerlink\" href=\"#executors\" title=\"Permalink to this headline\">\u00b6</a></h2>\n<dl class=\"py data\">\n<dt id=\"dagster.multi_or_in_process_executor\">\n<code class=\"sig-prename descclassname\"><span class=\"pre\">dagster.</span></code><code class=\"sig-name descname\"><span class=\"pre\">multi_or_in_process_executor</span></code><em class=\"property\"> <span class=\"pre\">ExecutorDefinition</span></em><a class=\"reference internal\" href=\"../../../../_modules/dagster/core/definitions/executor_definition#multi_or_in_process_executor\"><span class=\"viewcode-link\"><span class=\"pre\">[source]</span></span></a><a class=\"headerlink\" href=\"#dagster.multi_or_in_process_executor\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>The default executor for a job.</p>\n<p>This is the executor available by default on a <a class=\"reference internal\" href=\"jobs#dagster.JobDefinition\" title=\"dagster.JobDefinition\"><code class=\"xref py py-class docutils literal notranslate\"><span class=\"pre\">JobDefinition</span></code></a>\nthat does not provide custom executors. This executor has a multiprocessing-enabled mode, and a\nsingle-process mode. By default, multiprocessing mode is enabled. Switching between multiprocess\nmode and in-process mode can be achieved via config.</p>\n<div class=\"highlight-yaml notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"nt\">execution</span><span class=\"p\">:</span><span class=\"w\"></span>\n<span class=\"w\">  </span><span class=\"nt\">config</span><span class=\"p\">:</span><span class=\"w\"></span>\n<span class=\"w\">    </span><span class=\"nt\">multiprocess</span><span class=\"p\">:</span><span class=\"w\"></span>\n\n\n<span class=\"nt\">execution</span><span class=\"p\">:</span><span class=\"w\"></span>\n<span class=\"w\">  </span><span class=\"nt\">config</span><span class=\"p\">:</span><span class=\"w\"></span>\n<span class=\"w\">    </span><span class=\"nt\">in_process</span><span class=\"p\">:</span><span class=\"w\"></span>\n</pre></div>\n</div>\n<p>When using the multiprocess mode, <code class=\"docutils literal notranslate\"><span class=\"pre\">max_concurrent</span></code> and <code class=\"docutils literal notranslate\"><span class=\"pre\">retries</span></code> can also be configured.</p>\n<div class=\"highlight-yaml notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"nt\">execution</span><span class=\"p\">:</span><span class=\"w\"></span>\n<span class=\"w\">  </span><span class=\"nt\">config</span><span class=\"p\">:</span><span class=\"w\"></span>\n<span class=\"w\">    </span><span class=\"nt\">multiprocess</span><span class=\"p\">:</span><span class=\"w\"></span>\n<span class=\"w\">      </span><span class=\"nt\">max_concurrent</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"l l-Scalar l-Scalar-Plain\">4</span><span class=\"w\"></span>\n<span class=\"w\">      </span><span class=\"nt\">retries</span><span class=\"p\">:</span><span class=\"w\"></span>\n<span class=\"w\">      </span><span class=\"nt\">enabled</span><span class=\"p\">:</span><span class=\"w\"></span>\n</pre></div>\n</div>\n<p>The <code class=\"docutils literal notranslate\"><span class=\"pre\">max_concurrent</span></code> arg is optional and tells the execution engine how many processes may run\nconcurrently. By default, or if you set <code class=\"docutils literal notranslate\"><span class=\"pre\">max_concurrent</span></code> to be 0, this is the return value of\n<a class=\"reference external\" href=\"https://docs.python.org/3/library/multiprocessing.html#multiprocessing.cpu_count\" title=\"(in Python v3.8)\"><code class=\"docutils literal notranslate\"><span class=\"pre\">multiprocessing.cpu_count()</span></code></a>.</p>\n<p>When using the in_process mode, then only retries can be configured.</p>\n<p>Execution priority can be configured using the <code class=\"docutils literal notranslate\"><span class=\"pre\">dagster/priority</span></code> tag via solid metadata,\nwhere the higher the number the higher the priority. 0 is the default and both positive\nand negative numbers can be used.</p>\n</dd></dl>\n\n<dl class=\"py data\">\n<dt id=\"dagster.in_process_executor\">\n<code class=\"sig-prename descclassname\"><span class=\"pre\">dagster.</span></code><code class=\"sig-name descname\"><span class=\"pre\">in_process_executor</span></code><em class=\"property\"> <span class=\"pre\">ExecutorDefinition</span></em><a class=\"reference internal\" href=\"../../../../_modules/dagster/core/definitions/executor_definition#in_process_executor\"><span class=\"viewcode-link\"><span class=\"pre\">[source]</span></span></a><a class=\"headerlink\" href=\"#dagster.in_process_executor\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>The in-process executor executes all steps in a single process.</p>\n<p>For legacy pipelines, this will be the default executor. To select it explicitly,\ninclude the following top-level fragment in config:</p>\n<div class=\"highlight-yaml notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"nt\">execution</span><span class=\"p\">:</span><span class=\"w\"></span>\n<span class=\"w\">  </span><span class=\"nt\">in_process</span><span class=\"p\">:</span><span class=\"w\"></span>\n</pre></div>\n</div>\n<p>Execution priority can be configured using the <code class=\"docutils literal notranslate\"><span class=\"pre\">dagster/priority</span></code> tag via solid/op metadata,\nwhere the higher the number the higher the priority. 0 is the default and both positive\nand negative numbers can be used.</p>\n</dd></dl>\n\n<dl class=\"py data\">\n<dt id=\"dagster.multiprocess_executor\">\n<code class=\"sig-prename descclassname\"><span class=\"pre\">dagster.</span></code><code class=\"sig-name descname\"><span class=\"pre\">multiprocess_executor</span></code><em class=\"property\"> <span class=\"pre\">ExecutorDefinition</span></em><a class=\"reference internal\" href=\"../../../../_modules/dagster/core/definitions/executor_definition#multiprocess_executor\"><span class=\"viewcode-link\"><span class=\"pre\">[source]</span></span></a><a class=\"headerlink\" href=\"#dagster.multiprocess_executor\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>The multiprocess executor executes each step in an individual process.</p>\n<p>Any job that does not specify custom executors will use the multiprocess_executor by default.\nFor jobs or legacy pipelines, to configure the multiprocess executor, include a fragment such\nas the following in your run config:</p>\n<div class=\"highlight-yaml notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"nt\">execution</span><span class=\"p\">:</span><span class=\"w\"></span>\n<span class=\"w\">  </span><span class=\"nt\">config</span><span class=\"p\">:</span><span class=\"w\"></span>\n<span class=\"w\">    </span><span class=\"nt\">multiprocess</span><span class=\"p\">:</span><span class=\"w\"></span>\n<span class=\"w\">      </span><span class=\"nt\">max_concurrent</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"l l-Scalar l-Scalar-Plain\">4</span><span class=\"w\"></span>\n</pre></div>\n</div>\n<p>The <code class=\"docutils literal notranslate\"><span class=\"pre\">max_concurrent</span></code> arg is optional and tells the execution engine how many processes may run\nconcurrently. By default, or if you set <code class=\"docutils literal notranslate\"><span class=\"pre\">max_concurrent</span></code> to be 0, this is the return value of\n<a class=\"reference external\" href=\"https://docs.python.org/3/library/multiprocessing.html#multiprocessing.cpu_count\" title=\"(in Python v3.8)\"><code class=\"docutils literal notranslate\"><span class=\"pre\">multiprocessing.cpu_count()</span></code></a>.</p>\n<p>Execution priority can be configured using the <code class=\"docutils literal notranslate\"><span class=\"pre\">dagster/priority</span></code> tag via solid/op metadata,\nwhere the higher the number the higher the priority. 0 is the default and both positive\nand negative numbers can be used.</p>\n</dd></dl>\n\n</div>\n<div class=\"section\" id=\"contexts\">\n<h2>Contexts<a class=\"headerlink\" href=\"#contexts\" title=\"Permalink to this headline\">\u00b6</a></h2>\n<dl class=\"py class\">\n<dt id=\"dagster.OpExecutionContext\">\n<em class=\"property\"><span class=\"pre\">class</span> </em><code class=\"sig-prename descclassname\"><span class=\"pre\">dagster.</span></code><code class=\"sig-name descname\"><span class=\"pre\">OpExecutionContext</span></code><span class=\"sig-paren\">(</span><em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">step_execution_context</span></span></em><span class=\"sig-paren\">)</span><a class=\"reference internal\" href=\"../../../../_modules/dagster/core/execution/context/compute#OpExecutionContext\"><span class=\"viewcode-link\"><span class=\"pre\">[source]</span></span></a><a class=\"headerlink\" href=\"#dagster.OpExecutionContext\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><dl class=\"py method\">\n<dt id=\"dagster.OpExecutionContext.add_output_metadata\">\n<code class=\"sig-name descname\"><span class=\"pre\">add_output_metadata</span></code><span class=\"sig-paren\">(</span><em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">metadata</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">output_name</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">None</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">mapping_key</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">None</span></span></em><span class=\"sig-paren\">)</span><a class=\"headerlink\" href=\"#dagster.OpExecutionContext.add_output_metadata\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Add metadata to one of the outputs of an op.</p>\n<p>This can only be used once per output in the body of an op. Using this method with the same output_name more than once within an op will result in an error.</p>\n<dl class=\"field-list simple\">\n<dt class=\"field-odd\">Parameters</dt>\n<dd class=\"field-odd\"><ul class=\"simple\">\n<li><p><strong>metadata</strong> (<em>Mapping</em><em>[</em><a class=\"reference external\" href=\"https://docs.python.org/3/library/stdtypes.html#str\" title=\"(in Python v3.8)\"><em>str</em></a><em>, </em><em>Any</em><em>]</em>) \u2013 The metadata to attach to the output</p></li>\n<li><p><strong>output_name</strong> (<em>Optional</em><em>[</em><a class=\"reference external\" href=\"https://docs.python.org/3/library/stdtypes.html#str\" title=\"(in Python v3.8)\"><em>str</em></a><em>]</em>) \u2013 The name of the output to attach metadata to. If there is only one output on the op, then this argument does not need to be provided. The metadata will automatically be attached to the only output.</p></li>\n</ul>\n</dd>\n</dl>\n<p><strong>Examples:</strong></p>\n<div class=\"highlight-python notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"kn\">from</span> <span class=\"nn\">dagster</span> <span class=\"kn\">import</span> <span class=\"n\">Out</span><span class=\"p\">,</span> <span class=\"n\">op</span>\n<span class=\"kn\">from</span> <span class=\"nn\">typing</span> <span class=\"kn\">import</span> <span class=\"n\">Tuple</span>\n\n<span class=\"nd\">@op</span>\n<span class=\"k\">def</span> <span class=\"nf\">add_metadata</span><span class=\"p\">(</span><span class=\"n\">context</span><span class=\"p\">):</span>\n    <span class=\"n\">context</span><span class=\"o\">.</span><span class=\"n\">add_output_metadata</span><span class=\"p\">({</span><span class=\"s2\">&quot;foo&quot;</span><span class=\"p\">,</span> <span class=\"s2\">&quot;bar&quot;</span><span class=\"p\">})</span>\n    <span class=\"k\">return</span> <span class=\"mi\">5</span> <span class=\"c1\"># Since the default output is called &quot;result&quot;, metadata will be attached to the output &quot;result&quot;.</span>\n\n<span class=\"nd\">@op</span><span class=\"p\">(</span><span class=\"n\">out</span><span class=\"o\">=</span><span class=\"p\">{</span><span class=\"s2\">&quot;a&quot;</span><span class=\"p\">:</span> <span class=\"n\">Out</span><span class=\"p\">(),</span> <span class=\"s2\">&quot;b&quot;</span><span class=\"p\">:</span> <span class=\"n\">Out</span><span class=\"p\">()})</span>\n<span class=\"k\">def</span> <span class=\"nf\">add_metadata_two_outputs</span><span class=\"p\">(</span><span class=\"n\">context</span><span class=\"p\">)</span> <span class=\"o\">-&gt;</span> <span class=\"n\">Tuple</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"nb\">int</span><span class=\"p\">]:</span>\n    <span class=\"n\">context</span><span class=\"o\">.</span><span class=\"n\">add_output_metadata</span><span class=\"p\">({</span><span class=\"s2\">&quot;foo&quot;</span><span class=\"p\">:</span> <span class=\"s2\">&quot;bar&quot;</span><span class=\"p\">},</span> <span class=\"n\">output_name</span><span class=\"o\">=</span><span class=\"s2\">&quot;b&quot;</span><span class=\"p\">)</span>\n    <span class=\"n\">context</span><span class=\"o\">.</span><span class=\"n\">add_output_metadata</span><span class=\"p\">({</span><span class=\"s2\">&quot;baz&quot;</span><span class=\"p\">:</span> <span class=\"s2\">&quot;bat&quot;</span><span class=\"p\">},</span> <span class=\"n\">output_name</span><span class=\"o\">=</span><span class=\"s2\">&quot;a&quot;</span><span class=\"p\">)</span>\n\n    <span class=\"k\">return</span> <span class=\"p\">(</span><span class=\"s2\">&quot;dog&quot;</span><span class=\"p\">,</span> <span class=\"mi\">5</span><span class=\"p\">)</span>\n</pre></div>\n</div>\n</dd></dl>\n\n<dl class=\"py method\">\n<dt id=\"dagster.OpExecutionContext.asset_partition_key_for_output\">\n<code class=\"sig-name descname\"><span class=\"pre\">asset_partition_key_for_output</span></code><span class=\"sig-paren\">(</span><em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">output_name</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">'result'</span></span></em><span class=\"sig-paren\">)</span><a class=\"headerlink\" href=\"#dagster.OpExecutionContext.asset_partition_key_for_output\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Returns the asset partition key for the given output. Defaults to \u201cresult\u201d, which is the\nname of the default output.</p>\n</dd></dl>\n\n<dl class=\"py method\">\n<dt id=\"dagster.OpExecutionContext.asset_partitions_time_window_for_output\">\n<code class=\"sig-name descname\"><span class=\"pre\">asset_partitions_time_window_for_output</span></code><span class=\"sig-paren\">(</span><em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">output_name</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">'result'</span></span></em><span class=\"sig-paren\">)</span><a class=\"headerlink\" href=\"#dagster.OpExecutionContext.asset_partitions_time_window_for_output\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>The time window for the partitions of the output asset.</p>\n<p>Raises an error if either of the following are true:\n- The output asset has no partitioning.\n- The output asset is not partitioned with a TimeWindowPartitionsDefinition.</p>\n</dd></dl>\n\n<dl class=\"py method\">\n<dt id=\"dagster.OpExecutionContext.consume_events\">\n<code class=\"sig-name descname\"><span class=\"pre\">consume_events</span></code><span class=\"sig-paren\">(</span><span class=\"sig-paren\">)</span><a class=\"headerlink\" href=\"#dagster.OpExecutionContext.consume_events\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Pops and yields all user-generated events that have been recorded from this context.</p>\n<p>If consume_events has not yet been called, this will yield all logged events since the beginning of the op\u2019s computation. If consume_events has been called, it will yield all events since the last time consume_events was called. Designed for internal use. Users should never need to invoke this method.</p>\n</dd></dl>\n\n<dl class=\"py method\">\n<dt id=\"dagster.OpExecutionContext.get_mapping_key\">\n<code class=\"sig-name descname\"><span class=\"pre\">get_mapping_key</span></code><span class=\"sig-paren\">(</span><span class=\"sig-paren\">)</span><a class=\"headerlink\" href=\"#dagster.OpExecutionContext.get_mapping_key\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Which mapping_key this execution is for if downstream of a DynamicOutput, otherwise None.</p>\n</dd></dl>\n\n<dl class=\"py method\">\n<dt id=\"dagster.OpExecutionContext.get_tag\">\n<code class=\"sig-name descname\"><span class=\"pre\">get_tag</span></code><span class=\"sig-paren\">(</span><em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">key</span></span></em><span class=\"sig-paren\">)</span><a class=\"headerlink\" href=\"#dagster.OpExecutionContext.get_tag\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Get a logging tag.</p>\n<dl class=\"field-list simple\">\n<dt class=\"field-odd\">Parameters</dt>\n<dd class=\"field-odd\"><p><strong>key</strong> (<em>tag</em>) \u2013 The tag to get.</p>\n</dd>\n<dt class=\"field-even\">Returns</dt>\n<dd class=\"field-even\"><p>The value of the tag, if present.</p>\n</dd>\n<dt class=\"field-odd\">Return type</dt>\n<dd class=\"field-odd\"><p>Optional[<a class=\"reference external\" href=\"https://docs.python.org/3/library/stdtypes.html#str\" title=\"(in Python v3.8)\">str</a>]</p>\n</dd>\n</dl>\n</dd></dl>\n\n<dl class=\"py method\">\n<dt id=\"dagster.OpExecutionContext.has_partition_key\">\n<em class=\"property\"><span class=\"pre\">property</span> </em><code class=\"sig-name descname\"><span class=\"pre\">has_partition_key</span></code><a class=\"headerlink\" href=\"#dagster.OpExecutionContext.has_partition_key\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Whether the current run is a partitioned run</p>\n</dd></dl>\n\n<dl class=\"py method\">\n<dt id=\"dagster.OpExecutionContext.has_tag\">\n<code class=\"sig-name descname\"><span class=\"pre\">has_tag</span></code><span class=\"sig-paren\">(</span><em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">key</span></span></em><span class=\"sig-paren\">)</span><a class=\"headerlink\" href=\"#dagster.OpExecutionContext.has_tag\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Check if a logging tag is set.</p>\n<dl class=\"field-list simple\">\n<dt class=\"field-odd\">Parameters</dt>\n<dd class=\"field-odd\"><p><strong>key</strong> (<a class=\"reference external\" href=\"https://docs.python.org/3/library/stdtypes.html#str\" title=\"(in Python v3.8)\"><em>str</em></a>) \u2013 The tag to check.</p>\n</dd>\n<dt class=\"field-even\">Returns</dt>\n<dd class=\"field-even\"><p>Whether the tag is set.</p>\n</dd>\n<dt class=\"field-odd\">Return type</dt>\n<dd class=\"field-odd\"><p><a class=\"reference external\" href=\"https://docs.python.org/3/library/functions.html#bool\" title=\"(in Python v3.8)\">bool</a></p>\n</dd>\n</dl>\n</dd></dl>\n\n<dl class=\"py method\">\n<dt id=\"dagster.OpExecutionContext.instance\">\n<em class=\"property\"><span class=\"pre\">property</span> </em><code class=\"sig-name descname\"><span class=\"pre\">instance</span></code><a class=\"headerlink\" href=\"#dagster.OpExecutionContext.instance\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>The current Dagster instance</p>\n<dl class=\"field-list simple\">\n<dt class=\"field-odd\">Type</dt>\n<dd class=\"field-odd\"><p><a class=\"reference internal\" href=\"internals#dagster.DagsterInstance\" title=\"dagster.DagsterInstance\">DagsterInstance</a></p>\n</dd>\n</dl>\n</dd></dl>\n\n<dl class=\"py method\">\n<dt id=\"dagster.OpExecutionContext.job_def\">\n<em class=\"property\"><span class=\"pre\">property</span> </em><code class=\"sig-name descname\"><span class=\"pre\">job_def</span></code><a class=\"headerlink\" href=\"#dagster.OpExecutionContext.job_def\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>The currently executing job.</p>\n<dl class=\"field-list simple\">\n<dt class=\"field-odd\">Type</dt>\n<dd class=\"field-odd\"><p><a class=\"reference internal\" href=\"jobs#dagster.JobDefinition\" title=\"dagster.JobDefinition\">JobDefinition</a></p>\n</dd>\n</dl>\n</dd></dl>\n\n<dl class=\"py method\">\n<dt id=\"dagster.OpExecutionContext.job_name\">\n<em class=\"property\"><span class=\"pre\">property</span> </em><code class=\"sig-name descname\"><span class=\"pre\">job_name</span></code><a class=\"headerlink\" href=\"#dagster.OpExecutionContext.job_name\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>The name of the currently executing job.</p>\n<dl class=\"field-list simple\">\n<dt class=\"field-odd\">Type</dt>\n<dd class=\"field-odd\"><p><a class=\"reference external\" href=\"https://docs.python.org/3/library/stdtypes.html#str\" title=\"(in Python v3.8)\">str</a></p>\n</dd>\n</dl>\n</dd></dl>\n\n<dl class=\"py method\">\n<dt id=\"dagster.OpExecutionContext.log\">\n<em class=\"property\"><span class=\"pre\">property</span> </em><code class=\"sig-name descname\"><span class=\"pre\">log</span></code><a class=\"headerlink\" href=\"#dagster.OpExecutionContext.log\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>The log manager available in the execution context.</p>\n<dl class=\"field-list simple\">\n<dt class=\"field-odd\">Type</dt>\n<dd class=\"field-odd\"><p><a class=\"reference internal\" href=\"loggers#dagster.DagsterLogManager\" title=\"dagster.DagsterLogManager\">DagsterLogManager</a></p>\n</dd>\n</dl>\n</dd></dl>\n\n<dl class=\"py method\">\n<dt id=\"dagster.OpExecutionContext.log_event\">\n<code class=\"sig-name descname\"><span class=\"pre\">log_event</span></code><span class=\"sig-paren\">(</span><em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">event</span></span></em><span class=\"sig-paren\">)</span><a class=\"headerlink\" href=\"#dagster.OpExecutionContext.log_event\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Log an AssetMaterialization, AssetObservation, or ExpectationResult from within the body of an op.</p>\n<p>Events logged with this method will appear in the list of DagsterEvents, as well as the event log.</p>\n<dl class=\"field-list simple\">\n<dt class=\"field-odd\">Parameters</dt>\n<dd class=\"field-odd\"><p><strong>event</strong> (<em>Union</em><em>[</em><a class=\"reference internal\" href=\"ops#dagster.AssetMaterialization\" title=\"dagster.AssetMaterialization\"><em>AssetMaterialization</em></a><em>, </em><em>Materialization</em><em>, </em><em>AssetObservation</em><em>, </em><a class=\"reference internal\" href=\"ops#dagster.ExpectationResult\" title=\"dagster.ExpectationResult\"><em>ExpectationResult</em></a><em>]</em>) \u2013 The event to log.</p>\n</dd>\n</dl>\n<p><strong>Examples:</strong></p>\n<div class=\"highlight-python notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"kn\">from</span> <span class=\"nn\">dagster</span> <span class=\"kn\">import</span> <span class=\"n\">op</span><span class=\"p\">,</span> <span class=\"n\">AssetMaterialization</span>\n\n<span class=\"nd\">@op</span>\n<span class=\"k\">def</span> <span class=\"nf\">log_materialization</span><span class=\"p\">(</span><span class=\"n\">context</span><span class=\"p\">):</span>\n    <span class=\"n\">context</span><span class=\"o\">.</span><span class=\"n\">log_event</span><span class=\"p\">(</span><span class=\"n\">AssetMaterialization</span><span class=\"p\">(</span><span class=\"s2\">&quot;foo&quot;</span><span class=\"p\">))</span>\n</pre></div>\n</div>\n</dd></dl>\n\n<dl class=\"py method\">\n<dt id=\"dagster.OpExecutionContext.mode_def\">\n<em class=\"property\"><span class=\"pre\">property</span> </em><code class=\"sig-name descname\"><span class=\"pre\">mode_def</span></code><a class=\"headerlink\" href=\"#dagster.OpExecutionContext.mode_def\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>The mode of the current execution.</p>\n<dl class=\"field-list simple\">\n<dt class=\"field-odd\">Type</dt>\n<dd class=\"field-odd\"><p><a class=\"reference internal\" href=\"modes#dagster.ModeDefinition\" title=\"dagster.ModeDefinition\">ModeDefinition</a></p>\n</dd>\n</dl>\n</dd></dl>\n\n<dl class=\"py method\">\n<dt id=\"dagster.OpExecutionContext.op_def\">\n<em class=\"property\"><span class=\"pre\">property</span> </em><code class=\"sig-name descname\"><span class=\"pre\">op_def</span></code><a class=\"headerlink\" href=\"#dagster.OpExecutionContext.op_def\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>The current op definition.</p>\n<dl class=\"field-list simple\">\n<dt class=\"field-odd\">Type</dt>\n<dd class=\"field-odd\"><p><a class=\"reference internal\" href=\"ops#dagster.OpDefinition\" title=\"dagster.OpDefinition\">OpDefinition</a></p>\n</dd>\n</dl>\n</dd></dl>\n\n<dl class=\"py method\">\n<dt id=\"dagster.OpExecutionContext.partition_key\">\n<em class=\"property\"><span class=\"pre\">property</span> </em><code class=\"sig-name descname\"><span class=\"pre\">partition_key</span></code><a class=\"headerlink\" href=\"#dagster.OpExecutionContext.partition_key\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>The partition key for the current run.</p>\n<p>Raises an error if the current run is not a partitioned run.</p>\n</dd></dl>\n\n<dl class=\"py method\">\n<dt id=\"dagster.OpExecutionContext.partition_time_window\">\n<em class=\"property\"><span class=\"pre\">property</span> </em><code class=\"sig-name descname\"><span class=\"pre\">partition_time_window</span></code><a class=\"headerlink\" href=\"#dagster.OpExecutionContext.partition_time_window\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>The partition time window for the current run.</p>\n<p>Raises an error if the current run is not a partitioned run, or if the job\u2019s partition\ndefinition is not a TimeWindowPartitionsDefinition.</p>\n</dd></dl>\n\n<dl class=\"py method\">\n<dt id=\"dagster.OpExecutionContext.pdb\">\n<em class=\"property\"><span class=\"pre\">property</span> </em><code class=\"sig-name descname\"><span class=\"pre\">pdb</span></code><a class=\"headerlink\" href=\"#dagster.OpExecutionContext.pdb\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Gives access to pdb debugging from within the op.</p>\n<p>Example:</p>\n<div class=\"highlight-python notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"nd\">@op</span>\n<span class=\"k\">def</span> <span class=\"nf\">debug</span><span class=\"p\">(</span><span class=\"n\">context</span><span class=\"p\">):</span>\n    <span class=\"n\">context</span><span class=\"o\">.</span><span class=\"n\">pdb</span><span class=\"o\">.</span><span class=\"n\">set_trace</span><span class=\"p\">()</span>\n</pre></div>\n</div>\n<dl class=\"field-list simple\">\n<dt class=\"field-odd\">Type</dt>\n<dd class=\"field-odd\"><p><a class=\"reference internal\" href=\"utilities#dagster.utils.forked_pdb.ForkedPdb\" title=\"dagster.utils.forked_pdb.ForkedPdb\">dagster.utils.forked_pdb.ForkedPdb</a></p>\n</dd>\n</dl>\n</dd></dl>\n\n<dl class=\"py method\">\n<dt id=\"dagster.OpExecutionContext.pipeline_def\">\n<em class=\"property\"><span class=\"pre\">property</span> </em><code class=\"sig-name descname\"><span class=\"pre\">pipeline_def</span></code><a class=\"headerlink\" href=\"#dagster.OpExecutionContext.pipeline_def\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>The currently executing pipeline.</p>\n<dl class=\"field-list simple\">\n<dt class=\"field-odd\">Type</dt>\n<dd class=\"field-odd\"><p><a class=\"reference internal\" href=\"pipeline#dagster.PipelineDefinition\" title=\"dagster.PipelineDefinition\">PipelineDefinition</a></p>\n</dd>\n</dl>\n</dd></dl>\n\n<dl class=\"py method\">\n<dt id=\"dagster.OpExecutionContext.pipeline_name\">\n<em class=\"property\"><span class=\"pre\">property</span> </em><code class=\"sig-name descname\"><span class=\"pre\">pipeline_name</span></code><a class=\"headerlink\" href=\"#dagster.OpExecutionContext.pipeline_name\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>The name of the currently executing pipeline.</p>\n<dl class=\"field-list simple\">\n<dt class=\"field-odd\">Type</dt>\n<dd class=\"field-odd\"><p><a class=\"reference external\" href=\"https://docs.python.org/3/library/stdtypes.html#str\" title=\"(in Python v3.8)\">str</a></p>\n</dd>\n</dl>\n</dd></dl>\n\n<dl class=\"py method\">\n<dt id=\"dagster.OpExecutionContext.pipeline_run\">\n<em class=\"property\"><span class=\"pre\">property</span> </em><code class=\"sig-name descname\"><span class=\"pre\">pipeline_run</span></code><a class=\"headerlink\" href=\"#dagster.OpExecutionContext.pipeline_run\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>The current pipeline run</p>\n<dl class=\"field-list simple\">\n<dt class=\"field-odd\">Type</dt>\n<dd class=\"field-odd\"><p><a class=\"reference internal\" href=\"internals#dagster.PipelineRun\" title=\"dagster.PipelineRun\">PipelineRun</a></p>\n</dd>\n</dl>\n</dd></dl>\n\n<dl class=\"py method\">\n<dt id=\"dagster.OpExecutionContext.resources\">\n<em class=\"property\"><span class=\"pre\">property</span> </em><code class=\"sig-name descname\"><span class=\"pre\">resources</span></code><a class=\"headerlink\" href=\"#dagster.OpExecutionContext.resources\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>The currently available resources.</p>\n<dl class=\"field-list simple\">\n<dt class=\"field-odd\">Type</dt>\n<dd class=\"field-odd\"><p>Resources</p>\n</dd>\n</dl>\n</dd></dl>\n\n<dl class=\"py method\">\n<dt id=\"dagster.OpExecutionContext.retry_number\">\n<em class=\"property\"><span class=\"pre\">property</span> </em><code class=\"sig-name descname\"><span class=\"pre\">retry_number</span></code><a class=\"headerlink\" href=\"#dagster.OpExecutionContext.retry_number\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Which retry attempt is currently executing i.e. 0 for initial attempt, 1 for first retry, etc.</p>\n</dd></dl>\n\n<dl class=\"py method\">\n<dt id=\"dagster.OpExecutionContext.run\">\n<em class=\"property\"><span class=\"pre\">property</span> </em><code class=\"sig-name descname\"><span class=\"pre\">run</span></code><a class=\"headerlink\" href=\"#dagster.OpExecutionContext.run\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>The current run</p>\n<dl class=\"field-list simple\">\n<dt class=\"field-odd\">Type</dt>\n<dd class=\"field-odd\"><p>DagsterRun</p>\n</dd>\n</dl>\n</dd></dl>\n\n<dl class=\"py method\">\n<dt id=\"dagster.OpExecutionContext.run_config\">\n<em class=\"property\"><span class=\"pre\">property</span> </em><code class=\"sig-name descname\"><span class=\"pre\">run_config</span></code><a class=\"headerlink\" href=\"#dagster.OpExecutionContext.run_config\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>The run config for the current execution.</p>\n<dl class=\"field-list simple\">\n<dt class=\"field-odd\">Type</dt>\n<dd class=\"field-odd\"><p><a class=\"reference external\" href=\"https://docs.python.org/3/library/stdtypes.html#dict\" title=\"(in Python v3.8)\">dict</a></p>\n</dd>\n</dl>\n</dd></dl>\n\n<dl class=\"py method\">\n<dt id=\"dagster.OpExecutionContext.run_id\">\n<em class=\"property\"><span class=\"pre\">property</span> </em><code class=\"sig-name descname\"><span class=\"pre\">run_id</span></code><a class=\"headerlink\" href=\"#dagster.OpExecutionContext.run_id\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>The id of the current execution\u2019s run.</p>\n<dl class=\"field-list simple\">\n<dt class=\"field-odd\">Type</dt>\n<dd class=\"field-odd\"><p><a class=\"reference external\" href=\"https://docs.python.org/3/library/stdtypes.html#str\" title=\"(in Python v3.8)\">str</a></p>\n</dd>\n</dl>\n</dd></dl>\n\n<dl class=\"py method\">\n<dt id=\"dagster.OpExecutionContext.solid_config\">\n<em class=\"property\"><span class=\"pre\">property</span> </em><code class=\"sig-name descname\"><span class=\"pre\">solid_config</span></code><a class=\"headerlink\" href=\"#dagster.OpExecutionContext.solid_config\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>The parsed config specific to this solid.</p>\n</dd></dl>\n\n<dl class=\"py method\">\n<dt id=\"dagster.OpExecutionContext.solid_def\">\n<em class=\"property\"><span class=\"pre\">property</span> </em><code class=\"sig-name descname\"><span class=\"pre\">solid_def</span></code><a class=\"headerlink\" href=\"#dagster.OpExecutionContext.solid_def\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>The current solid definition.</p>\n<dl class=\"field-list simple\">\n<dt class=\"field-odd\">Type</dt>\n<dd class=\"field-odd\"><p><a class=\"reference internal\" href=\"solids#dagster.SolidDefinition\" title=\"dagster.SolidDefinition\">SolidDefinition</a></p>\n</dd>\n</dl>\n</dd></dl>\n\n<dl class=\"py method\">\n<dt id=\"dagster.OpExecutionContext.step_launcher\">\n<em class=\"property\"><span class=\"pre\">property</span> </em><code class=\"sig-name descname\"><span class=\"pre\">step_launcher</span></code><a class=\"headerlink\" href=\"#dagster.OpExecutionContext.step_launcher\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>The current step launcher, if any.</p>\n<dl class=\"field-list simple\">\n<dt class=\"field-odd\">Type</dt>\n<dd class=\"field-odd\"><p>Optional[StepLauncher]</p>\n</dd>\n</dl>\n</dd></dl>\n\n</dd></dl>\n\n<dl class=\"py function\">\n<dt id=\"dagster.build_op_context\">\n<code class=\"sig-prename descclassname\"><span class=\"pre\">dagster.</span></code><code class=\"sig-name descname\"><span class=\"pre\">build_op_context</span></code><span class=\"sig-paren\">(</span><em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">resources</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">None</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">op_config</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">None</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">resources_config</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">None</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">instance</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">None</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">config</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">None</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">partition_key</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">None</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">mapping_key</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">None</span></span></em><span class=\"sig-paren\">)</span><a class=\"reference internal\" href=\"../../../../_modules/dagster/core/execution/context/invocation#build_op_context\"><span class=\"viewcode-link\"><span class=\"pre\">[source]</span></span></a><a class=\"headerlink\" href=\"#dagster.build_op_context\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Builds op execution context from provided parameters.</p>\n<p><code class=\"docutils literal notranslate\"><span class=\"pre\">op</span></code> is currently built on top of <cite>solid</cite>, and thus this function creates a <cite>SolidExecutionContext</cite>.\n<code class=\"docutils literal notranslate\"><span class=\"pre\">build_op_context</span></code> can be used as either a function or context manager. If there is a\nprovided resource that is a context manager, then <code class=\"docutils literal notranslate\"><span class=\"pre\">build_op_context</span></code> must be used as a\ncontext manager. This function can be used to provide the context argument when directly\ninvoking a op.</p>\n<dl class=\"field-list simple\">\n<dt class=\"field-odd\">Parameters</dt>\n<dd class=\"field-odd\"><ul class=\"simple\">\n<li><p><strong>resources</strong> (<em>Optional</em><em>[</em><em>Dict</em><em>[</em><a class=\"reference external\" href=\"https://docs.python.org/3/library/stdtypes.html#str\" title=\"(in Python v3.8)\"><em>str</em></a><em>, </em><em>Any</em><em>]</em><em>]</em>) \u2013 The resources to provide to the context. These can be\neither values or resource definitions.</p></li>\n<li><p><strong>config</strong> (<em>Optional</em><em>[</em><em>Any</em><em>]</em>) \u2013 The op config to provide to the context.</p></li>\n<li><p><strong>instance</strong> (<em>Optional</em><em>[</em><a class=\"reference internal\" href=\"internals#dagster.DagsterInstance\" title=\"dagster.DagsterInstance\"><em>DagsterInstance</em></a><em>]</em>) \u2013 The dagster instance configured for the context.\nDefaults to DagsterInstance.ephemeral().</p></li>\n<li><p><strong>mapping_key</strong> (<em>Optional</em><em>[</em><a class=\"reference external\" href=\"https://docs.python.org/3/library/stdtypes.html#str\" title=\"(in Python v3.8)\"><em>str</em></a><em>]</em>) \u2013 A key representing the mapping key from an upstream dynamic output. Can be accessed using <code class=\"docutils literal notranslate\"><span class=\"pre\">context.get_mapping_key()</span></code>.</p></li>\n</ul>\n</dd>\n</dl>\n<p class=\"rubric\">Examples</p>\n<div class=\"highlight-python notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"n\">context</span> <span class=\"o\">=</span> <span class=\"n\">build_op_context</span><span class=\"p\">()</span>\n<span class=\"n\">op_to_invoke</span><span class=\"p\">(</span><span class=\"n\">context</span><span class=\"p\">)</span>\n\n<span class=\"k\">with</span> <span class=\"n\">build_op_context</span><span class=\"p\">(</span><span class=\"n\">resources</span><span class=\"o\">=</span><span class=\"p\">{</span><span class=\"s2\">&quot;foo&quot;</span><span class=\"p\">:</span> <span class=\"n\">context_manager_resource</span><span class=\"p\">})</span> <span class=\"k\">as</span> <span class=\"n\">context</span><span class=\"p\">:</span>\n    <span class=\"n\">op_to_invoke</span><span class=\"p\">(</span><span class=\"n\">context</span><span class=\"p\">)</span>\n</pre></div>\n</div>\n</dd></dl>\n\n<dl class=\"py class\">\n<dt id=\"dagster.TypeCheckContext\">\n<em class=\"property\"><span class=\"pre\">class</span> </em><code class=\"sig-prename descclassname\"><span class=\"pre\">dagster.</span></code><code class=\"sig-name descname\"><span class=\"pre\">TypeCheckContext</span></code><span class=\"sig-paren\">(</span><em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">run_id</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">log_manager</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">scoped_resources_builder</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">dagster_type</span></span></em><span class=\"sig-paren\">)</span><a class=\"reference internal\" href=\"../../../../_modules/dagster/core/execution/context/system#TypeCheckContext\"><span class=\"viewcode-link\"><span class=\"pre\">[source]</span></span></a><a class=\"headerlink\" href=\"#dagster.TypeCheckContext\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>The <code class=\"docutils literal notranslate\"><span class=\"pre\">context</span></code> object available to a type check function on a DagsterType.</p>\n<dl class=\"py attribute\">\n<dt id=\"dagster.TypeCheckContext.log\">\n<code class=\"sig-name descname\"><span class=\"pre\">log</span></code><a class=\"headerlink\" href=\"#dagster.TypeCheckContext.log\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Centralized log dispatch from user code.</p>\n<dl class=\"field-list simple\">\n<dt class=\"field-odd\">Type</dt>\n<dd class=\"field-odd\"><p><a class=\"reference internal\" href=\"loggers#dagster.DagsterLogManager\" title=\"dagster.DagsterLogManager\">DagsterLogManager</a></p>\n</dd>\n</dl>\n</dd></dl>\n\n<dl class=\"py attribute\">\n<dt id=\"dagster.TypeCheckContext.resources\">\n<code class=\"sig-name descname\"><span class=\"pre\">resources</span></code><a class=\"headerlink\" href=\"#dagster.TypeCheckContext.resources\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>An object whose attributes contain the resources available to this op.</p>\n<dl class=\"field-list simple\">\n<dt class=\"field-odd\">Type</dt>\n<dd class=\"field-odd\"><p>Any</p>\n</dd>\n</dl>\n</dd></dl>\n\n<dl class=\"py attribute\">\n<dt id=\"dagster.TypeCheckContext.run_id\">\n<code class=\"sig-name descname\"><span class=\"pre\">run_id</span></code><a class=\"headerlink\" href=\"#dagster.TypeCheckContext.run_id\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>The id of this job run.</p>\n<dl class=\"field-list simple\">\n<dt class=\"field-odd\">Type</dt>\n<dd class=\"field-odd\"><p><a class=\"reference external\" href=\"https://docs.python.org/3/library/stdtypes.html#str\" title=\"(in Python v3.8)\">str</a></p>\n</dd>\n</dl>\n</dd></dl>\n\n</dd></dl>\n\n</div>\n<div class=\"section\" id=\"job-configuration\">\n<h2>Job configuration<a class=\"headerlink\" href=\"#job-configuration\" title=\"Permalink to this headline\">\u00b6</a></h2>\n<dl class=\"py function\">\n<dt id=\"dagster.validate_run_config\">\n<code class=\"sig-prename descclassname\"><span class=\"pre\">dagster.</span></code><code class=\"sig-name descname\"><span class=\"pre\">validate_run_config</span></code><span class=\"sig-paren\">(</span><em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">job_def</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">None</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">run_config</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">None</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">mode</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">None</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">pipeline_def</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">None</span></span></em><span class=\"sig-paren\">)</span><a class=\"reference internal\" href=\"../../../../_modules/dagster/core/execution/validate_run_config#validate_run_config\"><span class=\"viewcode-link\"><span class=\"pre\">[source]</span></span></a><a class=\"headerlink\" href=\"#dagster.validate_run_config\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Function to validate a provided run config blob against a given job. For legacy APIs, a\npipeline/mode can also be passed in.</p>\n<p>If validation is successful, this function will return a dictionary representation of the\nvalidated config actually used during execution.</p>\n<dl class=\"field-list simple\">\n<dt class=\"field-odd\">Parameters</dt>\n<dd class=\"field-odd\"><ul class=\"simple\">\n<li><p><strong>job_def</strong> (<em>Union</em><em>[</em><a class=\"reference internal\" href=\"pipeline#dagster.PipelineDefinition\" title=\"dagster.PipelineDefinition\"><em>PipelineDefinition</em></a><em>, </em><a class=\"reference internal\" href=\"jobs#dagster.JobDefinition\" title=\"dagster.JobDefinition\"><em>JobDefinition</em></a><em>]</em>) \u2013 The job definition to validate run\nconfig against</p></li>\n<li><p><strong>run_config</strong> (<em>Optional</em><em>[</em><em>Dict</em><em>[</em><a class=\"reference external\" href=\"https://docs.python.org/3/library/stdtypes.html#str\" title=\"(in Python v3.8)\"><em>str</em></a><em>, </em><em>Any</em><em>]</em><em>]</em>) \u2013 The run config to validate</p></li>\n<li><p><strong>mode</strong> (<a class=\"reference external\" href=\"https://docs.python.org/3/library/stdtypes.html#str\" title=\"(in Python v3.8)\"><em>str</em></a>) \u2013 The mode of the pipeline to validate against (different modes may require\ndifferent config)</p></li>\n<li><p><strong>pipeline_def</strong> (<a class=\"reference internal\" href=\"pipeline#dagster.PipelineDefinition\" title=\"dagster.PipelineDefinition\"><em>PipelineDefinition</em></a>) \u2013 The pipeline definition to validate run config against.</p></li>\n</ul>\n</dd>\n<dt class=\"field-even\">Returns</dt>\n<dd class=\"field-even\"><p>A dictionary representation of the validated config.</p>\n</dd>\n<dt class=\"field-odd\">Return type</dt>\n<dd class=\"field-odd\"><p>Dict[<a class=\"reference external\" href=\"https://docs.python.org/3/library/stdtypes.html#str\" title=\"(in Python v3.8)\">str</a>, Any]</p>\n</dd>\n</dl>\n</dd></dl>\n\n<div class=\"section\" id=\"run-config-schema\">\n<span id=\"config-schema\"></span><h3>Run Config Schema<a class=\"headerlink\" href=\"#run-config-schema\" title=\"Permalink to this headline\">\u00b6</a></h3>\n<blockquote>\n<div><p>The <code class=\"docutils literal notranslate\"><span class=\"pre\">run_config</span></code> used for jobs has the following schema:</p>\n<div class=\"highlight-default notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"p\">{</span>\n  <span class=\"c1\"># configuration for execution, required if executors require config</span>\n  <span class=\"n\">execution</span><span class=\"p\">:</span> <span class=\"p\">{</span>\n    <span class=\"c1\"># the name of one, and only one available executor, typically &#39;in_process&#39; or &#39;multiprocess&#39;</span>\n    <span class=\"n\">__executor_name__</span><span class=\"p\">:</span> <span class=\"p\">{</span>\n      <span class=\"c1\"># executor-specific config, if required or permitted</span>\n      <span class=\"n\">config</span><span class=\"p\">:</span> <span class=\"p\">{</span>\n        <span class=\"o\">...</span>\n      <span class=\"p\">}</span>\n    <span class=\"p\">}</span>\n  <span class=\"p\">},</span>\n\n  <span class=\"c1\"># configuration for loggers, required if loggers require config</span>\n  <span class=\"n\">loggers</span><span class=\"p\">:</span> <span class=\"p\">{</span>\n    <span class=\"c1\"># the name of an available logger</span>\n    <span class=\"n\">__logger_name__</span><span class=\"p\">:</span> <span class=\"p\">{</span>\n      <span class=\"c1\"># logger-specific config, if required or permitted</span>\n      <span class=\"n\">config</span><span class=\"p\">:</span> <span class=\"p\">{</span>\n        <span class=\"o\">...</span>\n      <span class=\"p\">}</span>\n    <span class=\"p\">},</span>\n    <span class=\"o\">...</span>\n  <span class=\"p\">},</span>\n\n  <span class=\"c1\"># configuration for resources, required if resources require config</span>\n  <span class=\"n\">resources</span><span class=\"p\">:</span> <span class=\"p\">{</span>\n    <span class=\"c1\"># the name of a resource</span>\n    <span class=\"n\">__resource_name__</span><span class=\"p\">:</span> <span class=\"p\">{</span>\n      <span class=\"c1\"># resource-specific config, if required or permitted</span>\n      <span class=\"n\">config</span><span class=\"p\">:</span> <span class=\"p\">{</span>\n        <span class=\"o\">...</span>\n      <span class=\"p\">}</span>\n    <span class=\"p\">},</span>\n    <span class=\"o\">...</span>\n  <span class=\"p\">},</span>\n\n  <span class=\"c1\"># configuration for underlying ops, required if ops require config</span>\n  <span class=\"n\">ops</span><span class=\"p\">:</span> <span class=\"p\">{</span>\n\n    <span class=\"c1\"># these keys align with the names of the ops, or their alias in this job</span>\n    <span class=\"n\">__op_name__</span><span class=\"p\">:</span> <span class=\"p\">{</span>\n\n      <span class=\"c1\"># pass any data that was defined via config_field</span>\n      <span class=\"n\">config</span><span class=\"p\">:</span> <span class=\"o\">...</span><span class=\"p\">,</span>\n\n      <span class=\"c1\"># configurably specify input values, keyed by input name</span>\n      <span class=\"n\">inputs</span><span class=\"p\">:</span> <span class=\"p\">{</span>\n        <span class=\"n\">__input_name__</span><span class=\"p\">:</span> <span class=\"p\">{</span>\n          <span class=\"c1\"># if an dagster_type_loader is specified, that schema must be satisfied here;</span>\n          <span class=\"c1\"># scalar, built-in types will generally allow their values to be specified directly:</span>\n          <span class=\"n\">value</span><span class=\"p\">:</span> <span class=\"o\">...</span>\n        <span class=\"p\">}</span>\n      <span class=\"p\">},</span>\n\n    <span class=\"p\">}</span>\n  <span class=\"p\">},</span>\n\n<span class=\"p\">}</span>\n</pre></div>\n</div>\n</div></blockquote>\n</div>\n</div>\n</div>\n", "current_page_name": "sections/api/apidocs/execution", "customsidebar": null, "display_toc": true, "meta": null, "metatags": "", "next": {"link": "../graphs/", "title": "Graphs"}, "page_source_suffix": ".rst", "parents": [], "prev": {"link": "../errors/", "title": "Errors"}, "rellinks": [["genindex", "General Index", "I", "index"], ["py-modindex", "Python Module Index", "", "modules"], ["sections/api/apidocs/graphs", "Graphs", "N", "next"], ["sections/api/apidocs/errors", "Errors", "P", "previous"]], "sidebars": ["globaltoc.html", "searchbox.html"], "sourcename": "sections/api/apidocs/execution.rst.txt", "title": "Execution", "toc": "<ul>\n<li><a class=\"reference internal\" href=\"#\">Execution</a><ul>\n<li><a class=\"reference internal\" href=\"#materializing-assets\">Materializing Assets</a></li>\n<li><a class=\"reference internal\" href=\"#executing-jobs\">Executing Jobs</a></li>\n<li><a class=\"reference internal\" href=\"#executing-graphs\">Executing Graphs</a></li>\n<li><a class=\"reference internal\" href=\"#execution-results\">Execution results</a></li>\n<li><a class=\"reference internal\" href=\"#reconstructable-jobs\">Reconstructable jobs</a></li>\n<li><a class=\"reference internal\" href=\"#executors\">Executors</a></li>\n<li><a class=\"reference internal\" href=\"#contexts\">Contexts</a></li>\n<li><a class=\"reference internal\" href=\"#job-configuration\">Job configuration</a><ul>\n<li><a class=\"reference internal\" href=\"#run-config-schema\">Run Config Schema</a></li>\n</ul>\n</li>\n</ul>\n</li>\n</ul>\n"}, "graphs": {"alabaster_version": "0.7.12", "body": "<div class=\"section\" id=\"graphs\">\n<h1>Graphs<a class=\"headerlink\" href=\"#graphs\" title=\"Permalink to this headline\">\u00b6</a></h1>\n<p>The core of a job is a _graph_ of ops - connected via data dependencies.</p>\n<dl class=\"py function\">\n<dt id=\"dagster.graph\">\n<code class=\"sig-prename descclassname\"><span class=\"pre\">&#64;</span></code><code class=\"sig-prename descclassname\"><span class=\"pre\">dagster.</span></code><code class=\"sig-name descname\"><span class=\"pre\">graph</span></code><span class=\"sig-paren\">(</span><em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">name</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">None</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">description</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">None</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">input_defs</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">None</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">output_defs</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">None</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">ins</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">None</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">out</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">None</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">tags</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">None</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">config</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">None</span></span></em><span class=\"sig-paren\">)</span><a class=\"reference internal\" href=\"../../../../_modules/dagster/core/definitions/decorators/graph_decorator#graph\"><span class=\"viewcode-link\"><span class=\"pre\">[source]</span></span></a><a class=\"headerlink\" href=\"#dagster.graph\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Create a graph with the specified parameters from the decorated composition function.</p>\n<p>Using this decorator allows you to build up a dependency graph by writing a\nfunction that invokes ops (or other graphs) and passes the output to subsequent invocations.</p>\n<dl class=\"field-list simple\">\n<dt class=\"field-odd\">Parameters</dt>\n<dd class=\"field-odd\"><ul class=\"simple\">\n<li><p><strong>name</strong> (<em>Optional</em><em>[</em><a class=\"reference external\" href=\"https://docs.python.org/3/library/stdtypes.html#str\" title=\"(in Python v3.8)\"><em>str</em></a><em>]</em>) \u2013 The name of the graph. Must be unique within any <a class=\"reference internal\" href=\"repositories#dagster.RepositoryDefinition\" title=\"dagster.RepositoryDefinition\"><code class=\"xref py py-class docutils literal notranslate\"><span class=\"pre\">RepositoryDefinition</span></code></a> containing the graph.</p></li>\n<li><p><strong>description</strong> (<em>Optional</em><em>[</em><a class=\"reference external\" href=\"https://docs.python.org/3/library/stdtypes.html#str\" title=\"(in Python v3.8)\"><em>str</em></a><em>]</em>) \u2013 A human-readable description of the graph.</p></li>\n<li><p><strong>input_defs</strong> (<em>Optional</em><em>[</em><em>List</em><em>[</em><a class=\"reference internal\" href=\"solids#dagster.InputDefinition\" title=\"dagster.InputDefinition\"><em>InputDefinition</em></a><em>]</em><em>]</em>) \u2013 <p>Information about the inputs that this graph maps. Information provided here\nwill be combined with what can be inferred from the function signature, with these\nexplicit InputDefinitions taking precedence.</p>\n<p>Uses of inputs in the body of the decorated composition function will determine\nthe <a class=\"reference internal\" href=\"solids#dagster.InputMapping\" title=\"dagster.InputMapping\"><code class=\"xref py py-class docutils literal notranslate\"><span class=\"pre\">InputMappings</span></code></a> passed to the underlying\n<a class=\"reference internal\" href=\"#dagster.GraphDefinition\" title=\"dagster.GraphDefinition\"><code class=\"xref py py-class docutils literal notranslate\"><span class=\"pre\">GraphDefinition</span></code></a>.</p>\n</p></li>\n<li><p><strong>output_defs</strong> (<em>Optional</em><em>[</em><em>List</em><em>[</em><a class=\"reference internal\" href=\"solids#dagster.OutputDefinition\" title=\"dagster.OutputDefinition\"><em>OutputDefinition</em></a><em>]</em><em>]</em>) \u2013 <p>Output definitions for the graph. If not provided explicitly, these will be inferred from typehints.</p>\n<p>Uses of these outputs in the body of the decorated composition function, as well as the\nreturn value of the decorated function, will be used to infer the appropriate set of\n<a class=\"reference internal\" href=\"solids#dagster.OutputMapping\" title=\"dagster.OutputMapping\"><code class=\"xref py py-class docutils literal notranslate\"><span class=\"pre\">OutputMappings</span></code></a> for the underlying\n<a class=\"reference internal\" href=\"#dagster.GraphDefinition\" title=\"dagster.GraphDefinition\"><code class=\"xref py py-class docutils literal notranslate\"><span class=\"pre\">GraphDefinition</span></code></a>.</p>\n<p>To map multiple outputs, return a dictionary from the composition function.</p>\n</p></li>\n<li><p><strong>ins</strong> (<em>Optional</em><em>[</em><em>Dict</em><em>[</em><a class=\"reference external\" href=\"https://docs.python.org/3/library/stdtypes.html#str\" title=\"(in Python v3.8)\"><em>str</em></a><em>, </em><a class=\"reference internal\" href=\"#dagster.GraphIn\" title=\"dagster.GraphIn\"><em>GraphIn</em></a><em>]</em><em>]</em>) \u2013 Information about the inputs that this graph maps. Information provided here\nwill be combined with what can be inferred from the function signature, with these\nexplicit GraphIn taking precedence.</p></li>\n<li><p><strong>out</strong> \u2013 <p>Information about the outputs that this graph maps. Information provided here will be\ncombined with what can be inferred from the return type signature if the function does\nnot use yield.</p>\n<p>To map multiple outputs, return a dictionary from the composition function.</p>\n</p></li>\n</ul>\n</dd>\n</dl>\n</dd></dl>\n\n<dl class=\"py class\">\n<dt id=\"dagster.GraphDefinition\">\n<em class=\"property\"><span class=\"pre\">class</span> </em><code class=\"sig-prename descclassname\"><span class=\"pre\">dagster.</span></code><code class=\"sig-name descname\"><span class=\"pre\">GraphDefinition</span></code><span class=\"sig-paren\">(</span><em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">name</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">description</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">None</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">node_defs</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">None</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">dependencies</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">None</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">input_mappings</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">None</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">output_mappings</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">None</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">config</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">None</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">tags</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">None</span></span></em>, <em class=\"sig-param\"><span class=\"o\"><span class=\"pre\">**</span></span><span class=\"n\"><span class=\"pre\">kwargs</span></span></em><span class=\"sig-paren\">)</span><a class=\"reference internal\" href=\"../../../../_modules/dagster/core/definitions/graph_definition#GraphDefinition\"><span class=\"viewcode-link\"><span class=\"pre\">[source]</span></span></a><a class=\"headerlink\" href=\"#dagster.GraphDefinition\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Defines a Dagster graph.</p>\n<p>A graph is made up of</p>\n<ul class=\"simple\">\n<li><p>Nodes, which can either be an op (the functional unit of computation), or another graph.</p></li>\n<li><p>Dependencies, which determine how the values produced by nodes as outputs flow from\none node to another. This tells Dagster how to arrange nodes into a directed, acyclic graph\n(DAG) of compute.</p></li>\n</ul>\n<p>End users should prefer the <a class=\"reference internal\" href=\"#dagster.graph\" title=\"dagster.graph\"><code class=\"xref py py-func docutils literal notranslate\"><span class=\"pre\">&#64;graph</span></code></a> decorator. GraphDefinition is generally\nintended to be used by framework authors or for programatically generated graphs.</p>\n<dl class=\"field-list simple\">\n<dt class=\"field-odd\">Parameters</dt>\n<dd class=\"field-odd\"><ul class=\"simple\">\n<li><p><strong>name</strong> (<a class=\"reference external\" href=\"https://docs.python.org/3/library/stdtypes.html#str\" title=\"(in Python v3.8)\"><em>str</em></a>) \u2013 The name of the graph. Must be unique within any <a class=\"reference internal\" href=\"#dagster.GraphDefinition\" title=\"dagster.GraphDefinition\"><code class=\"xref py py-class docutils literal notranslate\"><span class=\"pre\">GraphDefinition</span></code></a>\nor <a class=\"reference internal\" href=\"jobs#dagster.JobDefinition\" title=\"dagster.JobDefinition\"><code class=\"xref py py-class docutils literal notranslate\"><span class=\"pre\">JobDefinition</span></code></a> containing the graph.</p></li>\n<li><p><strong>description</strong> (<em>Optional</em><em>[</em><a class=\"reference external\" href=\"https://docs.python.org/3/library/stdtypes.html#str\" title=\"(in Python v3.8)\"><em>str</em></a><em>]</em>) \u2013 A human-readable description of the pipeline.</p></li>\n<li><p><strong>node_defs</strong> (<em>Optional</em><em>[</em><em>List</em><em>[</em><em>NodeDefinition</em><em>]</em><em>]</em>) \u2013 The set of ops / graphs used in this graph.</p></li>\n<li><p><strong>dependencies</strong> (<em>Optional</em><em>[</em><em>Dict</em><em>[</em><em>Union</em><em>[</em><a class=\"reference external\" href=\"https://docs.python.org/3/library/stdtypes.html#str\" title=\"(in Python v3.8)\"><em>str</em></a><em>, </em><a class=\"reference internal\" href=\"#dagster.NodeInvocation\" title=\"dagster.NodeInvocation\"><em>NodeInvocation</em></a><em>]</em><em>, </em><em>Dict</em><em>[</em><a class=\"reference external\" href=\"https://docs.python.org/3/library/stdtypes.html#str\" title=\"(in Python v3.8)\"><em>str</em></a><em>, </em><a class=\"reference internal\" href=\"#dagster.DependencyDefinition\" title=\"dagster.DependencyDefinition\"><em>DependencyDefinition</em></a><em>]</em><em>]</em><em>]</em>) \u2013 A structure that declares the dependencies of each op\u2019s inputs on the outputs of other\nops in the graph. Keys of the top level dict are either the string names of ops in the\ngraph or, in the case of aliased ops, <a class=\"reference internal\" href=\"#dagster.NodeInvocation\" title=\"dagster.NodeInvocation\"><code class=\"xref py py-class docutils literal notranslate\"><span class=\"pre\">NodeInvocations</span></code></a>.\nValues of the top level dict are themselves dicts, which map input names belonging to\nthe op or aliased op to <a class=\"reference internal\" href=\"#dagster.DependencyDefinition\" title=\"dagster.DependencyDefinition\"><code class=\"xref py py-class docutils literal notranslate\"><span class=\"pre\">DependencyDefinitions</span></code></a>.</p></li>\n<li><p><strong>input_mappings</strong> (<em>Optional</em><em>[</em><em>List</em><em>[</em><a class=\"reference internal\" href=\"solids#dagster.InputMapping\" title=\"dagster.InputMapping\"><em>InputMapping</em></a><em>]</em><em>]</em>) \u2013 Defines the inputs to the nested graph, and\nhow they map to the inputs of its constituent ops.</p></li>\n<li><p><strong>output_mappings</strong> (<em>Optional</em><em>[</em><em>List</em><em>[</em><a class=\"reference internal\" href=\"solids#dagster.OutputMapping\" title=\"dagster.OutputMapping\"><em>OutputMapping</em></a><em>]</em><em>]</em>) \u2013 Defines the outputs of the nested graph,\nand how they map from the outputs of its constituent ops.</p></li>\n<li><p><strong>config</strong> (<em>Optional</em><em>[</em><a class=\"reference internal\" href=\"config#dagster.ConfigMapping\" title=\"dagster.ConfigMapping\"><em>ConfigMapping</em></a><em>]</em>) \u2013 Defines the config of the graph, and how its schema maps\nto the config of its constituent ops.</p></li>\n<li><p><strong>tags</strong> (<em>Optional</em><em>[</em><em>Dict</em><em>[</em><a class=\"reference external\" href=\"https://docs.python.org/3/library/stdtypes.html#str\" title=\"(in Python v3.8)\"><em>str</em></a><em>, </em><em>Any</em><em>]</em><em>]</em>) \u2013 Arbitrary metadata for any execution of the graph.\nValues that are not strings will be json encoded and must meet the criteria that\n<cite>json.loads(json.dumps(value)) == value</cite>.  These tag values may be overwritten by tag\nvalues provided at invocation time.</p></li>\n</ul>\n</dd>\n</dl>\n<p class=\"rubric\">Examples</p>\n<div class=\"highlight-python notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"nd\">@op</span>\n<span class=\"k\">def</span> <span class=\"nf\">return_one</span><span class=\"p\">():</span>\n    <span class=\"k\">return</span> <span class=\"mi\">1</span>\n\n<span class=\"nd\">@op</span>\n<span class=\"k\">def</span> <span class=\"nf\">add_one</span><span class=\"p\">(</span><span class=\"n\">num</span><span class=\"p\">):</span>\n    <span class=\"k\">return</span> <span class=\"n\">num</span> <span class=\"o\">+</span> <span class=\"mi\">1</span>\n\n<span class=\"n\">graph_def</span> <span class=\"o\">=</span> <span class=\"n\">GraphDefinition</span><span class=\"p\">(</span>\n    <span class=\"n\">name</span><span class=\"o\">=</span><span class=\"s1\">&#39;basic&#39;</span><span class=\"p\">,</span>\n    <span class=\"n\">node_defs</span><span class=\"o\">=</span><span class=\"p\">[</span><span class=\"n\">return_one</span><span class=\"p\">,</span> <span class=\"n\">add_one</span><span class=\"p\">],</span>\n    <span class=\"n\">dependencies</span><span class=\"o\">=</span><span class=\"p\">{</span><span class=\"s1\">&#39;add_one&#39;</span><span class=\"p\">:</span> <span class=\"p\">{</span><span class=\"s1\">&#39;num&#39;</span><span class=\"p\">:</span> <span class=\"n\">DependencyDefinition</span><span class=\"p\">(</span><span class=\"s1\">&#39;return_one&#39;</span><span class=\"p\">)}},</span>\n<span class=\"p\">)</span>\n</pre></div>\n</div>\n<dl class=\"py method\">\n<dt id=\"dagster.GraphDefinition.execute_in_process\">\n<code class=\"sig-name descname\"><span class=\"pre\">execute_in_process</span></code><span class=\"sig-paren\">(</span><em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">run_config</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">None</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">instance</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">None</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">resources</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">None</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">raise_on_error</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">True</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">op_selection</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">None</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">run_id</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">None</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">input_values</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">None</span></span></em><span class=\"sig-paren\">)</span><a class=\"reference internal\" href=\"../../../../_modules/dagster/core/definitions/graph_definition#GraphDefinition.execute_in_process\"><span class=\"viewcode-link\"><span class=\"pre\">[source]</span></span></a><a class=\"headerlink\" href=\"#dagster.GraphDefinition.execute_in_process\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Execute this graph in-process, collecting results in-memory.</p>\n<dl class=\"field-list simple\">\n<dt class=\"field-odd\">Parameters</dt>\n<dd class=\"field-odd\"><ul class=\"simple\">\n<li><p><strong>run_config</strong> (<em>Optional</em><em>[</em><em>Dict</em><em>[</em><a class=\"reference external\" href=\"https://docs.python.org/3/library/stdtypes.html#str\" title=\"(in Python v3.8)\"><em>str</em></a><em>, </em><em>Any</em><em>]</em><em>]</em>) \u2013 Run config to provide to execution. The configuration for the underlying graph\nshould exist under the \u201cops\u201d key.</p></li>\n<li><p><strong>instance</strong> (<em>Optional</em><em>[</em><a class=\"reference internal\" href=\"internals#dagster.DagsterInstance\" title=\"dagster.DagsterInstance\"><em>DagsterInstance</em></a><em>]</em>) \u2013 The instance to execute against, an ephemeral one will be used if none provided.</p></li>\n<li><p><strong>resources</strong> (<em>Optional</em><em>[</em><em>Dict</em><em>[</em><a class=\"reference external\" href=\"https://docs.python.org/3/library/stdtypes.html#str\" title=\"(in Python v3.8)\"><em>str</em></a><em>, </em><em>Any</em><em>]</em><em>]</em>) \u2013 The resources needed if any are required. Can provide resource instances directly,\nor resource definitions.</p></li>\n<li><p><strong>raise_on_error</strong> (<em>Optional</em><em>[</em><a class=\"reference external\" href=\"https://docs.python.org/3/library/functions.html#bool\" title=\"(in Python v3.8)\"><em>bool</em></a><em>]</em>) \u2013 Whether or not to raise exceptions when they occur.\nDefaults to <code class=\"docutils literal notranslate\"><span class=\"pre\">True</span></code>.</p></li>\n<li><p><strong>op_selection</strong> (<em>Optional</em><em>[</em><em>List</em><em>[</em><a class=\"reference external\" href=\"https://docs.python.org/3/library/stdtypes.html#str\" title=\"(in Python v3.8)\"><em>str</em></a><em>]</em><em>]</em>) \u2013 A list of op selection queries (including single op\nnames) to execute. For example:\n* <code class=\"docutils literal notranslate\"><span class=\"pre\">['some_op']</span></code>: selects <code class=\"docutils literal notranslate\"><span class=\"pre\">some_op</span></code> itself.\n* <code class=\"docutils literal notranslate\"><span class=\"pre\">['*some_op']</span></code>: select <code class=\"docutils literal notranslate\"><span class=\"pre\">some_op</span></code> and all its ancestors (upstream dependencies).\n* <code class=\"docutils literal notranslate\"><span class=\"pre\">['*some_op+++']</span></code>: select <code class=\"docutils literal notranslate\"><span class=\"pre\">some_op</span></code>, all its ancestors, and its descendants\n(downstream dependencies) within 3 levels down.\n* <code class=\"docutils literal notranslate\"><span class=\"pre\">['*some_op',</span> <span class=\"pre\">'other_op_a',</span> <span class=\"pre\">'other_op_b+']</span></code>: select <code class=\"docutils literal notranslate\"><span class=\"pre\">some_op</span></code> and all its\nancestors, <code class=\"docutils literal notranslate\"><span class=\"pre\">other_op_a</span></code> itself, and <code class=\"docutils literal notranslate\"><span class=\"pre\">other_op_b</span></code> and its direct child ops.</p></li>\n<li><p><strong>input_values</strong> (<em>Optional</em><em>[</em><em>Mapping</em><em>[</em><a class=\"reference external\" href=\"https://docs.python.org/3/library/stdtypes.html#str\" title=\"(in Python v3.8)\"><em>str</em></a><em>, </em><em>Any</em><em>]</em><em>]</em>) \u2013 A dictionary that maps python objects to the top-level inputs of the graph.</p></li>\n</ul>\n</dd>\n<dt class=\"field-even\">Returns</dt>\n<dd class=\"field-even\"><p><a class=\"reference internal\" href=\"execution#dagster.ExecuteInProcessResult\" title=\"dagster.ExecuteInProcessResult\"><code class=\"xref py py-class docutils literal notranslate\"><span class=\"pre\">ExecuteInProcessResult</span></code></a></p>\n</dd>\n</dl>\n</dd></dl>\n\n<dl class=\"py method\">\n<dt id=\"dagster.GraphDefinition.to_job\">\n<code class=\"sig-name descname\"><span class=\"pre\">to_job</span></code><span class=\"sig-paren\">(</span><em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">name</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">None</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">description</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">None</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">resource_defs</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">None</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">config</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">None</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">tags</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">None</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">metadata</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">None</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">logger_defs</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">None</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">executor_def</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">None</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">hooks</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">None</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">op_retry_policy</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">None</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">version_strategy</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">None</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">op_selection</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">None</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">partitions_def</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">None</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">asset_layer</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">None</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">input_values</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">None</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">_asset_selection_data</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">None</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">_executor_def_specified</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">False</span></span></em><span class=\"sig-paren\">)</span><a class=\"reference internal\" href=\"../../../../_modules/dagster/core/definitions/graph_definition#GraphDefinition.to_job\"><span class=\"viewcode-link\"><span class=\"pre\">[source]</span></span></a><a class=\"headerlink\" href=\"#dagster.GraphDefinition.to_job\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Make this graph in to an executable Job by providing remaining components required for execution.</p>\n<dl class=\"field-list simple\">\n<dt class=\"field-odd\">Parameters</dt>\n<dd class=\"field-odd\"><ul class=\"simple\">\n<li><p><strong>name</strong> (<em>Optional</em><em>[</em><a class=\"reference external\" href=\"https://docs.python.org/3/library/stdtypes.html#str\" title=\"(in Python v3.8)\"><em>str</em></a><em>]</em>) \u2013 The name for the Job. Defaults to the name of the this graph.</p></li>\n<li><p><strong>resource_defs</strong> (<em>Optional</em><em>[</em><em>Mapping</em><em> [</em><a class=\"reference external\" href=\"https://docs.python.org/3/library/stdtypes.html#str\" title=\"(in Python v3.8)\"><em>str</em></a><em>, </em><a class=\"reference internal\" href=\"resources#dagster.ResourceDefinition\" title=\"dagster.ResourceDefinition\"><em>ResourceDefinition</em></a><em>]</em><em>]</em>) \u2013 Resources that are required by this graph for execution.\nIf not defined, <cite>io_manager</cite> will default to filesystem.</p></li>\n<li><p><strong>config</strong> \u2013 <p>Describes how the job is parameterized at runtime.</p>\n<p>If no value is provided, then the schema for the job\u2019s run config is a standard\nformat based on its solids and resources.</p>\n<p>If a dictionary is provided, then it must conform to the standard config schema, and\nit will be used as the job\u2019s run config for the job whenever the job is executed.\nThe values provided will be viewable and editable in the Dagit playground, so be\ncareful with secrets.</p>\n<p>If a <a class=\"reference internal\" href=\"config#dagster.ConfigMapping\" title=\"dagster.ConfigMapping\"><code class=\"xref py py-class docutils literal notranslate\"><span class=\"pre\">ConfigMapping</span></code></a> object is provided, then the schema for the job\u2019s run config is\ndetermined by the config mapping, and the ConfigMapping, which should return\nconfiguration in the standard format to configure the job.</p>\n<p>If a <a class=\"reference internal\" href=\"partitions#dagster.PartitionedConfig\" title=\"dagster.PartitionedConfig\"><code class=\"xref py py-class docutils literal notranslate\"><span class=\"pre\">PartitionedConfig</span></code></a> object is provided, then it defines a discrete set of config\nvalues that can parameterize the job, as well as a function for mapping those\nvalues to the base config. The values provided will be viewable and editable in the\nDagit playground, so be careful with secrets.</p>\n</p></li>\n<li><p><strong>tags</strong> (<em>Optional</em><em>[</em><em>Dict</em><em>[</em><a class=\"reference external\" href=\"https://docs.python.org/3/library/stdtypes.html#str\" title=\"(in Python v3.8)\"><em>str</em></a><em>, </em><em>Any</em><em>]</em><em>]</em>) \u2013 Arbitrary information that will be attached to the execution of the Job.\nValues that are not strings will be json encoded and must meet the criteria that\n<cite>json.loads(json.dumps(value)) == value</cite>.  These tag values may be overwritten by tag\nvalues provided at invocation time.</p></li>\n<li><p><strong>metadata</strong> (<em>Optional</em><em>[</em><em>Dict</em><em>[</em><a class=\"reference external\" href=\"https://docs.python.org/3/library/stdtypes.html#str\" title=\"(in Python v3.8)\"><em>str</em></a><em>, </em><em>RawMetadataValue</em><em>]</em><em>]</em>) \u2013 Arbitrary information that will be attached to the JobDefinition and be viewable in Dagit.\nKeys must be strings, and values must be python primitive types or one of the provided\nMetadataValue types</p></li>\n<li><p><strong>logger_defs</strong> (<em>Optional</em><em>[</em><em>Dict</em><em>[</em><a class=\"reference external\" href=\"https://docs.python.org/3/library/stdtypes.html#str\" title=\"(in Python v3.8)\"><em>str</em></a><em>, </em><a class=\"reference internal\" href=\"loggers#dagster.LoggerDefinition\" title=\"dagster.LoggerDefinition\"><em>LoggerDefinition</em></a><em>]</em><em>]</em>) \u2013 A dictionary of string logger identifiers to their implementations.</p></li>\n<li><p><strong>executor_def</strong> (<em>Optional</em><em>[</em><a class=\"reference internal\" href=\"internals#dagster.ExecutorDefinition\" title=\"dagster.ExecutorDefinition\"><em>ExecutorDefinition</em></a><em>]</em>) \u2013 How this Job will be executed. Defaults to <a class=\"reference internal\" href=\"execution#dagster.multi_or_in_process_executor\" title=\"dagster.multi_or_in_process_executor\"><code class=\"xref py py-class docutils literal notranslate\"><span class=\"pre\">multi_or_in_process_executor</span></code></a>,\nwhich can be switched between multi-process and in-process modes of execution. The\ndefault mode of execution is multi-process.</p></li>\n<li><p><strong>op_retry_policy</strong> (<em>Optional</em><em>[</em><a class=\"reference internal\" href=\"ops#dagster.RetryPolicy\" title=\"dagster.RetryPolicy\"><em>RetryPolicy</em></a><em>]</em>) \u2013 The default retry policy for all ops in this job.\nOnly used if retry policy is not defined on the op definition or op invocation.</p></li>\n<li><p><strong>version_strategy</strong> (<em>Optional</em><em>[</em><a class=\"reference internal\" href=\"memoization#dagster.VersionStrategy\" title=\"dagster.VersionStrategy\"><em>VersionStrategy</em></a><em>]</em>) \u2013 Defines how each solid (and optionally, resource) in the job can be versioned. If\nprovided, memoizaton will be enabled for this job.</p></li>\n<li><p><strong>partitions_def</strong> (<em>Optional</em><em>[</em><a class=\"reference internal\" href=\"partitions#dagster.PartitionsDefinition\" title=\"dagster.PartitionsDefinition\"><em>PartitionsDefinition</em></a><em>]</em>) \u2013 Defines a discrete set of partition\nkeys that can parameterize the job. If this argument is supplied, the config\nargument can\u2019t also be supplied.</p></li>\n<li><p><strong>asset_layer</strong> (<em>Optional</em><em>[</em><em>AssetLayer</em><em>]</em>) \u2013 Top level information about the assets this job\nwill produce. Generally should not be set manually.</p></li>\n<li><p><strong>input_values</strong> (<em>Optional</em><em>[</em><em>Mapping</em><em>[</em><a class=\"reference external\" href=\"https://docs.python.org/3/library/stdtypes.html#str\" title=\"(in Python v3.8)\"><em>str</em></a><em>, </em><em>Any</em><em>]</em><em>]</em>) \u2013 A dictionary that maps python objects to the top-level inputs of a job.</p></li>\n</ul>\n</dd>\n<dt class=\"field-even\">Returns</dt>\n<dd class=\"field-even\"><p>JobDefinition</p>\n</dd>\n</dl>\n</dd></dl>\n\n</dd></dl>\n\n<dl class=\"py class\">\n<dt id=\"dagster.GraphIn\">\n<em class=\"property\"><span class=\"pre\">class</span> </em><code class=\"sig-prename descclassname\"><span class=\"pre\">dagster.</span></code><code class=\"sig-name descname\"><span class=\"pre\">GraphIn</span></code><span class=\"sig-paren\">(</span><em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">description</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">None</span></span></em><span class=\"sig-paren\">)</span><a class=\"reference internal\" href=\"../../../../_modules/dagster/core/definitions/input#GraphIn\"><span class=\"viewcode-link\"><span class=\"pre\">[source]</span></span></a><a class=\"headerlink\" href=\"#dagster.GraphIn\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Represents information about an input that a graph maps.</p>\n<dl class=\"field-list simple\">\n<dt class=\"field-odd\">Parameters</dt>\n<dd class=\"field-odd\"><p><strong>description</strong> (<em>Optional</em><em>[</em><a class=\"reference external\" href=\"https://docs.python.org/3/library/stdtypes.html#str\" title=\"(in Python v3.8)\"><em>str</em></a><em>]</em>) \u2013 Human-readable description of the input.</p>\n</dd>\n</dl>\n</dd></dl>\n\n<dl class=\"py class\">\n<dt id=\"dagster.GraphOut\">\n<em class=\"property\"><span class=\"pre\">class</span> </em><code class=\"sig-prename descclassname\"><span class=\"pre\">dagster.</span></code><code class=\"sig-name descname\"><span class=\"pre\">GraphOut</span></code><span class=\"sig-paren\">(</span><em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">description</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">None</span></span></em><span class=\"sig-paren\">)</span><a class=\"reference internal\" href=\"../../../../_modules/dagster/core/definitions/output#GraphOut\"><span class=\"viewcode-link\"><span class=\"pre\">[source]</span></span></a><a class=\"headerlink\" href=\"#dagster.GraphOut\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Represents information about the outputs that a graph maps.</p>\n<dl class=\"field-list simple\">\n<dt class=\"field-odd\">Parameters</dt>\n<dd class=\"field-odd\"><p><strong>description</strong> (<em>Optional</em><em>[</em><a class=\"reference external\" href=\"https://docs.python.org/3/library/stdtypes.html#str\" title=\"(in Python v3.8)\"><em>str</em></a><em>]</em>) \u2013 Human-readable description of the output.</p>\n</dd>\n</dl>\n</dd></dl>\n\n<div class=\"section\" id=\"explicit-dependencies\">\n<h2>Explicit dependencies<a class=\"headerlink\" href=\"#explicit-dependencies\" title=\"Permalink to this headline\">\u00b6</a></h2>\n<dl class=\"py class\">\n<dt id=\"dagster.DependencyDefinition\">\n<em class=\"property\"><span class=\"pre\">class</span> </em><code class=\"sig-prename descclassname\"><span class=\"pre\">dagster.</span></code><code class=\"sig-name descname\"><span class=\"pre\">DependencyDefinition</span></code><span class=\"sig-paren\">(</span><em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">solid</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">None</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">output</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">'result'</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">description</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">None</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">node</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">None</span></span></em><span class=\"sig-paren\">)</span><a class=\"reference internal\" href=\"../../../../_modules/dagster/core/definitions/dependency#DependencyDefinition\"><span class=\"viewcode-link\"><span class=\"pre\">[source]</span></span></a><a class=\"headerlink\" href=\"#dagster.DependencyDefinition\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Represents an edge in the DAG of nodes (ops or graphs) forming a job.</p>\n<p>This object is used at the leaves of a dictionary structure that represents the complete\ndependency structure of a job whose keys represent the dependent node and dependent\ninput, so this object only contains information about the dependee.</p>\n<p>Concretely, if the input named \u2018input\u2019 of op_b depends on the output named \u2018result\u2019 of\nop_a, and the output named \u2018other_result\u2019 of graph_a, the structure will look as follows:</p>\n<div class=\"highlight-python notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"n\">dependency_structure</span> <span class=\"o\">=</span> <span class=\"p\">{</span>\n    <span class=\"s1\">&#39;my_downstream_op&#39;</span><span class=\"p\">:</span> <span class=\"p\">{</span>\n        <span class=\"s1\">&#39;input&#39;</span><span class=\"p\">:</span> <span class=\"n\">DependencyDefinition</span><span class=\"p\">(</span><span class=\"s1\">&#39;my_upstream_op&#39;</span><span class=\"p\">,</span> <span class=\"s1\">&#39;result&#39;</span><span class=\"p\">)</span>\n    <span class=\"p\">}</span>\n    <span class=\"s1\">&#39;my_downstream_op&#39;</span><span class=\"p\">:</span> <span class=\"p\">{</span>\n        <span class=\"s1\">&#39;input&#39;</span><span class=\"p\">:</span> <span class=\"n\">DependencyDefinition</span><span class=\"p\">(</span><span class=\"s1\">&#39;my_upstream_graph&#39;</span><span class=\"p\">,</span> <span class=\"s1\">&#39;result&#39;</span><span class=\"p\">)</span>\n    <span class=\"p\">}</span>\n<span class=\"p\">}</span>\n</pre></div>\n</div>\n<p>In general, users should prefer not to construct this class directly or use the\n<a class=\"reference internal\" href=\"jobs#dagster.JobDefinition\" title=\"dagster.JobDefinition\"><code class=\"xref py py-class docutils literal notranslate\"><span class=\"pre\">JobDefinition</span></code></a> API that requires instances of this class. Instead, use the\n<a class=\"reference internal\" href=\"jobs#dagster.job\" title=\"dagster.job\"><code class=\"xref py py-func docutils literal notranslate\"><span class=\"pre\">&#64;job</span></code></a> API:</p>\n<div class=\"highlight-python notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"nd\">@job</span>\n<span class=\"k\">def</span> <span class=\"nf\">the_job</span><span class=\"p\">():</span>\n    <span class=\"n\">node_b</span><span class=\"p\">(</span><span class=\"n\">node_a</span><span class=\"p\">())</span>\n</pre></div>\n</div>\n<dl class=\"field-list simple\">\n<dt class=\"field-odd\">Parameters</dt>\n<dd class=\"field-odd\"><ul class=\"simple\">\n<li><p><strong>solid</strong> (<a class=\"reference external\" href=\"https://docs.python.org/3/library/stdtypes.html#str\" title=\"(in Python v3.8)\"><em>str</em></a>) \u2013 (legacy) The name of the solid that is depended on, that is, from which the value\npassed between the two nodes originates.</p></li>\n<li><p><strong>output</strong> (<em>Optional</em><em>[</em><a class=\"reference external\" href=\"https://docs.python.org/3/library/stdtypes.html#str\" title=\"(in Python v3.8)\"><em>str</em></a><em>]</em>) \u2013 The name of the output that is depended on. (default: \u201cresult\u201d)</p></li>\n<li><p><strong>description</strong> (<em>Optional</em><em>[</em><a class=\"reference external\" href=\"https://docs.python.org/3/library/stdtypes.html#str\" title=\"(in Python v3.8)\"><em>str</em></a><em>]</em>) \u2013 Human-readable description of this dependency.</p></li>\n<li><p><strong>node</strong> (<a class=\"reference external\" href=\"https://docs.python.org/3/library/stdtypes.html#str\" title=\"(in Python v3.8)\"><em>str</em></a>) \u2013 The name of the node (op or graph) that is depended on, that is, from which the value\npassed between the two nodes originates.</p></li>\n</ul>\n</dd>\n</dl>\n</dd></dl>\n\n<dl class=\"py class\">\n<dt id=\"dagster.MultiDependencyDefinition\">\n<em class=\"property\"><span class=\"pre\">class</span> </em><code class=\"sig-prename descclassname\"><span class=\"pre\">dagster.</span></code><code class=\"sig-name descname\"><span class=\"pre\">MultiDependencyDefinition</span></code><span class=\"sig-paren\">(</span><em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">dependencies</span></span></em><span class=\"sig-paren\">)</span><a class=\"reference internal\" href=\"../../../../_modules/dagster/core/definitions/dependency#MultiDependencyDefinition\"><span class=\"viewcode-link\"><span class=\"pre\">[source]</span></span></a><a class=\"headerlink\" href=\"#dagster.MultiDependencyDefinition\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Represents a fan-in edge in the DAG of op instances forming a job.</p>\n<p>This object is used only when an input of type <code class=\"docutils literal notranslate\"><span class=\"pre\">List[T]</span></code> is assembled by fanning-in multiple\nupstream outputs of type <code class=\"docutils literal notranslate\"><span class=\"pre\">T</span></code>.</p>\n<p>This object is used at the leaves of a dictionary structure that represents the complete\ndependency structure of a job or pipeline whose keys represent the dependent ops or graphs and dependent\ninput, so this object only contains information about the dependee.</p>\n<p>Concretely, if the input named \u2018input\u2019 of op_c depends on the outputs named \u2018result\u2019 of\nop_a and op_b, this structure will look as follows:</p>\n<div class=\"highlight-python notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"n\">dependency_structure</span> <span class=\"o\">=</span> <span class=\"p\">{</span>\n    <span class=\"s1\">&#39;op_c&#39;</span><span class=\"p\">:</span> <span class=\"p\">{</span>\n        <span class=\"s1\">&#39;input&#39;</span><span class=\"p\">:</span> <span class=\"n\">MultiDependencyDefinition</span><span class=\"p\">(</span>\n            <span class=\"p\">[</span>\n                <span class=\"n\">DependencyDefinition</span><span class=\"p\">(</span><span class=\"s1\">&#39;op_a&#39;</span><span class=\"p\">,</span> <span class=\"s1\">&#39;result&#39;</span><span class=\"p\">),</span>\n                <span class=\"n\">DependencyDefinition</span><span class=\"p\">(</span><span class=\"s1\">&#39;op_b&#39;</span><span class=\"p\">,</span> <span class=\"s1\">&#39;result&#39;</span><span class=\"p\">)</span>\n            <span class=\"p\">]</span>\n        <span class=\"p\">)</span>\n    <span class=\"p\">}</span>\n<span class=\"p\">}</span>\n</pre></div>\n</div>\n<p>In general, users should prefer not to construct this class directly or use the\n<a class=\"reference internal\" href=\"jobs#dagster.JobDefinition\" title=\"dagster.JobDefinition\"><code class=\"xref py py-class docutils literal notranslate\"><span class=\"pre\">JobDefinition</span></code></a> API that requires instances of this class. Instead, use the\n<a class=\"reference internal\" href=\"jobs#dagster.job\" title=\"dagster.job\"><code class=\"xref py py-func docutils literal notranslate\"><span class=\"pre\">&#64;job</span></code></a> API:</p>\n<div class=\"highlight-python notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"nd\">@job</span>\n<span class=\"k\">def</span> <span class=\"nf\">the_job</span><span class=\"p\">():</span>\n    <span class=\"n\">op_c</span><span class=\"p\">(</span><span class=\"n\">op_a</span><span class=\"p\">(),</span> <span class=\"n\">op_b</span><span class=\"p\">())</span>\n</pre></div>\n</div>\n<dl class=\"field-list simple\">\n<dt class=\"field-odd\">Parameters</dt>\n<dd class=\"field-odd\"><p><strong>dependencies</strong> (<em>List</em><em>[</em><em>Union</em><em>[</em><a class=\"reference internal\" href=\"#dagster.DependencyDefinition\" title=\"dagster.DependencyDefinition\"><em>DependencyDefinition</em></a><em>, </em><em>Type</em><em>[</em><em>MappedInputPlaceHolder</em><em>]</em><em>]</em><em>]</em>) \u2013 List of\nupstream dependencies fanned in to this input.</p>\n</dd>\n</dl>\n</dd></dl>\n\n<dl class=\"py class\">\n<dt id=\"dagster.NodeInvocation\">\n<em class=\"property\"><span class=\"pre\">class</span> </em><code class=\"sig-prename descclassname\"><span class=\"pre\">dagster.</span></code><code class=\"sig-name descname\"><span class=\"pre\">NodeInvocation</span></code><span class=\"sig-paren\">(</span><em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">name</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">alias</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">None</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">tags</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">None</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">hook_defs</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">None</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">retry_policy</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">None</span></span></em><span class=\"sig-paren\">)</span><a class=\"reference internal\" href=\"../../../../_modules/dagster/core/definitions/dependency#NodeInvocation\"><span class=\"viewcode-link\"><span class=\"pre\">[source]</span></span></a><a class=\"headerlink\" href=\"#dagster.NodeInvocation\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Identifies an instance of a node in a graph dependency structure.</p>\n<dl class=\"field-list simple\">\n<dt class=\"field-odd\">Parameters</dt>\n<dd class=\"field-odd\"><ul class=\"simple\">\n<li><p><strong>name</strong> (<a class=\"reference external\" href=\"https://docs.python.org/3/library/stdtypes.html#str\" title=\"(in Python v3.8)\"><em>str</em></a>) \u2013 Name of the solid of which this is an instance.</p></li>\n<li><p><strong>alias</strong> (<em>Optional</em><em>[</em><a class=\"reference external\" href=\"https://docs.python.org/3/library/stdtypes.html#str\" title=\"(in Python v3.8)\"><em>str</em></a><em>]</em>) \u2013 Name specific to this instance of the solid. Necessary when there are\nmultiple instances of the same solid.</p></li>\n<li><p><strong>tags</strong> (<em>Optional</em><em>[</em><em>Dict</em><em>[</em><a class=\"reference external\" href=\"https://docs.python.org/3/library/stdtypes.html#str\" title=\"(in Python v3.8)\"><em>str</em></a><em>, </em><em>Any</em><em>]</em><em>]</em>) \u2013 Optional tags values to extend or override those\nset on the solid definition.</p></li>\n<li><p><strong>hook_defs</strong> (<em>Optional</em><em>[</em><em>AbstractSet</em><em>[</em><a class=\"reference internal\" href=\"hooks#dagster.HookDefinition\" title=\"dagster.HookDefinition\"><em>HookDefinition</em></a><em>]</em><em>]</em>) \u2013 A set of hook definitions applied to the\nsolid instance.</p></li>\n</ul>\n</dd>\n</dl>\n<p>Examples:</p>\n<p>In general, users should prefer not to construct this class directly or use the\n<a class=\"reference internal\" href=\"jobs#dagster.JobDefinition\" title=\"dagster.JobDefinition\"><code class=\"xref py py-class docutils literal notranslate\"><span class=\"pre\">JobDefinition</span></code></a> API that requires instances of this class. Instead, use the\n<a class=\"reference internal\" href=\"jobs#dagster.job\" title=\"dagster.job\"><code class=\"xref py py-func docutils literal notranslate\"><span class=\"pre\">&#64;job</span></code></a> API:</p>\n<div class=\"highlight-python notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"kn\">from</span> <span class=\"nn\">dagster</span> <span class=\"kn\">import</span> <span class=\"n\">job</span>\n\n<span class=\"nd\">@job</span>\n<span class=\"k\">def</span> <span class=\"nf\">my_job</span><span class=\"p\">():</span>\n    <span class=\"n\">other_name</span> <span class=\"o\">=</span> <span class=\"n\">some_op</span><span class=\"o\">.</span><span class=\"n\">alias</span><span class=\"p\">(</span><span class=\"s1\">&#39;other_name&#39;</span><span class=\"p\">)</span>\n    <span class=\"n\">some_graph</span><span class=\"p\">(</span><span class=\"n\">other_name</span><span class=\"p\">(</span><span class=\"n\">some_op</span><span class=\"p\">))</span>\n</pre></div>\n</div>\n</dd></dl>\n\n</div>\n</div>\n", "current_page_name": "sections/api/apidocs/graphs", "customsidebar": null, "display_toc": true, "meta": null, "metatags": "", "next": {"link": "../hooks/", "title": "Hooks"}, "page_source_suffix": ".rst", "parents": [], "prev": {"link": "../execution/", "title": "Execution"}, "rellinks": [["genindex", "General Index", "I", "index"], ["py-modindex", "Python Module Index", "", "modules"], ["sections/api/apidocs/hooks", "Hooks", "N", "next"], ["sections/api/apidocs/execution", "Execution", "P", "previous"]], "sidebars": ["globaltoc.html", "searchbox.html"], "sourcename": "sections/api/apidocs/graphs.rst.txt", "title": "Graphs", "toc": "<ul>\n<li><a class=\"reference internal\" href=\"#\">Graphs</a><ul>\n<li><a class=\"reference internal\" href=\"#explicit-dependencies\">Explicit dependencies</a></li>\n</ul>\n</li>\n</ul>\n"}, "hooks": {"alabaster_version": "0.7.12", "body": "<div class=\"section\" id=\"hooks\">\n<h1>Hooks<a class=\"headerlink\" href=\"#hooks\" title=\"Permalink to this headline\">\u00b6</a></h1>\n<dl class=\"py function\">\n<dt id=\"dagster.success_hook\">\n<code class=\"sig-prename descclassname\"><span class=\"pre\">&#64;</span></code><code class=\"sig-prename descclassname\"><span class=\"pre\">dagster.</span></code><code class=\"sig-name descname\"><span class=\"pre\">success_hook</span></code><span class=\"sig-paren\">(</span><em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">name</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">None</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">required_resource_keys</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">None</span></span></em><span class=\"sig-paren\">)</span><a class=\"reference internal\" href=\"../../../../_modules/dagster/core/definitions/decorators/hook_decorator#success_hook\"><span class=\"viewcode-link\"><span class=\"pre\">[source]</span></span></a><a class=\"headerlink\" href=\"#dagster.success_hook\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Create a hook on step success events with the specified parameters from the decorated function.</p>\n<dl class=\"field-list simple\">\n<dt class=\"field-odd\">Parameters</dt>\n<dd class=\"field-odd\"><ul class=\"simple\">\n<li><p><strong>name</strong> (<em>Optional</em><em>[</em><a class=\"reference external\" href=\"https://docs.python.org/3/library/stdtypes.html#str\" title=\"(in Python v3.8)\"><em>str</em></a><em>]</em>) \u2013 The name of this hook.</p></li>\n<li><p><strong>required_resource_keys</strong> (<em>Optional</em><em>[</em><em>AbstractSet</em><em>[</em><a class=\"reference external\" href=\"https://docs.python.org/3/library/stdtypes.html#str\" title=\"(in Python v3.8)\"><em>str</em></a><em>]</em><em>]</em>) \u2013 Keys for the resources required by the\nhook.</p></li>\n</ul>\n</dd>\n</dl>\n<p class=\"rubric\">Examples</p>\n<div class=\"highlight-python notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"nd\">@success_hook</span><span class=\"p\">(</span><span class=\"n\">required_resource_keys</span><span class=\"o\">=</span><span class=\"p\">{</span><span class=\"s1\">&#39;slack&#39;</span><span class=\"p\">})</span>\n<span class=\"k\">def</span> <span class=\"nf\">slack_message_on_success</span><span class=\"p\">(</span><span class=\"n\">context</span><span class=\"p\">):</span>\n    <span class=\"n\">message</span> <span class=\"o\">=</span> <span class=\"s1\">&#39;op </span><span class=\"si\">{}</span><span class=\"s1\"> succeeded&#39;</span><span class=\"o\">.</span><span class=\"n\">format</span><span class=\"p\">(</span><span class=\"n\">context</span><span class=\"o\">.</span><span class=\"n\">op</span><span class=\"o\">.</span><span class=\"n\">name</span><span class=\"p\">)</span>\n    <span class=\"n\">context</span><span class=\"o\">.</span><span class=\"n\">resources</span><span class=\"o\">.</span><span class=\"n\">slack</span><span class=\"o\">.</span><span class=\"n\">send_message</span><span class=\"p\">(</span><span class=\"n\">message</span><span class=\"p\">)</span>\n\n<span class=\"nd\">@success_hook</span>\n<span class=\"k\">def</span> <span class=\"nf\">do_something_on_success</span><span class=\"p\">(</span><span class=\"n\">context</span><span class=\"p\">):</span>\n    <span class=\"n\">do_something</span><span class=\"p\">()</span>\n</pre></div>\n</div>\n</dd></dl>\n\n<dl class=\"py function\">\n<dt id=\"dagster.failure_hook\">\n<code class=\"sig-prename descclassname\"><span class=\"pre\">&#64;</span></code><code class=\"sig-prename descclassname\"><span class=\"pre\">dagster.</span></code><code class=\"sig-name descname\"><span class=\"pre\">failure_hook</span></code><span class=\"sig-paren\">(</span><em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">name</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">None</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">required_resource_keys</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">None</span></span></em><span class=\"sig-paren\">)</span><a class=\"reference internal\" href=\"../../../../_modules/dagster/core/definitions/decorators/hook_decorator#failure_hook\"><span class=\"viewcode-link\"><span class=\"pre\">[source]</span></span></a><a class=\"headerlink\" href=\"#dagster.failure_hook\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Create a hook on step failure events with the specified parameters from the decorated function.</p>\n<dl class=\"field-list simple\">\n<dt class=\"field-odd\">Parameters</dt>\n<dd class=\"field-odd\"><ul class=\"simple\">\n<li><p><strong>name</strong> (<em>Optional</em><em>[</em><a class=\"reference external\" href=\"https://docs.python.org/3/library/stdtypes.html#str\" title=\"(in Python v3.8)\"><em>str</em></a><em>]</em>) \u2013 The name of this hook.</p></li>\n<li><p><strong>required_resource_keys</strong> (<em>Optional</em><em>[</em><em>AbstractSet</em><em>[</em><a class=\"reference external\" href=\"https://docs.python.org/3/library/stdtypes.html#str\" title=\"(in Python v3.8)\"><em>str</em></a><em>]</em><em>]</em>) \u2013 Keys for the resources required by the\nhook.</p></li>\n</ul>\n</dd>\n</dl>\n<p class=\"rubric\">Examples</p>\n<div class=\"highlight-python notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"nd\">@failure_hook</span><span class=\"p\">(</span><span class=\"n\">required_resource_keys</span><span class=\"o\">=</span><span class=\"p\">{</span><span class=\"s1\">&#39;slack&#39;</span><span class=\"p\">})</span>\n<span class=\"k\">def</span> <span class=\"nf\">slack_message_on_failure</span><span class=\"p\">(</span><span class=\"n\">context</span><span class=\"p\">):</span>\n    <span class=\"n\">message</span> <span class=\"o\">=</span> <span class=\"s1\">&#39;op </span><span class=\"si\">{}</span><span class=\"s1\"> failed&#39;</span><span class=\"o\">.</span><span class=\"n\">format</span><span class=\"p\">(</span><span class=\"n\">context</span><span class=\"o\">.</span><span class=\"n\">op</span><span class=\"o\">.</span><span class=\"n\">name</span><span class=\"p\">)</span>\n    <span class=\"n\">context</span><span class=\"o\">.</span><span class=\"n\">resources</span><span class=\"o\">.</span><span class=\"n\">slack</span><span class=\"o\">.</span><span class=\"n\">send_message</span><span class=\"p\">(</span><span class=\"n\">message</span><span class=\"p\">)</span>\n\n<span class=\"nd\">@failure_hook</span>\n<span class=\"k\">def</span> <span class=\"nf\">do_something_on_failure</span><span class=\"p\">(</span><span class=\"n\">context</span><span class=\"p\">):</span>\n    <span class=\"n\">do_something</span><span class=\"p\">()</span>\n</pre></div>\n</div>\n</dd></dl>\n\n<dl class=\"py class\">\n<dt id=\"dagster.HookDefinition\">\n<em class=\"property\"><span class=\"pre\">class</span> </em><code class=\"sig-prename descclassname\"><span class=\"pre\">dagster.</span></code><code class=\"sig-name descname\"><span class=\"pre\">HookDefinition</span></code><span class=\"sig-paren\">(</span><em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">name</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">hook_fn</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">required_resource_keys</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">None</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">decorated_fn</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">None</span></span></em><span class=\"sig-paren\">)</span><a class=\"reference internal\" href=\"../../../../_modules/dagster/core/definitions/hook_definition#HookDefinition\"><span class=\"viewcode-link\"><span class=\"pre\">[source]</span></span></a><a class=\"headerlink\" href=\"#dagster.HookDefinition\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Define a hook which can be triggered during a op execution (e.g. a callback on the step\nexecution failure event during a op execution).</p>\n<dl class=\"field-list simple\">\n<dt class=\"field-odd\">Parameters</dt>\n<dd class=\"field-odd\"><ul class=\"simple\">\n<li><p><strong>name</strong> (<a class=\"reference external\" href=\"https://docs.python.org/3/library/stdtypes.html#str\" title=\"(in Python v3.8)\"><em>str</em></a>) \u2013 The name of this hook.</p></li>\n<li><p><strong>hook_fn</strong> (<em>Callable</em>) \u2013 The callback function that will be triggered.</p></li>\n<li><p><strong>required_resource_keys</strong> (<em>Optional</em><em>[</em><em>AbstractSet</em><em>[</em><a class=\"reference external\" href=\"https://docs.python.org/3/library/stdtypes.html#str\" title=\"(in Python v3.8)\"><em>str</em></a><em>]</em><em>]</em>) \u2013 Keys for the resources required by the\nhook.</p></li>\n</ul>\n</dd>\n</dl>\n</dd></dl>\n\n<dl class=\"py class\">\n<dt id=\"dagster.HookContext\">\n<em class=\"property\"><span class=\"pre\">class</span> </em><code class=\"sig-prename descclassname\"><span class=\"pre\">dagster.</span></code><code class=\"sig-name descname\"><span class=\"pre\">HookContext</span></code><span class=\"sig-paren\">(</span><em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">step_execution_context</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">hook_def</span></span></em><span class=\"sig-paren\">)</span><a class=\"reference internal\" href=\"../../../../_modules/dagster/core/execution/context/hook#HookContext\"><span class=\"viewcode-link\"><span class=\"pre\">[source]</span></span></a><a class=\"headerlink\" href=\"#dagster.HookContext\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>The <code class=\"docutils literal notranslate\"><span class=\"pre\">context</span></code> object available to a hook function on an DagsterEvent.</p>\n<dl class=\"py attribute\">\n<dt id=\"dagster.HookContext.log\">\n<code class=\"sig-name descname\"><span class=\"pre\">log</span></code><a class=\"headerlink\" href=\"#dagster.HookContext.log\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Centralized log dispatch from user code.</p>\n<dl class=\"field-list simple\">\n<dt class=\"field-odd\">Type</dt>\n<dd class=\"field-odd\"><p><a class=\"reference internal\" href=\"loggers#dagster.DagsterLogManager\" title=\"dagster.DagsterLogManager\">DagsterLogManager</a></p>\n</dd>\n</dl>\n</dd></dl>\n\n<dl class=\"py attribute\">\n<dt id=\"dagster.HookContext.hook_def\">\n<code class=\"sig-name descname\"><span class=\"pre\">hook_def</span></code><a class=\"headerlink\" href=\"#dagster.HookContext.hook_def\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>The hook that the context object belongs to.</p>\n<dl class=\"field-list simple\">\n<dt class=\"field-odd\">Type</dt>\n<dd class=\"field-odd\"><p><a class=\"reference internal\" href=\"#dagster.HookDefinition\" title=\"dagster.HookDefinition\">HookDefinition</a></p>\n</dd>\n</dl>\n</dd></dl>\n\n<dl class=\"py attribute\">\n<dt id=\"dagster.HookContext.solid\">\n<code class=\"sig-name descname\"><span class=\"pre\">solid</span></code><a class=\"headerlink\" href=\"#dagster.HookContext.solid\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>The solid instance associated with the hook.</p>\n<dl class=\"field-list simple\">\n<dt class=\"field-odd\">Type</dt>\n<dd class=\"field-odd\"><p>Solid</p>\n</dd>\n</dl>\n</dd></dl>\n\n<dl class=\"py attribute\">\n<dt id=\"dagster.HookContext.op\">\n<code class=\"sig-name descname\"><span class=\"pre\">op</span></code><a class=\"headerlink\" href=\"#dagster.HookContext.op\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>The op instance associated with the hook.</p>\n<dl class=\"field-list simple\">\n<dt class=\"field-odd\">Type</dt>\n<dd class=\"field-odd\"><p>Op</p>\n</dd>\n</dl>\n</dd></dl>\n\n<dl class=\"py attribute\">\n<dt id=\"dagster.HookContext.step_key\">\n<code class=\"sig-name descname\"><span class=\"pre\">step_key</span></code><a class=\"headerlink\" href=\"#dagster.HookContext.step_key\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>The key for the step where this hook is being triggered.</p>\n<dl class=\"field-list simple\">\n<dt class=\"field-odd\">Type</dt>\n<dd class=\"field-odd\"><p><a class=\"reference external\" href=\"https://docs.python.org/3/library/stdtypes.html#str\" title=\"(in Python v3.8)\">str</a></p>\n</dd>\n</dl>\n</dd></dl>\n\n<dl class=\"py attribute\">\n<dt id=\"dagster.HookContext.required_resource_keys\">\n<code class=\"sig-name descname\"><span class=\"pre\">required_resource_keys</span></code><a class=\"headerlink\" href=\"#dagster.HookContext.required_resource_keys\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Resources required by this hook.</p>\n<dl class=\"field-list simple\">\n<dt class=\"field-odd\">Type</dt>\n<dd class=\"field-odd\"><p>Set[<a class=\"reference external\" href=\"https://docs.python.org/3/library/stdtypes.html#str\" title=\"(in Python v3.8)\">str</a>]</p>\n</dd>\n</dl>\n</dd></dl>\n\n<dl class=\"py attribute\">\n<dt id=\"dagster.HookContext.resources\">\n<code class=\"sig-name descname\"><span class=\"pre\">resources</span></code><a class=\"headerlink\" href=\"#dagster.HookContext.resources\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Resources available in the hook context.</p>\n<dl class=\"field-list simple\">\n<dt class=\"field-odd\">Type</dt>\n<dd class=\"field-odd\"><p>Resources</p>\n</dd>\n</dl>\n</dd></dl>\n\n<dl class=\"py attribute\">\n<dt id=\"dagster.HookContext.solid_config\">\n<code class=\"sig-name descname\"><span class=\"pre\">solid_config</span></code><a class=\"headerlink\" href=\"#dagster.HookContext.solid_config\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>The parsed config specific to this solid.</p>\n<dl class=\"field-list simple\">\n<dt class=\"field-odd\">Type</dt>\n<dd class=\"field-odd\"><p>Any</p>\n</dd>\n</dl>\n</dd></dl>\n\n<dl class=\"py attribute\">\n<dt id=\"dagster.HookContext.op_config\">\n<code class=\"sig-name descname\"><span class=\"pre\">op_config</span></code><a class=\"headerlink\" href=\"#dagster.HookContext.op_config\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>The parsed config specific to this op.</p>\n<dl class=\"field-list simple\">\n<dt class=\"field-odd\">Type</dt>\n<dd class=\"field-odd\"><p>Any</p>\n</dd>\n</dl>\n</dd></dl>\n\n<dl class=\"py attribute\">\n<dt id=\"dagster.HookContext.pipeline_name\">\n<code class=\"sig-name descname\"><span class=\"pre\">pipeline_name</span></code><a class=\"headerlink\" href=\"#dagster.HookContext.pipeline_name\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>The name of the pipeline where this hook is being triggered.</p>\n<dl class=\"field-list simple\">\n<dt class=\"field-odd\">Type</dt>\n<dd class=\"field-odd\"><p><a class=\"reference external\" href=\"https://docs.python.org/3/library/stdtypes.html#str\" title=\"(in Python v3.8)\">str</a></p>\n</dd>\n</dl>\n</dd></dl>\n\n<dl class=\"py attribute\">\n<dt id=\"dagster.HookContext.job_name\">\n<code class=\"sig-name descname\"><span class=\"pre\">job_name</span></code><a class=\"headerlink\" href=\"#dagster.HookContext.job_name\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>The name of the job where this hook is being triggered.</p>\n<dl class=\"field-list simple\">\n<dt class=\"field-odd\">Type</dt>\n<dd class=\"field-odd\"><p><a class=\"reference external\" href=\"https://docs.python.org/3/library/stdtypes.html#str\" title=\"(in Python v3.8)\">str</a></p>\n</dd>\n</dl>\n</dd></dl>\n\n<dl class=\"py attribute\">\n<dt id=\"dagster.HookContext.run_id\">\n<code class=\"sig-name descname\"><span class=\"pre\">run_id</span></code><a class=\"headerlink\" href=\"#dagster.HookContext.run_id\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>The id of the run where this hook is being triggered.</p>\n<dl class=\"field-list simple\">\n<dt class=\"field-odd\">Type</dt>\n<dd class=\"field-odd\"><p><a class=\"reference external\" href=\"https://docs.python.org/3/library/stdtypes.html#str\" title=\"(in Python v3.8)\">str</a></p>\n</dd>\n</dl>\n</dd></dl>\n\n<dl class=\"py attribute\">\n<dt id=\"dagster.HookContext.mode_def\">\n<code class=\"sig-name descname\"><span class=\"pre\">mode_def</span></code><a class=\"headerlink\" href=\"#dagster.HookContext.mode_def\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>The mode with which the pipeline is being run.</p>\n<dl class=\"field-list simple\">\n<dt class=\"field-odd\">Type</dt>\n<dd class=\"field-odd\"><p><a class=\"reference internal\" href=\"modes#dagster.ModeDefinition\" title=\"dagster.ModeDefinition\">ModeDefinition</a></p>\n</dd>\n</dl>\n</dd></dl>\n\n<dl class=\"py attribute\">\n<dt id=\"dagster.HookContext.op_exception\">\n<code class=\"sig-name descname\"><span class=\"pre\">op_exception</span></code><a class=\"headerlink\" href=\"#dagster.HookContext.op_exception\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>The thrown exception in a failed op.</p>\n<dl class=\"field-list simple\">\n<dt class=\"field-odd\">Type</dt>\n<dd class=\"field-odd\"><p>Optional[<a class=\"reference external\" href=\"https://docs.python.org/3/library/exceptions.html#BaseException\" title=\"(in Python v3.8)\">BaseException</a>]</p>\n</dd>\n</dl>\n</dd></dl>\n\n<dl class=\"py attribute\">\n<dt id=\"dagster.HookContext.op_output_values\">\n<code class=\"sig-name descname\"><span class=\"pre\">op_output_values</span></code><a class=\"headerlink\" href=\"#dagster.HookContext.op_output_values\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Computed output values in an op.</p>\n<dl class=\"field-list simple\">\n<dt class=\"field-odd\">Type</dt>\n<dd class=\"field-odd\"><p>Dict</p>\n</dd>\n</dl>\n</dd></dl>\n\n<dl class=\"py method\">\n<dt id=\"dagster.HookContext.solid_exception\">\n<em class=\"property\"><span class=\"pre\">property</span> </em><code class=\"sig-name descname\"><span class=\"pre\">solid_exception</span></code><a class=\"headerlink\" href=\"#dagster.HookContext.solid_exception\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>The thrown exception in a failed solid.</p>\n<dl class=\"field-list simple\">\n<dt class=\"field-odd\">Returns</dt>\n<dd class=\"field-odd\"><p>the exception object, None if the solid execution succeeds.</p>\n</dd>\n<dt class=\"field-even\">Return type</dt>\n<dd class=\"field-even\"><p>Optional[<a class=\"reference external\" href=\"https://docs.python.org/3/library/exceptions.html#BaseException\" title=\"(in Python v3.8)\">BaseException</a>]</p>\n</dd>\n</dl>\n</dd></dl>\n\n<dl class=\"py method\">\n<dt id=\"dagster.HookContext.solid_output_values\">\n<em class=\"property\"><span class=\"pre\">property</span> </em><code class=\"sig-name descname\"><span class=\"pre\">solid_output_values</span></code><a class=\"headerlink\" href=\"#dagster.HookContext.solid_output_values\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>The computed output values.</p>\n<dl class=\"simple\">\n<dt>Returns a dictionary where keys are output names and the values are:</dt><dd><ul class=\"simple\">\n<li><p>the output values in the normal case</p></li>\n<li><p>a dictionary from mapping key to corresponding value in the mapped case</p></li>\n</ul>\n</dd>\n</dl>\n</dd></dl>\n\n</dd></dl>\n\n<dl class=\"py function\">\n<dt id=\"dagster.build_hook_context\">\n<code class=\"sig-prename descclassname\"><span class=\"pre\">dagster.</span></code><code class=\"sig-name descname\"><span class=\"pre\">build_hook_context</span></code><span class=\"sig-paren\">(</span><em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">resources</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">None</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">mode_def</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">None</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">solid</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">None</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">op</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">None</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">run_id</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">None</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">job_name</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">None</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">op_exception</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">None</span></span></em><span class=\"sig-paren\">)</span><a class=\"reference internal\" href=\"../../../../_modules/dagster/core/execution/context/hook#build_hook_context\"><span class=\"viewcode-link\"><span class=\"pre\">[source]</span></span></a><a class=\"headerlink\" href=\"#dagster.build_hook_context\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Builds hook context from provided parameters.</p>\n<p><code class=\"docutils literal notranslate\"><span class=\"pre\">build_hook_context</span></code> can be used as either a function or a context manager. If there is a\nprovided resource to <code class=\"docutils literal notranslate\"><span class=\"pre\">build_hook_context</span></code> that is a context manager, then it must be used as a\ncontext manager. This function can be used to provide the context argument to the invocation of\na hook definition.</p>\n<dl class=\"field-list simple\">\n<dt class=\"field-odd\">Parameters</dt>\n<dd class=\"field-odd\"><ul class=\"simple\">\n<li><p><strong>resources</strong> (<em>Optional</em><em>[</em><em>Dict</em><em>[</em><a class=\"reference external\" href=\"https://docs.python.org/3/library/stdtypes.html#str\" title=\"(in Python v3.8)\"><em>str</em></a><em>, </em><em>Any</em><em>]</em><em>]</em>) \u2013 The resources to provide to the context. These can\neither be values or resource definitions.</p></li>\n<li><p><strong>mode_def</strong> (<em>Optional</em><em>[</em><a class=\"reference internal\" href=\"modes#dagster.ModeDefinition\" title=\"dagster.ModeDefinition\"><em>ModeDefinition</em></a><em>]</em>) \u2013 The mode definition used with the context.</p></li>\n<li><p><strong>op</strong> (<em>Optional</em><em>[</em><a class=\"reference internal\" href=\"ops#dagster.OpDefinition\" title=\"dagster.OpDefinition\"><em>OpDefinition</em></a><em>, </em><em>PendingNodeInvocation</em><em>]</em>) \u2013 The op definition which the\nhook may be associated with.</p></li>\n<li><p><strong>solid</strong> (<em>Optional</em><em>[</em><a class=\"reference internal\" href=\"solids#dagster.SolidDefinition\" title=\"dagster.SolidDefinition\"><em>SolidDefinition</em></a><em>, </em><em>PendingNodeInvocation</em><em>]</em>) \u2013 (legacy) The solid definition which the\nhook may be associated with.</p></li>\n<li><p><strong>run_id</strong> (<em>Optional</em><em>[</em><a class=\"reference external\" href=\"https://docs.python.org/3/library/stdtypes.html#str\" title=\"(in Python v3.8)\"><em>str</em></a><em>]</em>) \u2013 The id of the run in which the hook is invoked (provided for mocking purposes).</p></li>\n<li><p><strong>job_name</strong> (<em>Optional</em><em>[</em><a class=\"reference external\" href=\"https://docs.python.org/3/library/stdtypes.html#str\" title=\"(in Python v3.8)\"><em>str</em></a><em>]</em>) \u2013 The name of the job in which the hook is used (provided for mocking purposes).</p></li>\n<li><p><strong>op_exception</strong> (<em>Optional</em><em>[</em><a class=\"reference external\" href=\"https://docs.python.org/3/library/exceptions.html#Exception\" title=\"(in Python v3.8)\"><em>Exception</em></a><em>]</em>) \u2013 The exception that caused the hook to be triggered.</p></li>\n</ul>\n</dd>\n</dl>\n<p class=\"rubric\">Examples</p>\n<div class=\"highlight-python notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"n\">context</span> <span class=\"o\">=</span> <span class=\"n\">build_hook_context</span><span class=\"p\">()</span>\n<span class=\"n\">hook_to_invoke</span><span class=\"p\">(</span><span class=\"n\">context</span><span class=\"p\">)</span>\n\n<span class=\"k\">with</span> <span class=\"n\">build_hook_context</span><span class=\"p\">(</span><span class=\"n\">resources</span><span class=\"o\">=</span><span class=\"p\">{</span><span class=\"s2\">&quot;foo&quot;</span><span class=\"p\">:</span> <span class=\"n\">context_manager_resource</span><span class=\"p\">})</span> <span class=\"k\">as</span> <span class=\"n\">context</span><span class=\"p\">:</span>\n    <span class=\"n\">hook_to_invoke</span><span class=\"p\">(</span><span class=\"n\">context</span><span class=\"p\">)</span>\n</pre></div>\n</div>\n</dd></dl>\n\n</div>\n", "current_page_name": "sections/api/apidocs/hooks", "customsidebar": null, "display_toc": false, "meta": null, "metatags": "", "next": {"link": "../internals/", "title": "Internals"}, "page_source_suffix": ".rst", "parents": [], "prev": {"link": "../graphs/", "title": "Graphs"}, "rellinks": [["genindex", "General Index", "I", "index"], ["py-modindex", "Python Module Index", "", "modules"], ["sections/api/apidocs/internals", "Internals", "N", "next"], ["sections/api/apidocs/graphs", "Graphs", "P", "previous"]], "sidebars": ["globaltoc.html", "searchbox.html"], "sourcename": "sections/api/apidocs/hooks.rst.txt", "title": "Hooks", "toc": "<ul>\n<li><a class=\"reference internal\" href=\"#\">Hooks</a></li>\n</ul>\n"}, "internals": {"alabaster_version": "0.7.12", "body": "<div class=\"section\" id=\"internals\">\n<h1>Internals<a class=\"headerlink\" href=\"#internals\" title=\"Permalink to this headline\">\u00b6</a></h1>\n<p>Please note that internal APIs are likely to be in much greater flux pre-1.0 than user-facing APIs,\nparticularly if not exported in the top level <code class=\"docutils literal notranslate\"><span class=\"pre\">dagster</span></code> module.</p>\n<p>If you find yourself consulting these docs because you are writing custom components and plug-ins,\nplease get in touch with the core team <a class=\"reference external\" href=\"https://join.slack.com/t/dagster/shared_invite/enQtNjEyNjkzNTA2OTkzLTI0MzdlNjU0ODVhZjQyOTMyMGM1ZDUwZDQ1YjJmYjI3YzExZGViMDI1ZDlkNTY5OThmYWVlOWM1MWVjN2I3NjU\">on our Slack</a>.\nWe\u2019re curious what you\u2019re up to, happy to help, excited for new community contributions, and eager\nto make the system as easy to work with as possible \u2013 including for teams who are looking to\ncustomize it.</p>\n<div class=\"section\" id=\"executors\">\n<h2>Executors<a class=\"headerlink\" href=\"#executors\" title=\"Permalink to this headline\">\u00b6</a></h2>\n<dl class=\"py function\">\n<dt id=\"dagster.executor\">\n<code class=\"sig-prename descclassname\"><span class=\"pre\">&#64;</span></code><code class=\"sig-prename descclassname\"><span class=\"pre\">dagster.</span></code><code class=\"sig-name descname\"><span class=\"pre\">executor</span></code><span class=\"sig-paren\">(</span><em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">name</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">None</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">config_schema</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">None</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">requirements</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">None</span></span></em><span class=\"sig-paren\">)</span><a class=\"reference internal\" href=\"../../../../_modules/dagster/core/definitions/executor_definition#executor\"><span class=\"viewcode-link\"><span class=\"pre\">[source]</span></span></a><a class=\"headerlink\" href=\"#dagster.executor\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Define an executor.</p>\n<p>The decorated function should accept an <a class=\"reference internal\" href=\"#dagster.InitExecutorContext\" title=\"dagster.InitExecutorContext\"><code class=\"xref py py-class docutils literal notranslate\"><span class=\"pre\">InitExecutorContext</span></code></a> and return an instance\nof <a class=\"reference internal\" href=\"#dagster.Executor\" title=\"dagster.Executor\"><code class=\"xref py py-class docutils literal notranslate\"><span class=\"pre\">Executor</span></code></a>.</p>\n<dl class=\"field-list simple\">\n<dt class=\"field-odd\">Parameters</dt>\n<dd class=\"field-odd\"><ul class=\"simple\">\n<li><p><strong>name</strong> (<em>Optional</em><em>[</em><a class=\"reference external\" href=\"https://docs.python.org/3/library/stdtypes.html#str\" title=\"(in Python v3.8)\"><em>str</em></a><em>]</em>) \u2013 The name of the executor.</p></li>\n<li><p><strong>config_schema</strong> (<em>Optional</em><em>[</em><a class=\"reference internal\" href=\"config#dagster.ConfigSchema\" title=\"dagster.ConfigSchema\"><em>ConfigSchema</em></a><em>]</em>) \u2013 The schema for the config. Configuration data available in\n<cite>init_context.executor_config</cite>. If not set, Dagster will accept any config provided for.</p></li>\n<li><p><strong>requirements</strong> (<em>Optional</em><em>[</em><em>List</em><em>[</em><em>ExecutorRequirement</em><em>]</em><em>]</em>) \u2013 Any requirements that must\nbe met in order for the executor to be usable for a particular pipeline execution.</p></li>\n</ul>\n</dd>\n</dl>\n</dd></dl>\n\n<dl class=\"py class\">\n<dt id=\"dagster.ExecutorDefinition\">\n<em class=\"property\"><span class=\"pre\">class</span> </em><code class=\"sig-prename descclassname\"><span class=\"pre\">dagster.</span></code><code class=\"sig-name descname\"><span class=\"pre\">ExecutorDefinition</span></code><span class=\"sig-paren\">(</span><em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">name</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">config_schema</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">None</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">requirements</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">None</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">executor_creation_fn</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">None</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">description</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">None</span></span></em><span class=\"sig-paren\">)</span><a class=\"reference internal\" href=\"../../../../_modules/dagster/core/definitions/executor_definition#ExecutorDefinition\"><span class=\"viewcode-link\"><span class=\"pre\">[source]</span></span></a><a class=\"headerlink\" href=\"#dagster.ExecutorDefinition\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><dl class=\"field-list simple\">\n<dt class=\"field-odd\">Parameters</dt>\n<dd class=\"field-odd\"><ul class=\"simple\">\n<li><p><strong>name</strong> (<a class=\"reference external\" href=\"https://docs.python.org/3/library/stdtypes.html#str\" title=\"(in Python v3.8)\"><em>str</em></a>) \u2013 The name of the executor.</p></li>\n<li><p><strong>config_schema</strong> (<em>Optional</em><em>[</em><a class=\"reference internal\" href=\"config#dagster.ConfigSchema\" title=\"dagster.ConfigSchema\"><em>ConfigSchema</em></a><em>]</em>) \u2013 The schema for the config. Configuration data\navailable in <cite>init_context.executor_config</cite>. If not set, Dagster will accept any config\nprovided.</p></li>\n<li><p><strong>requirements</strong> (<em>Optional</em><em>[</em><em>List</em><em>[</em><em>ExecutorRequirement</em><em>]</em><em>]</em>) \u2013 Any requirements that must\nbe met in order for the executor to be usable for a particular pipeline execution.</p></li>\n<li><p><strong>executor_creation_fn</strong> (<em>Optional</em><em>[</em><em>Callable</em><em>]</em>) \u2013 Should accept an <a class=\"reference internal\" href=\"#dagster.InitExecutorContext\" title=\"dagster.InitExecutorContext\"><code class=\"xref py py-class docutils literal notranslate\"><span class=\"pre\">InitExecutorContext</span></code></a>\nand return an instance of <a class=\"reference internal\" href=\"#dagster.Executor\" title=\"dagster.Executor\"><code class=\"xref py py-class docutils literal notranslate\"><span class=\"pre\">Executor</span></code></a></p></li>\n<li><p><strong>required_resource_keys</strong> (<em>Optional</em><em>[</em><em>Set</em><em>[</em><a class=\"reference external\" href=\"https://docs.python.org/3/library/stdtypes.html#str\" title=\"(in Python v3.8)\"><em>str</em></a><em>]</em><em>]</em>) \u2013 Keys for the resources required by the\nexecutor.</p></li>\n</ul>\n</dd>\n</dl>\n<dl class=\"py method\">\n<dt id=\"dagster.ExecutorDefinition.configured\">\n<code class=\"sig-name descname\"><span class=\"pre\">configured</span></code><span class=\"sig-paren\">(</span><em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">config_or_config_fn</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">name</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">None</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">config_schema</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">None</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">description</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">None</span></span></em><span class=\"sig-paren\">)</span><a class=\"reference internal\" href=\"../../../../_modules/dagster/core/definitions/executor_definition#ExecutorDefinition.configured\"><span class=\"viewcode-link\"><span class=\"pre\">[source]</span></span></a><a class=\"headerlink\" href=\"#dagster.ExecutorDefinition.configured\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Wraps this object in an object of the same type that provides configuration to the inner\nobject.</p>\n<dl class=\"field-list simple\">\n<dt class=\"field-odd\">Parameters</dt>\n<dd class=\"field-odd\"><ul class=\"simple\">\n<li><p><strong>config_or_config_fn</strong> (<em>Union</em><em>[</em><em>Any</em><em>, </em><em>Callable</em><em>[</em><em>[</em><em>Any</em><em>]</em><em>, </em><em>Any</em><em>]</em><em>]</em>) \u2013 Either (1) Run configuration\nthat fully satisfies this object\u2019s config schema or (2) A function that accepts run\nconfiguration and returns run configuration that fully satisfies this object\u2019s\nconfig schema.  In the latter case, config_schema must be specified.  When\npassing a function, it\u2019s easiest to use <a class=\"reference internal\" href=\"config#dagster.configured\" title=\"dagster.configured\"><code class=\"xref py py-func docutils literal notranslate\"><span class=\"pre\">configured()</span></code></a>.</p></li>\n<li><p><strong>name</strong> (<em>Optional</em><em>[</em><a class=\"reference external\" href=\"https://docs.python.org/3/library/stdtypes.html#str\" title=\"(in Python v3.8)\"><em>str</em></a><em>]</em>) \u2013 Name of the new definition. If not provided, the emitted\ndefinition will inherit the name of the <cite>ExecutorDefinition</cite> upon which this\nfunction is called.</p></li>\n<li><p><strong>config_schema</strong> (<em>Optional</em><em>[</em><a class=\"reference internal\" href=\"config#dagster.ConfigSchema\" title=\"dagster.ConfigSchema\"><em>ConfigSchema</em></a><em>]</em>) \u2013 If config_or_config_fn is a function, the config\nschema that its input must satisfy. If not set, Dagster will accept any config\nprovided.</p></li>\n<li><p><strong>description</strong> (<em>Optional</em><em>[</em><a class=\"reference external\" href=\"https://docs.python.org/3/library/stdtypes.html#str\" title=\"(in Python v3.8)\"><em>str</em></a><em>]</em>) \u2013 Description of the new definition. If not specified,\ninherits the description of the definition being configured.</p></li>\n</ul>\n</dd>\n</dl>\n<p>Returns (ConfigurableDefinition): A configured version of this object.</p>\n</dd></dl>\n\n</dd></dl>\n\n<dl class=\"py class\">\n<dt id=\"dagster.InitExecutorContext\">\n<em class=\"property\"><span class=\"pre\">class</span> </em><code class=\"sig-prename descclassname\"><span class=\"pre\">dagster.</span></code><code class=\"sig-name descname\"><span class=\"pre\">InitExecutorContext</span></code><span class=\"sig-paren\">(</span><em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">job</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">executor_def</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">executor_config</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">instance</span></span></em><span class=\"sig-paren\">)</span><a class=\"reference internal\" href=\"../../../../_modules/dagster/core/executor/init#InitExecutorContext\"><span class=\"viewcode-link\"><span class=\"pre\">[source]</span></span></a><a class=\"headerlink\" href=\"#dagster.InitExecutorContext\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Executor-specific initialization context.</p>\n<dl class=\"py attribute\">\n<dt id=\"dagster.InitExecutorContext.job\">\n<code class=\"sig-name descname\"><span class=\"pre\">job</span></code><a class=\"headerlink\" href=\"#dagster.InitExecutorContext.job\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>The job to be executed.</p>\n<dl class=\"field-list simple\">\n<dt class=\"field-odd\">Type</dt>\n<dd class=\"field-odd\"><p>IPipeline</p>\n</dd>\n</dl>\n</dd></dl>\n\n<dl class=\"py attribute\">\n<dt id=\"dagster.InitExecutorContext.executor_def\">\n<code class=\"sig-name descname\"><span class=\"pre\">executor_def</span></code><a class=\"headerlink\" href=\"#dagster.InitExecutorContext.executor_def\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>The definition of the executor currently being\nconstructed.</p>\n<dl class=\"field-list simple\">\n<dt class=\"field-odd\">Type</dt>\n<dd class=\"field-odd\"><p><a class=\"reference internal\" href=\"#dagster.ExecutorDefinition\" title=\"dagster.ExecutorDefinition\">ExecutorDefinition</a></p>\n</dd>\n</dl>\n</dd></dl>\n\n<dl class=\"py attribute\">\n<dt id=\"dagster.InitExecutorContext.executor_config\">\n<code class=\"sig-name descname\"><span class=\"pre\">executor_config</span></code><a class=\"headerlink\" href=\"#dagster.InitExecutorContext.executor_config\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>The parsed config passed to the executor.</p>\n<dl class=\"field-list simple\">\n<dt class=\"field-odd\">Type</dt>\n<dd class=\"field-odd\"><p><a class=\"reference external\" href=\"https://docs.python.org/3/library/stdtypes.html#dict\" title=\"(in Python v3.8)\">dict</a></p>\n</dd>\n</dl>\n</dd></dl>\n\n<dl class=\"py attribute\">\n<dt id=\"dagster.InitExecutorContext.instance\">\n<code class=\"sig-name descname\"><span class=\"pre\">instance</span></code><a class=\"headerlink\" href=\"#dagster.InitExecutorContext.instance\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>The current instance.</p>\n<dl class=\"field-list simple\">\n<dt class=\"field-odd\">Type</dt>\n<dd class=\"field-odd\"><p><a class=\"reference internal\" href=\"#dagster.DagsterInstance\" title=\"dagster.DagsterInstance\">DagsterInstance</a></p>\n</dd>\n</dl>\n</dd></dl>\n\n</dd></dl>\n\n<dl class=\"py class\">\n<dt id=\"dagster.Executor\">\n<em class=\"property\"><span class=\"pre\">class</span> </em><code class=\"sig-prename descclassname\"><span class=\"pre\">dagster.</span></code><code class=\"sig-name descname\"><span class=\"pre\">Executor</span></code><a class=\"reference internal\" href=\"../../../../_modules/dagster/core/executor/base#Executor\"><span class=\"viewcode-link\"><span class=\"pre\">[source]</span></span></a><a class=\"headerlink\" href=\"#dagster.Executor\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><dl class=\"py method\">\n<dt id=\"dagster.Executor.execute\">\n<em class=\"property\"><span class=\"pre\">abstract</span> </em><code class=\"sig-name descname\"><span class=\"pre\">execute</span></code><span class=\"sig-paren\">(</span><em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">plan_context</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">execution_plan</span></span></em><span class=\"sig-paren\">)</span><a class=\"reference internal\" href=\"../../../../_modules/dagster/core/executor/base#Executor.execute\"><span class=\"viewcode-link\"><span class=\"pre\">[source]</span></span></a><a class=\"headerlink\" href=\"#dagster.Executor.execute\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>For the given context and execution plan, orchestrate a series of sub plan executions in a way that satisfies the whole plan being executed.</p>\n<dl class=\"field-list simple\">\n<dt class=\"field-odd\">Parameters</dt>\n<dd class=\"field-odd\"><ul class=\"simple\">\n<li><p><strong>plan_context</strong> (<em>PlanOrchestrationContext</em>) \u2013 The plan\u2019s orchestration context.</p></li>\n<li><p><strong>execution_plan</strong> (<em>ExecutionPlan</em>) \u2013 The plan to execute.</p></li>\n</ul>\n</dd>\n<dt class=\"field-even\">Returns</dt>\n<dd class=\"field-even\"><p>A stream of dagster events.</p>\n</dd>\n</dl>\n</dd></dl>\n\n<dl class=\"py method\">\n<dt id=\"dagster.Executor.retries\">\n<em class=\"property\"><span class=\"pre\">abstract</span> <span class=\"pre\">property</span> </em><code class=\"sig-name descname\"><span class=\"pre\">retries</span></code><a class=\"headerlink\" href=\"#dagster.Executor.retries\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Whether retries are enabled or disabled for this instance of the executor.</p>\n<p>Executors should allow this to be controlled via configuration if possible.</p>\n<p>Returns: RetryMode</p>\n</dd></dl>\n\n</dd></dl>\n\n</div>\n<hr class=\"docutils\" />\n<div class=\"section\" id=\"file-manager\">\n<h2>File Manager<a class=\"headerlink\" href=\"#file-manager\" title=\"Permalink to this headline\">\u00b6</a></h2>\n<dl class=\"py class\">\n<dt id=\"dagster.core.storage.file_manager.FileManager\">\n<em class=\"property\"><span class=\"pre\">class</span> </em><code class=\"sig-prename descclassname\"><span class=\"pre\">dagster.core.storage.file_manager.</span></code><code class=\"sig-name descname\"><span class=\"pre\">FileManager</span></code><a class=\"reference internal\" href=\"../../../../_modules/dagster/core/storage/file_manager#FileManager\"><span class=\"viewcode-link\"><span class=\"pre\">[source]</span></span></a><a class=\"headerlink\" href=\"#dagster.core.storage.file_manager.FileManager\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Base class for all file managers in dagster.</p>\n<p>The file manager is an interface that can be implemented by resources to provide abstract\naccess to a file system such as local disk, S3, or other cloud storage.</p>\n<p>For examples of usage, see the documentation of the concrete file manager implementations.</p>\n<dl class=\"py method\">\n<dt id=\"dagster.core.storage.file_manager.FileManager.copy_handle_to_local_temp\">\n<em class=\"property\"><span class=\"pre\">abstract</span> </em><code class=\"sig-name descname\"><span class=\"pre\">copy_handle_to_local_temp</span></code><span class=\"sig-paren\">(</span><em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">file_handle</span></span></em><span class=\"sig-paren\">)</span><a class=\"reference internal\" href=\"../../../../_modules/dagster/core/storage/file_manager#FileManager.copy_handle_to_local_temp\"><span class=\"viewcode-link\"><span class=\"pre\">[source]</span></span></a><a class=\"headerlink\" href=\"#dagster.core.storage.file_manager.FileManager.copy_handle_to_local_temp\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Copy a file represented by a file handle to a temp file.</p>\n<p>In an implementation built around an object store such as S3, this method would be expected\nto download the file from S3 to local filesystem in a location assigned by the standard\nlibrary\u2019s <a class=\"reference external\" href=\"https://docs.python.org/3/library/tempfile.html#module-tempfile\" title=\"(in Python v3.8)\"><code class=\"docutils literal notranslate\"><span class=\"pre\">tempfile</span></code></a> module.</p>\n<p>Temp files returned by this method are <em>not</em> guaranteed to be reusable across solid\nboundaries. For files that must be available across solid boundaries, use the\n<a class=\"reference internal\" href=\"#dagster.core.storage.file_manager.FileManager.read\" title=\"dagster.core.storage.file_manager.FileManager.read\"><code class=\"xref py py-meth docutils literal notranslate\"><span class=\"pre\">read()</span></code></a>,\n<a class=\"reference internal\" href=\"#dagster.core.storage.file_manager.FileManager.read_data\" title=\"dagster.core.storage.file_manager.FileManager.read_data\"><code class=\"xref py py-meth docutils literal notranslate\"><span class=\"pre\">read_data()</span></code></a>,\n<a class=\"reference internal\" href=\"#dagster.core.storage.file_manager.FileManager.write\" title=\"dagster.core.storage.file_manager.FileManager.write\"><code class=\"xref py py-meth docutils literal notranslate\"><span class=\"pre\">write()</span></code></a>, and\n<a class=\"reference internal\" href=\"#dagster.core.storage.file_manager.FileManager.write_data\" title=\"dagster.core.storage.file_manager.FileManager.write_data\"><code class=\"xref py py-meth docutils literal notranslate\"><span class=\"pre\">write_data()</span></code></a> methods.</p>\n<dl class=\"field-list simple\">\n<dt class=\"field-odd\">Parameters</dt>\n<dd class=\"field-odd\"><p><strong>file_handle</strong> (<a class=\"reference internal\" href=\"types#dagster.FileHandle\" title=\"dagster.FileHandle\"><em>FileHandle</em></a>) \u2013 The handle to the file to make available as a local temp file.</p>\n</dd>\n<dt class=\"field-even\">Returns</dt>\n<dd class=\"field-even\"><p>Path to the local temp file.</p>\n</dd>\n<dt class=\"field-odd\">Return type</dt>\n<dd class=\"field-odd\"><p><a class=\"reference external\" href=\"https://docs.python.org/3/library/stdtypes.html#str\" title=\"(in Python v3.8)\">str</a></p>\n</dd>\n</dl>\n</dd></dl>\n\n<dl class=\"py method\">\n<dt id=\"dagster.core.storage.file_manager.FileManager.delete_local_temp\">\n<em class=\"property\"><span class=\"pre\">abstract</span> </em><code class=\"sig-name descname\"><span class=\"pre\">delete_local_temp</span></code><span class=\"sig-paren\">(</span><span class=\"sig-paren\">)</span><a class=\"reference internal\" href=\"../../../../_modules/dagster/core/storage/file_manager#FileManager.delete_local_temp\"><span class=\"viewcode-link\"><span class=\"pre\">[source]</span></span></a><a class=\"headerlink\" href=\"#dagster.core.storage.file_manager.FileManager.delete_local_temp\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Delete all local temporary files created by previous calls to\n<a class=\"reference internal\" href=\"#dagster.core.storage.file_manager.FileManager.copy_handle_to_local_temp\" title=\"dagster.core.storage.file_manager.FileManager.copy_handle_to_local_temp\"><code class=\"xref py py-meth docutils literal notranslate\"><span class=\"pre\">copy_handle_to_local_temp()</span></code></a>.</p>\n<p>Should typically only be called by framework implementors.</p>\n</dd></dl>\n\n<dl class=\"py method\">\n<dt id=\"dagster.core.storage.file_manager.FileManager.read\">\n<em class=\"property\"><span class=\"pre\">abstract</span> </em><code class=\"sig-name descname\"><span class=\"pre\">read</span></code><span class=\"sig-paren\">(</span><em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">file_handle</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">mode</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">'rb'</span></span></em><span class=\"sig-paren\">)</span><a class=\"reference internal\" href=\"../../../../_modules/dagster/core/storage/file_manager#FileManager.read\"><span class=\"viewcode-link\"><span class=\"pre\">[source]</span></span></a><a class=\"headerlink\" href=\"#dagster.core.storage.file_manager.FileManager.read\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Return a file-like stream for the file handle.</p>\n<p>This may incur an expensive network call for file managers backed by object stores\nsuch as S3.</p>\n<dl class=\"field-list simple\">\n<dt class=\"field-odd\">Parameters</dt>\n<dd class=\"field-odd\"><ul class=\"simple\">\n<li><p><strong>file_handle</strong> (<a class=\"reference internal\" href=\"types#dagster.FileHandle\" title=\"dagster.FileHandle\"><em>FileHandle</em></a>) \u2013 The file handle to make available as a stream.</p></li>\n<li><p><strong>mode</strong> (<a class=\"reference external\" href=\"https://docs.python.org/3/library/stdtypes.html#str\" title=\"(in Python v3.8)\"><em>str</em></a>) \u2013 The mode in which to open the file. Default: <code class=\"docutils literal notranslate\"><span class=\"pre\">&quot;rb&quot;</span></code>.</p></li>\n</ul>\n</dd>\n<dt class=\"field-even\">Returns</dt>\n<dd class=\"field-even\"><p>A file-like stream.</p>\n</dd>\n<dt class=\"field-odd\">Return type</dt>\n<dd class=\"field-odd\"><p>Union[TextIO, BinaryIO]</p>\n</dd>\n</dl>\n</dd></dl>\n\n<dl class=\"py method\">\n<dt id=\"dagster.core.storage.file_manager.FileManager.read_data\">\n<em class=\"property\"><span class=\"pre\">abstract</span> </em><code class=\"sig-name descname\"><span class=\"pre\">read_data</span></code><span class=\"sig-paren\">(</span><em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">file_handle</span></span></em><span class=\"sig-paren\">)</span><a class=\"reference internal\" href=\"../../../../_modules/dagster/core/storage/file_manager#FileManager.read_data\"><span class=\"viewcode-link\"><span class=\"pre\">[source]</span></span></a><a class=\"headerlink\" href=\"#dagster.core.storage.file_manager.FileManager.read_data\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Return the bytes for a given file handle. This may incur an expensive network\ncall for file managers backed by object stores such as s3.</p>\n<dl class=\"field-list simple\">\n<dt class=\"field-odd\">Parameters</dt>\n<dd class=\"field-odd\"><p><strong>file_handle</strong> (<a class=\"reference internal\" href=\"types#dagster.FileHandle\" title=\"dagster.FileHandle\"><em>FileHandle</em></a>) \u2013 The file handle for which to return bytes.</p>\n</dd>\n<dt class=\"field-even\">Returns</dt>\n<dd class=\"field-even\"><p>Bytes for a given file handle.</p>\n</dd>\n<dt class=\"field-odd\">Return type</dt>\n<dd class=\"field-odd\"><p><a class=\"reference external\" href=\"https://docs.python.org/3/library/stdtypes.html#bytes\" title=\"(in Python v3.8)\">bytes</a></p>\n</dd>\n</dl>\n</dd></dl>\n\n<dl class=\"py method\">\n<dt id=\"dagster.core.storage.file_manager.FileManager.write\">\n<em class=\"property\"><span class=\"pre\">abstract</span> </em><code class=\"sig-name descname\"><span class=\"pre\">write</span></code><span class=\"sig-paren\">(</span><em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">file_obj</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">mode</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">'wb'</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">ext</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">None</span></span></em><span class=\"sig-paren\">)</span><a class=\"reference internal\" href=\"../../../../_modules/dagster/core/storage/file_manager#FileManager.write\"><span class=\"viewcode-link\"><span class=\"pre\">[source]</span></span></a><a class=\"headerlink\" href=\"#dagster.core.storage.file_manager.FileManager.write\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Write the bytes contained within the given file object into the file manager.</p>\n<dl class=\"field-list simple\">\n<dt class=\"field-odd\">Parameters</dt>\n<dd class=\"field-odd\"><ul class=\"simple\">\n<li><p><strong>file_obj</strong> (<em>Union</em><em>[</em><em>TextIO</em><em>, </em><em>StringIO</em><em>]</em>) \u2013 A file-like object.</p></li>\n<li><p><strong>mode</strong> (<em>Optional</em><em>[</em><a class=\"reference external\" href=\"https://docs.python.org/3/library/stdtypes.html#str\" title=\"(in Python v3.8)\"><em>str</em></a><em>]</em>) \u2013 The mode in which to write the file into the file manager.\nDefault: <code class=\"docutils literal notranslate\"><span class=\"pre\">&quot;wb&quot;</span></code>.</p></li>\n<li><p><strong>ext</strong> (<em>Optional</em><em>[</em><a class=\"reference external\" href=\"https://docs.python.org/3/library/stdtypes.html#str\" title=\"(in Python v3.8)\"><em>str</em></a><em>]</em>) \u2013 For file managers that support file extensions, the extension with\nwhich to write the file. Default: <code class=\"docutils literal notranslate\"><span class=\"pre\">None</span></code>.</p></li>\n</ul>\n</dd>\n<dt class=\"field-even\">Returns</dt>\n<dd class=\"field-even\"><p>A handle to the newly created file.</p>\n</dd>\n<dt class=\"field-odd\">Return type</dt>\n<dd class=\"field-odd\"><p><a class=\"reference internal\" href=\"types#dagster.FileHandle\" title=\"dagster.FileHandle\">FileHandle</a></p>\n</dd>\n</dl>\n</dd></dl>\n\n<dl class=\"py method\">\n<dt id=\"dagster.core.storage.file_manager.FileManager.write_data\">\n<em class=\"property\"><span class=\"pre\">abstract</span> </em><code class=\"sig-name descname\"><span class=\"pre\">write_data</span></code><span class=\"sig-paren\">(</span><em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">data</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">ext</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">None</span></span></em><span class=\"sig-paren\">)</span><a class=\"reference internal\" href=\"../../../../_modules/dagster/core/storage/file_manager#FileManager.write_data\"><span class=\"viewcode-link\"><span class=\"pre\">[source]</span></span></a><a class=\"headerlink\" href=\"#dagster.core.storage.file_manager.FileManager.write_data\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Write raw bytes into the file manager.</p>\n<dl class=\"field-list simple\">\n<dt class=\"field-odd\">Parameters</dt>\n<dd class=\"field-odd\"><ul class=\"simple\">\n<li><p><strong>data</strong> (<a class=\"reference external\" href=\"https://docs.python.org/3/library/stdtypes.html#bytes\" title=\"(in Python v3.8)\"><em>bytes</em></a>) \u2013 The bytes to write into the file manager.</p></li>\n<li><p><strong>ext</strong> (<em>Optional</em><em>[</em><a class=\"reference external\" href=\"https://docs.python.org/3/library/stdtypes.html#str\" title=\"(in Python v3.8)\"><em>str</em></a><em>]</em>) \u2013 For file managers that support file extensions, the extension with\nwhich to write the file. Default: <code class=\"docutils literal notranslate\"><span class=\"pre\">None</span></code>.</p></li>\n</ul>\n</dd>\n<dt class=\"field-even\">Returns</dt>\n<dd class=\"field-even\"><p>A handle to the newly created file.</p>\n</dd>\n<dt class=\"field-odd\">Return type</dt>\n<dd class=\"field-odd\"><p><a class=\"reference internal\" href=\"types#dagster.FileHandle\" title=\"dagster.FileHandle\">FileHandle</a></p>\n</dd>\n</dl>\n</dd></dl>\n\n</dd></dl>\n\n<dl class=\"py data\">\n<dt id=\"dagster.local_file_manager\">\n<code class=\"sig-prename descclassname\"><span class=\"pre\">dagster.</span></code><code class=\"sig-name descname\"><span class=\"pre\">local_file_manager</span></code><em class=\"property\"> <span class=\"pre\">ResourceDefinition</span></em><a class=\"reference internal\" href=\"../../../../_modules/dagster/core/storage/file_manager#local_file_manager\"><span class=\"viewcode-link\"><span class=\"pre\">[source]</span></span></a><a class=\"headerlink\" href=\"#dagster.local_file_manager\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>FileManager that provides abstract access to a local filesystem.</p>\n<p>By default, files will be stored in <cite>&lt;local_artifact_storage&gt;/storage/file_manager</cite> where\n<cite>&lt;local_artifact_storage&gt;</cite> can be configured the <code class=\"docutils literal notranslate\"><span class=\"pre\">dagster.yaml</span></code> file in <code class=\"docutils literal notranslate\"><span class=\"pre\">$DAGSTER_HOME</span></code>.</p>\n<p>Implements the <a class=\"reference internal\" href=\"#dagster.core.storage.file_manager.FileManager\" title=\"dagster.core.storage.file_manager.FileManager\"><code class=\"xref py py-class docutils literal notranslate\"><span class=\"pre\">FileManager</span></code></a> API.</p>\n<p>Examples:</p>\n<div class=\"highlight-python notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"kn\">import</span> <span class=\"nn\">tempfile</span>\n\n<span class=\"kn\">from</span> <span class=\"nn\">dagster</span> <span class=\"kn\">import</span> <span class=\"n\">ModeDefinition</span><span class=\"p\">,</span> <span class=\"n\">local_file_manager</span><span class=\"p\">,</span> <span class=\"n\">pipeline</span><span class=\"p\">,</span> <span class=\"n\">solid</span>\n\n\n<span class=\"nd\">@solid</span><span class=\"p\">(</span><span class=\"n\">required_resource_keys</span><span class=\"o\">=</span><span class=\"p\">{</span><span class=\"s2\">&quot;file_manager&quot;</span><span class=\"p\">})</span>\n<span class=\"k\">def</span> <span class=\"nf\">write_files</span><span class=\"p\">(</span><span class=\"n\">context</span><span class=\"p\">):</span>\n    <span class=\"n\">fh_1</span> <span class=\"o\">=</span> <span class=\"n\">context</span><span class=\"o\">.</span><span class=\"n\">resources</span><span class=\"o\">.</span><span class=\"n\">file_manager</span><span class=\"o\">.</span><span class=\"n\">write_data</span><span class=\"p\">(</span><span class=\"sa\">b</span><span class=\"s2\">&quot;foo&quot;</span><span class=\"p\">)</span>\n\n    <span class=\"k\">with</span> <span class=\"n\">tempfile</span><span class=\"o\">.</span><span class=\"n\">NamedTemporaryFile</span><span class=\"p\">(</span><span class=\"s2\">&quot;w+&quot;</span><span class=\"p\">)</span> <span class=\"k\">as</span> <span class=\"n\">fd</span><span class=\"p\">:</span>\n        <span class=\"n\">fd</span><span class=\"o\">.</span><span class=\"n\">write</span><span class=\"p\">(</span><span class=\"s2\">&quot;bar&quot;</span><span class=\"p\">)</span>\n        <span class=\"n\">fd</span><span class=\"o\">.</span><span class=\"n\">seek</span><span class=\"p\">(</span><span class=\"mi\">0</span><span class=\"p\">)</span>\n        <span class=\"n\">fh_2</span> <span class=\"o\">=</span> <span class=\"n\">context</span><span class=\"o\">.</span><span class=\"n\">resources</span><span class=\"o\">.</span><span class=\"n\">file_manager</span><span class=\"o\">.</span><span class=\"n\">write</span><span class=\"p\">(</span><span class=\"n\">fd</span><span class=\"p\">,</span> <span class=\"n\">mode</span><span class=\"o\">=</span><span class=\"s2\">&quot;w&quot;</span><span class=\"p\">,</span> <span class=\"n\">ext</span><span class=\"o\">=</span><span class=\"s2\">&quot;.txt&quot;</span><span class=\"p\">)</span>\n\n    <span class=\"k\">return</span> <span class=\"p\">(</span><span class=\"n\">fh_1</span><span class=\"p\">,</span> <span class=\"n\">fh_2</span><span class=\"p\">)</span>\n\n\n<span class=\"nd\">@solid</span><span class=\"p\">(</span><span class=\"n\">required_resource_keys</span><span class=\"o\">=</span><span class=\"p\">{</span><span class=\"s2\">&quot;file_manager&quot;</span><span class=\"p\">})</span>\n<span class=\"k\">def</span> <span class=\"nf\">read_files</span><span class=\"p\">(</span><span class=\"n\">context</span><span class=\"p\">,</span> <span class=\"n\">file_handles</span><span class=\"p\">):</span>\n    <span class=\"n\">fh_1</span><span class=\"p\">,</span> <span class=\"n\">fh_2</span> <span class=\"o\">=</span> <span class=\"n\">file_handles</span>\n    <span class=\"k\">assert</span> <span class=\"n\">context</span><span class=\"o\">.</span><span class=\"n\">resources</span><span class=\"o\">.</span><span class=\"n\">file_manager</span><span class=\"o\">.</span><span class=\"n\">read_data</span><span class=\"p\">(</span><span class=\"n\">fh_2</span><span class=\"p\">)</span> <span class=\"o\">==</span> <span class=\"sa\">b</span><span class=\"s2\">&quot;bar&quot;</span>\n    <span class=\"n\">fd</span> <span class=\"o\">=</span> <span class=\"n\">context</span><span class=\"o\">.</span><span class=\"n\">resources</span><span class=\"o\">.</span><span class=\"n\">file_manager</span><span class=\"o\">.</span><span class=\"n\">read</span><span class=\"p\">(</span><span class=\"n\">fh_2</span><span class=\"p\">,</span> <span class=\"n\">mode</span><span class=\"o\">=</span><span class=\"s2\">&quot;r&quot;</span><span class=\"p\">)</span>\n    <span class=\"k\">assert</span> <span class=\"n\">fd</span><span class=\"o\">.</span><span class=\"n\">read</span><span class=\"p\">()</span> <span class=\"o\">==</span> <span class=\"s2\">&quot;foo&quot;</span>\n    <span class=\"n\">fd</span><span class=\"o\">.</span><span class=\"n\">close</span><span class=\"p\">()</span>\n\n\n<span class=\"nd\">@pipeline</span><span class=\"p\">(</span><span class=\"n\">mode_defs</span><span class=\"o\">=</span><span class=\"p\">[</span><span class=\"n\">ModeDefinition</span><span class=\"p\">(</span><span class=\"n\">resource_defs</span><span class=\"o\">=</span><span class=\"p\">{</span><span class=\"s2\">&quot;file_manager&quot;</span><span class=\"p\">:</span> <span class=\"n\">local_file_manager</span><span class=\"p\">})])</span>\n<span class=\"k\">def</span> <span class=\"nf\">files_pipeline</span><span class=\"p\">():</span>\n    <span class=\"n\">read_files</span><span class=\"p\">(</span><span class=\"n\">write_files</span><span class=\"p\">())</span>\n</pre></div>\n</div>\n<p>Or to specify the file directory:</p>\n<div class=\"highlight-python notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"nd\">@pipeline</span><span class=\"p\">(</span>\n    <span class=\"n\">mode_defs</span><span class=\"o\">=</span><span class=\"p\">[</span>\n        <span class=\"n\">ModeDefinition</span><span class=\"p\">(</span>\n            <span class=\"n\">resource_defs</span><span class=\"o\">=</span><span class=\"p\">{</span>\n                <span class=\"s2\">&quot;file_manager&quot;</span><span class=\"p\">:</span> <span class=\"n\">local_file_manager</span><span class=\"o\">.</span><span class=\"n\">configured</span><span class=\"p\">({</span><span class=\"s2\">&quot;base_dir&quot;</span><span class=\"p\">:</span> <span class=\"s2\">&quot;/my/base/dir&quot;</span><span class=\"p\">})</span>\n            <span class=\"p\">}</span>\n        <span class=\"p\">)</span>\n    <span class=\"p\">]</span>\n<span class=\"p\">)</span>\n<span class=\"k\">def</span> <span class=\"nf\">files_pipeline</span><span class=\"p\">():</span>\n    <span class=\"n\">read_files</span><span class=\"p\">(</span><span class=\"n\">write_files</span><span class=\"p\">())</span>\n</pre></div>\n</div>\n</dd></dl>\n\n</div>\n<hr class=\"docutils\" />\n<div class=\"section\" id=\"instance\">\n<h2>Instance<a class=\"headerlink\" href=\"#instance\" title=\"Permalink to this headline\">\u00b6</a></h2>\n<dl class=\"py class\">\n<dt id=\"dagster.DagsterInstance\">\n<em class=\"property\"><span class=\"pre\">class</span> </em><code class=\"sig-prename descclassname\"><span class=\"pre\">dagster.</span></code><code class=\"sig-name descname\"><span class=\"pre\">DagsterInstance</span></code><span class=\"sig-paren\">(</span><em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">instance_type</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">local_artifact_storage</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">run_storage</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">event_storage</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">compute_log_manager</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">run_coordinator</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">run_launcher</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">scheduler</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">None</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">schedule_storage</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">None</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">settings</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">None</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">ref</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">None</span></span></em><span class=\"sig-paren\">)</span><a class=\"reference internal\" href=\"../../../../_modules/dagster/core/instance#DagsterInstance\"><span class=\"viewcode-link\"><span class=\"pre\">[source]</span></span></a><a class=\"headerlink\" href=\"#dagster.DagsterInstance\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Core abstraction for managing Dagster\u2019s access to storage and other resources.</p>\n<p>Use DagsterInstance.get() to grab the current DagsterInstance which will load based on\nthe values in the <code class=\"docutils literal notranslate\"><span class=\"pre\">dagster.yaml</span></code> file in <code class=\"docutils literal notranslate\"><span class=\"pre\">$DAGSTER_HOME</span></code>.</p>\n<p>Alternatively, DagsterInstance.ephemeral() can use used which provides a set of\ntransient in-memory components.</p>\n<p>Configuration of this class should be done by setting values in <code class=\"docutils literal notranslate\"><span class=\"pre\">$DAGSTER_HOME/dagster.yaml</span></code>.\nFor example, to use Postgres for dagster storage, you can write a <code class=\"docutils literal notranslate\"><span class=\"pre\">dagster.yaml</span></code> such as the\nfollowing:</p>\n<div class=\"literal-block-wrapper docutils container\" id=\"id1\">\n<div class=\"code-block-caption\"><span class=\"caption-text\">dagster.yaml</span><a class=\"headerlink\" href=\"#id1\" title=\"Permalink to this code\">\u00b6</a></div>\n<div class=\"highlight-YAML notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"nt\">storage</span><span class=\"p\">:</span><span class=\"w\"></span>\n<span class=\"w\">  </span><span class=\"nt\">postgres</span><span class=\"p\">:</span><span class=\"w\"></span>\n<span class=\"w\">    </span><span class=\"nt\">postgres_db</span><span class=\"p\">:</span><span class=\"w\"></span>\n<span class=\"w\">      </span><span class=\"nt\">username</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"l l-Scalar l-Scalar-Plain\">my_username</span><span class=\"w\"></span>\n<span class=\"w\">      </span><span class=\"nt\">password</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"l l-Scalar l-Scalar-Plain\">my_password</span><span class=\"w\"></span>\n<span class=\"w\">      </span><span class=\"nt\">hostname</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"l l-Scalar l-Scalar-Plain\">my_hostname</span><span class=\"w\"></span>\n<span class=\"w\">      </span><span class=\"nt\">db_name</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"l l-Scalar l-Scalar-Plain\">my_database</span><span class=\"w\"></span>\n<span class=\"w\">      </span><span class=\"nt\">port</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"l l-Scalar l-Scalar-Plain\">5432</span><span class=\"w\"></span>\n</pre></div>\n</div>\n</div>\n<dl class=\"field-list simple\">\n<dt class=\"field-odd\">Parameters</dt>\n<dd class=\"field-odd\"><ul class=\"simple\">\n<li><p><strong>instance_type</strong> (<em>InstanceType</em>) \u2013 Indicates whether the instance is ephemeral or persistent.\nUsers should not attempt to set this value directly or in their <code class=\"docutils literal notranslate\"><span class=\"pre\">dagster.yaml</span></code> files.</p></li>\n<li><p><strong>local_artifact_storage</strong> (<a class=\"reference internal\" href=\"#dagster.core.storage.root.LocalArtifactStorage\" title=\"dagster.core.storage.root.LocalArtifactStorage\"><em>LocalArtifactStorage</em></a>) \u2013 The local artifact storage is used to\nconfigure storage for any artifacts that require a local disk, such as schedules, or\nwhen using the filesystem system storage to manage files and intermediates. By default,\nthis will be a <a class=\"reference internal\" href=\"#dagster.core.storage.root.LocalArtifactStorage\" title=\"dagster.core.storage.root.LocalArtifactStorage\"><code class=\"xref py py-class docutils literal notranslate\"><span class=\"pre\">dagster.core.storage.root.LocalArtifactStorage</span></code></a>. Configurable\nin <code class=\"docutils literal notranslate\"><span class=\"pre\">dagster.yaml</span></code> using the <a class=\"reference internal\" href=\"#dagster.serdes.ConfigurableClass\" title=\"dagster.serdes.ConfigurableClass\"><code class=\"xref py py-class docutils literal notranslate\"><span class=\"pre\">ConfigurableClass</span></code></a>\nmachinery.</p></li>\n<li><p><strong>run_storage</strong> (<a class=\"reference internal\" href=\"#dagster.core.storage.runs.RunStorage\" title=\"dagster.core.storage.runs.RunStorage\"><em>RunStorage</em></a>) \u2013 The run storage is used to store metadata about ongoing and past\npipeline runs. By default, this will be a\n<a class=\"reference internal\" href=\"#dagster.core.storage.runs.SqliteRunStorage\" title=\"dagster.core.storage.runs.SqliteRunStorage\"><code class=\"xref py py-class docutils literal notranslate\"><span class=\"pre\">dagster.core.storage.runs.SqliteRunStorage</span></code></a>. Configurable in <code class=\"docutils literal notranslate\"><span class=\"pre\">dagster.yaml</span></code>\nusing the <a class=\"reference internal\" href=\"#dagster.serdes.ConfigurableClass\" title=\"dagster.serdes.ConfigurableClass\"><code class=\"xref py py-class docutils literal notranslate\"><span class=\"pre\">ConfigurableClass</span></code></a> machinery.</p></li>\n<li><p><strong>event_storage</strong> (<a class=\"reference internal\" href=\"#dagster.core.storage.event_log.EventLogStorage\" title=\"dagster.core.storage.event_log.EventLogStorage\"><em>EventLogStorage</em></a>) \u2013 Used to store the structured event logs generated by\npipeline runs. By default, this will be a\n<a class=\"reference internal\" href=\"#dagster.core.storage.event_log.SqliteEventLogStorage\" title=\"dagster.core.storage.event_log.SqliteEventLogStorage\"><code class=\"xref py py-class docutils literal notranslate\"><span class=\"pre\">dagster.core.storage.event_log.SqliteEventLogStorage</span></code></a>. Configurable in\n<code class=\"docutils literal notranslate\"><span class=\"pre\">dagster.yaml</span></code> using the <a class=\"reference internal\" href=\"#dagster.serdes.ConfigurableClass\" title=\"dagster.serdes.ConfigurableClass\"><code class=\"xref py py-class docutils literal notranslate\"><span class=\"pre\">ConfigurableClass</span></code></a> machinery.</p></li>\n<li><p><strong>compute_log_manager</strong> (<a class=\"reference internal\" href=\"#dagster.core.storage.compute_log_manager.ComputeLogManager\" title=\"dagster.core.storage.compute_log_manager.ComputeLogManager\"><em>ComputeLogManager</em></a>) \u2013 The compute log manager handles stdout and stderr\nlogging for solid compute functions. By default, this will be a\n<a class=\"reference internal\" href=\"#dagster.core.storage.local_compute_log_manager.LocalComputeLogManager\" title=\"dagster.core.storage.local_compute_log_manager.LocalComputeLogManager\"><code class=\"xref py py-class docutils literal notranslate\"><span class=\"pre\">dagster.core.storage.local_compute_log_manager.LocalComputeLogManager</span></code></a>.\nConfigurable in <code class=\"docutils literal notranslate\"><span class=\"pre\">dagster.yaml</span></code> using the\n<a class=\"reference internal\" href=\"#dagster.serdes.ConfigurableClass\" title=\"dagster.serdes.ConfigurableClass\"><code class=\"xref py py-class docutils literal notranslate\"><span class=\"pre\">ConfigurableClass</span></code></a> machinery.</p></li>\n<li><p><strong>run_coordinator</strong> (<em>RunCoordinator</em>) \u2013 A runs coordinator may be used to manage the execution\nof pipeline runs.</p></li>\n<li><p><strong>run_launcher</strong> (<em>Optional</em><em>[</em><a class=\"reference internal\" href=\"#dagster.core.launcher.RunLauncher\" title=\"dagster.core.launcher.RunLauncher\"><em>RunLauncher</em></a><em>]</em>) \u2013 Optionally, a run launcher may be used to enable\na Dagster instance to launch pipeline runs, e.g. on a remote Kubernetes cluster, in\naddition to running them locally.</p></li>\n<li><p><strong>settings</strong> (<em>Optional</em><em>[</em><em>Dict</em><em>]</em>) \u2013 Specifies certain per-instance settings,\nsuch as feature flags. These are set in the <code class=\"docutils literal notranslate\"><span class=\"pre\">dagster.yaml</span></code> under a set of whitelisted\nkeys.</p></li>\n<li><p><strong>ref</strong> (<em>Optional</em><em>[</em><a class=\"reference internal\" href=\"#dagster.core.instance.InstanceRef\" title=\"dagster.core.instance.InstanceRef\"><em>InstanceRef</em></a><em>]</em>) \u2013 Used by internal machinery to pass instances across process\nboundaries.</p></li>\n</ul>\n</dd>\n</dl>\n<dl class=\"py method\">\n<dt id=\"dagster.DagsterInstance.add_daemon_heartbeat\">\n<code class=\"sig-name descname\"><span class=\"pre\">add_daemon_heartbeat</span></code><span class=\"sig-paren\">(</span><em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">daemon_heartbeat</span></span></em><span class=\"sig-paren\">)</span><a class=\"reference internal\" href=\"../../../../_modules/dagster/core/instance#DagsterInstance.add_daemon_heartbeat\"><span class=\"viewcode-link\"><span class=\"pre\">[source]</span></span></a><a class=\"headerlink\" href=\"#dagster.DagsterInstance.add_daemon_heartbeat\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Called on a regular interval by the daemon</p>\n</dd></dl>\n\n<dl class=\"py method\">\n<dt id=\"dagster.DagsterInstance.get_daemon_heartbeats\">\n<code class=\"sig-name descname\"><span class=\"pre\">get_daemon_heartbeats</span></code><span class=\"sig-paren\">(</span><span class=\"sig-paren\">)</span><a class=\"reference internal\" href=\"../../../../_modules/dagster/core/instance#DagsterInstance.get_daemon_heartbeats\"><span class=\"viewcode-link\"><span class=\"pre\">[source]</span></span></a><a class=\"headerlink\" href=\"#dagster.DagsterInstance.get_daemon_heartbeats\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Latest heartbeats of all daemon types</p>\n</dd></dl>\n\n<dl class=\"py method\">\n<dt id=\"dagster.DagsterInstance.launch_run\">\n<code class=\"sig-name descname\"><span class=\"pre\">launch_run</span></code><span class=\"sig-paren\">(</span><em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">run_id</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">workspace</span></span></em><span class=\"sig-paren\">)</span><a class=\"reference internal\" href=\"../../../../_modules/dagster/core/instance#DagsterInstance.launch_run\"><span class=\"viewcode-link\"><span class=\"pre\">[source]</span></span></a><a class=\"headerlink\" href=\"#dagster.DagsterInstance.launch_run\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Launch a pipeline run.</p>\n<p>This method is typically called using <cite>instance.submit_run</cite> rather than being invoked\ndirectly. This method delegates to the <code class=\"docutils literal notranslate\"><span class=\"pre\">RunLauncher</span></code>, if any, configured on the instance,\nand will call its implementation of <code class=\"docutils literal notranslate\"><span class=\"pre\">RunLauncher.launch_run()</span></code> to begin the execution of\nthe specified run. Runs should be created in the instance (e.g., by calling\n<code class=\"docutils literal notranslate\"><span class=\"pre\">DagsterInstance.create_run()</span></code>) <em>before</em> this method is called, and should be in the\n<code class=\"docutils literal notranslate\"><span class=\"pre\">PipelineRunStatus.NOT_STARTED</span></code> state.</p>\n<dl class=\"field-list simple\">\n<dt class=\"field-odd\">Parameters</dt>\n<dd class=\"field-odd\"><p><strong>run_id</strong> (<a class=\"reference external\" href=\"https://docs.python.org/3/library/stdtypes.html#str\" title=\"(in Python v3.8)\"><em>str</em></a>) \u2013 The id of the run the launch.</p>\n</dd>\n</dl>\n</dd></dl>\n\n<dl class=\"py method\">\n<dt id=\"dagster.DagsterInstance.report_engine_event\">\n<code class=\"sig-name descname\"><span class=\"pre\">report_engine_event</span></code><span class=\"sig-paren\">(</span><em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">message</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">pipeline_run</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">None</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">engine_event_data</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">None</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">cls</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">None</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">step_key</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">None</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">pipeline_name</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">None</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">run_id</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">None</span></span></em><span class=\"sig-paren\">)</span><a class=\"reference internal\" href=\"../../../../_modules/dagster/core/instance#DagsterInstance.report_engine_event\"><span class=\"viewcode-link\"><span class=\"pre\">[source]</span></span></a><a class=\"headerlink\" href=\"#dagster.DagsterInstance.report_engine_event\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Report a EngineEvent that occurred outside of a pipeline execution context.</p>\n</dd></dl>\n\n<dl class=\"py method\">\n<dt id=\"dagster.DagsterInstance.resume_run\">\n<code class=\"sig-name descname\"><span class=\"pre\">resume_run</span></code><span class=\"sig-paren\">(</span><em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">run_id</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">workspace</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">attempt_number</span></span></em><span class=\"sig-paren\">)</span><a class=\"reference internal\" href=\"../../../../_modules/dagster/core/instance#DagsterInstance.resume_run\"><span class=\"viewcode-link\"><span class=\"pre\">[source]</span></span></a><a class=\"headerlink\" href=\"#dagster.DagsterInstance.resume_run\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Resume a pipeline run.</p>\n<p>This method should be called on runs which have already been launched, but whose run workers\nhave died.</p>\n<dl class=\"field-list simple\">\n<dt class=\"field-odd\">Parameters</dt>\n<dd class=\"field-odd\"><p><strong>run_id</strong> (<a class=\"reference external\" href=\"https://docs.python.org/3/library/stdtypes.html#str\" title=\"(in Python v3.8)\"><em>str</em></a>) \u2013 The id of the run the launch.</p>\n</dd>\n</dl>\n</dd></dl>\n\n<dl class=\"py method\">\n<dt id=\"dagster.DagsterInstance.should_start_background_run_thread\">\n<em class=\"property\"><span class=\"pre\">property</span> </em><code class=\"sig-name descname\"><span class=\"pre\">should_start_background_run_thread</span></code><a class=\"headerlink\" href=\"#dagster.DagsterInstance.should_start_background_run_thread\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Gate on an experimental feature to start a thread that monitors for if the run should be canceled.</p>\n</dd></dl>\n\n<dl class=\"py method\">\n<dt id=\"dagster.DagsterInstance.submit_run\">\n<code class=\"sig-name descname\"><span class=\"pre\">submit_run</span></code><span class=\"sig-paren\">(</span><em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">run_id</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">workspace</span></span></em><span class=\"sig-paren\">)</span><a class=\"reference internal\" href=\"../../../../_modules/dagster/core/instance#DagsterInstance.submit_run\"><span class=\"viewcode-link\"><span class=\"pre\">[source]</span></span></a><a class=\"headerlink\" href=\"#dagster.DagsterInstance.submit_run\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Submit a pipeline run to the coordinator.</p>\n<p>This method delegates to the <code class=\"docutils literal notranslate\"><span class=\"pre\">RunCoordinator</span></code>, configured on the instance, and will\ncall its implementation of <code class=\"docutils literal notranslate\"><span class=\"pre\">RunCoordinator.submit_run()</span></code> to send the run to the\ncoordinator for execution. Runs should be created in the instance (e.g., by calling\n<code class=\"docutils literal notranslate\"><span class=\"pre\">DagsterInstance.create_run()</span></code>) <em>before</em> this method is called, and\nshould be in the <code class=\"docutils literal notranslate\"><span class=\"pre\">PipelineRunStatus.NOT_STARTED</span></code> state. They also must have a non-null\nExternalPipelineOrigin.</p>\n<dl class=\"field-list simple\">\n<dt class=\"field-odd\">Parameters</dt>\n<dd class=\"field-odd\"><p><strong>run_id</strong> (<a class=\"reference external\" href=\"https://docs.python.org/3/library/stdtypes.html#str\" title=\"(in Python v3.8)\"><em>str</em></a>) \u2013 The id of the run.</p>\n</dd>\n</dl>\n</dd></dl>\n\n</dd></dl>\n\n<dl class=\"py class\">\n<dt id=\"dagster.core.instance.InstanceRef\">\n<em class=\"property\"><span class=\"pre\">class</span> </em><code class=\"sig-prename descclassname\"><span class=\"pre\">dagster.core.instance.</span></code><code class=\"sig-name descname\"><span class=\"pre\">InstanceRef</span></code><span class=\"sig-paren\">(</span><em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">local_artifact_storage_data</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">compute_logs_data</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">scheduler_data</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">run_coordinator_data</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">run_launcher_data</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">settings</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">run_storage_data</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">event_storage_data</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">schedule_storage_data</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">custom_instance_class_data</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">None</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">storage_data</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">None</span></span></em><span class=\"sig-paren\">)</span><a class=\"reference internal\" href=\"../../../../_modules/dagster/core/instance/ref#InstanceRef\"><span class=\"viewcode-link\"><span class=\"pre\">[source]</span></span></a><a class=\"headerlink\" href=\"#dagster.core.instance.InstanceRef\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Serializable representation of a <code class=\"xref py py-class docutils literal notranslate\"><span class=\"pre\">DagsterInstance</span></code>.</p>\n<p>Users should not instantiate this class directly.</p>\n</dd></dl>\n\n<dl class=\"py class\">\n<dt id=\"dagster.serdes.ConfigurableClass\">\n<em class=\"property\"><span class=\"pre\">class</span> </em><code class=\"sig-prename descclassname\"><span class=\"pre\">dagster.serdes.</span></code><code class=\"sig-name descname\"><span class=\"pre\">ConfigurableClass</span></code><a class=\"reference internal\" href=\"../../../../_modules/dagster/serdes/config_class#ConfigurableClass\"><span class=\"viewcode-link\"><span class=\"pre\">[source]</span></span></a><a class=\"headerlink\" href=\"#dagster.serdes.ConfigurableClass\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Abstract mixin for classes that can be loaded from config.</p>\n<p>This supports a powerful plugin pattern which avoids both a) a lengthy, hard-to-synchronize list\nof conditional imports / optional extras_requires in dagster core and b) a magic directory or\nfile in which third parties can place plugin packages. Instead, the intention is to make, e.g.,\nrun storage, pluggable with a config chunk like:</p>\n<div class=\"highlight-yaml notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"nt\">run_storage</span><span class=\"p\">:</span><span class=\"w\"></span>\n<span class=\"w\">    </span><span class=\"nt\">module</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"l l-Scalar l-Scalar-Plain\">very_cool_package.run_storage</span><span class=\"w\"></span>\n<span class=\"w\">    </span><span class=\"nt\">class</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"l l-Scalar l-Scalar-Plain\">SplendidRunStorage</span><span class=\"w\"></span>\n<span class=\"w\">    </span><span class=\"nt\">config</span><span class=\"p\">:</span><span class=\"w\"></span>\n<span class=\"w\">        </span><span class=\"nt\">magic_word</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"s\">&quot;quux&quot;</span><span class=\"w\"></span>\n</pre></div>\n</div>\n<p>This same pattern should eventually be viable for other system components, e.g. engines.</p>\n<p>The <code class=\"docutils literal notranslate\"><span class=\"pre\">ConfigurableClass</span></code> mixin provides the necessary hooks for classes to be instantiated from\nan instance of <code class=\"docutils literal notranslate\"><span class=\"pre\">ConfigurableClassData</span></code>.</p>\n<p>Pieces of the Dagster system which we wish to make pluggable in this way should consume a config\ntype such as:</p>\n<div class=\"highlight-python notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"p\">{</span><span class=\"s1\">&#39;module&#39;</span><span class=\"p\">:</span> <span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"s1\">&#39;class&#39;</span><span class=\"p\">:</span> <span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"s1\">&#39;config&#39;</span><span class=\"p\">:</span> <span class=\"n\">Field</span><span class=\"p\">(</span><span class=\"n\">Permissive</span><span class=\"p\">())}</span>\n</pre></div>\n</div>\n<dl class=\"py method\">\n<dt id=\"dagster.serdes.ConfigurableClass.config_type\">\n<em class=\"property\"><span class=\"pre\">abstract</span> <span class=\"pre\">classmethod</span> </em><code class=\"sig-name descname\"><span class=\"pre\">config_type</span></code><span class=\"sig-paren\">(</span><span class=\"sig-paren\">)</span><a class=\"reference internal\" href=\"../../../../_modules/dagster/serdes/config_class#ConfigurableClass.config_type\"><span class=\"viewcode-link\"><span class=\"pre\">[source]</span></span></a><a class=\"headerlink\" href=\"#dagster.serdes.ConfigurableClass.config_type\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>dagster.ConfigType: The config type against which to validate a config yaml fragment\nserialized in an instance of <code class=\"docutils literal notranslate\"><span class=\"pre\">ConfigurableClassData</span></code>.</p>\n</dd></dl>\n\n<dl class=\"py method\">\n<dt id=\"dagster.serdes.ConfigurableClass.from_config_value\">\n<em class=\"property\"><span class=\"pre\">abstract</span> <span class=\"pre\">static</span> </em><code class=\"sig-name descname\"><span class=\"pre\">from_config_value</span></code><span class=\"sig-paren\">(</span><em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">inst_data</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">config_value</span></span></em><span class=\"sig-paren\">)</span><a class=\"reference internal\" href=\"../../../../_modules/dagster/serdes/config_class#ConfigurableClass.from_config_value\"><span class=\"viewcode-link\"><span class=\"pre\">[source]</span></span></a><a class=\"headerlink\" href=\"#dagster.serdes.ConfigurableClass.from_config_value\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>New up an instance of the ConfigurableClass from a validated config value.</p>\n<p>Called by ConfigurableClassData.rehydrate.</p>\n<dl class=\"field-list simple\">\n<dt class=\"field-odd\">Parameters</dt>\n<dd class=\"field-odd\"><p><strong>config_value</strong> (<a class=\"reference external\" href=\"https://docs.python.org/3/library/stdtypes.html#dict\" title=\"(in Python v3.8)\"><em>dict</em></a>) \u2013 The validated config value to use. Typically this should be the\n<code class=\"docutils literal notranslate\"><span class=\"pre\">value</span></code> attribute of a\n<code class=\"xref py py-class docutils literal notranslate\"><span class=\"pre\">EvaluateValueResult</span></code>.</p>\n</dd>\n</dl>\n<p>A common pattern is for the implementation to align the config_value with the signature\nof the ConfigurableClass\u2019s constructor:</p>\n<div class=\"highlight-python notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"nd\">@staticmethod</span>\n<span class=\"k\">def</span> <span class=\"nf\">from_config_value</span><span class=\"p\">(</span><span class=\"n\">inst_data</span><span class=\"p\">,</span> <span class=\"n\">config_value</span><span class=\"p\">):</span>\n    <span class=\"k\">return</span> <span class=\"n\">MyConfigurableClass</span><span class=\"p\">(</span><span class=\"n\">inst_data</span><span class=\"o\">=</span><span class=\"n\">inst_data</span><span class=\"p\">,</span> <span class=\"o\">**</span><span class=\"n\">config_value</span><span class=\"p\">)</span>\n</pre></div>\n</div>\n</dd></dl>\n\n<dl class=\"py method\">\n<dt id=\"dagster.serdes.ConfigurableClass.inst_data\">\n<em class=\"property\"><span class=\"pre\">abstract</span> <span class=\"pre\">property</span> </em><code class=\"sig-name descname\"><span class=\"pre\">inst_data</span></code><a class=\"headerlink\" href=\"#dagster.serdes.ConfigurableClass.inst_data\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Subclass must be able to return the inst_data as a property if it has been constructed\nthrough the from_config_value code path.</p>\n</dd></dl>\n\n</dd></dl>\n\n<dl class=\"py class\">\n<dt id=\"dagster.serdes.ConfigurableClassData\">\n<em class=\"property\"><span class=\"pre\">class</span> </em><code class=\"sig-prename descclassname\"><span class=\"pre\">dagster.serdes.</span></code><code class=\"sig-name descname\"><span class=\"pre\">ConfigurableClassData</span></code><span class=\"sig-paren\">(</span><em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">module_name</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">class_name</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">config_yaml</span></span></em><span class=\"sig-paren\">)</span><a class=\"reference internal\" href=\"../../../../_modules/dagster/serdes/config_class#ConfigurableClassData\"><span class=\"viewcode-link\"><span class=\"pre\">[source]</span></span></a><a class=\"headerlink\" href=\"#dagster.serdes.ConfigurableClassData\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Serializable tuple describing where to find a class and the config fragment that should\nbe used to instantiate it.</p>\n<p>Users should not instantiate this class directly.</p>\n<p>Classes intended to be serialized in this way should implement the\n<a class=\"reference internal\" href=\"#dagster.serdes.ConfigurableClass\" title=\"dagster.serdes.ConfigurableClass\"><code class=\"xref py py-class docutils literal notranslate\"><span class=\"pre\">dagster.serdes.ConfigurableClass</span></code></a> mixin.</p>\n</dd></dl>\n\n<dl class=\"py class\">\n<dt id=\"dagster.core.storage.root.LocalArtifactStorage\">\n<em class=\"property\"><span class=\"pre\">class</span> </em><code class=\"sig-prename descclassname\"><span class=\"pre\">dagster.core.storage.root.</span></code><code class=\"sig-name descname\"><span class=\"pre\">LocalArtifactStorage</span></code><span class=\"sig-paren\">(</span><em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">base_dir</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">inst_data</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">None</span></span></em><span class=\"sig-paren\">)</span><a class=\"reference internal\" href=\"../../../../_modules/dagster/core/storage/root#LocalArtifactStorage\"><span class=\"viewcode-link\"><span class=\"pre\">[source]</span></span></a><a class=\"headerlink\" href=\"#dagster.core.storage.root.LocalArtifactStorage\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><dl class=\"py method\">\n<dt id=\"dagster.core.storage.root.LocalArtifactStorage.config_type\">\n<em class=\"property\"><span class=\"pre\">classmethod</span> </em><code class=\"sig-name descname\"><span class=\"pre\">config_type</span></code><span class=\"sig-paren\">(</span><span class=\"sig-paren\">)</span><a class=\"reference internal\" href=\"../../../../_modules/dagster/core/storage/root#LocalArtifactStorage.config_type\"><span class=\"viewcode-link\"><span class=\"pre\">[source]</span></span></a><a class=\"headerlink\" href=\"#dagster.core.storage.root.LocalArtifactStorage.config_type\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>dagster.ConfigType: The config type against which to validate a config yaml fragment\nserialized in an instance of <code class=\"docutils literal notranslate\"><span class=\"pre\">ConfigurableClassData</span></code>.</p>\n</dd></dl>\n\n<dl class=\"py method\">\n<dt id=\"dagster.core.storage.root.LocalArtifactStorage.from_config_value\">\n<em class=\"property\"><span class=\"pre\">static</span> </em><code class=\"sig-name descname\"><span class=\"pre\">from_config_value</span></code><span class=\"sig-paren\">(</span><em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">inst_data</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">config_value</span></span></em><span class=\"sig-paren\">)</span><a class=\"reference internal\" href=\"../../../../_modules/dagster/core/storage/root#LocalArtifactStorage.from_config_value\"><span class=\"viewcode-link\"><span class=\"pre\">[source]</span></span></a><a class=\"headerlink\" href=\"#dagster.core.storage.root.LocalArtifactStorage.from_config_value\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>New up an instance of the ConfigurableClass from a validated config value.</p>\n<p>Called by ConfigurableClassData.rehydrate.</p>\n<dl class=\"field-list simple\">\n<dt class=\"field-odd\">Parameters</dt>\n<dd class=\"field-odd\"><p><strong>config_value</strong> (<a class=\"reference external\" href=\"https://docs.python.org/3/library/stdtypes.html#dict\" title=\"(in Python v3.8)\"><em>dict</em></a>) \u2013 The validated config value to use. Typically this should be the\n<code class=\"docutils literal notranslate\"><span class=\"pre\">value</span></code> attribute of a\n<code class=\"xref py py-class docutils literal notranslate\"><span class=\"pre\">EvaluateValueResult</span></code>.</p>\n</dd>\n</dl>\n<p>A common pattern is for the implementation to align the config_value with the signature\nof the ConfigurableClass\u2019s constructor:</p>\n<div class=\"highlight-python notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"nd\">@staticmethod</span>\n<span class=\"k\">def</span> <span class=\"nf\">from_config_value</span><span class=\"p\">(</span><span class=\"n\">inst_data</span><span class=\"p\">,</span> <span class=\"n\">config_value</span><span class=\"p\">):</span>\n    <span class=\"k\">return</span> <span class=\"n\">MyConfigurableClass</span><span class=\"p\">(</span><span class=\"n\">inst_data</span><span class=\"o\">=</span><span class=\"n\">inst_data</span><span class=\"p\">,</span> <span class=\"o\">**</span><span class=\"n\">config_value</span><span class=\"p\">)</span>\n</pre></div>\n</div>\n</dd></dl>\n\n<dl class=\"py method\">\n<dt id=\"dagster.core.storage.root.LocalArtifactStorage.inst_data\">\n<em class=\"property\"><span class=\"pre\">property</span> </em><code class=\"sig-name descname\"><span class=\"pre\">inst_data</span></code><a class=\"headerlink\" href=\"#dagster.core.storage.root.LocalArtifactStorage.inst_data\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Subclass must be able to return the inst_data as a property if it has been constructed\nthrough the from_config_value code path.</p>\n</dd></dl>\n\n</dd></dl>\n\n</div>\n<hr class=\"docutils\" />\n<div class=\"section\" id=\"storage\">\n<h2>Storage<a class=\"headerlink\" href=\"#storage\" title=\"Permalink to this headline\">\u00b6</a></h2>\n<dl class=\"py class\">\n<dt id=\"dagster.core.storage.base_storage.DagsterStorage\">\n<em class=\"property\"><span class=\"pre\">class</span> </em><code class=\"sig-prename descclassname\"><span class=\"pre\">dagster.core.storage.base_storage.</span></code><code class=\"sig-name descname\"><span class=\"pre\">DagsterStorage</span></code><a class=\"reference internal\" href=\"../../../../_modules/dagster/core/storage/base_storage#DagsterStorage\"><span class=\"viewcode-link\"><span class=\"pre\">[source]</span></span></a><a class=\"headerlink\" href=\"#dagster.core.storage.base_storage.DagsterStorage\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Abstract base class for Dagster persistent storage, for reading and writing data for runs,\nevents, and schedule/sensor state.</p>\n<p>Users should not directly instantiate concrete subclasses of this class; they are instantiated\nby internal machinery when <code class=\"docutils literal notranslate\"><span class=\"pre\">dagit</span></code> and <code class=\"docutils literal notranslate\"><span class=\"pre\">dagster-daemon</span></code> load, based on the values in the\n<code class=\"docutils literal notranslate\"><span class=\"pre\">dagster.yaml</span></code> file in <code class=\"docutils literal notranslate\"><span class=\"pre\">$DAGSTER_HOME</span></code>. Configuration of concrete subclasses of this class\nshould be done by setting values in that file.</p>\n</dd></dl>\n\n</div>\n<hr class=\"docutils\" />\n<div class=\"section\" id=\"run-storage\">\n<h2>Run storage<a class=\"headerlink\" href=\"#run-storage\" title=\"Permalink to this headline\">\u00b6</a></h2>\n<dl class=\"py class\">\n<dt id=\"dagster.PipelineRun\">\n<em class=\"property\"><span class=\"pre\">class</span> </em><code class=\"sig-prename descclassname\"><span class=\"pre\">dagster.</span></code><code class=\"sig-name descname\"><span class=\"pre\">PipelineRun</span></code><span class=\"sig-paren\">(</span><em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">pipeline_name</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">run_id</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">None</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">run_config</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">None</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">mode</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">None</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">asset_selection</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">None</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">solid_selection</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">None</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">solids_to_execute</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">None</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">step_keys_to_execute</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">None</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">status</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">None</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">tags</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">None</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">root_run_id</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">None</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">parent_run_id</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">None</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">pipeline_snapshot_id</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">None</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">execution_plan_snapshot_id</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">None</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">external_pipeline_origin</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">None</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">pipeline_code_origin</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">None</span></span></em><span class=\"sig-paren\">)</span><a class=\"reference internal\" href=\"../../../../_modules/dagster/core/storage/pipeline_run#PipelineRun\"><span class=\"viewcode-link\"><span class=\"pre\">[source]</span></span></a><a class=\"headerlink\" href=\"#dagster.PipelineRun\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Serializable internal representation of a pipeline run, as stored in a\n<a class=\"reference internal\" href=\"#dagster.core.storage.runs.RunStorage\" title=\"dagster.core.storage.runs.RunStorage\"><code class=\"xref py py-class docutils literal notranslate\"><span class=\"pre\">RunStorage</span></code></a>.</p>\n</dd></dl>\n\n<dl class=\"py class\">\n<dt id=\"dagster.DagsterRunStatus\">\n<em class=\"property\"><span class=\"pre\">class</span> </em><code class=\"sig-prename descclassname\"><span class=\"pre\">dagster.</span></code><code class=\"sig-name descname\"><span class=\"pre\">DagsterRunStatus</span></code><span class=\"sig-paren\">(</span><em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">value</span></span></em><span class=\"sig-paren\">)</span><a class=\"reference internal\" href=\"../../../../_modules/dagster/core/storage/pipeline_run#DagsterRunStatus\"><span class=\"viewcode-link\"><span class=\"pre\">[source]</span></span></a><a class=\"headerlink\" href=\"#dagster.DagsterRunStatus\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>The status of run execution.</p>\n<dl class=\"py attribute\">\n<dt id=\"dagster.DagsterRunStatus.CANCELED\">\n<code class=\"sig-name descname\"><span class=\"pre\">CANCELED</span></code><em class=\"property\"> <span class=\"pre\">=</span> <span class=\"pre\">'CANCELED'</span></em><a class=\"headerlink\" href=\"#dagster.DagsterRunStatus.CANCELED\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd></dd></dl>\n\n<dl class=\"py attribute\">\n<dt id=\"dagster.DagsterRunStatus.CANCELING\">\n<code class=\"sig-name descname\"><span class=\"pre\">CANCELING</span></code><em class=\"property\"> <span class=\"pre\">=</span> <span class=\"pre\">'CANCELING'</span></em><a class=\"headerlink\" href=\"#dagster.DagsterRunStatus.CANCELING\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd></dd></dl>\n\n<dl class=\"py attribute\">\n<dt id=\"dagster.DagsterRunStatus.FAILURE\">\n<code class=\"sig-name descname\"><span class=\"pre\">FAILURE</span></code><em class=\"property\"> <span class=\"pre\">=</span> <span class=\"pre\">'FAILURE'</span></em><a class=\"headerlink\" href=\"#dagster.DagsterRunStatus.FAILURE\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd></dd></dl>\n\n<dl class=\"py attribute\">\n<dt id=\"dagster.DagsterRunStatus.MANAGED\">\n<code class=\"sig-name descname\"><span class=\"pre\">MANAGED</span></code><em class=\"property\"> <span class=\"pre\">=</span> <span class=\"pre\">'MANAGED'</span></em><a class=\"headerlink\" href=\"#dagster.DagsterRunStatus.MANAGED\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd></dd></dl>\n\n<dl class=\"py attribute\">\n<dt id=\"dagster.DagsterRunStatus.NOT_STARTED\">\n<code class=\"sig-name descname\"><span class=\"pre\">NOT_STARTED</span></code><em class=\"property\"> <span class=\"pre\">=</span> <span class=\"pre\">'NOT_STARTED'</span></em><a class=\"headerlink\" href=\"#dagster.DagsterRunStatus.NOT_STARTED\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd></dd></dl>\n\n<dl class=\"py attribute\">\n<dt id=\"dagster.DagsterRunStatus.QUEUED\">\n<code class=\"sig-name descname\"><span class=\"pre\">QUEUED</span></code><em class=\"property\"> <span class=\"pre\">=</span> <span class=\"pre\">'QUEUED'</span></em><a class=\"headerlink\" href=\"#dagster.DagsterRunStatus.QUEUED\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd></dd></dl>\n\n<dl class=\"py attribute\">\n<dt id=\"dagster.DagsterRunStatus.STARTED\">\n<code class=\"sig-name descname\"><span class=\"pre\">STARTED</span></code><em class=\"property\"> <span class=\"pre\">=</span> <span class=\"pre\">'STARTED'</span></em><a class=\"headerlink\" href=\"#dagster.DagsterRunStatus.STARTED\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd></dd></dl>\n\n<dl class=\"py attribute\">\n<dt id=\"dagster.DagsterRunStatus.STARTING\">\n<code class=\"sig-name descname\"><span class=\"pre\">STARTING</span></code><em class=\"property\"> <span class=\"pre\">=</span> <span class=\"pre\">'STARTING'</span></em><a class=\"headerlink\" href=\"#dagster.DagsterRunStatus.STARTING\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd></dd></dl>\n\n<dl class=\"py attribute\">\n<dt id=\"dagster.DagsterRunStatus.SUCCESS\">\n<code class=\"sig-name descname\"><span class=\"pre\">SUCCESS</span></code><em class=\"property\"> <span class=\"pre\">=</span> <span class=\"pre\">'SUCCESS'</span></em><a class=\"headerlink\" href=\"#dagster.DagsterRunStatus.SUCCESS\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd></dd></dl>\n\n</dd></dl>\n\n<dl class=\"py attribute\">\n<dt id=\"dagster.PipelineRunStatus\">\n<code class=\"sig-prename descclassname\"><span class=\"pre\">dagster.</span></code><code class=\"sig-name descname\"><span class=\"pre\">PipelineRunStatus</span></code><a class=\"headerlink\" href=\"#dagster.PipelineRunStatus\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>alias of <code class=\"xref py py-class docutils literal notranslate\"><span class=\"pre\">dagster.core.storage.pipeline_run.DagsterRunStatus</span></code></p>\n</dd></dl>\n\n<dl class=\"py class\">\n<dt id=\"dagster.core.storage.runs.RunStorage\">\n<em class=\"property\"><span class=\"pre\">class</span> </em><code class=\"sig-prename descclassname\"><span class=\"pre\">dagster.core.storage.runs.</span></code><code class=\"sig-name descname\"><span class=\"pre\">RunStorage</span></code><a class=\"reference internal\" href=\"../../../../_modules/dagster/core/storage/runs/base#RunStorage\"><span class=\"viewcode-link\"><span class=\"pre\">[source]</span></span></a><a class=\"headerlink\" href=\"#dagster.core.storage.runs.RunStorage\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Abstract base class for storing pipeline run history.</p>\n<p>Note that run storages using SQL databases as backing stores should implement\n<a class=\"reference internal\" href=\"#dagster.core.storage.runs.SqlRunStorage\" title=\"dagster.core.storage.runs.SqlRunStorage\"><code class=\"xref py py-class docutils literal notranslate\"><span class=\"pre\">SqlRunStorage</span></code></a>.</p>\n<p>Users should not directly instantiate concrete subclasses of this class; they are instantiated\nby internal machinery when <code class=\"docutils literal notranslate\"><span class=\"pre\">dagit</span></code> and <code class=\"docutils literal notranslate\"><span class=\"pre\">dagster-graphql</span></code> load, based on the values in the\n<code class=\"docutils literal notranslate\"><span class=\"pre\">dagster.yaml</span></code> file in <code class=\"docutils literal notranslate\"><span class=\"pre\">$DAGSTER_HOME</span></code>. Configuration of concrete subclasses of this class\nshould be done by setting values in that file.</p>\n</dd></dl>\n\n<dl class=\"py class\">\n<dt id=\"dagster.core.storage.runs.SqlRunStorage\">\n<em class=\"property\"><span class=\"pre\">class</span> </em><code class=\"sig-prename descclassname\"><span class=\"pre\">dagster.core.storage.runs.</span></code><code class=\"sig-name descname\"><span class=\"pre\">SqlRunStorage</span></code><a class=\"reference internal\" href=\"../../../../_modules/dagster/core/storage/runs/sql_run_storage#SqlRunStorage\"><span class=\"viewcode-link\"><span class=\"pre\">[source]</span></span></a><a class=\"headerlink\" href=\"#dagster.core.storage.runs.SqlRunStorage\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Base class for SQL based run storages</p>\n</dd></dl>\n\n<dl class=\"py class\">\n<dt id=\"dagster.core.storage.runs.SqliteRunStorage\">\n<em class=\"property\"><span class=\"pre\">class</span> </em><code class=\"sig-prename descclassname\"><span class=\"pre\">dagster.core.storage.runs.</span></code><code class=\"sig-name descname\"><span class=\"pre\">SqliteRunStorage</span></code><span class=\"sig-paren\">(</span><em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">conn_string</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">inst_data</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">None</span></span></em><span class=\"sig-paren\">)</span><a class=\"reference internal\" href=\"../../../../_modules/dagster/core/storage/runs/sqlite/sqlite_run_storage#SqliteRunStorage\"><span class=\"viewcode-link\"><span class=\"pre\">[source]</span></span></a><a class=\"headerlink\" href=\"#dagster.core.storage.runs.SqliteRunStorage\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>SQLite-backed run storage.</p>\n<p>Users should not directly instantiate this class; it is instantiated by internal machinery when\n<code class=\"docutils literal notranslate\"><span class=\"pre\">dagit</span></code> and <code class=\"docutils literal notranslate\"><span class=\"pre\">dagster-graphql</span></code> load, based on the values in the <code class=\"docutils literal notranslate\"><span class=\"pre\">dagster.yaml</span></code> file in\n<code class=\"docutils literal notranslate\"><span class=\"pre\">$DAGSTER_HOME</span></code>. Configuration of this class should be done by setting values in that file.</p>\n<p>This is the default run storage when none is specified in the <code class=\"docutils literal notranslate\"><span class=\"pre\">dagster.yaml</span></code>.</p>\n<p>To explicitly specify SQLite for run storage, you can add a block such as the following to your\n<code class=\"docutils literal notranslate\"><span class=\"pre\">dagster.yaml</span></code>:</p>\n<div class=\"highlight-YAML notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"nt\">run_storage</span><span class=\"p\">:</span><span class=\"w\"></span>\n<span class=\"w\">  </span><span class=\"nt\">module</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"l l-Scalar l-Scalar-Plain\">dagster.core.storage.runs</span><span class=\"w\"></span>\n<span class=\"w\">  </span><span class=\"nt\">class</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"l l-Scalar l-Scalar-Plain\">SqliteRunStorage</span><span class=\"w\"></span>\n<span class=\"w\">  </span><span class=\"nt\">config</span><span class=\"p\">:</span><span class=\"w\"></span>\n<span class=\"w\">    </span><span class=\"nt\">base_dir</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"l l-Scalar l-Scalar-Plain\">/path/to/dir</span><span class=\"w\"></span>\n</pre></div>\n</div>\n<p>The <code class=\"docutils literal notranslate\"><span class=\"pre\">base_dir</span></code> param tells the run storage where on disk to store the database.</p>\n</dd></dl>\n\n<p>See also: <a class=\"reference internal\" href=\"libraries/dagster-postgres#dagster_postgres.PostgresRunStorage\" title=\"dagster_postgres.PostgresRunStorage\"><code class=\"xref py py-class docutils literal notranslate\"><span class=\"pre\">dagster_postgres.PostgresRunStorage</span></code></a> and <a class=\"reference internal\" href=\"libraries/dagster-mysql#dagster_mysql.MySQLRunStorage\" title=\"dagster_mysql.MySQLRunStorage\"><code class=\"xref py py-class docutils literal notranslate\"><span class=\"pre\">dagster_mysql.MySQLRunStorage</span></code></a>.</p>\n</div>\n<hr class=\"docutils\" />\n<div class=\"section\" id=\"event-log-storage\">\n<h2>Event log storage<a class=\"headerlink\" href=\"#event-log-storage\" title=\"Permalink to this headline\">\u00b6</a></h2>\n<dl class=\"py class\">\n<dt id=\"dagster.core.storage.event_log.EventLogEntry\">\n<em class=\"property\"><span class=\"pre\">class</span> </em><code class=\"sig-prename descclassname\"><span class=\"pre\">dagster.core.storage.event_log.</span></code><code class=\"sig-name descname\"><span class=\"pre\">EventLogEntry</span></code><span class=\"sig-paren\">(</span><em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">error_info</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">level</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">user_message</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">run_id</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">timestamp</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">step_key</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">None</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">pipeline_name</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">None</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">dagster_event</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">None</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">job_name</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">None</span></span></em><span class=\"sig-paren\">)</span><a class=\"reference internal\" href=\"../../../../_modules/dagster/core/events/log#EventLogEntry\"><span class=\"viewcode-link\"><span class=\"pre\">[source]</span></span></a><a class=\"headerlink\" href=\"#dagster.core.storage.event_log.EventLogEntry\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Entries in the event log.</p>\n<p>These entries may originate from the logging machinery (DagsterLogManager/context.log), from\nframework events (e.g. EngineEvent), or they may correspond to events yielded by user code\n(e.g. Output).</p>\n<dl class=\"field-list simple\">\n<dt class=\"field-odd\">Parameters</dt>\n<dd class=\"field-odd\"><ul class=\"simple\">\n<li><p><strong>error_info</strong> (<em>Optional</em><em>[</em><em>SerializableErrorInfo</em><em>]</em>) \u2013 Error info for an associated exception, if\nany, as generated by serializable_error_info_from_exc_info and friends.</p></li>\n<li><p><strong>level</strong> (<em>Union</em><em>[</em><a class=\"reference external\" href=\"https://docs.python.org/3/library/stdtypes.html#str\" title=\"(in Python v3.8)\"><em>str</em></a><em>, </em><a class=\"reference external\" href=\"https://docs.python.org/3/library/functions.html#int\" title=\"(in Python v3.8)\"><em>int</em></a><em>]</em>) \u2013 The Python log level at which to log this event. Note that\nframework and user code events are also logged to Python logging. This value may be an\ninteger or a (case-insensitive) string member of PYTHON_LOGGING_LEVELS_NAMES.</p></li>\n<li><p><strong>user_message</strong> (<a class=\"reference external\" href=\"https://docs.python.org/3/library/stdtypes.html#str\" title=\"(in Python v3.8)\"><em>str</em></a>) \u2013 For log messages, this is the user-generated message.</p></li>\n<li><p><strong>run_id</strong> (<a class=\"reference external\" href=\"https://docs.python.org/3/library/stdtypes.html#str\" title=\"(in Python v3.8)\"><em>str</em></a>) \u2013 The id of the run which generated this event.</p></li>\n<li><p><strong>timestamp</strong> (<a class=\"reference external\" href=\"https://docs.python.org/3/library/functions.html#float\" title=\"(in Python v3.8)\"><em>float</em></a>) \u2013 The Unix timestamp of this event.</p></li>\n<li><p><strong>step_key</strong> (<em>Optional</em><em>[</em><a class=\"reference external\" href=\"https://docs.python.org/3/library/stdtypes.html#str\" title=\"(in Python v3.8)\"><em>str</em></a><em>]</em>) \u2013 The step key for the step which generated this event. Some events\nare generated outside of a step context.</p></li>\n<li><p><strong>job_name</strong> (<em>Optional</em><em>[</em><a class=\"reference external\" href=\"https://docs.python.org/3/library/stdtypes.html#str\" title=\"(in Python v3.8)\"><em>str</em></a><em>]</em>) \u2013 The job which generated this event. Some events are\ngenerated outside of a job context.</p></li>\n<li><p><strong>dagster_event</strong> (<em>Optional</em><em>[</em><a class=\"reference internal\" href=\"execution#dagster.DagsterEvent\" title=\"dagster.DagsterEvent\"><em>DagsterEvent</em></a><em>]</em>) \u2013 For framework and user events, the associated\nstructured event.</p></li>\n<li><p><strong>pipeline_name</strong> (<em>Optional</em><em>[</em><a class=\"reference external\" href=\"https://docs.python.org/3/library/stdtypes.html#str\" title=\"(in Python v3.8)\"><em>str</em></a><em>]</em>) \u2013 (legacy) The pipeline which generated this event. Some events are\ngenerated outside of a pipeline context.</p></li>\n</ul>\n</dd>\n</dl>\n</dd></dl>\n\n<dl class=\"py class\">\n<dt id=\"dagster.core.storage.event_log.EventLogRecord\">\n<em class=\"property\"><span class=\"pre\">class</span> </em><code class=\"sig-prename descclassname\"><span class=\"pre\">dagster.core.storage.event_log.</span></code><code class=\"sig-name descname\"><span class=\"pre\">EventLogRecord</span></code><span class=\"sig-paren\">(</span><em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">storage_id</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">event_log_entry</span></span></em><span class=\"sig-paren\">)</span><a class=\"reference internal\" href=\"../../../../_modules/dagster/core/storage/event_log/base#EventLogRecord\"><span class=\"viewcode-link\"><span class=\"pre\">[source]</span></span></a><a class=\"headerlink\" href=\"#dagster.core.storage.event_log.EventLogRecord\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Internal representation of an event record, as stored in a\n<a class=\"reference internal\" href=\"#dagster.core.storage.event_log.EventLogStorage\" title=\"dagster.core.storage.event_log.EventLogStorage\"><code class=\"xref py py-class docutils literal notranslate\"><span class=\"pre\">EventLogStorage</span></code></a>.</p>\n</dd></dl>\n\n<dl class=\"py class\">\n<dt id=\"dagster.core.storage.event_log.EventRecordsFilter\">\n<em class=\"property\"><span class=\"pre\">class</span> </em><code class=\"sig-prename descclassname\"><span class=\"pre\">dagster.core.storage.event_log.</span></code><code class=\"sig-name descname\"><span class=\"pre\">EventRecordsFilter</span></code><span class=\"sig-paren\">(</span><em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">event_type</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">asset_key</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">None</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">asset_partitions</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">None</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">after_cursor</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">None</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">before_cursor</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">None</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">after_timestamp</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">None</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">before_timestamp</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">None</span></span></em><span class=\"sig-paren\">)</span><a class=\"reference internal\" href=\"../../../../_modules/dagster/core/storage/event_log/base#EventRecordsFilter\"><span class=\"viewcode-link\"><span class=\"pre\">[source]</span></span></a><a class=\"headerlink\" href=\"#dagster.core.storage.event_log.EventRecordsFilter\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Defines a set of filter fields for fetching a set of event log entries or event log records.</p>\n<dl class=\"field-list simple\">\n<dt class=\"field-odd\">Parameters</dt>\n<dd class=\"field-odd\"><ul class=\"simple\">\n<li><p><strong>event_type</strong> (<a class=\"reference internal\" href=\"execution#dagster.DagsterEventType\" title=\"dagster.DagsterEventType\"><em>DagsterEventType</em></a>) \u2013 Filter argument for dagster event type</p></li>\n<li><p><strong>asset_key</strong> (<em>Optional</em><em>[</em><a class=\"reference internal\" href=\"ops#dagster.AssetKey\" title=\"dagster.AssetKey\"><em>AssetKey</em></a><em>]</em>) \u2013 Asset key for which to get asset materialization event\nentries / records.</p></li>\n<li><p><strong>asset_partitions</strong> (<em>Optional</em><em>[</em><em>List</em><em>[</em><a class=\"reference external\" href=\"https://docs.python.org/3/library/stdtypes.html#str\" title=\"(in Python v3.8)\"><em>str</em></a><em>]</em><em>]</em>) \u2013 Filter parameter such that only asset\nmaterialization events with a partition value matching one of the provided values.  Only\nvalid when the <cite>asset_key</cite> parameter is provided.</p></li>\n<li><p><strong>after_cursor</strong> (<em>Optional</em><em>[</em><em>Union</em><em>[</em><a class=\"reference external\" href=\"https://docs.python.org/3/library/functions.html#int\" title=\"(in Python v3.8)\"><em>int</em></a><em>, </em><a class=\"reference internal\" href=\"#dagster.core.storage.event_log.RunShardedEventsCursor\" title=\"dagster.core.storage.event_log.RunShardedEventsCursor\"><em>RunShardedEventsCursor</em></a><em>]</em><em>]</em>) \u2013 Filter parameter such that only\nrecords with storage_id greater than the provided value are returned. Using a\nrun-sharded events cursor will result in a significant performance gain when run against\na SqliteEventLogStorage implementation (which is run-sharded)</p></li>\n<li><p><strong>before_cursor</strong> (<em>Optional</em><em>[</em><em>Union</em><em>[</em><a class=\"reference external\" href=\"https://docs.python.org/3/library/functions.html#int\" title=\"(in Python v3.8)\"><em>int</em></a><em>, </em><a class=\"reference internal\" href=\"#dagster.core.storage.event_log.RunShardedEventsCursor\" title=\"dagster.core.storage.event_log.RunShardedEventsCursor\"><em>RunShardedEventsCursor</em></a><em>]</em><em>]</em>) \u2013 Filter parameter such that\nrecords with storage_id less than the provided value are returned. Using a run-sharded\nevents cursor will result in a significant performance gain when run against\na SqliteEventLogStorage implementation (which is run-sharded)</p></li>\n<li><p><strong>after_timestamp</strong> (<em>Optional</em><em>[</em><a class=\"reference external\" href=\"https://docs.python.org/3/library/functions.html#float\" title=\"(in Python v3.8)\"><em>float</em></a><em>]</em>) \u2013 Filter parameter such that only event records for\nevents with timestamp greater than the provided value are returned.</p></li>\n<li><p><strong>before_timestamp</strong> (<em>Optional</em><em>[</em><a class=\"reference external\" href=\"https://docs.python.org/3/library/functions.html#float\" title=\"(in Python v3.8)\"><em>float</em></a><em>]</em>) \u2013 Filter parameter such that only event records for\nevents with timestamp less than the provided value are returned.</p></li>\n</ul>\n</dd>\n</dl>\n</dd></dl>\n\n<dl class=\"py class\">\n<dt id=\"dagster.core.storage.event_log.RunShardedEventsCursor\">\n<em class=\"property\"><span class=\"pre\">class</span> </em><code class=\"sig-prename descclassname\"><span class=\"pre\">dagster.core.storage.event_log.</span></code><code class=\"sig-name descname\"><span class=\"pre\">RunShardedEventsCursor</span></code><span class=\"sig-paren\">(</span><em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">id</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">run_updated_after</span></span></em><span class=\"sig-paren\">)</span><a class=\"reference internal\" href=\"../../../../_modules/dagster/core/storage/event_log/base#RunShardedEventsCursor\"><span class=\"viewcode-link\"><span class=\"pre\">[source]</span></span></a><a class=\"headerlink\" href=\"#dagster.core.storage.event_log.RunShardedEventsCursor\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Pairs an id-based event log cursor with a timestamp-based run cursor, for improved\nperformance on run-sharded event log storages (e.g. the default SqliteEventLogStorage). For\nrun-sharded storages, the id field is ignored, since they may not be unique across shards</p>\n</dd></dl>\n\n<dl class=\"py class\">\n<dt id=\"dagster.core.storage.event_log.EventLogStorage\">\n<em class=\"property\"><span class=\"pre\">class</span> </em><code class=\"sig-prename descclassname\"><span class=\"pre\">dagster.core.storage.event_log.</span></code><code class=\"sig-name descname\"><span class=\"pre\">EventLogStorage</span></code><a class=\"reference internal\" href=\"../../../../_modules/dagster/core/storage/event_log/base#EventLogStorage\"><span class=\"viewcode-link\"><span class=\"pre\">[source]</span></span></a><a class=\"headerlink\" href=\"#dagster.core.storage.event_log.EventLogStorage\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Abstract base class for storing structured event logs from pipeline runs.</p>\n<p>Note that event log storages using SQL databases as backing stores should implement\n<a class=\"reference internal\" href=\"#dagster.core.storage.event_log.SqlEventLogStorage\" title=\"dagster.core.storage.event_log.SqlEventLogStorage\"><code class=\"xref py py-class docutils literal notranslate\"><span class=\"pre\">SqlEventLogStorage</span></code></a>.</p>\n<p>Users should not directly instantiate concrete subclasses of this class; they are instantiated\nby internal machinery when <code class=\"docutils literal notranslate\"><span class=\"pre\">dagit</span></code> and <code class=\"docutils literal notranslate\"><span class=\"pre\">dagster-graphql</span></code> load, based on the values in the\n<code class=\"docutils literal notranslate\"><span class=\"pre\">dagster.yaml</span></code> file in <code class=\"docutils literal notranslate\"><span class=\"pre\">$DAGSTER_HOME</span></code>. Configuration of concrete subclasses of this class\nshould be done by setting values in that file.</p>\n</dd></dl>\n\n<dl class=\"py class\">\n<dt id=\"dagster.core.storage.event_log.SqlEventLogStorage\">\n<em class=\"property\"><span class=\"pre\">class</span> </em><code class=\"sig-prename descclassname\"><span class=\"pre\">dagster.core.storage.event_log.</span></code><code class=\"sig-name descname\"><span class=\"pre\">SqlEventLogStorage</span></code><a class=\"reference internal\" href=\"../../../../_modules/dagster/core/storage/event_log/sql_event_log#SqlEventLogStorage\"><span class=\"viewcode-link\"><span class=\"pre\">[source]</span></span></a><a class=\"headerlink\" href=\"#dagster.core.storage.event_log.SqlEventLogStorage\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Base class for SQL backed event log storages.</p>\n<p>Distinguishes between run-based connections and index connections in order to support run-level\nsharding, while maintaining the ability to do cross-run queries</p>\n</dd></dl>\n\n<dl class=\"py class\">\n<dt id=\"dagster.core.storage.event_log.SqliteEventLogStorage\">\n<em class=\"property\"><span class=\"pre\">class</span> </em><code class=\"sig-prename descclassname\"><span class=\"pre\">dagster.core.storage.event_log.</span></code><code class=\"sig-name descname\"><span class=\"pre\">SqliteEventLogStorage</span></code><span class=\"sig-paren\">(</span><em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">base_dir</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">inst_data</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">None</span></span></em><span class=\"sig-paren\">)</span><a class=\"reference internal\" href=\"../../../../_modules/dagster/core/storage/event_log/sqlite/sqlite_event_log#SqliteEventLogStorage\"><span class=\"viewcode-link\"><span class=\"pre\">[source]</span></span></a><a class=\"headerlink\" href=\"#dagster.core.storage.event_log.SqliteEventLogStorage\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>SQLite-backed event log storage.</p>\n<p>Users should not directly instantiate this class; it is instantiated by internal machinery when\n<code class=\"docutils literal notranslate\"><span class=\"pre\">dagit</span></code> and <code class=\"docutils literal notranslate\"><span class=\"pre\">dagster-graphql</span></code> load, based on the values in the <code class=\"docutils literal notranslate\"><span class=\"pre\">dagster.yaml</span></code> file in\n<code class=\"docutils literal notranslate\"><span class=\"pre\">$DAGSTER_HOME</span></code>. Configuration of this class should be done by setting values in that file.</p>\n<p>This is the default event log storage when none is specified in the <code class=\"docutils literal notranslate\"><span class=\"pre\">dagster.yaml</span></code>.</p>\n<p>To explicitly specify SQLite for event log storage, you can add a block such as the following\nto your <code class=\"docutils literal notranslate\"><span class=\"pre\">dagster.yaml</span></code>:</p>\n<div class=\"highlight-YAML notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"nt\">event_log_storage</span><span class=\"p\">:</span><span class=\"w\"></span>\n<span class=\"w\">  </span><span class=\"nt\">module</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"l l-Scalar l-Scalar-Plain\">dagster.core.storage.event_log</span><span class=\"w\"></span>\n<span class=\"w\">  </span><span class=\"nt\">class</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"l l-Scalar l-Scalar-Plain\">SqliteEventLogStorage</span><span class=\"w\"></span>\n<span class=\"w\">  </span><span class=\"nt\">config</span><span class=\"p\">:</span><span class=\"w\"></span>\n<span class=\"w\">    </span><span class=\"nt\">base_dir</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"l l-Scalar l-Scalar-Plain\">/path/to/dir</span><span class=\"w\"></span>\n</pre></div>\n</div>\n<p>The <code class=\"docutils literal notranslate\"><span class=\"pre\">base_dir</span></code> param tells the event log storage where on disk to store the databases. To\nimprove concurrent performance, event logs are stored in a separate SQLite database for each\nrun.</p>\n</dd></dl>\n\n<dl class=\"py class\">\n<dt id=\"dagster.core.storage.event_log.ConsolidatedSqliteEventLogStorage\">\n<em class=\"property\"><span class=\"pre\">class</span> </em><code class=\"sig-prename descclassname\"><span class=\"pre\">dagster.core.storage.event_log.</span></code><code class=\"sig-name descname\"><span class=\"pre\">ConsolidatedSqliteEventLogStorage</span></code><span class=\"sig-paren\">(</span><em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">base_dir</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">inst_data</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">None</span></span></em><span class=\"sig-paren\">)</span><a class=\"reference internal\" href=\"../../../../_modules/dagster/core/storage/event_log/sqlite/consolidated_sqlite_event_log#ConsolidatedSqliteEventLogStorage\"><span class=\"viewcode-link\"><span class=\"pre\">[source]</span></span></a><a class=\"headerlink\" href=\"#dagster.core.storage.event_log.ConsolidatedSqliteEventLogStorage\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>SQLite-backed consolidated event log storage intended for test cases only.</p>\n<p>Users should not directly instantiate this class; it is instantiated by internal machinery when\n<code class=\"docutils literal notranslate\"><span class=\"pre\">dagit</span></code> and <code class=\"docutils literal notranslate\"><span class=\"pre\">dagster-graphql</span></code> load, based on the values in the <code class=\"docutils literal notranslate\"><span class=\"pre\">dagster.yaml</span></code> file in\n<code class=\"docutils literal notranslate\"><span class=\"pre\">$DAGSTER_HOME</span></code>. Configuration of this class should be done by setting values in that file.</p>\n<p>To explicitly specify the consolidated SQLite for event log storage, you can add a block such as\nthe following to your <code class=\"docutils literal notranslate\"><span class=\"pre\">dagster.yaml</span></code>:</p>\n<div class=\"highlight-YAML notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"nt\">run_storage</span><span class=\"p\">:</span><span class=\"w\"></span>\n<span class=\"w\">  </span><span class=\"nt\">module</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"l l-Scalar l-Scalar-Plain\">dagster.core.storage.event_log</span><span class=\"w\"></span>\n<span class=\"w\">  </span><span class=\"nt\">class</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"l l-Scalar l-Scalar-Plain\">ConsolidatedSqliteEventLogStorage</span><span class=\"w\"></span>\n<span class=\"w\">  </span><span class=\"nt\">config</span><span class=\"p\">:</span><span class=\"w\"></span>\n<span class=\"w\">    </span><span class=\"nt\">base_dir</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"l l-Scalar l-Scalar-Plain\">/path/to/dir</span><span class=\"w\"></span>\n</pre></div>\n</div>\n<p>The <code class=\"docutils literal notranslate\"><span class=\"pre\">base_dir</span></code> param tells the event log storage where on disk to store the database.</p>\n</dd></dl>\n\n<p>See also: <a class=\"reference internal\" href=\"libraries/dagster-postgres#dagster_postgres.PostgresEventLogStorage\" title=\"dagster_postgres.PostgresEventLogStorage\"><code class=\"xref py py-class docutils literal notranslate\"><span class=\"pre\">dagster_postgres.PostgresEventLogStorage</span></code></a> and <a class=\"reference internal\" href=\"libraries/dagster-mysql#dagster_mysql.MySQLEventLogStorage\" title=\"dagster_mysql.MySQLEventLogStorage\"><code class=\"xref py py-class docutils literal notranslate\"><span class=\"pre\">dagster_mysql.MySQLEventLogStorage</span></code></a>.</p>\n</div>\n<hr class=\"docutils\" />\n<div class=\"section\" id=\"compute-log-manager\">\n<h2>Compute log manager<a class=\"headerlink\" href=\"#compute-log-manager\" title=\"Permalink to this headline\">\u00b6</a></h2>\n<dl class=\"py class\">\n<dt id=\"dagster.core.storage.compute_log_manager.ComputeLogManager\">\n<em class=\"property\"><span class=\"pre\">class</span> </em><code class=\"sig-prename descclassname\"><span class=\"pre\">dagster.core.storage.compute_log_manager.</span></code><code class=\"sig-name descname\"><span class=\"pre\">ComputeLogManager</span></code><a class=\"reference internal\" href=\"../../../../_modules/dagster/core/storage/compute_log_manager#ComputeLogManager\"><span class=\"viewcode-link\"><span class=\"pre\">[source]</span></span></a><a class=\"headerlink\" href=\"#dagster.core.storage.compute_log_manager.ComputeLogManager\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Abstract base class for storing unstructured compute logs (stdout/stderr) from the compute\nsteps of pipeline solids.</p>\n</dd></dl>\n\n<dl class=\"py class\">\n<dt id=\"dagster.core.storage.local_compute_log_manager.LocalComputeLogManager\">\n<em class=\"property\"><span class=\"pre\">class</span> </em><code class=\"sig-prename descclassname\"><span class=\"pre\">dagster.core.storage.local_compute_log_manager.</span></code><code class=\"sig-name descname\"><span class=\"pre\">LocalComputeLogManager</span></code><span class=\"sig-paren\">(</span><em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">base_dir</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">polling_timeout</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">None</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">inst_data</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">None</span></span></em><span class=\"sig-paren\">)</span><a class=\"reference internal\" href=\"../../../../_modules/dagster/core/storage/local_compute_log_manager#LocalComputeLogManager\"><span class=\"viewcode-link\"><span class=\"pre\">[source]</span></span></a><a class=\"headerlink\" href=\"#dagster.core.storage.local_compute_log_manager.LocalComputeLogManager\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Stores copies of stdout &amp; stderr for each compute step locally on disk.</p>\n</dd></dl>\n\n<p>See also: <code class=\"xref py py-class docutils literal notranslate\"><span class=\"pre\">dagster_aws.S3ComputeLogManager</span></code>.</p>\n</div>\n<hr class=\"docutils\" />\n<div class=\"section\" id=\"run-launcher\">\n<h2>Run launcher<a class=\"headerlink\" href=\"#run-launcher\" title=\"Permalink to this headline\">\u00b6</a></h2>\n<dl class=\"py class\">\n<dt id=\"dagster.core.launcher.RunLauncher\">\n<em class=\"property\"><span class=\"pre\">class</span> </em><code class=\"sig-prename descclassname\"><span class=\"pre\">dagster.core.launcher.</span></code><code class=\"sig-name descname\"><span class=\"pre\">RunLauncher</span></code><a class=\"reference internal\" href=\"../../../../_modules/dagster/core/launcher/base#RunLauncher\"><span class=\"viewcode-link\"><span class=\"pre\">[source]</span></span></a><a class=\"headerlink\" href=\"#dagster.core.launcher.RunLauncher\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd></dd></dl>\n\n<dl class=\"py class\">\n<dt id=\"dagster.core.launcher.DefaultRunLauncher\">\n<em class=\"property\"><span class=\"pre\">class</span> </em><code class=\"sig-prename descclassname\"><span class=\"pre\">dagster.core.launcher.</span></code><code class=\"sig-name descname\"><span class=\"pre\">DefaultRunLauncher</span></code><span class=\"sig-paren\">(</span><em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">inst_data</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">None</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">wait_for_processes</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">False</span></span></em><span class=\"sig-paren\">)</span><a class=\"reference internal\" href=\"../../../../_modules/dagster/core/launcher/default_run_launcher#DefaultRunLauncher\"><span class=\"viewcode-link\"><span class=\"pre\">[source]</span></span></a><a class=\"headerlink\" href=\"#dagster.core.launcher.DefaultRunLauncher\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Launches runs against running GRPC servers.</p>\n</dd></dl>\n\n</div>\n<hr class=\"docutils\" />\n<div class=\"section\" id=\"run-coordinator\">\n<h2>Run coordinator<a class=\"headerlink\" href=\"#run-coordinator\" title=\"Permalink to this headline\">\u00b6</a></h2>\n<dl class=\"py class\">\n<dt id=\"dagster.core.run_coordinator.DefaultRunCoordinator\">\n<em class=\"property\"><span class=\"pre\">class</span> </em><code class=\"sig-prename descclassname\"><span class=\"pre\">dagster.core.run_coordinator.</span></code><code class=\"sig-name descname\"><span class=\"pre\">DefaultRunCoordinator</span></code><span class=\"sig-paren\">(</span><em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">inst_data</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">None</span></span></em><span class=\"sig-paren\">)</span><a class=\"reference internal\" href=\"../../../../_modules/dagster/core/run_coordinator/default_run_coordinator#DefaultRunCoordinator\"><span class=\"viewcode-link\"><span class=\"pre\">[source]</span></span></a><a class=\"headerlink\" href=\"#dagster.core.run_coordinator.DefaultRunCoordinator\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Immediately send runs to the run launcher.</p>\n</dd></dl>\n\n<dl class=\"py data\">\n<dt id=\"dagster.core.run_coordinator.QueuedRunCoordinator\">\n<code class=\"sig-prename descclassname\"><span class=\"pre\">dagster.core.run_coordinator.</span></code><code class=\"sig-name descname\"><span class=\"pre\">QueuedRunCoordinator</span></code><em class=\"property\"> <span class=\"pre\">RunCoordinator</span></em><a class=\"reference internal\" href=\"../../../../_modules/dagster/core/run_coordinator/queued_run_coordinator#QueuedRunCoordinator\"><span class=\"viewcode-link\"><span class=\"pre\">[source]</span></span></a><a class=\"headerlink\" href=\"#dagster.core.run_coordinator.QueuedRunCoordinator\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><div class=\"line-block\">\n<div class=\"line\"><br /></div>\n</div>\n<details class=\"summary-config-schema\">\n<summary>Config Schema:</summary><dl class=\"field-list simple\">\n<dt class=\"field-odd\">max_concurrent_runs (dagster.IntSource, optional)</dt>\n<dd class=\"field-odd\"><p>The maximum number of runs that are allowed to be in progress at once. Defaults to 10. Set to -1 to disable the limit. Set to 0 to stop any runs from launching. Any other negative values are disallowed.</p>\n</dd>\n<dt class=\"field-even\">tag_concurrency_limits (Union[List[strict dict], None], optional)</dt>\n<dd class=\"field-even\"><p>A set of limits that are applied to runs with particular tags. If a value is set, the limit is applied to only that key-value pair. If no value is set, the limit is applied across all values of that key. If the value is set to a dict with <cite>applyLimitPerUniqueValue: true</cite>, the limit will apply to the number of unique values for that key.</p>\n</dd>\n<dt class=\"field-odd\">dequeue_interval_seconds (dagster.IntSource, optional)</dt>\n<dd class=\"field-odd\"><p>The interval in seconds at which the Dagster Daemon should periodically check the run queue for new runs to launch.</p>\n</dd>\n</dl>\n</details><p>Enqueues runs via the run storage, to be deqeueued by the Dagster Daemon process. Requires\nthe Dagster Daemon process to be alive in order for runs to be launched.</p>\n</dd></dl>\n\n</div>\n<hr class=\"docutils\" />\n<div class=\"section\" id=\"scheduling\">\n<h2>Scheduling<a class=\"headerlink\" href=\"#scheduling\" title=\"Permalink to this headline\">\u00b6</a></h2>\n<dl class=\"py class\">\n<dt id=\"dagster.core.scheduler.Scheduler\">\n<em class=\"property\"><span class=\"pre\">class</span> </em><code class=\"sig-prename descclassname\"><span class=\"pre\">dagster.core.scheduler.</span></code><code class=\"sig-name descname\"><span class=\"pre\">Scheduler</span></code><a class=\"reference internal\" href=\"../../../../_modules/dagster/core/scheduler/scheduler#Scheduler\"><span class=\"viewcode-link\"><span class=\"pre\">[source]</span></span></a><a class=\"headerlink\" href=\"#dagster.core.scheduler.Scheduler\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Abstract base class for a scheduler. This component is responsible for interfacing with\nan external system such as cron to ensure scheduled repeated execution according.</p>\n</dd></dl>\n\n<dl class=\"py class\">\n<dt id=\"dagster.core.storage.schedules.ScheduleStorage\">\n<em class=\"property\"><span class=\"pre\">class</span> </em><code class=\"sig-prename descclassname\"><span class=\"pre\">dagster.core.storage.schedules.</span></code><code class=\"sig-name descname\"><span class=\"pre\">ScheduleStorage</span></code><a class=\"reference internal\" href=\"../../../../_modules/dagster/core/storage/schedules/base#ScheduleStorage\"><span class=\"viewcode-link\"><span class=\"pre\">[source]</span></span></a><a class=\"headerlink\" href=\"#dagster.core.storage.schedules.ScheduleStorage\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Abstract class for managing persistance of scheduler artifacts</p>\n</dd></dl>\n\n<dl class=\"py class\">\n<dt id=\"dagster.core.storage.schedules.SqlScheduleStorage\">\n<em class=\"property\"><span class=\"pre\">class</span> </em><code class=\"sig-prename descclassname\"><span class=\"pre\">dagster.core.storage.schedules.</span></code><code class=\"sig-name descname\"><span class=\"pre\">SqlScheduleStorage</span></code><a class=\"reference internal\" href=\"../../../../_modules/dagster/core/storage/schedules/sql_schedule_storage#SqlScheduleStorage\"><span class=\"viewcode-link\"><span class=\"pre\">[source]</span></span></a><a class=\"headerlink\" href=\"#dagster.core.storage.schedules.SqlScheduleStorage\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Base class for SQL backed schedule storage</p>\n</dd></dl>\n\n<dl class=\"py class\">\n<dt id=\"dagster.core.storage.schedules.SqliteScheduleStorage\">\n<em class=\"property\"><span class=\"pre\">class</span> </em><code class=\"sig-prename descclassname\"><span class=\"pre\">dagster.core.storage.schedules.</span></code><code class=\"sig-name descname\"><span class=\"pre\">SqliteScheduleStorage</span></code><span class=\"sig-paren\">(</span><em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">conn_string</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">inst_data</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">None</span></span></em><span class=\"sig-paren\">)</span><a class=\"reference internal\" href=\"../../../../_modules/dagster/core/storage/schedules/sqlite/sqlite_schedule_storage#SqliteScheduleStorage\"><span class=\"viewcode-link\"><span class=\"pre\">[source]</span></span></a><a class=\"headerlink\" href=\"#dagster.core.storage.schedules.SqliteScheduleStorage\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Local SQLite backed schedule storage</p>\n</dd></dl>\n\n<p>see also: <a class=\"reference internal\" href=\"libraries/dagster-postgres#dagster_postgres.PostgresScheduleStorage\" title=\"dagster_postgres.PostgresScheduleStorage\"><code class=\"xref py py-class docutils literal notranslate\"><span class=\"pre\">dagster_postgres.PostgresScheduleStorage</span></code></a> and <a class=\"reference internal\" href=\"libraries/dagster-mysql#dagster_mysql.MySQLScheduleStorage\" title=\"dagster_mysql.MySQLScheduleStorage\"><code class=\"xref py py-class docutils literal notranslate\"><span class=\"pre\">dagster_mysql.MySQLScheduleStorage</span></code></a>.</p>\n</div>\n<hr class=\"docutils\" />\n<div class=\"section\" id=\"exception-handling\">\n<h2>Exception handling<a class=\"headerlink\" href=\"#exception-handling\" title=\"Permalink to this headline\">\u00b6</a></h2>\n<dl class=\"py function\">\n<dt id=\"dagster.core.errors.user_code_error_boundary\">\n<code class=\"sig-prename descclassname\"><span class=\"pre\">dagster.core.errors.</span></code><code class=\"sig-name descname\"><span class=\"pre\">user_code_error_boundary</span></code><span class=\"sig-paren\">(</span><em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">error_cls</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">msg_fn</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">log_manager</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">None</span></span></em>, <em class=\"sig-param\"><span class=\"o\"><span class=\"pre\">**</span></span><span class=\"n\"><span class=\"pre\">kwargs</span></span></em><span class=\"sig-paren\">)</span><a class=\"reference internal\" href=\"../../../../_modules/dagster/core/errors#user_code_error_boundary\"><span class=\"viewcode-link\"><span class=\"pre\">[source]</span></span></a><a class=\"headerlink\" href=\"#dagster.core.errors.user_code_error_boundary\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Wraps the execution of user-space code in an error boundary. This places a uniform\npolicy around any user code invoked by the framework. This ensures that all user\nerrors are wrapped in an exception derived from DagsterUserCodeExecutionError,\nand that the original stack trace of the user error is preserved, so that it\ncan be reported without confusing framework code in the stack trace, if a\ntool author wishes to do so.</p>\n<p>Examples:</p>\n<div class=\"highlight-python notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"k\">with</span> <span class=\"n\">user_code_error_boundary</span><span class=\"p\">(</span>\n    <span class=\"c1\"># Pass a class that inherits from DagsterUserCodeExecutionError</span>\n    <span class=\"n\">DagsterExecutionStepExecutionError</span><span class=\"p\">,</span>\n    <span class=\"c1\"># Pass a function that produces a message</span>\n    <span class=\"s2\">&quot;Error occurred during step execution&quot;</span>\n<span class=\"p\">):</span>\n    <span class=\"n\">call_user_provided_function</span><span class=\"p\">()</span>\n</pre></div>\n</div>\n</dd></dl>\n\n</div>\n</div>\n", "current_page_name": "sections/api/apidocs/internals", "customsidebar": null, "display_toc": true, "meta": null, "metatags": "", "next": {"link": "../jobs/", "title": "Jobs"}, "page_source_suffix": ".rst", "parents": [], "prev": {"link": "../hooks/", "title": "Hooks"}, "rellinks": [["genindex", "General Index", "I", "index"], ["py-modindex", "Python Module Index", "", "modules"], ["sections/api/apidocs/jobs", "Jobs", "N", "next"], ["sections/api/apidocs/hooks", "Hooks", "P", "previous"]], "sidebars": ["globaltoc.html", "searchbox.html"], "sourcename": "sections/api/apidocs/internals.rst.txt", "title": "Internals", "toc": "<ul>\n<li><a class=\"reference internal\" href=\"#\">Internals</a><ul>\n<li><a class=\"reference internal\" href=\"#executors\">Executors</a></li>\n<li><a class=\"reference internal\" href=\"#file-manager\">File Manager</a></li>\n<li><a class=\"reference internal\" href=\"#instance\">Instance</a></li>\n<li><a class=\"reference internal\" href=\"#storage\">Storage</a></li>\n<li><a class=\"reference internal\" href=\"#run-storage\">Run storage</a></li>\n<li><a class=\"reference internal\" href=\"#event-log-storage\">Event log storage</a></li>\n<li><a class=\"reference internal\" href=\"#compute-log-manager\">Compute log manager</a></li>\n<li><a class=\"reference internal\" href=\"#run-launcher\">Run launcher</a></li>\n<li><a class=\"reference internal\" href=\"#run-coordinator\">Run coordinator</a></li>\n<li><a class=\"reference internal\" href=\"#scheduling\">Scheduling</a></li>\n<li><a class=\"reference internal\" href=\"#exception-handling\">Exception handling</a></li>\n</ul>\n</li>\n</ul>\n"}, "io-managers": {"alabaster_version": "0.7.12", "body": "<div class=\"section\" id=\"io-managers\">\n<h1>IO Managers<a class=\"headerlink\" href=\"#io-managers\" title=\"Permalink to this headline\">\u00b6</a></h1>\n<p>IO managers are user-provided objects that store op outputs and load them as inputs to downstream\nops.</p>\n<dl class=\"py function\">\n<dt id=\"dagster.io_manager\">\n<code class=\"sig-prename descclassname\"><span class=\"pre\">&#64;</span></code><code class=\"sig-prename descclassname\"><span class=\"pre\">dagster.</span></code><code class=\"sig-name descname\"><span class=\"pre\">io_manager</span></code><span class=\"sig-paren\">(</span><em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">config_schema</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">None</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">description</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">None</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">output_config_schema</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">None</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">input_config_schema</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">None</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">required_resource_keys</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">None</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">version</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">None</span></span></em><span class=\"sig-paren\">)</span><a class=\"reference internal\" href=\"../../../../_modules/dagster/core/storage/io_manager#io_manager\"><span class=\"viewcode-link\"><span class=\"pre\">[source]</span></span></a><a class=\"headerlink\" href=\"#dagster.io_manager\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Define an IO manager.</p>\n<p>IOManagers are used to store op outputs and load them as inputs to downstream ops.</p>\n<p>The decorated function should accept an <a class=\"reference internal\" href=\"resources#dagster.InitResourceContext\" title=\"dagster.InitResourceContext\"><code class=\"xref py py-class docutils literal notranslate\"><span class=\"pre\">InitResourceContext</span></code></a> and return an\n<a class=\"reference internal\" href=\"#dagster.IOManager\" title=\"dagster.IOManager\"><code class=\"xref py py-class docutils literal notranslate\"><span class=\"pre\">IOManager</span></code></a>.</p>\n<dl class=\"field-list simple\">\n<dt class=\"field-odd\">Parameters</dt>\n<dd class=\"field-odd\"><ul class=\"simple\">\n<li><p><strong>config_schema</strong> (<em>Optional</em><em>[</em><a class=\"reference internal\" href=\"config#dagster.ConfigSchema\" title=\"dagster.ConfigSchema\"><em>ConfigSchema</em></a><em>]</em>) \u2013 The schema for the resource config. Configuration\ndata available in <cite>init_context.resource_config</cite>. If not set, Dagster will accept any\nconfig provided.</p></li>\n<li><p><strong>description</strong> (<em>Optional</em><em>[</em><a class=\"reference external\" href=\"https://docs.python.org/3/library/stdtypes.html#str\" title=\"(in Python v3.8)\"><em>str</em></a><em>]</em>) \u2013 A human-readable description of the resource.</p></li>\n<li><p><strong>output_config_schema</strong> (<em>Optional</em><em>[</em><a class=\"reference internal\" href=\"config#dagster.ConfigSchema\" title=\"dagster.ConfigSchema\"><em>ConfigSchema</em></a><em>]</em>) \u2013 The schema for per-output config. If not set,\nno per-output configuration will be allowed.</p></li>\n<li><p><strong>input_config_schema</strong> (<em>Optional</em><em>[</em><a class=\"reference internal\" href=\"config#dagster.ConfigSchema\" title=\"dagster.ConfigSchema\"><em>ConfigSchema</em></a><em>]</em>) \u2013 The schema for per-input config. If not set,\nDagster will accept any config provided.</p></li>\n<li><p><strong>required_resource_keys</strong> (<em>Optional</em><em>[</em><em>Set</em><em>[</em><a class=\"reference external\" href=\"https://docs.python.org/3/library/stdtypes.html#str\" title=\"(in Python v3.8)\"><em>str</em></a><em>]</em><em>]</em>) \u2013 Keys for the resources required by the object\nmanager.</p></li>\n<li><p><strong>version</strong> (<em>Optional</em><em>[</em><a class=\"reference external\" href=\"https://docs.python.org/3/library/stdtypes.html#str\" title=\"(in Python v3.8)\"><em>str</em></a><em>]</em>) \u2013 (Experimental) The version of a resource function. Two wrapped\nresource functions should only have the same version if they produce the same resource\ndefinition when provided with the same inputs.</p></li>\n</ul>\n</dd>\n</dl>\n<p><strong>Examples:</strong></p>\n<div class=\"highlight-python notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"k\">class</span> <span class=\"nc\">MyIOManager</span><span class=\"p\">(</span><span class=\"n\">IOManager</span><span class=\"p\">):</span>\n    <span class=\"k\">def</span> <span class=\"nf\">handle_output</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">context</span><span class=\"p\">,</span> <span class=\"n\">obj</span><span class=\"p\">):</span>\n        <span class=\"n\">write_csv</span><span class=\"p\">(</span><span class=\"s2\">&quot;some/path&quot;</span><span class=\"p\">)</span>\n\n    <span class=\"k\">def</span> <span class=\"nf\">load_input</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">context</span><span class=\"p\">):</span>\n        <span class=\"k\">return</span> <span class=\"n\">read_csv</span><span class=\"p\">(</span><span class=\"s2\">&quot;some/path&quot;</span><span class=\"p\">)</span>\n\n<span class=\"nd\">@io_manager</span>\n<span class=\"k\">def</span> <span class=\"nf\">my_io_manager</span><span class=\"p\">(</span><span class=\"n\">init_context</span><span class=\"p\">):</span>\n    <span class=\"k\">return</span> <span class=\"n\">MyIOManager</span><span class=\"p\">()</span>\n\n<span class=\"nd\">@op</span><span class=\"p\">(</span><span class=\"n\">out</span><span class=\"o\">=</span><span class=\"n\">Out</span><span class=\"p\">(</span><span class=\"n\">io_manager_key</span><span class=\"o\">=</span><span class=\"s2\">&quot;my_io_manager_key&quot;</span><span class=\"p\">))</span>\n<span class=\"k\">def</span> <span class=\"nf\">my_op</span><span class=\"p\">(</span><span class=\"n\">_</span><span class=\"p\">):</span>\n    <span class=\"k\">return</span> <span class=\"n\">do_stuff</span><span class=\"p\">()</span>\n\n<span class=\"nd\">@job</span><span class=\"p\">(</span><span class=\"n\">resource_defs</span><span class=\"o\">=</span><span class=\"p\">{</span><span class=\"s2\">&quot;my_io_manager_key&quot;</span><span class=\"p\">:</span> <span class=\"n\">my_io_manager</span><span class=\"p\">})</span>\n<span class=\"k\">def</span> <span class=\"nf\">my_job</span><span class=\"p\">():</span>\n    <span class=\"n\">my_op</span><span class=\"p\">()</span>\n</pre></div>\n</div>\n</dd></dl>\n\n<dl class=\"py class\">\n<dt id=\"dagster.IOManager\">\n<em class=\"property\"><span class=\"pre\">class</span> </em><code class=\"sig-prename descclassname\"><span class=\"pre\">dagster.</span></code><code class=\"sig-name descname\"><span class=\"pre\">IOManager</span></code><a class=\"reference internal\" href=\"../../../../_modules/dagster/core/storage/io_manager#IOManager\"><span class=\"viewcode-link\"><span class=\"pre\">[source]</span></span></a><a class=\"headerlink\" href=\"#dagster.IOManager\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Base class for user-provided IO managers.</p>\n<p>IOManagers are used to store op outputs and load them as inputs to downstream ops.</p>\n<p>Extend this class to handle how objects are loaded and stored. Users should implement\n<code class=\"docutils literal notranslate\"><span class=\"pre\">handle_output</span></code> to store an object and <code class=\"docutils literal notranslate\"><span class=\"pre\">load_input</span></code> to retrieve an object.</p>\n<dl class=\"py method\">\n<dt id=\"dagster.IOManager.get_input_asset_key\">\n<code class=\"sig-name descname\"><span class=\"pre\">get_input_asset_key</span></code><span class=\"sig-paren\">(</span><em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">context</span></span></em><span class=\"sig-paren\">)</span><a class=\"reference internal\" href=\"../../../../_modules/dagster/core/storage/io_manager#IOManager.get_input_asset_key\"><span class=\"viewcode-link\"><span class=\"pre\">[source]</span></span></a><a class=\"headerlink\" href=\"#dagster.IOManager.get_input_asset_key\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>User-defined method that associates inputs loaded by this IOManager with a particular\nAssetKey.</p>\n<dl class=\"field-list simple\">\n<dt class=\"field-odd\">Parameters</dt>\n<dd class=\"field-odd\"><p><strong>context</strong> (<a class=\"reference internal\" href=\"#dagster.InputContext\" title=\"dagster.InputContext\"><em>InputContext</em></a>) \u2013 The input context, which describes the input that\u2019s being loaded\nand the upstream output that\u2019s being loaded from.</p>\n</dd>\n</dl>\n</dd></dl>\n\n<dl class=\"py method\">\n<dt id=\"dagster.IOManager.get_input_asset_partitions\">\n<code class=\"sig-name descname\"><span class=\"pre\">get_input_asset_partitions</span></code><span class=\"sig-paren\">(</span><em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">context</span></span></em><span class=\"sig-paren\">)</span><a class=\"reference internal\" href=\"../../../../_modules/dagster/core/storage/io_manager#IOManager.get_input_asset_partitions\"><span class=\"viewcode-link\"><span class=\"pre\">[source]</span></span></a><a class=\"headerlink\" href=\"#dagster.IOManager.get_input_asset_partitions\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>User-defined method that associates inputs loaded by this IOManager with a set of\npartitions of an AssetKey.</p>\n<dl class=\"field-list simple\">\n<dt class=\"field-odd\">Parameters</dt>\n<dd class=\"field-odd\"><p><strong>context</strong> (<a class=\"reference internal\" href=\"#dagster.InputContext\" title=\"dagster.InputContext\"><em>InputContext</em></a>) \u2013 The input context, which describes the input that\u2019s being loaded\nand the upstream output that\u2019s being loaded from.</p>\n</dd>\n</dl>\n</dd></dl>\n\n<dl class=\"py method\">\n<dt id=\"dagster.IOManager.get_output_asset_key\">\n<code class=\"sig-name descname\"><span class=\"pre\">get_output_asset_key</span></code><span class=\"sig-paren\">(</span><em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">_context</span></span></em><span class=\"sig-paren\">)</span><a class=\"reference internal\" href=\"../../../../_modules/dagster/core/storage/io_manager#IOManager.get_output_asset_key\"><span class=\"viewcode-link\"><span class=\"pre\">[source]</span></span></a><a class=\"headerlink\" href=\"#dagster.IOManager.get_output_asset_key\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>User-defined method that associates outputs handled by this IOManager with a particular\nAssetKey.</p>\n<dl class=\"field-list simple\">\n<dt class=\"field-odd\">Parameters</dt>\n<dd class=\"field-odd\"><p><strong>context</strong> (<a class=\"reference internal\" href=\"#dagster.OutputContext\" title=\"dagster.OutputContext\"><em>OutputContext</em></a>) \u2013 The context of the step output that produces this object.</p>\n</dd>\n</dl>\n</dd></dl>\n\n<dl class=\"py method\">\n<dt id=\"dagster.IOManager.get_output_asset_partitions\">\n<code class=\"sig-name descname\"><span class=\"pre\">get_output_asset_partitions</span></code><span class=\"sig-paren\">(</span><em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">_context</span></span></em><span class=\"sig-paren\">)</span><a class=\"reference internal\" href=\"../../../../_modules/dagster/core/storage/io_manager#IOManager.get_output_asset_partitions\"><span class=\"viewcode-link\"><span class=\"pre\">[source]</span></span></a><a class=\"headerlink\" href=\"#dagster.IOManager.get_output_asset_partitions\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>User-defined method that associates outputs handled by this IOManager with a set of\npartitions of an AssetKey.</p>\n<dl class=\"field-list simple\">\n<dt class=\"field-odd\">Parameters</dt>\n<dd class=\"field-odd\"><p><strong>context</strong> (<a class=\"reference internal\" href=\"#dagster.OutputContext\" title=\"dagster.OutputContext\"><em>OutputContext</em></a>) \u2013 The context of the step output that produces this object.</p>\n</dd>\n</dl>\n</dd></dl>\n\n<dl class=\"py method\">\n<dt id=\"dagster.IOManager.handle_output\">\n<em class=\"property\"><span class=\"pre\">abstract</span> </em><code class=\"sig-name descname\"><span class=\"pre\">handle_output</span></code><span class=\"sig-paren\">(</span><em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">context</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">obj</span></span></em><span class=\"sig-paren\">)</span><a class=\"reference internal\" href=\"../../../../_modules/dagster/core/storage/io_manager#IOManager.handle_output\"><span class=\"viewcode-link\"><span class=\"pre\">[source]</span></span></a><a class=\"headerlink\" href=\"#dagster.IOManager.handle_output\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>User-defined method that stores an output of an op.</p>\n<dl class=\"field-list simple\">\n<dt class=\"field-odd\">Parameters</dt>\n<dd class=\"field-odd\"><ul class=\"simple\">\n<li><p><strong>context</strong> (<a class=\"reference internal\" href=\"#dagster.OutputContext\" title=\"dagster.OutputContext\"><em>OutputContext</em></a>) \u2013 The context of the step output that produces this object.</p></li>\n<li><p><strong>obj</strong> (<em>Any</em>) \u2013 The object, returned by the op, to be stored.</p></li>\n</ul>\n</dd>\n</dl>\n</dd></dl>\n\n<dl class=\"py method\">\n<dt id=\"dagster.IOManager.load_input\">\n<em class=\"property\"><span class=\"pre\">abstract</span> </em><code class=\"sig-name descname\"><span class=\"pre\">load_input</span></code><span class=\"sig-paren\">(</span><em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">context</span></span></em><span class=\"sig-paren\">)</span><a class=\"reference internal\" href=\"../../../../_modules/dagster/core/storage/io_manager#IOManager.load_input\"><span class=\"viewcode-link\"><span class=\"pre\">[source]</span></span></a><a class=\"headerlink\" href=\"#dagster.IOManager.load_input\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>User-defined method that loads an input to an op.</p>\n<dl class=\"field-list simple\">\n<dt class=\"field-odd\">Parameters</dt>\n<dd class=\"field-odd\"><p><strong>context</strong> (<a class=\"reference internal\" href=\"#dagster.InputContext\" title=\"dagster.InputContext\"><em>InputContext</em></a>) \u2013 The input context, which describes the input that\u2019s being loaded\nand the upstream output that\u2019s being loaded from.</p>\n</dd>\n<dt class=\"field-even\">Returns</dt>\n<dd class=\"field-even\"><p>The data object.</p>\n</dd>\n<dt class=\"field-odd\">Return type</dt>\n<dd class=\"field-odd\"><p>Any</p>\n</dd>\n</dl>\n</dd></dl>\n\n</dd></dl>\n\n<dl class=\"py class\">\n<dt id=\"dagster.IOManagerDefinition\">\n<em class=\"property\"><span class=\"pre\">class</span> </em><code class=\"sig-prename descclassname\"><span class=\"pre\">dagster.</span></code><code class=\"sig-name descname\"><span class=\"pre\">IOManagerDefinition</span></code><span class=\"sig-paren\">(</span><em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">resource_fn</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">config_schema</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">None</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">description</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">None</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">required_resource_keys</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">None</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">version</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">None</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">input_config_schema</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">None</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">output_config_schema</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">None</span></span></em><span class=\"sig-paren\">)</span><a class=\"reference internal\" href=\"../../../../_modules/dagster/core/storage/io_manager#IOManagerDefinition\"><span class=\"viewcode-link\"><span class=\"pre\">[source]</span></span></a><a class=\"headerlink\" href=\"#dagster.IOManagerDefinition\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Definition of an IO manager resource.</p>\n<p>IOManagers are used to store op outputs and load them as inputs to downstream ops.</p>\n<p>An IOManagerDefinition is a <a class=\"reference internal\" href=\"resources#dagster.ResourceDefinition\" title=\"dagster.ResourceDefinition\"><code class=\"xref py py-class docutils literal notranslate\"><span class=\"pre\">ResourceDefinition</span></code></a> whose <cite>resource_fn</cite> returns an\n<a class=\"reference internal\" href=\"#dagster.IOManager\" title=\"dagster.IOManager\"><code class=\"xref py py-class docutils literal notranslate\"><span class=\"pre\">IOManager</span></code></a>.</p>\n<p>The easiest way to create an IOManagerDefnition is with the <a class=\"reference internal\" href=\"#dagster.io_manager\" title=\"dagster.io_manager\"><code class=\"xref py py-func docutils literal notranslate\"><span class=\"pre\">&#64;io_manager</span></code></a>\ndecorator.</p>\n<dl class=\"py method\">\n<dt id=\"dagster.IOManagerDefinition.hardcoded_io_manager\">\n<em class=\"property\"><span class=\"pre\">static</span> </em><code class=\"sig-name descname\"><span class=\"pre\">hardcoded_io_manager</span></code><span class=\"sig-paren\">(</span><em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">value</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">description</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">None</span></span></em><span class=\"sig-paren\">)</span><a class=\"reference internal\" href=\"../../../../_modules/dagster/core/storage/io_manager#IOManagerDefinition.hardcoded_io_manager\"><span class=\"viewcode-link\"><span class=\"pre\">[source]</span></span></a><a class=\"headerlink\" href=\"#dagster.IOManagerDefinition.hardcoded_io_manager\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>A helper function that creates an <code class=\"docutils literal notranslate\"><span class=\"pre\">IOManagerDefinition</span></code> with a hardcoded IOManager.</p>\n<dl class=\"field-list simple\">\n<dt class=\"field-odd\">Parameters</dt>\n<dd class=\"field-odd\"><ul class=\"simple\">\n<li><p><strong>value</strong> (<a class=\"reference internal\" href=\"#dagster.IOManager\" title=\"dagster.IOManager\"><em>IOManager</em></a>) \u2013 A hardcoded IO Manager which helps mock the definition.</p></li>\n<li><p><strong>description</strong> (<em>[</em><em>Optional</em><em>[</em><a class=\"reference external\" href=\"https://docs.python.org/3/library/stdtypes.html#str\" title=\"(in Python v3.8)\"><em>str</em></a><em>]</em><em>]</em>) \u2013 The description of the IO Manager. Defaults to None.</p></li>\n</ul>\n</dd>\n<dt class=\"field-even\">Returns</dt>\n<dd class=\"field-even\"><p>A hardcoded resource.</p>\n</dd>\n<dt class=\"field-odd\">Return type</dt>\n<dd class=\"field-odd\"><p>[<a class=\"reference internal\" href=\"#dagster.IOManagerDefinition\" title=\"dagster.IOManagerDefinition\">IOManagerDefinition</a>]</p>\n</dd>\n</dl>\n</dd></dl>\n\n<dl class=\"py method\">\n<dt id=\"dagster.IOManagerDefinition.input_config_schema\">\n<em class=\"property\"><span class=\"pre\">property</span> </em><code class=\"sig-name descname\"><span class=\"pre\">input_config_schema</span></code><a class=\"headerlink\" href=\"#dagster.IOManagerDefinition.input_config_schema\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>The schema for per-input configuration for inputs that are managed by this\ninput manager</p>\n</dd></dl>\n\n<dl class=\"py method\">\n<dt id=\"dagster.IOManagerDefinition.output_config_schema\">\n<em class=\"property\"><span class=\"pre\">property</span> </em><code class=\"sig-name descname\"><span class=\"pre\">output_config_schema</span></code><a class=\"headerlink\" href=\"#dagster.IOManagerDefinition.output_config_schema\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>The schema for per-output configuration for outputs that are managed by this\nmanager</p>\n</dd></dl>\n\n</dd></dl>\n\n<div class=\"section\" id=\"input-and-output-contexts\">\n<h2>Input and Output Contexts<a class=\"headerlink\" href=\"#input-and-output-contexts\" title=\"Permalink to this headline\">\u00b6</a></h2>\n<dl class=\"py class\">\n<dt id=\"dagster.InputContext\">\n<em class=\"property\"><span class=\"pre\">class</span> </em><code class=\"sig-prename descclassname\"><span class=\"pre\">dagster.</span></code><code class=\"sig-name descname\"><span class=\"pre\">InputContext</span></code><span class=\"sig-paren\">(</span><em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">name</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">None</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">pipeline_name</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">None</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">solid_def</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">None</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">config</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">None</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">metadata</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">None</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">upstream_output</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">None</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">dagster_type</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">None</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">log_manager</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">None</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">resource_config</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">None</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">resources</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">None</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">step_context</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">None</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">op_def</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">None</span></span></em><span class=\"sig-paren\">)</span><a class=\"reference internal\" href=\"../../../../_modules/dagster/core/execution/context/input#InputContext\"><span class=\"viewcode-link\"><span class=\"pre\">[source]</span></span></a><a class=\"headerlink\" href=\"#dagster.InputContext\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>The <code class=\"docutils literal notranslate\"><span class=\"pre\">context</span></code> object available to the load_input method of <a class=\"reference internal\" href=\"#dagster.RootInputManager\" title=\"dagster.RootInputManager\"><code class=\"xref py py-class docutils literal notranslate\"><span class=\"pre\">RootInputManager</span></code></a>.</p>\n<dl class=\"py attribute\">\n<dt id=\"dagster.InputContext.name\">\n<code class=\"sig-name descname\"><span class=\"pre\">name</span></code><a class=\"headerlink\" href=\"#dagster.InputContext.name\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>The name of the input that we\u2019re loading.</p>\n<dl class=\"field-list simple\">\n<dt class=\"field-odd\">Type</dt>\n<dd class=\"field-odd\"><p>Optional[<a class=\"reference external\" href=\"https://docs.python.org/3/library/stdtypes.html#str\" title=\"(in Python v3.8)\">str</a>]</p>\n</dd>\n</dl>\n</dd></dl>\n\n<dl class=\"py attribute\">\n<dt id=\"dagster.InputContext.pipeline_name\">\n<code class=\"sig-name descname\"><span class=\"pre\">pipeline_name</span></code><a class=\"headerlink\" href=\"#dagster.InputContext.pipeline_name\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>The name of the pipeline.</p>\n<dl class=\"field-list simple\">\n<dt class=\"field-odd\">Type</dt>\n<dd class=\"field-odd\"><p>Optional[<a class=\"reference external\" href=\"https://docs.python.org/3/library/stdtypes.html#str\" title=\"(in Python v3.8)\">str</a>]</p>\n</dd>\n</dl>\n</dd></dl>\n\n<dl class=\"py attribute\">\n<dt id=\"dagster.InputContext.solid_def\">\n<code class=\"sig-name descname\"><span class=\"pre\">solid_def</span></code><a class=\"headerlink\" href=\"#dagster.InputContext.solid_def\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>The definition of the solid that\u2019s loading the input.</p>\n<dl class=\"field-list simple\">\n<dt class=\"field-odd\">Type</dt>\n<dd class=\"field-odd\"><p>Optional[<a class=\"reference internal\" href=\"solids#dagster.SolidDefinition\" title=\"dagster.SolidDefinition\">SolidDefinition</a>]</p>\n</dd>\n</dl>\n</dd></dl>\n\n<dl class=\"py attribute\">\n<dt id=\"dagster.InputContext.config\">\n<code class=\"sig-name descname\"><span class=\"pre\">config</span></code><a class=\"headerlink\" href=\"#dagster.InputContext.config\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>The config attached to the input that we\u2019re loading.</p>\n<dl class=\"field-list simple\">\n<dt class=\"field-odd\">Type</dt>\n<dd class=\"field-odd\"><p>Optional[Any]</p>\n</dd>\n</dl>\n</dd></dl>\n\n<dl class=\"py attribute\">\n<dt id=\"dagster.InputContext.metadata\">\n<code class=\"sig-name descname\"><span class=\"pre\">metadata</span></code><a class=\"headerlink\" href=\"#dagster.InputContext.metadata\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>A dict of metadata that is assigned to the\nInputDefinition that we\u2019re loading for.</p>\n<dl class=\"field-list simple\">\n<dt class=\"field-odd\">Type</dt>\n<dd class=\"field-odd\"><p>Optional[Dict[<a class=\"reference external\" href=\"https://docs.python.org/3/library/stdtypes.html#str\" title=\"(in Python v3.8)\">str</a>, Any]]</p>\n</dd>\n</dl>\n</dd></dl>\n\n<dl class=\"py attribute\">\n<dt id=\"dagster.InputContext.upstream_output\">\n<code class=\"sig-name descname\"><span class=\"pre\">upstream_output</span></code><a class=\"headerlink\" href=\"#dagster.InputContext.upstream_output\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Info about the output that produced the object\nwe\u2019re loading.</p>\n<dl class=\"field-list simple\">\n<dt class=\"field-odd\">Type</dt>\n<dd class=\"field-odd\"><p>Optional[<a class=\"reference internal\" href=\"#dagster.OutputContext\" title=\"dagster.OutputContext\">OutputContext</a>]</p>\n</dd>\n</dl>\n</dd></dl>\n\n<dl class=\"py attribute\">\n<dt id=\"dagster.InputContext.dagster_type\">\n<code class=\"sig-name descname\"><span class=\"pre\">dagster_type</span></code><a class=\"headerlink\" href=\"#dagster.InputContext.dagster_type\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>The type of this input.</p>\n<dl class=\"field-list simple\">\n<dt class=\"field-odd\">Type</dt>\n<dd class=\"field-odd\"><p>Optional[<a class=\"reference internal\" href=\"types#dagster.DagsterType\" title=\"dagster.DagsterType\">DagsterType</a>]</p>\n</dd>\n</dl>\n</dd></dl>\n\n<dl class=\"py attribute\">\n<dt id=\"dagster.InputContext.log\">\n<code class=\"sig-name descname\"><span class=\"pre\">log</span></code><a class=\"headerlink\" href=\"#dagster.InputContext.log\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>The log manager to use for this input.</p>\n<dl class=\"field-list simple\">\n<dt class=\"field-odd\">Type</dt>\n<dd class=\"field-odd\"><p>Optional[<a class=\"reference internal\" href=\"loggers#dagster.DagsterLogManager\" title=\"dagster.DagsterLogManager\">DagsterLogManager</a>]</p>\n</dd>\n</dl>\n</dd></dl>\n\n<dl class=\"py attribute\">\n<dt id=\"dagster.InputContext.resource_config\">\n<code class=\"sig-name descname\"><span class=\"pre\">resource_config</span></code><a class=\"headerlink\" href=\"#dagster.InputContext.resource_config\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>The config associated with the resource that\ninitializes the RootInputManager.</p>\n<dl class=\"field-list simple\">\n<dt class=\"field-odd\">Type</dt>\n<dd class=\"field-odd\"><p>Optional[Dict[<a class=\"reference external\" href=\"https://docs.python.org/3/library/stdtypes.html#str\" title=\"(in Python v3.8)\">str</a>, Any]]</p>\n</dd>\n</dl>\n</dd></dl>\n\n<dl class=\"py attribute\">\n<dt id=\"dagster.InputContext.resources\">\n<code class=\"sig-name descname\"><span class=\"pre\">resources</span></code><a class=\"headerlink\" href=\"#dagster.InputContext.resources\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>The resources required by the resource that initializes the\ninput manager. If using the <code class=\"xref py py-func docutils literal notranslate\"><span class=\"pre\">&#64;root_input_manager()</span></code> decorator, these resources\ncorrespond to those requested with the <cite>required_resource_keys</cite> parameter.</p>\n<dl class=\"field-list simple\">\n<dt class=\"field-odd\">Type</dt>\n<dd class=\"field-odd\"><p>Optional[Resources]</p>\n</dd>\n</dl>\n</dd></dl>\n\n<dl class=\"py attribute\">\n<dt id=\"dagster.InputContext.op_def\">\n<code class=\"sig-name descname\"><span class=\"pre\">op_def</span></code><a class=\"headerlink\" href=\"#dagster.InputContext.op_def\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>The definition of the op that\u2019s loading the input.</p>\n<dl class=\"field-list simple\">\n<dt class=\"field-odd\">Type</dt>\n<dd class=\"field-odd\"><p>Optional[<a class=\"reference internal\" href=\"ops#dagster.OpDefinition\" title=\"dagster.OpDefinition\">OpDefinition</a>]</p>\n</dd>\n</dl>\n</dd></dl>\n\n<dl class=\"py method\">\n<dt id=\"dagster.InputContext.add_input_metadata\">\n<code class=\"sig-name descname\"><span class=\"pre\">add_input_metadata</span></code><span class=\"sig-paren\">(</span><em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">metadata</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">description</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">None</span></span></em><span class=\"sig-paren\">)</span><a class=\"reference internal\" href=\"../../../../_modules/dagster/core/execution/context/input#InputContext.add_input_metadata\"><span class=\"viewcode-link\"><span class=\"pre\">[source]</span></span></a><a class=\"headerlink\" href=\"#dagster.InputContext.add_input_metadata\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Accepts a dictionary of metadata. Metadata entries will appear on the LOADED_INPUT event.\nIf the input is an asset, metadata will be attached to an asset observation.</p>\n<p>The asset observation will be yielded from the run and appear in the event log.\nOnly valid if the context has an asset key.</p>\n</dd></dl>\n\n<dl class=\"py method\">\n<dt id=\"dagster.InputContext.asset_partition_key\">\n<em class=\"property\"><span class=\"pre\">property</span> </em><code class=\"sig-name descname\"><span class=\"pre\">asset_partition_key</span></code><a class=\"headerlink\" href=\"#dagster.InputContext.asset_partition_key\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>The partition key for input asset.</p>\n<p>Raises an error if the input asset has no partitioning, or if the run covers a partition\nrange for the input asset.</p>\n</dd></dl>\n\n<dl class=\"py method\">\n<dt id=\"dagster.InputContext.asset_partition_key_range\">\n<em class=\"property\"><span class=\"pre\">property</span> </em><code class=\"sig-name descname\"><span class=\"pre\">asset_partition_key_range</span></code><a class=\"headerlink\" href=\"#dagster.InputContext.asset_partition_key_range\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>The partition key range for input asset.</p>\n<p>Raises an error if the input asset has no partitioning.</p>\n</dd></dl>\n\n<dl class=\"py method\">\n<dt id=\"dagster.InputContext.asset_partitions_time_window\">\n<em class=\"property\"><span class=\"pre\">property</span> </em><code class=\"sig-name descname\"><span class=\"pre\">asset_partitions_time_window</span></code><a class=\"headerlink\" href=\"#dagster.InputContext.asset_partitions_time_window\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>The time window for the partitions of the input asset.</p>\n<p>Raises an error if either of the following are true:\n- The input asset has no partitioning.\n- The input asset is not partitioned with a TimeWindowPartitionsDefinition.</p>\n</dd></dl>\n\n<dl class=\"py method\">\n<dt id=\"dagster.InputContext.consume_events\">\n<code class=\"sig-name descname\"><span class=\"pre\">consume_events</span></code><span class=\"sig-paren\">(</span><span class=\"sig-paren\">)</span><a class=\"reference internal\" href=\"../../../../_modules/dagster/core/execution/context/input#InputContext.consume_events\"><span class=\"viewcode-link\"><span class=\"pre\">[source]</span></span></a><a class=\"headerlink\" href=\"#dagster.InputContext.consume_events\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Pops and yields all user-generated events that have been recorded from this context.</p>\n<p>If consume_events has not yet been called, this will yield all logged events since the call to <cite>handle_input</cite>. If consume_events has been called, it will yield all events since the last time consume_events was called. Designed for internal use. Users should never need to invoke this method.</p>\n</dd></dl>\n\n<dl class=\"py method\">\n<dt id=\"dagster.InputContext.get_identifier\">\n<code class=\"sig-name descname\"><span class=\"pre\">get_identifier</span></code><span class=\"sig-paren\">(</span><span class=\"sig-paren\">)</span><a class=\"reference internal\" href=\"../../../../_modules/dagster/core/execution/context/input#InputContext.get_identifier\"><span class=\"viewcode-link\"><span class=\"pre\">[source]</span></span></a><a class=\"headerlink\" href=\"#dagster.InputContext.get_identifier\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Utility method to get a collection of identifiers that as a whole represent a unique\nstep input.</p>\n<p>If not using memoization, the unique identifier collection consists of</p>\n<ul class=\"simple\">\n<li><dl class=\"simple\">\n<dt><code class=\"docutils literal notranslate\"><span class=\"pre\">run_id</span></code>: the id of the run which generates the input.</dt><dd><p>Note: This method also handles the re-execution memoization logic. If the step that\ngenerates the input is skipped in the re-execution, the <code class=\"docutils literal notranslate\"><span class=\"pre\">run_id</span></code> will be the id\nof its parent run.</p>\n</dd>\n</dl>\n</li>\n<li><p><code class=\"docutils literal notranslate\"><span class=\"pre\">step_key</span></code>: the key for a compute step.</p></li>\n<li><p><code class=\"docutils literal notranslate\"><span class=\"pre\">name</span></code>: the name of the output. (default: \u2018result\u2019).</p></li>\n</ul>\n<p>If using memoization, the <code class=\"docutils literal notranslate\"><span class=\"pre\">version</span></code> corresponding to the step output is used in place of\nthe <code class=\"docutils literal notranslate\"><span class=\"pre\">run_id</span></code>.</p>\n<dl class=\"field-list simple\">\n<dt class=\"field-odd\">Returns</dt>\n<dd class=\"field-odd\"><p>A list of identifiers, i.e. (run_id or version), step_key, and output_name</p>\n</dd>\n<dt class=\"field-even\">Return type</dt>\n<dd class=\"field-even\"><p>List[<a class=\"reference external\" href=\"https://docs.python.org/3/library/stdtypes.html#str\" title=\"(in Python v3.8)\">str</a>, ..]</p>\n</dd>\n</dl>\n</dd></dl>\n\n<dl class=\"py method\">\n<dt id=\"dagster.InputContext.get_observations\">\n<code class=\"sig-name descname\"><span class=\"pre\">get_observations</span></code><span class=\"sig-paren\">(</span><span class=\"sig-paren\">)</span><a class=\"reference internal\" href=\"../../../../_modules/dagster/core/execution/context/input#InputContext.get_observations\"><span class=\"viewcode-link\"><span class=\"pre\">[source]</span></span></a><a class=\"headerlink\" href=\"#dagster.InputContext.get_observations\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Retrieve the list of user-generated asset observations that were observed via the context.</p>\n<p>User-generated events that were yielded will not appear in this list.</p>\n<p><strong>Examples:</strong></p>\n<div class=\"highlight-python notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"kn\">from</span> <span class=\"nn\">dagster</span> <span class=\"kn\">import</span> <span class=\"n\">IOManager</span><span class=\"p\">,</span> <span class=\"n\">build_input_context</span><span class=\"p\">,</span> <span class=\"n\">AssetObservation</span>\n\n<span class=\"k\">class</span> <span class=\"nc\">MyIOManager</span><span class=\"p\">(</span><span class=\"n\">IOManager</span><span class=\"p\">):</span>\n    <span class=\"k\">def</span> <span class=\"nf\">load_input</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">context</span><span class=\"p\">,</span> <span class=\"n\">obj</span><span class=\"p\">):</span>\n        <span class=\"o\">...</span>\n\n<span class=\"k\">def</span> <span class=\"nf\">test_load_input</span><span class=\"p\">():</span>\n    <span class=\"n\">mgr</span> <span class=\"o\">=</span> <span class=\"n\">MyIOManager</span><span class=\"p\">()</span>\n    <span class=\"n\">context</span> <span class=\"o\">=</span> <span class=\"n\">build_input_context</span><span class=\"p\">()</span>\n    <span class=\"n\">mgr</span><span class=\"o\">.</span><span class=\"n\">load_input</span><span class=\"p\">(</span><span class=\"n\">context</span><span class=\"p\">)</span>\n    <span class=\"n\">observations</span> <span class=\"o\">=</span> <span class=\"n\">context</span><span class=\"o\">.</span><span class=\"n\">get_observations</span><span class=\"p\">()</span>\n    <span class=\"o\">...</span>\n</pre></div>\n</div>\n</dd></dl>\n\n<dl class=\"py method\">\n<dt id=\"dagster.InputContext.has_input_name\">\n<em class=\"property\"><span class=\"pre\">property</span> </em><code class=\"sig-name descname\"><span class=\"pre\">has_input_name</span></code><a class=\"headerlink\" href=\"#dagster.InputContext.has_input_name\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>If we\u2019re the InputContext is being used to load the result of a run from outside the run,\nthen it won\u2019t have an input name.</p>\n</dd></dl>\n\n<dl class=\"py method\">\n<dt id=\"dagster.InputContext.has_partition_key\">\n<em class=\"property\"><span class=\"pre\">property</span> </em><code class=\"sig-name descname\"><span class=\"pre\">has_partition_key</span></code><a class=\"headerlink\" href=\"#dagster.InputContext.has_partition_key\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Whether the current run is a partitioned run</p>\n</dd></dl>\n\n<dl class=\"py method\">\n<dt id=\"dagster.InputContext.partition_key\">\n<em class=\"property\"><span class=\"pre\">property</span> </em><code class=\"sig-name descname\"><span class=\"pre\">partition_key</span></code><a class=\"headerlink\" href=\"#dagster.InputContext.partition_key\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>The partition key for the current run.</p>\n<p>Raises an error if the current run is not a partitioned run.</p>\n</dd></dl>\n\n</dd></dl>\n\n<dl class=\"py class\">\n<dt id=\"dagster.OutputContext\">\n<em class=\"property\"><span class=\"pre\">class</span> </em><code class=\"sig-prename descclassname\"><span class=\"pre\">dagster.</span></code><code class=\"sig-name descname\"><span class=\"pre\">OutputContext</span></code><span class=\"sig-paren\">(</span><em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">step_key</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">None</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">name</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">None</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">pipeline_name</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">None</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">run_id</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">None</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">metadata</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">None</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">mapping_key</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">None</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">config</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">None</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">solid_def</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">None</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">dagster_type</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">None</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">log_manager</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">None</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">version</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">None</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">resource_config</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">None</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">resources</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">None</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">step_context</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">None</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">op_def</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">None</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">asset_info</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">None</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">warn_on_step_context_use</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">False</span></span></em><span class=\"sig-paren\">)</span><a class=\"reference internal\" href=\"../../../../_modules/dagster/core/execution/context/output#OutputContext\"><span class=\"viewcode-link\"><span class=\"pre\">[source]</span></span></a><a class=\"headerlink\" href=\"#dagster.OutputContext\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>The context object that is available to the <cite>handle_output</cite> method of an <a class=\"reference internal\" href=\"#dagster.IOManager\" title=\"dagster.IOManager\"><code class=\"xref py py-class docutils literal notranslate\"><span class=\"pre\">IOManager</span></code></a>.</p>\n<dl class=\"py attribute\">\n<dt id=\"dagster.OutputContext.step_key\">\n<code class=\"sig-name descname\"><span class=\"pre\">step_key</span></code><a class=\"headerlink\" href=\"#dagster.OutputContext.step_key\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>The step_key for the compute step that produced the output.</p>\n<dl class=\"field-list simple\">\n<dt class=\"field-odd\">Type</dt>\n<dd class=\"field-odd\"><p>Optional[<a class=\"reference external\" href=\"https://docs.python.org/3/library/stdtypes.html#str\" title=\"(in Python v3.8)\">str</a>]</p>\n</dd>\n</dl>\n</dd></dl>\n\n<dl class=\"py attribute\">\n<dt id=\"dagster.OutputContext.name\">\n<code class=\"sig-name descname\"><span class=\"pre\">name</span></code><a class=\"headerlink\" href=\"#dagster.OutputContext.name\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>The name of the output that produced the output.</p>\n<dl class=\"field-list simple\">\n<dt class=\"field-odd\">Type</dt>\n<dd class=\"field-odd\"><p>Optional[<a class=\"reference external\" href=\"https://docs.python.org/3/library/stdtypes.html#str\" title=\"(in Python v3.8)\">str</a>]</p>\n</dd>\n</dl>\n</dd></dl>\n\n<dl class=\"py attribute\">\n<dt id=\"dagster.OutputContext.pipeline_name\">\n<code class=\"sig-name descname\"><span class=\"pre\">pipeline_name</span></code><a class=\"headerlink\" href=\"#dagster.OutputContext.pipeline_name\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>The name of the pipeline definition.</p>\n<dl class=\"field-list simple\">\n<dt class=\"field-odd\">Type</dt>\n<dd class=\"field-odd\"><p>Optional[<a class=\"reference external\" href=\"https://docs.python.org/3/library/stdtypes.html#str\" title=\"(in Python v3.8)\">str</a>]</p>\n</dd>\n</dl>\n</dd></dl>\n\n<dl class=\"py attribute\">\n<dt id=\"dagster.OutputContext.run_id\">\n<code class=\"sig-name descname\"><span class=\"pre\">run_id</span></code><a class=\"headerlink\" href=\"#dagster.OutputContext.run_id\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>The id of the run that produced the output.</p>\n<dl class=\"field-list simple\">\n<dt class=\"field-odd\">Type</dt>\n<dd class=\"field-odd\"><p>Optional[<a class=\"reference external\" href=\"https://docs.python.org/3/library/stdtypes.html#str\" title=\"(in Python v3.8)\">str</a>]</p>\n</dd>\n</dl>\n</dd></dl>\n\n<dl class=\"py attribute\">\n<dt id=\"dagster.OutputContext.metadata\">\n<code class=\"sig-name descname\"><span class=\"pre\">metadata</span></code><a class=\"headerlink\" href=\"#dagster.OutputContext.metadata\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>A dict of the metadata that is assigned to the\nOutputDefinition that produced the output.</p>\n<dl class=\"field-list simple\">\n<dt class=\"field-odd\">Type</dt>\n<dd class=\"field-odd\"><p>Optional[Dict[<a class=\"reference external\" href=\"https://docs.python.org/3/library/stdtypes.html#str\" title=\"(in Python v3.8)\">str</a>, Any]]</p>\n</dd>\n</dl>\n</dd></dl>\n\n<dl class=\"py attribute\">\n<dt id=\"dagster.OutputContext.mapping_key\">\n<code class=\"sig-name descname\"><span class=\"pre\">mapping_key</span></code><a class=\"headerlink\" href=\"#dagster.OutputContext.mapping_key\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>The key that identifies a unique mapped output. None for regular outputs.</p>\n<dl class=\"field-list simple\">\n<dt class=\"field-odd\">Type</dt>\n<dd class=\"field-odd\"><p>Optional[<a class=\"reference external\" href=\"https://docs.python.org/3/library/stdtypes.html#str\" title=\"(in Python v3.8)\">str</a>]</p>\n</dd>\n</dl>\n</dd></dl>\n\n<dl class=\"py attribute\">\n<dt id=\"dagster.OutputContext.config\">\n<code class=\"sig-name descname\"><span class=\"pre\">config</span></code><a class=\"headerlink\" href=\"#dagster.OutputContext.config\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>The configuration for the output.</p>\n<dl class=\"field-list simple\">\n<dt class=\"field-odd\">Type</dt>\n<dd class=\"field-odd\"><p>Optional[Any]</p>\n</dd>\n</dl>\n</dd></dl>\n\n<dl class=\"py attribute\">\n<dt id=\"dagster.OutputContext.solid_def\">\n<code class=\"sig-name descname\"><span class=\"pre\">solid_def</span></code><a class=\"headerlink\" href=\"#dagster.OutputContext.solid_def\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>The definition of the solid that produced the output.</p>\n<dl class=\"field-list simple\">\n<dt class=\"field-odd\">Type</dt>\n<dd class=\"field-odd\"><p>Optional[<a class=\"reference internal\" href=\"solids#dagster.SolidDefinition\" title=\"dagster.SolidDefinition\">SolidDefinition</a>]</p>\n</dd>\n</dl>\n</dd></dl>\n\n<dl class=\"py attribute\">\n<dt id=\"dagster.OutputContext.dagster_type\">\n<code class=\"sig-name descname\"><span class=\"pre\">dagster_type</span></code><a class=\"headerlink\" href=\"#dagster.OutputContext.dagster_type\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>The type of this output.</p>\n<dl class=\"field-list simple\">\n<dt class=\"field-odd\">Type</dt>\n<dd class=\"field-odd\"><p>Optional[<a class=\"reference internal\" href=\"types#dagster.DagsterType\" title=\"dagster.DagsterType\">DagsterType</a>]</p>\n</dd>\n</dl>\n</dd></dl>\n\n<dl class=\"py attribute\">\n<dt id=\"dagster.OutputContext.log\">\n<code class=\"sig-name descname\"><span class=\"pre\">log</span></code><a class=\"headerlink\" href=\"#dagster.OutputContext.log\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>The log manager to use for this output.</p>\n<dl class=\"field-list simple\">\n<dt class=\"field-odd\">Type</dt>\n<dd class=\"field-odd\"><p>Optional[<a class=\"reference internal\" href=\"loggers#dagster.DagsterLogManager\" title=\"dagster.DagsterLogManager\">DagsterLogManager</a>]</p>\n</dd>\n</dl>\n</dd></dl>\n\n<dl class=\"py attribute\">\n<dt id=\"dagster.OutputContext.version\">\n<code class=\"sig-name descname\"><span class=\"pre\">version</span></code><a class=\"headerlink\" href=\"#dagster.OutputContext.version\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>(Experimental) The version of the output.</p>\n<dl class=\"field-list simple\">\n<dt class=\"field-odd\">Type</dt>\n<dd class=\"field-odd\"><p>Optional[<a class=\"reference external\" href=\"https://docs.python.org/3/library/stdtypes.html#str\" title=\"(in Python v3.8)\">str</a>]</p>\n</dd>\n</dl>\n</dd></dl>\n\n<dl class=\"py attribute\">\n<dt id=\"dagster.OutputContext.resource_config\">\n<code class=\"sig-name descname\"><span class=\"pre\">resource_config</span></code><a class=\"headerlink\" href=\"#dagster.OutputContext.resource_config\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>The config associated with the resource that\ninitializes the RootInputManager.</p>\n<dl class=\"field-list simple\">\n<dt class=\"field-odd\">Type</dt>\n<dd class=\"field-odd\"><p>Optional[Dict[<a class=\"reference external\" href=\"https://docs.python.org/3/library/stdtypes.html#str\" title=\"(in Python v3.8)\">str</a>, Any]]</p>\n</dd>\n</dl>\n</dd></dl>\n\n<dl class=\"py attribute\">\n<dt id=\"dagster.OutputContext.resources\">\n<code class=\"sig-name descname\"><span class=\"pre\">resources</span></code><a class=\"headerlink\" href=\"#dagster.OutputContext.resources\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>The resources required by the output manager, specified by the\n<cite>required_resource_keys</cite> parameter.</p>\n<dl class=\"field-list simple\">\n<dt class=\"field-odd\">Type</dt>\n<dd class=\"field-odd\"><p>Optional[Resources]</p>\n</dd>\n</dl>\n</dd></dl>\n\n<dl class=\"py attribute\">\n<dt id=\"dagster.OutputContext.op_def\">\n<code class=\"sig-name descname\"><span class=\"pre\">op_def</span></code><a class=\"headerlink\" href=\"#dagster.OutputContext.op_def\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>The definition of the op that produced the output.</p>\n<dl class=\"field-list simple\">\n<dt class=\"field-odd\">Type</dt>\n<dd class=\"field-odd\"><p>Optional[<a class=\"reference internal\" href=\"ops#dagster.OpDefinition\" title=\"dagster.OpDefinition\">OpDefinition</a>]</p>\n</dd>\n</dl>\n</dd></dl>\n\n<dl class=\"py attribute\">\n<dt id=\"dagster.OutputContext.asset_info\">\n<code class=\"sig-name descname\"><span class=\"pre\">asset_info</span></code><a class=\"headerlink\" href=\"#dagster.OutputContext.asset_info\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Optional[AssetOutputInfo]: (Experimental) Asset info corresponding to the\noutput.</p>\n</dd></dl>\n\n<dl class=\"py method\">\n<dt id=\"dagster.OutputContext.add_output_metadata\">\n<code class=\"sig-name descname\"><span class=\"pre\">add_output_metadata</span></code><span class=\"sig-paren\">(</span><em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">metadata</span></span></em><span class=\"sig-paren\">)</span><a class=\"reference internal\" href=\"../../../../_modules/dagster/core/execution/context/output#OutputContext.add_output_metadata\"><span class=\"viewcode-link\"><span class=\"pre\">[source]</span></span></a><a class=\"headerlink\" href=\"#dagster.OutputContext.add_output_metadata\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Add a dictionary of metadata to the handled output.</p>\n<p>Metadata entries added will show up in the HANDLED_OUTPUT and ASSET_MATERIALIZATION events for the run.</p>\n<dl class=\"field-list simple\">\n<dt class=\"field-odd\">Parameters</dt>\n<dd class=\"field-odd\"><p><strong>metadata</strong> (<em>Dict</em><em>[</em><a class=\"reference external\" href=\"https://docs.python.org/3/library/stdtypes.html#str\" title=\"(in Python v3.8)\"><em>str</em></a><em>, </em><em>Any</em><em>]</em>) \u2013 A metadata dictionary to log</p>\n</dd>\n</dl>\n<p>Examples:</p>\n<div class=\"highlight-python notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"kn\">from</span> <span class=\"nn\">dagster</span> <span class=\"kn\">import</span> <span class=\"n\">IOManager</span>\n\n<span class=\"k\">class</span> <span class=\"nc\">MyIOManager</span><span class=\"p\">(</span><span class=\"n\">IOManager</span><span class=\"p\">):</span>\n    <span class=\"k\">def</span> <span class=\"nf\">handle_output</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">context</span><span class=\"p\">,</span> <span class=\"n\">obj</span><span class=\"p\">):</span>\n        <span class=\"n\">context</span><span class=\"o\">.</span><span class=\"n\">add_output_metadata</span><span class=\"p\">({</span><span class=\"s2\">&quot;foo&quot;</span><span class=\"p\">:</span> <span class=\"s2\">&quot;bar&quot;</span><span class=\"p\">})</span>\n</pre></div>\n</div>\n</dd></dl>\n\n<dl class=\"py method\">\n<dt id=\"dagster.OutputContext.asset_partition_key\">\n<em class=\"property\"><span class=\"pre\">property</span> </em><code class=\"sig-name descname\"><span class=\"pre\">asset_partition_key</span></code><a class=\"headerlink\" href=\"#dagster.OutputContext.asset_partition_key\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>The partition key for output asset.</p>\n<p>Raises an error if the output asset has no partitioning, or if the run covers a partition\nrange for the output asset.</p>\n</dd></dl>\n\n<dl class=\"py method\">\n<dt id=\"dagster.OutputContext.asset_partition_key_range\">\n<em class=\"property\"><span class=\"pre\">property</span> </em><code class=\"sig-name descname\"><span class=\"pre\">asset_partition_key_range</span></code><a class=\"headerlink\" href=\"#dagster.OutputContext.asset_partition_key_range\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>The partition key range for output asset.</p>\n<p>Raises an error if the output asset has no partitioning.</p>\n</dd></dl>\n\n<dl class=\"py method\">\n<dt id=\"dagster.OutputContext.asset_partitions_time_window\">\n<em class=\"property\"><span class=\"pre\">property</span> </em><code class=\"sig-name descname\"><span class=\"pre\">asset_partitions_time_window</span></code><a class=\"headerlink\" href=\"#dagster.OutputContext.asset_partitions_time_window\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>The time window for the partitions of the output asset.</p>\n<p>Raises an error if either of the following are true:\n- The output asset has no partitioning.\n- The output asset is not partitioned with a TimeWindowPartitionsDefinition.</p>\n</dd></dl>\n\n<dl class=\"py method\">\n<dt id=\"dagster.OutputContext.consume_events\">\n<code class=\"sig-name descname\"><span class=\"pre\">consume_events</span></code><span class=\"sig-paren\">(</span><span class=\"sig-paren\">)</span><a class=\"reference internal\" href=\"../../../../_modules/dagster/core/execution/context/output#OutputContext.consume_events\"><span class=\"viewcode-link\"><span class=\"pre\">[source]</span></span></a><a class=\"headerlink\" href=\"#dagster.OutputContext.consume_events\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Pops and yields all user-generated events that have been recorded from this context.</p>\n<p>If consume_events has not yet been called, this will yield all logged events since the call to <cite>handle_output</cite>. If consume_events has been called, it will yield all events since the last time consume_events was called. Designed for internal use. Users should never need to invoke this method.</p>\n</dd></dl>\n\n<dl class=\"py method\">\n<dt id=\"dagster.OutputContext.consume_logged_metadata_entries\">\n<code class=\"sig-name descname\"><span class=\"pre\">consume_logged_metadata_entries</span></code><span class=\"sig-paren\">(</span><span class=\"sig-paren\">)</span><a class=\"reference internal\" href=\"../../../../_modules/dagster/core/execution/context/output#OutputContext.consume_logged_metadata_entries\"><span class=\"viewcode-link\"><span class=\"pre\">[source]</span></span></a><a class=\"headerlink\" href=\"#dagster.OutputContext.consume_logged_metadata_entries\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Pops and yields all user-generated metadata entries that have been recorded from this context.</p>\n<p>If consume_logged_metadata_entries has not yet been called, this will yield all logged events since the call to <cite>handle_output</cite>. If consume_logged_metadata_entries has been called, it will yield all events since the last time consume_logged_metadata_entries was called. Designed for internal use. Users should never need to invoke this method.</p>\n</dd></dl>\n\n<dl class=\"py method\">\n<dt id=\"dagster.OutputContext.get_identifier\">\n<code class=\"sig-name descname\"><span class=\"pre\">get_identifier</span></code><span class=\"sig-paren\">(</span><span class=\"sig-paren\">)</span><a class=\"reference internal\" href=\"../../../../_modules/dagster/core/execution/context/output#OutputContext.get_identifier\"><span class=\"viewcode-link\"><span class=\"pre\">[source]</span></span></a><a class=\"headerlink\" href=\"#dagster.OutputContext.get_identifier\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Utility method to get a collection of identifiers that as a whole represent a unique\nstep output.</p>\n<p>If not using memoization, the unique identifier collection consists of</p>\n<ul class=\"simple\">\n<li><dl class=\"simple\">\n<dt><code class=\"docutils literal notranslate\"><span class=\"pre\">run_id</span></code>: the id of the run which generates the output.</dt><dd><p>Note: This method also handles the re-execution memoization logic. If the step that\ngenerates the output is skipped in the re-execution, the <code class=\"docutils literal notranslate\"><span class=\"pre\">run_id</span></code> will be the id\nof its parent run.</p>\n</dd>\n</dl>\n</li>\n<li><p><code class=\"docutils literal notranslate\"><span class=\"pre\">step_key</span></code>: the key for a compute step.</p></li>\n<li><p><code class=\"docutils literal notranslate\"><span class=\"pre\">name</span></code>: the name of the output. (default: \u2018result\u2019).</p></li>\n</ul>\n<p>If using memoization, the <code class=\"docutils literal notranslate\"><span class=\"pre\">version</span></code> corresponding to the step output is used in place of\nthe <code class=\"docutils literal notranslate\"><span class=\"pre\">run_id</span></code>.</p>\n<dl class=\"field-list simple\">\n<dt class=\"field-odd\">Returns</dt>\n<dd class=\"field-odd\"><p>A list of identifiers, i.e. (run_id or version), step_key, and output_name</p>\n</dd>\n<dt class=\"field-even\">Return type</dt>\n<dd class=\"field-even\"><p>List[<a class=\"reference external\" href=\"https://docs.python.org/3/library/stdtypes.html#str\" title=\"(in Python v3.8)\">str</a>, ..]</p>\n</dd>\n</dl>\n</dd></dl>\n\n<dl class=\"py method\">\n<dt id=\"dagster.OutputContext.get_logged_events\">\n<code class=\"sig-name descname\"><span class=\"pre\">get_logged_events</span></code><span class=\"sig-paren\">(</span><span class=\"sig-paren\">)</span><a class=\"reference internal\" href=\"../../../../_modules/dagster/core/execution/context/output#OutputContext.get_logged_events\"><span class=\"viewcode-link\"><span class=\"pre\">[source]</span></span></a><a class=\"headerlink\" href=\"#dagster.OutputContext.get_logged_events\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Retrieve the list of user-generated events that were logged via the context.</p>\n<p>User-generated events that were yielded will not appear in this list.</p>\n<p><strong>Examples:</strong></p>\n<div class=\"highlight-python notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"kn\">from</span> <span class=\"nn\">dagster</span> <span class=\"kn\">import</span> <span class=\"n\">IOManager</span><span class=\"p\">,</span> <span class=\"n\">build_output_context</span><span class=\"p\">,</span> <span class=\"n\">AssetMaterialization</span>\n\n<span class=\"k\">class</span> <span class=\"nc\">MyIOManager</span><span class=\"p\">(</span><span class=\"n\">IOManager</span><span class=\"p\">):</span>\n    <span class=\"k\">def</span> <span class=\"nf\">handle_output</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">context</span><span class=\"p\">,</span> <span class=\"n\">obj</span><span class=\"p\">):</span>\n        <span class=\"o\">...</span>\n\n<span class=\"k\">def</span> <span class=\"nf\">test_handle_output</span><span class=\"p\">():</span>\n    <span class=\"n\">mgr</span> <span class=\"o\">=</span> <span class=\"n\">MyIOManager</span><span class=\"p\">()</span>\n    <span class=\"n\">context</span> <span class=\"o\">=</span> <span class=\"n\">build_output_context</span><span class=\"p\">()</span>\n    <span class=\"n\">mgr</span><span class=\"o\">.</span><span class=\"n\">handle_output</span><span class=\"p\">(</span><span class=\"n\">context</span><span class=\"p\">)</span>\n    <span class=\"n\">all_user_events</span> <span class=\"o\">=</span> <span class=\"n\">context</span><span class=\"o\">.</span><span class=\"n\">get_logged_events</span><span class=\"p\">()</span>\n    <span class=\"n\">materializations</span> <span class=\"o\">=</span> <span class=\"p\">[</span><span class=\"n\">event</span> <span class=\"k\">for</span> <span class=\"n\">event</span> <span class=\"ow\">in</span> <span class=\"n\">all_user_events</span> <span class=\"k\">if</span> <span class=\"nb\">isinstance</span><span class=\"p\">(</span><span class=\"n\">event</span><span class=\"p\">,</span> <span class=\"n\">AssetMaterialization</span><span class=\"p\">)]</span>\n    <span class=\"o\">...</span>\n</pre></div>\n</div>\n</dd></dl>\n\n<dl class=\"py method\">\n<dt id=\"dagster.OutputContext.get_logged_metadata_entries\">\n<code class=\"sig-name descname\"><span class=\"pre\">get_logged_metadata_entries</span></code><span class=\"sig-paren\">(</span><span class=\"sig-paren\">)</span><a class=\"reference internal\" href=\"../../../../_modules/dagster/core/execution/context/output#OutputContext.get_logged_metadata_entries\"><span class=\"viewcode-link\"><span class=\"pre\">[source]</span></span></a><a class=\"headerlink\" href=\"#dagster.OutputContext.get_logged_metadata_entries\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Get the list of metadata entries that have been logged for use with this output.</p>\n</dd></dl>\n\n<dl class=\"py method\">\n<dt id=\"dagster.OutputContext.get_run_scoped_output_identifier\">\n<code class=\"sig-name descname\"><span class=\"pre\">get_run_scoped_output_identifier</span></code><span class=\"sig-paren\">(</span><span class=\"sig-paren\">)</span><a class=\"reference internal\" href=\"../../../../_modules/dagster/core/execution/context/output#OutputContext.get_run_scoped_output_identifier\"><span class=\"viewcode-link\"><span class=\"pre\">[source]</span></span></a><a class=\"headerlink\" href=\"#dagster.OutputContext.get_run_scoped_output_identifier\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Utility method to get a collection of identifiers that as a whole represent a unique\nstep output.</p>\n<p>The unique identifier collection consists of</p>\n<ul class=\"simple\">\n<li><dl class=\"simple\">\n<dt><code class=\"docutils literal notranslate\"><span class=\"pre\">run_id</span></code>: the id of the run which generates the output.</dt><dd><p>Note: This method also handles the re-execution memoization logic. If the step that\ngenerates the output is skipped in the re-execution, the <code class=\"docutils literal notranslate\"><span class=\"pre\">run_id</span></code> will be the id\nof its parent run.</p>\n</dd>\n</dl>\n</li>\n<li><p><code class=\"docutils literal notranslate\"><span class=\"pre\">step_key</span></code>: the key for a compute step.</p></li>\n<li><p><code class=\"docutils literal notranslate\"><span class=\"pre\">name</span></code>: the name of the output. (default: \u2018result\u2019).</p></li>\n</ul>\n<dl class=\"field-list simple\">\n<dt class=\"field-odd\">Returns</dt>\n<dd class=\"field-odd\"><p>A list of identifiers, i.e. run id, step key, and output name</p>\n</dd>\n<dt class=\"field-even\">Return type</dt>\n<dd class=\"field-even\"><p>List[<a class=\"reference external\" href=\"https://docs.python.org/3/library/stdtypes.html#str\" title=\"(in Python v3.8)\">str</a>, ..]</p>\n</dd>\n</dl>\n</dd></dl>\n\n<dl class=\"py method\">\n<dt id=\"dagster.OutputContext.has_partition_key\">\n<em class=\"property\"><span class=\"pre\">property</span> </em><code class=\"sig-name descname\"><span class=\"pre\">has_partition_key</span></code><a class=\"headerlink\" href=\"#dagster.OutputContext.has_partition_key\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Whether the current run is a partitioned run</p>\n</dd></dl>\n\n<dl class=\"py method\">\n<dt id=\"dagster.OutputContext.log_event\">\n<code class=\"sig-name descname\"><span class=\"pre\">log_event</span></code><span class=\"sig-paren\">(</span><em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">event</span></span></em><span class=\"sig-paren\">)</span><a class=\"reference internal\" href=\"../../../../_modules/dagster/core/execution/context/output#OutputContext.log_event\"><span class=\"viewcode-link\"><span class=\"pre\">[source]</span></span></a><a class=\"headerlink\" href=\"#dagster.OutputContext.log_event\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Log an AssetMaterialization or AssetObservation from within the body of an io manager\u2019s <cite>handle_output</cite> method.</p>\n<p>Events logged with this method will appear in the event log.</p>\n<dl class=\"field-list simple\">\n<dt class=\"field-odd\">Parameters</dt>\n<dd class=\"field-odd\"><p><strong>event</strong> (<em>Union</em><em>[</em><a class=\"reference internal\" href=\"ops#dagster.AssetMaterialization\" title=\"dagster.AssetMaterialization\"><em>AssetMaterialization</em></a><em>, </em><em>Materialization</em><em>, </em><em>AssetObservation</em><em>]</em>) \u2013 The event to log.</p>\n</dd>\n</dl>\n<p>Examples:</p>\n<div class=\"highlight-python notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"kn\">from</span> <span class=\"nn\">dagster</span> <span class=\"kn\">import</span> <span class=\"n\">IOManager</span><span class=\"p\">,</span> <span class=\"n\">AssetMaterialization</span>\n\n<span class=\"k\">class</span> <span class=\"nc\">MyIOManager</span><span class=\"p\">(</span><span class=\"n\">IOManager</span><span class=\"p\">):</span>\n    <span class=\"k\">def</span> <span class=\"nf\">handle_output</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">context</span><span class=\"p\">,</span> <span class=\"n\">obj</span><span class=\"p\">):</span>\n        <span class=\"n\">context</span><span class=\"o\">.</span><span class=\"n\">log_event</span><span class=\"p\">(</span><span class=\"n\">AssetMaterialization</span><span class=\"p\">(</span><span class=\"s2\">&quot;foo&quot;</span><span class=\"p\">))</span>\n</pre></div>\n</div>\n</dd></dl>\n\n<dl class=\"py method\">\n<dt id=\"dagster.OutputContext.partition_key\">\n<em class=\"property\"><span class=\"pre\">property</span> </em><code class=\"sig-name descname\"><span class=\"pre\">partition_key</span></code><a class=\"headerlink\" href=\"#dagster.OutputContext.partition_key\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>The partition key for the current run.</p>\n<p>Raises an error if the current run is not a partitioned run.</p>\n</dd></dl>\n\n</dd></dl>\n\n<dl class=\"py function\">\n<dt id=\"dagster.build_input_context\">\n<code class=\"sig-prename descclassname\"><span class=\"pre\">dagster.</span></code><code class=\"sig-name descname\"><span class=\"pre\">build_input_context</span></code><span class=\"sig-paren\">(</span><em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">name</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">None</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">config</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">None</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">metadata</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">None</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">upstream_output</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">None</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">dagster_type</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">None</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">resource_config</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">None</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">resources</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">None</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">op_def</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">None</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">step_context</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">None</span></span></em><span class=\"sig-paren\">)</span><a class=\"reference internal\" href=\"../../../../_modules/dagster/core/execution/context/input#build_input_context\"><span class=\"viewcode-link\"><span class=\"pre\">[source]</span></span></a><a class=\"headerlink\" href=\"#dagster.build_input_context\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Builds input context from provided parameters.</p>\n<p><code class=\"docutils literal notranslate\"><span class=\"pre\">build_input_context</span></code> can be used as either a function, or a context manager. If resources\nthat are also context managers are provided, then <code class=\"docutils literal notranslate\"><span class=\"pre\">build_input_context</span></code> must be used as a\ncontext manager.</p>\n<dl class=\"field-list simple\">\n<dt class=\"field-odd\">Parameters</dt>\n<dd class=\"field-odd\"><ul class=\"simple\">\n<li><p><strong>name</strong> (<em>Optional</em><em>[</em><a class=\"reference external\" href=\"https://docs.python.org/3/library/stdtypes.html#str\" title=\"(in Python v3.8)\"><em>str</em></a><em>]</em>) \u2013 The name of the input that we\u2019re loading.</p></li>\n<li><p><strong>config</strong> (<em>Optional</em><em>[</em><em>Any</em><em>]</em>) \u2013 The config attached to the input that we\u2019re loading.</p></li>\n<li><p><strong>metadata</strong> (<em>Optional</em><em>[</em><em>Dict</em><em>[</em><a class=\"reference external\" href=\"https://docs.python.org/3/library/stdtypes.html#str\" title=\"(in Python v3.8)\"><em>str</em></a><em>, </em><em>Any</em><em>]</em><em>]</em>) \u2013 A dict of metadata that is assigned to the\nInputDefinition that we\u2019re loading for.</p></li>\n<li><p><strong>upstream_output</strong> (<em>Optional</em><em>[</em><a class=\"reference internal\" href=\"#dagster.OutputContext\" title=\"dagster.OutputContext\"><em>OutputContext</em></a><em>]</em>) \u2013 Info about the output that produced the object\nwe\u2019re loading.</p></li>\n<li><p><strong>dagster_type</strong> (<em>Optional</em><em>[</em><a class=\"reference internal\" href=\"types#dagster.DagsterType\" title=\"dagster.DagsterType\"><em>DagsterType</em></a><em>]</em>) \u2013 The type of this input.</p></li>\n<li><p><strong>resource_config</strong> (<em>Optional</em><em>[</em><em>Dict</em><em>[</em><a class=\"reference external\" href=\"https://docs.python.org/3/library/stdtypes.html#str\" title=\"(in Python v3.8)\"><em>str</em></a><em>, </em><em>Any</em><em>]</em><em>]</em>) \u2013 The resource config to make available from the\ninput context. This usually corresponds to the config provided to the resource that\nloads the input manager.</p></li>\n<li><p><strong>resources</strong> (<em>Optional</em><em>[</em><em>Dict</em><em>[</em><a class=\"reference external\" href=\"https://docs.python.org/3/library/stdtypes.html#str\" title=\"(in Python v3.8)\"><em>str</em></a><em>, </em><em>Any</em><em>]</em><em>]</em>) \u2013 The resources to make available from the context.\nFor a given key, you can provide either an actual instance of an object, or a resource\ndefinition.</p></li>\n<li><p><strong>asset_key</strong> (<em>Optional</em><em>[</em><a class=\"reference internal\" href=\"ops#dagster.AssetKey\" title=\"dagster.AssetKey\"><em>AssetKey</em></a><em>]</em>) \u2013 The asset key attached to the InputDefinition.</p></li>\n<li><p><strong>op_def</strong> (<em>Optional</em><em>[</em><a class=\"reference internal\" href=\"ops#dagster.OpDefinition\" title=\"dagster.OpDefinition\"><em>OpDefinition</em></a><em>]</em>) \u2013 The definition of the op that\u2019s loading the input.</p></li>\n<li><p><strong>step_context</strong> (<em>Optional</em><em>[</em><em>StepExecutionContext</em><em>]</em>) \u2013 For internal use.</p></li>\n</ul>\n</dd>\n</dl>\n<p class=\"rubric\">Examples</p>\n<div class=\"highlight-python notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"n\">build_input_context</span><span class=\"p\">()</span>\n\n<span class=\"k\">with</span> <span class=\"n\">build_input_context</span><span class=\"p\">(</span><span class=\"n\">resources</span><span class=\"o\">=</span><span class=\"p\">{</span><span class=\"s2\">&quot;foo&quot;</span><span class=\"p\">:</span> <span class=\"n\">context_manager_resource</span><span class=\"p\">})</span> <span class=\"k\">as</span> <span class=\"n\">context</span><span class=\"p\">:</span>\n    <span class=\"n\">do_something</span>\n</pre></div>\n</div>\n</dd></dl>\n\n<dl class=\"py function\">\n<dt id=\"dagster.build_output_context\">\n<code class=\"sig-prename descclassname\"><span class=\"pre\">dagster.</span></code><code class=\"sig-name descname\"><span class=\"pre\">build_output_context</span></code><span class=\"sig-paren\">(</span><em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">step_key</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">None</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">name</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">None</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">metadata</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">None</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">run_id</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">None</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">mapping_key</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">None</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">config</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">None</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">dagster_type</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">None</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">version</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">None</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">resource_config</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">None</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">resources</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">None</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">solid_def</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">None</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">op_def</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">None</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">asset_key</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">None</span></span></em><span class=\"sig-paren\">)</span><a class=\"reference internal\" href=\"../../../../_modules/dagster/core/execution/context/output#build_output_context\"><span class=\"viewcode-link\"><span class=\"pre\">[source]</span></span></a><a class=\"headerlink\" href=\"#dagster.build_output_context\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Builds output context from provided parameters.</p>\n<p><code class=\"docutils literal notranslate\"><span class=\"pre\">build_output_context</span></code> can be used as either a function, or a context manager. If resources\nthat are also context managers are provided, then <code class=\"docutils literal notranslate\"><span class=\"pre\">build_output_context</span></code> must be used as a\ncontext manager.</p>\n<dl class=\"field-list simple\">\n<dt class=\"field-odd\">Parameters</dt>\n<dd class=\"field-odd\"><ul class=\"simple\">\n<li><p><strong>step_key</strong> (<em>Optional</em><em>[</em><a class=\"reference external\" href=\"https://docs.python.org/3/library/stdtypes.html#str\" title=\"(in Python v3.8)\"><em>str</em></a><em>]</em>) \u2013 The step_key for the compute step that produced the output.</p></li>\n<li><p><strong>name</strong> (<em>Optional</em><em>[</em><a class=\"reference external\" href=\"https://docs.python.org/3/library/stdtypes.html#str\" title=\"(in Python v3.8)\"><em>str</em></a><em>]</em>) \u2013 The name of the output that produced the output.</p></li>\n<li><p><strong>metadata</strong> (<em>Optional</em><em>[</em><em>Dict</em><em>[</em><a class=\"reference external\" href=\"https://docs.python.org/3/library/stdtypes.html#str\" title=\"(in Python v3.8)\"><em>str</em></a><em>, </em><em>Any</em><em>]</em><em>]</em>) \u2013 A dict of the metadata that is assigned to the\nOutputDefinition that produced the output.</p></li>\n<li><p><strong>mapping_key</strong> (<em>Optional</em><em>[</em><a class=\"reference external\" href=\"https://docs.python.org/3/library/stdtypes.html#str\" title=\"(in Python v3.8)\"><em>str</em></a><em>]</em>) \u2013 The key that identifies a unique mapped output. None for regular outputs.</p></li>\n<li><p><strong>config</strong> (<em>Optional</em><em>[</em><em>Any</em><em>]</em>) \u2013 The configuration for the output.</p></li>\n<li><p><strong>dagster_type</strong> (<em>Optional</em><em>[</em><a class=\"reference internal\" href=\"types#dagster.DagsterType\" title=\"dagster.DagsterType\"><em>DagsterType</em></a><em>]</em>) \u2013 The type of this output.</p></li>\n<li><p><strong>version</strong> (<em>Optional</em><em>[</em><a class=\"reference external\" href=\"https://docs.python.org/3/library/stdtypes.html#str\" title=\"(in Python v3.8)\"><em>str</em></a><em>]</em>) \u2013 (Experimental) The version of the output.</p></li>\n<li><p><strong>resource_config</strong> (<em>Optional</em><em>[</em><em>Dict</em><em>[</em><a class=\"reference external\" href=\"https://docs.python.org/3/library/stdtypes.html#str\" title=\"(in Python v3.8)\"><em>str</em></a><em>, </em><em>Any</em><em>]</em><em>]</em>) \u2013 The resource config to make available from the\ninput context. This usually corresponds to the config provided to the resource that\nloads the output manager.</p></li>\n<li><p><strong>resources</strong> (<em>Optional</em><em>[</em><em>Resources</em><em>]</em>) \u2013 The resources to make available from the context.\nFor a given key, you can provide either an actual instance of an object, or a resource\ndefinition.</p></li>\n<li><p><strong>solid_def</strong> (<em>Optional</em><em>[</em><a class=\"reference internal\" href=\"solids#dagster.SolidDefinition\" title=\"dagster.SolidDefinition\"><em>SolidDefinition</em></a><em>]</em>) \u2013 The definition of the solid that produced the output.</p></li>\n<li><p><strong>op_def</strong> (<em>Optional</em><em>[</em><a class=\"reference internal\" href=\"ops#dagster.OpDefinition\" title=\"dagster.OpDefinition\"><em>OpDefinition</em></a><em>]</em>) \u2013 The definition of the op that produced the output.</p></li>\n<li><p><strong>asset_key</strong> \u2013 Optional[Union[AssetKey, Sequence[str], str]]: The asset key corresponding to the\noutput.</p></li>\n</ul>\n</dd>\n</dl>\n<p class=\"rubric\">Examples</p>\n<div class=\"highlight-python notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"n\">build_output_context</span><span class=\"p\">()</span>\n\n<span class=\"k\">with</span> <span class=\"n\">build_output_context</span><span class=\"p\">(</span><span class=\"n\">resources</span><span class=\"o\">=</span><span class=\"p\">{</span><span class=\"s2\">&quot;foo&quot;</span><span class=\"p\">:</span> <span class=\"n\">context_manager_resource</span><span class=\"p\">})</span> <span class=\"k\">as</span> <span class=\"n\">context</span><span class=\"p\">:</span>\n    <span class=\"n\">do_something</span>\n</pre></div>\n</div>\n</dd></dl>\n\n</div>\n<div class=\"section\" id=\"built-in-io-managers\">\n<h2>Built-in IO Managers<a class=\"headerlink\" href=\"#built-in-io-managers\" title=\"Permalink to this headline\">\u00b6</a></h2>\n<dl class=\"py data\">\n<dt id=\"dagster.mem_io_manager\">\n<code class=\"sig-prename descclassname\"><span class=\"pre\">dagster.</span></code><code class=\"sig-name descname\"><span class=\"pre\">mem_io_manager</span></code><em class=\"property\"> <span class=\"pre\">IOManagerDefinition</span></em><a class=\"reference internal\" href=\"../../../../_modules/dagster/core/storage/mem_io_manager#mem_io_manager\"><span class=\"viewcode-link\"><span class=\"pre\">[source]</span></span></a><a class=\"headerlink\" href=\"#dagster.mem_io_manager\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Built-in IO manager that stores and retrieves values in memory.</p>\n</dd></dl>\n\n<dl class=\"py data\">\n<dt id=\"dagster.fs_io_manager\">\n<code class=\"sig-prename descclassname\"><span class=\"pre\">dagster.</span></code><code class=\"sig-name descname\"><span class=\"pre\">fs_io_manager</span></code><em class=\"property\"> <span class=\"pre\">IOManagerDefinition</span></em><a class=\"reference internal\" href=\"../../../../_modules/dagster/core/storage/fs_io_manager#fs_io_manager\"><span class=\"viewcode-link\"><span class=\"pre\">[source]</span></span></a><a class=\"headerlink\" href=\"#dagster.fs_io_manager\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Built-in filesystem IO manager that stores and retrieves values using pickling.</p>\n<p>Allows users to specify a base directory where all the step outputs will be stored. By\ndefault, step outputs will be stored in the directory specified by local_artifact_storage in\nyour dagster.yaml file (which will be a temporary directory if not explicitly set).</p>\n<p>Serializes and deserializes output values using pickling and automatically constructs\nthe filepaths for ops and assets.</p>\n<p>Assigns each op output to a unique filepath containing run ID, step key, and output name.\nAssigns each asset to a single filesystem path, at \u201c&lt;base_dir&gt;/&lt;asset_key&gt;\u201d. If the asset key\nhas multiple components, the final component is used as the name of the file, and the preceding\ncomponents as parent directories under the base_dir.</p>\n<p>Subsequent materializations of an asset will overwrite previous materializations of that asset.\nSo, with a base directory of \u201c/my/base/path\u201d, an asset with key\n<cite>AssetKey([\u201cone\u201d, \u201ctwo\u201d, \u201cthree\u201d])</cite> would be stored in a file called \u201cthree\u201d in a directory\nwith path \u201c/my/base/path/one/two/\u201d.</p>\n<p>Example usage:</p>\n<p>1. Specify a job-level IO manager using the reserved resource key <code class=\"docutils literal notranslate\"><span class=\"pre\">&quot;io_manager&quot;</span></code>,\nwhich will set the given IO manager on all ops in a job.</p>\n<div class=\"highlight-python notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"kn\">from</span> <span class=\"nn\">dagster</span> <span class=\"kn\">import</span> <span class=\"n\">fs_io_manager</span><span class=\"p\">,</span> <span class=\"n\">job</span><span class=\"p\">,</span> <span class=\"n\">op</span>\n\n<span class=\"nd\">@op</span>\n<span class=\"k\">def</span> <span class=\"nf\">op_a</span><span class=\"p\">():</span>\n    <span class=\"c1\"># create df ...</span>\n    <span class=\"k\">return</span> <span class=\"n\">df</span>\n\n<span class=\"nd\">@op</span>\n<span class=\"k\">def</span> <span class=\"nf\">op_b</span><span class=\"p\">(</span><span class=\"n\">df</span><span class=\"p\">):</span>\n    <span class=\"k\">return</span> <span class=\"n\">df</span><span class=\"p\">[:</span><span class=\"mi\">5</span><span class=\"p\">]</span>\n\n<span class=\"nd\">@job</span><span class=\"p\">(</span>\n    <span class=\"n\">resource_defs</span><span class=\"o\">=</span><span class=\"p\">{</span>\n        <span class=\"s2\">&quot;io_manager&quot;</span><span class=\"p\">:</span> <span class=\"n\">fs_io_manager</span><span class=\"o\">.</span><span class=\"n\">configured</span><span class=\"p\">({</span><span class=\"s2\">&quot;base_dir&quot;</span><span class=\"p\">:</span> <span class=\"s2\">&quot;/my/base/path&quot;</span><span class=\"p\">})</span>\n    <span class=\"p\">}</span>\n<span class=\"p\">)</span>\n<span class=\"k\">def</span> <span class=\"nf\">job</span><span class=\"p\">():</span>\n    <span class=\"n\">op_b</span><span class=\"p\">(</span><span class=\"n\">op_a</span><span class=\"p\">())</span>\n</pre></div>\n</div>\n<p>2. Specify IO manager on <a class=\"reference internal\" href=\"ops#dagster.Out\" title=\"dagster.Out\"><code class=\"xref py py-class docutils literal notranslate\"><span class=\"pre\">Out</span></code></a>, which allows the user to set different IO managers on\ndifferent step outputs.</p>\n<div class=\"highlight-python notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"kn\">from</span> <span class=\"nn\">dagster</span> <span class=\"kn\">import</span> <span class=\"n\">fs_io_manager</span><span class=\"p\">,</span> <span class=\"n\">job</span><span class=\"p\">,</span> <span class=\"n\">op</span><span class=\"p\">,</span> <span class=\"n\">Out</span>\n\n<span class=\"nd\">@op</span><span class=\"p\">(</span><span class=\"n\">out</span><span class=\"o\">=</span><span class=\"n\">Out</span><span class=\"p\">(</span><span class=\"n\">io_manager_key</span><span class=\"o\">=</span><span class=\"s2\">&quot;my_io_manager&quot;</span><span class=\"p\">))</span>\n<span class=\"k\">def</span> <span class=\"nf\">op_a</span><span class=\"p\">():</span>\n    <span class=\"c1\"># create df ...</span>\n    <span class=\"k\">return</span> <span class=\"n\">df</span>\n\n<span class=\"nd\">@op</span>\n<span class=\"k\">def</span> <span class=\"nf\">op_b</span><span class=\"p\">(</span><span class=\"n\">df</span><span class=\"p\">):</span>\n    <span class=\"k\">return</span> <span class=\"n\">df</span><span class=\"p\">[:</span><span class=\"mi\">5</span><span class=\"p\">]</span>\n\n<span class=\"nd\">@job</span><span class=\"p\">(</span><span class=\"n\">resource_defs</span><span class=\"o\">=</span><span class=\"p\">{</span><span class=\"s2\">&quot;my_io_manager&quot;</span><span class=\"p\">:</span> <span class=\"n\">fs_io_manager</span><span class=\"p\">})</span>\n<span class=\"k\">def</span> <span class=\"nf\">job</span><span class=\"p\">():</span>\n    <span class=\"n\">op_b</span><span class=\"p\">(</span><span class=\"n\">op_a</span><span class=\"p\">())</span>\n</pre></div>\n</div>\n</dd></dl>\n\n<dl class=\"py data\">\n<dt id=\"dagster.custom_path_fs_io_manager\">\n<code class=\"sig-prename descclassname\"><span class=\"pre\">dagster.</span></code><code class=\"sig-name descname\"><span class=\"pre\">custom_path_fs_io_manager</span></code><em class=\"property\"> <span class=\"pre\">IOManagerDefinition</span></em><a class=\"reference internal\" href=\"../../../../_modules/dagster/core/storage/fs_io_manager#custom_path_fs_io_manager\"><span class=\"viewcode-link\"><span class=\"pre\">[source]</span></span></a><a class=\"headerlink\" href=\"#dagster.custom_path_fs_io_manager\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Built-in IO manager that allows users to custom output file path per output definition.</p>\n<p>It requires users to specify a base directory where all the step output will be stored in. It\nserializes and deserializes output values (assets) using pickling and stores the pickled object\nin the user-provided file paths.</p>\n<p>Example usage:</p>\n<div class=\"highlight-python notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"kn\">from</span> <span class=\"nn\">dagster</span> <span class=\"kn\">import</span> <span class=\"n\">custom_path_fs_io_manager</span><span class=\"p\">,</span> <span class=\"n\">job</span><span class=\"p\">,</span> <span class=\"n\">op</span>\n\n<span class=\"nd\">@op</span><span class=\"p\">(</span><span class=\"n\">out</span><span class=\"o\">=</span><span class=\"n\">Out</span><span class=\"p\">(</span><span class=\"n\">metadata</span><span class=\"o\">=</span><span class=\"p\">{</span><span class=\"s2\">&quot;path&quot;</span><span class=\"p\">:</span> <span class=\"s2\">&quot;path/to/sample_output&quot;</span><span class=\"p\">}))</span>\n<span class=\"k\">def</span> <span class=\"nf\">sample_data</span><span class=\"p\">(</span><span class=\"n\">df</span><span class=\"p\">):</span>\n    <span class=\"k\">return</span> <span class=\"n\">df</span><span class=\"p\">[:</span><span class=\"mi\">5</span><span class=\"p\">]</span>\n\n<span class=\"n\">my_custom_path_fs_io_manager</span> <span class=\"o\">=</span> <span class=\"n\">custom_path_fs_io_manager</span><span class=\"o\">.</span><span class=\"n\">configured</span><span class=\"p\">(</span>\n    <span class=\"p\">{</span><span class=\"s2\">&quot;base_dir&quot;</span><span class=\"p\">:</span> <span class=\"s2\">&quot;path/to/basedir&quot;</span><span class=\"p\">}</span>\n<span class=\"p\">)</span>\n\n<span class=\"nd\">@job</span><span class=\"p\">(</span><span class=\"n\">resource_defs</span><span class=\"o\">=</span><span class=\"p\">{</span><span class=\"s2\">&quot;io_manager&quot;</span><span class=\"p\">:</span> <span class=\"n\">my_custom_path_fs_io_manager</span><span class=\"p\">})</span>\n<span class=\"k\">def</span> <span class=\"nf\">my_job</span><span class=\"p\">():</span>\n    <span class=\"n\">sample_data</span><span class=\"p\">()</span>\n</pre></div>\n</div>\n</dd></dl>\n\n</div>\n<div class=\"section\" id=\"root-input-managers-experimental\">\n<h2>Root Input Managers (Experimental)<a class=\"headerlink\" href=\"#root-input-managers-experimental\" title=\"Permalink to this headline\">\u00b6</a></h2>\n<p>Root input managers are user-provided objects that specify how to load inputs that aren\u2019t connected\nto upstream outputs.</p>\n<dl class=\"py function\">\n<dt id=\"dagster.root_input_manager\">\n<code class=\"sig-prename descclassname\"><span class=\"pre\">&#64;</span></code><code class=\"sig-prename descclassname\"><span class=\"pre\">dagster.</span></code><code class=\"sig-name descname\"><span class=\"pre\">root_input_manager</span></code><span class=\"sig-paren\">(</span><em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">config_schema</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">None</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">description</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">None</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">input_config_schema</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">None</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">required_resource_keys</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">None</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">version</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">None</span></span></em><span class=\"sig-paren\">)</span><a class=\"reference internal\" href=\"../../../../_modules/dagster/core/storage/root_input_manager#root_input_manager\"><span class=\"viewcode-link\"><span class=\"pre\">[source]</span></span></a><a class=\"headerlink\" href=\"#dagster.root_input_manager\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Define a root input manager.</p>\n<p>Root input managers load op inputs that aren\u2019t connected to upstream outputs.</p>\n<p>The decorated function should accept a <a class=\"reference internal\" href=\"#dagster.InputContext\" title=\"dagster.InputContext\"><code class=\"xref py py-class docutils literal notranslate\"><span class=\"pre\">InputContext</span></code></a> and resource config, and return\na loaded object that will be passed into one of the inputs of an op.</p>\n<p>The decorator produces an <a class=\"reference internal\" href=\"#dagster.RootInputManagerDefinition\" title=\"dagster.RootInputManagerDefinition\"><code class=\"xref py py-class docutils literal notranslate\"><span class=\"pre\">RootInputManagerDefinition</span></code></a>.</p>\n<dl class=\"field-list simple\">\n<dt class=\"field-odd\">Parameters</dt>\n<dd class=\"field-odd\"><ul class=\"simple\">\n<li><p><strong>config_schema</strong> (<em>Optional</em><em>[</em><a class=\"reference internal\" href=\"config#dagster.ConfigSchema\" title=\"dagster.ConfigSchema\"><em>ConfigSchema</em></a><em>]</em>) \u2013 The schema for the resource-level config. If not\nset, Dagster will accept any config provided.</p></li>\n<li><p><strong>description</strong> (<em>Optional</em><em>[</em><a class=\"reference external\" href=\"https://docs.python.org/3/library/stdtypes.html#str\" title=\"(in Python v3.8)\"><em>str</em></a><em>]</em>) \u2013 A human-readable description of the resource.</p></li>\n<li><p><strong>input_config_schema</strong> (<em>Optional</em><em>[</em><a class=\"reference internal\" href=\"config#dagster.ConfigSchema\" title=\"dagster.ConfigSchema\"><em>ConfigSchema</em></a><em>]</em>) \u2013 A schema for the input-level config. Each\ninput that uses this input manager can be configured separately using this config.\nIf not set, Dagster will accept any config provided.</p></li>\n<li><p><strong>required_resource_keys</strong> (<em>Optional</em><em>[</em><em>Set</em><em>[</em><a class=\"reference external\" href=\"https://docs.python.org/3/library/stdtypes.html#str\" title=\"(in Python v3.8)\"><em>str</em></a><em>]</em><em>]</em>) \u2013 Keys for the resources required by the input\nmanager.</p></li>\n<li><p><strong>version</strong> (<em>Optional</em><em>[</em><a class=\"reference external\" href=\"https://docs.python.org/3/library/stdtypes.html#str\" title=\"(in Python v3.8)\"><em>str</em></a><em>]</em>) \u2013 (Experimental) the version of the input manager definition.</p></li>\n</ul>\n</dd>\n</dl>\n<p><strong>Examples:</strong></p>\n<div class=\"highlight-python notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"kn\">from</span> <span class=\"nn\">dagster</span> <span class=\"kn\">import</span> <span class=\"n\">root_input_manager</span><span class=\"p\">,</span> <span class=\"n\">op</span><span class=\"p\">,</span> <span class=\"n\">job</span><span class=\"p\">,</span> <span class=\"n\">In</span>\n\n<span class=\"nd\">@root_input_manager</span>\n<span class=\"k\">def</span> <span class=\"nf\">csv_loader</span><span class=\"p\">(</span><span class=\"n\">_</span><span class=\"p\">):</span>\n    <span class=\"k\">return</span> <span class=\"n\">read_csv</span><span class=\"p\">(</span><span class=\"s2\">&quot;some/path&quot;</span><span class=\"p\">)</span>\n\n<span class=\"nd\">@op</span><span class=\"p\">(</span><span class=\"n\">ins</span><span class=\"o\">=</span><span class=\"p\">{</span><span class=\"s2\">&quot;input1&quot;</span><span class=\"p\">:</span> <span class=\"n\">In</span><span class=\"p\">(</span><span class=\"n\">root_manager_key</span><span class=\"o\">=</span><span class=\"s2\">&quot;csv_loader_key&quot;</span><span class=\"p\">)})</span>\n<span class=\"k\">def</span> <span class=\"nf\">my_op</span><span class=\"p\">(</span><span class=\"n\">_</span><span class=\"p\">,</span> <span class=\"n\">input1</span><span class=\"p\">):</span>\n    <span class=\"n\">do_stuff</span><span class=\"p\">(</span><span class=\"n\">input1</span><span class=\"p\">)</span>\n\n<span class=\"nd\">@job</span><span class=\"p\">(</span><span class=\"n\">resource_defs</span><span class=\"o\">=</span><span class=\"p\">{</span><span class=\"s2\">&quot;csv_loader_key&quot;</span><span class=\"p\">:</span> <span class=\"n\">csv_loader</span><span class=\"p\">})</span>\n<span class=\"k\">def</span> <span class=\"nf\">my_job</span><span class=\"p\">():</span>\n    <span class=\"n\">my_op</span><span class=\"p\">()</span>\n\n<span class=\"nd\">@root_input_manager</span><span class=\"p\">(</span><span class=\"n\">config_schema</span><span class=\"o\">=</span><span class=\"p\">{</span><span class=\"s2\">&quot;base_dir&quot;</span><span class=\"p\">:</span> <span class=\"nb\">str</span><span class=\"p\">})</span>\n<span class=\"k\">def</span> <span class=\"nf\">csv_loader</span><span class=\"p\">(</span><span class=\"n\">context</span><span class=\"p\">):</span>\n    <span class=\"k\">return</span> <span class=\"n\">read_csv</span><span class=\"p\">(</span><span class=\"n\">context</span><span class=\"o\">.</span><span class=\"n\">resource_config</span><span class=\"p\">[</span><span class=\"s2\">&quot;base_dir&quot;</span><span class=\"p\">]</span> <span class=\"o\">+</span> <span class=\"s2\">&quot;/some/path&quot;</span><span class=\"p\">)</span>\n\n<span class=\"nd\">@root_input_manager</span><span class=\"p\">(</span><span class=\"n\">input_config_schema</span><span class=\"o\">=</span><span class=\"p\">{</span><span class=\"s2\">&quot;path&quot;</span><span class=\"p\">:</span> <span class=\"nb\">str</span><span class=\"p\">})</span>\n<span class=\"k\">def</span> <span class=\"nf\">csv_loader</span><span class=\"p\">(</span><span class=\"n\">context</span><span class=\"p\">):</span>\n    <span class=\"k\">return</span> <span class=\"n\">read_csv</span><span class=\"p\">(</span><span class=\"n\">context</span><span class=\"o\">.</span><span class=\"n\">config</span><span class=\"p\">[</span><span class=\"s2\">&quot;path&quot;</span><span class=\"p\">])</span>\n</pre></div>\n</div>\n</dd></dl>\n\n<dl class=\"py class\">\n<dt id=\"dagster.RootInputManager\">\n<em class=\"property\"><span class=\"pre\">class</span> </em><code class=\"sig-prename descclassname\"><span class=\"pre\">dagster.</span></code><code class=\"sig-name descname\"><span class=\"pre\">RootInputManager</span></code><a class=\"reference internal\" href=\"../../../../_modules/dagster/core/storage/root_input_manager#RootInputManager\"><span class=\"viewcode-link\"><span class=\"pre\">[source]</span></span></a><a class=\"headerlink\" href=\"#dagster.RootInputManager\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>RootInputManagers are used to load inputs to ops at the root of a job.</p>\n<p>The easiest way to define an RootInputManager is with the\n<a class=\"reference internal\" href=\"#dagster.root_input_manager\" title=\"dagster.root_input_manager\"><code class=\"xref py py-func docutils literal notranslate\"><span class=\"pre\">&#64;root_input_manager</span></code></a> decorator.</p>\n<dl class=\"py method\">\n<dt id=\"dagster.RootInputManager.load_input\">\n<em class=\"property\"><span class=\"pre\">abstract</span> </em><code class=\"sig-name descname\"><span class=\"pre\">load_input</span></code><span class=\"sig-paren\">(</span><em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">context</span></span></em><span class=\"sig-paren\">)</span><a class=\"reference internal\" href=\"../../../../_modules/dagster/core/storage/root_input_manager#RootInputManager.load_input\"><span class=\"viewcode-link\"><span class=\"pre\">[source]</span></span></a><a class=\"headerlink\" href=\"#dagster.RootInputManager.load_input\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>The user-defined read method that loads data given its metadata.</p>\n<dl class=\"field-list simple\">\n<dt class=\"field-odd\">Parameters</dt>\n<dd class=\"field-odd\"><p><strong>context</strong> (<a class=\"reference internal\" href=\"#dagster.InputContext\" title=\"dagster.InputContext\"><em>InputContext</em></a>) \u2013 The context of the step output that produces this asset.</p>\n</dd>\n<dt class=\"field-even\">Returns</dt>\n<dd class=\"field-even\"><p>The data object.</p>\n</dd>\n<dt class=\"field-odd\">Return type</dt>\n<dd class=\"field-odd\"><p>Any</p>\n</dd>\n</dl>\n</dd></dl>\n\n</dd></dl>\n\n<dl class=\"py class\">\n<dt id=\"dagster.RootInputManagerDefinition\">\n<em class=\"property\"><span class=\"pre\">class</span> </em><code class=\"sig-prename descclassname\"><span class=\"pre\">dagster.</span></code><code class=\"sig-name descname\"><span class=\"pre\">RootInputManagerDefinition</span></code><span class=\"sig-paren\">(</span><em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">resource_fn</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">None</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">config_schema</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">None</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">description</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">None</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">input_config_schema</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">None</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">required_resource_keys</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">None</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">version</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">None</span></span></em><span class=\"sig-paren\">)</span><a class=\"reference internal\" href=\"../../../../_modules/dagster/core/storage/root_input_manager#RootInputManagerDefinition\"><span class=\"viewcode-link\"><span class=\"pre\">[source]</span></span></a><a class=\"headerlink\" href=\"#dagster.RootInputManagerDefinition\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Definition of a root input manager resource.</p>\n<p>Root input managers load op inputs that aren\u2019t connected to upstream outputs.</p>\n<p>An RootInputManagerDefinition is a <a class=\"reference internal\" href=\"resources#dagster.ResourceDefinition\" title=\"dagster.ResourceDefinition\"><code class=\"xref py py-class docutils literal notranslate\"><span class=\"pre\">ResourceDefinition</span></code></a> whose resource_fn returns an\n<a class=\"reference internal\" href=\"#dagster.RootInputManager\" title=\"dagster.RootInputManager\"><code class=\"xref py py-class docutils literal notranslate\"><span class=\"pre\">RootInputManager</span></code></a>.</p>\n<p>The easiest way to create an RootInputManagerDefinition is with the\n<a class=\"reference internal\" href=\"#dagster.root_input_manager\" title=\"dagster.root_input_manager\"><code class=\"xref py py-func docutils literal notranslate\"><span class=\"pre\">&#64;root_input_manager</span></code></a> decorator.</p>\n<dl class=\"py method\">\n<dt id=\"dagster.RootInputManagerDefinition.input_config_schema\">\n<em class=\"property\"><span class=\"pre\">property</span> </em><code class=\"sig-name descname\"><span class=\"pre\">input_config_schema</span></code><a class=\"headerlink\" href=\"#dagster.RootInputManagerDefinition.input_config_schema\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>The schema for per-input configuration for inputs that are managed by this\ninput manager</p>\n</dd></dl>\n\n</dd></dl>\n\n</div>\n</div>\n", "current_page_name": "sections/api/apidocs/io-managers", "customsidebar": null, "display_toc": true, "meta": null, "metatags": "", "next": {"link": "../partitions/", "title": "Partitioned Config"}, "page_source_suffix": ".rst", "parents": [], "prev": {"link": "../ops/", "title": "Ops"}, "rellinks": [["genindex", "General Index", "I", "index"], ["py-modindex", "Python Module Index", "", "modules"], ["sections/api/apidocs/partitions", "Partitioned Config", "N", "next"], ["sections/api/apidocs/ops", "Ops", "P", "previous"]], "sidebars": ["globaltoc.html", "searchbox.html"], "sourcename": "sections/api/apidocs/io-managers.rst.txt", "title": "IO Managers", "toc": "<ul>\n<li><a class=\"reference internal\" href=\"#\">IO Managers</a><ul>\n<li><a class=\"reference internal\" href=\"#input-and-output-contexts\">Input and Output Contexts</a></li>\n<li><a class=\"reference internal\" href=\"#built-in-io-managers\">Built-in IO Managers</a></li>\n<li><a class=\"reference internal\" href=\"#root-input-managers-experimental\">Root Input Managers (Experimental)</a></li>\n</ul>\n</li>\n</ul>\n"}, "jobs": {"alabaster_version": "0.7.12", "body": "<div class=\"section\" id=\"jobs\">\n<h1>Jobs<a class=\"headerlink\" href=\"#jobs\" title=\"Permalink to this headline\">\u00b6</a></h1>\n<p>A <code class=\"docutils literal notranslate\"><span class=\"pre\">Job</span></code> binds a <code class=\"docutils literal notranslate\"><span class=\"pre\">Graph</span></code> and the resources it needs to be executable.</p>\n<p>Jobs are created by calling <code class=\"xref py py-meth docutils literal notranslate\"><span class=\"pre\">GraphDefinition.to_job()</span></code> on a graph instance, or using the <code class=\"xref py py-class docutils literal notranslate\"><span class=\"pre\">job</span></code> decorator.</p>\n<dl class=\"py function\">\n<dt id=\"dagster.job\">\n<code class=\"sig-prename descclassname\"><span class=\"pre\">&#64;</span></code><code class=\"sig-prename descclassname\"><span class=\"pre\">dagster.</span></code><code class=\"sig-name descname\"><span class=\"pre\">job</span></code><span class=\"sig-paren\">(</span><em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">name</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">None</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">description</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">None</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">resource_defs</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">None</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">config</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">None</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">tags</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">None</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">metadata</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">None</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">logger_defs</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">None</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">executor_def</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">None</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">hooks</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">None</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">op_retry_policy</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">None</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">version_strategy</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">None</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">partitions_def</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">None</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">input_values</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">None</span></span></em><span class=\"sig-paren\">)</span><a class=\"reference internal\" href=\"../../../../_modules/dagster/core/definitions/decorators/job_decorator#job\"><span class=\"viewcode-link\"><span class=\"pre\">[source]</span></span></a><a class=\"headerlink\" href=\"#dagster.job\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Creates a job with the specified parameters from the decorated graph/op invocation function.</p>\n<p>Using this decorator allows you to build an executable job by writing a function that invokes\nops (or graphs).</p>\n<dl class=\"field-list simple\">\n<dt class=\"field-odd\">Parameters</dt>\n<dd class=\"field-odd\"><ul class=\"simple\">\n<li><p><strong>name</strong> (<em>Optional</em><em>[</em><a class=\"reference external\" href=\"https://docs.python.org/3/library/stdtypes.html#str\" title=\"(in Python v3.8)\"><em>str</em></a><em>]</em>) \u2013 The name for the Job. Defaults to the name of the this graph.</p></li>\n<li><p><strong>resource_defs</strong> (<em>Optional</em><em>[</em><em>Mapping</em><em>[</em><a class=\"reference external\" href=\"https://docs.python.org/3/library/stdtypes.html#str\" title=\"(in Python v3.8)\"><em>str</em></a><em>, </em><a class=\"reference internal\" href=\"resources#dagster.ResourceDefinition\" title=\"dagster.ResourceDefinition\"><em>ResourceDefinition</em></a><em>]</em><em>]</em>) \u2013 Resources that are required by this graph for execution.\nIf not defined, <cite>io_manager</cite> will default to filesystem.</p></li>\n<li><p><strong>config</strong> \u2013 <p>Describes how the job is parameterized at runtime.</p>\n<p>If no value is provided, then the schema for the job\u2019s run config is a standard\nformat based on its ops and resources.</p>\n<p>If a dictionary is provided, then it must conform to the standard config schema, and\nit will be used as the job\u2019s run config for the job whenever the job is executed.\nThe values provided will be viewable and editable in the Dagit playground, so be\ncareful with secrets.</p>\n<p>If a <a class=\"reference internal\" href=\"config#dagster.ConfigMapping\" title=\"dagster.ConfigMapping\"><code class=\"xref py py-class docutils literal notranslate\"><span class=\"pre\">ConfigMapping</span></code></a> object is provided, then the schema for the job\u2019s run config is\ndetermined by the config mapping, and the ConfigMapping, which should return\nconfiguration in the standard format to configure the job.</p>\n<p>If a <a class=\"reference internal\" href=\"partitions#dagster.PartitionedConfig\" title=\"dagster.PartitionedConfig\"><code class=\"xref py py-class docutils literal notranslate\"><span class=\"pre\">PartitionedConfig</span></code></a> object is provided, then it defines a discrete set of config\nvalues that can parameterize the pipeline, as well as a function for mapping those\nvalues to the base config. The values provided will be viewable and editable in the\nDagit playground, so be careful with secrets.</p>\n</p></li>\n<li><p><strong>tags</strong> (<em>Optional</em><em>[</em><em>Dict</em><em>[</em><a class=\"reference external\" href=\"https://docs.python.org/3/library/stdtypes.html#str\" title=\"(in Python v3.8)\"><em>str</em></a><em>, </em><em>Any</em><em>]</em><em>]</em>) \u2013 Arbitrary information that will be attached to the execution of the Job.\nValues that are not strings will be json encoded and must meet the criteria that\n<cite>json.loads(json.dumps(value)) == value</cite>.  These tag values may be overwritten by tag\nvalues provided at invocation time.</p></li>\n<li><p><strong>metadata</strong> (<em>Optional</em><em>[</em><em>Dict</em><em>[</em><a class=\"reference external\" href=\"https://docs.python.org/3/library/stdtypes.html#str\" title=\"(in Python v3.8)\"><em>str</em></a><em>, </em><em>RawMetadataValue</em><em>]</em><em>]</em>) \u2013 Arbitrary information that will be attached to the JobDefinition and be viewable in Dagit.\nKeys must be strings, and values must be python primitive types or one of the provided\nMetadataValue types</p></li>\n<li><p><strong>logger_defs</strong> (<em>Optional</em><em>[</em><em>Dict</em><em>[</em><a class=\"reference external\" href=\"https://docs.python.org/3/library/stdtypes.html#str\" title=\"(in Python v3.8)\"><em>str</em></a><em>, </em><a class=\"reference internal\" href=\"loggers#dagster.LoggerDefinition\" title=\"dagster.LoggerDefinition\"><em>LoggerDefinition</em></a><em>]</em><em>]</em>) \u2013 A dictionary of string logger identifiers to their implementations.</p></li>\n<li><p><strong>executor_def</strong> (<em>Optional</em><em>[</em><a class=\"reference internal\" href=\"internals#dagster.ExecutorDefinition\" title=\"dagster.ExecutorDefinition\"><em>ExecutorDefinition</em></a><em>]</em>) \u2013 How this Job will be executed. Defaults to <a class=\"reference internal\" href=\"execution#dagster.multiprocess_executor\" title=\"dagster.multiprocess_executor\"><code class=\"xref py py-class docutils literal notranslate\"><span class=\"pre\">multiprocess_executor</span></code></a> .</p></li>\n<li><p><strong>op_retry_policy</strong> (<em>Optional</em><em>[</em><a class=\"reference internal\" href=\"ops#dagster.RetryPolicy\" title=\"dagster.RetryPolicy\"><em>RetryPolicy</em></a><em>]</em>) \u2013 The default retry policy for all ops in this job.\nOnly used if retry policy is not defined on the op definition or op invocation.</p></li>\n<li><p><strong>version_strategy</strong> (<em>Optional</em><em>[</em><a class=\"reference internal\" href=\"memoization#dagster.VersionStrategy\" title=\"dagster.VersionStrategy\"><em>VersionStrategy</em></a><em>]</em>) \u2013 Defines how each op (and optionally, resource) in the job can be versioned. If\nprovided, memoization will be enabled for this job.</p></li>\n<li><p><strong>partitions_def</strong> (<em>Optional</em><em>[</em><a class=\"reference internal\" href=\"partitions#dagster.PartitionsDefinition\" title=\"dagster.PartitionsDefinition\"><em>PartitionsDefinition</em></a><em>]</em>) \u2013 Defines a discrete set of partition keys\nthat can parameterize the job. If this argument is supplied, the config argument\ncan\u2019t also be supplied.</p></li>\n<li><p><strong>input_values</strong> (<em>Optional</em><em>[</em><em>Mapping</em><em>[</em><a class=\"reference external\" href=\"https://docs.python.org/3/library/stdtypes.html#str\" title=\"(in Python v3.8)\"><em>str</em></a><em>, </em><em>Any</em><em>]</em><em>]</em>) \u2013 A dictionary that maps python objects to the top-level inputs of a job.</p></li>\n</ul>\n</dd>\n</dl>\n</dd></dl>\n\n<dl class=\"py class\">\n<dt id=\"dagster.JobDefinition\">\n<em class=\"property\"><span class=\"pre\">class</span> </em><code class=\"sig-prename descclassname\"><span class=\"pre\">dagster.</span></code><code class=\"sig-name descname\"><span class=\"pre\">JobDefinition</span></code><span class=\"sig-paren\">(</span><em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">graph_def</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">resource_defs</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">None</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">executor_def</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">None</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">logger_defs</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">None</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">config_mapping</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">None</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">partitioned_config</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">None</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">name</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">None</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">description</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">None</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">preset_defs</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">None</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">tags</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">None</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">metadata</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">None</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">hook_defs</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">None</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">op_retry_policy</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">None</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">version_strategy</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">None</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">_subset_selection_data</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">None</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">asset_layer</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">None</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">_input_values</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">None</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">_metadata_entries</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">None</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">_executor_def_specified</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">False</span></span></em><span class=\"sig-paren\">)</span><a class=\"reference internal\" href=\"../../../../_modules/dagster/core/definitions/job_definition#JobDefinition\"><span class=\"viewcode-link\"><span class=\"pre\">[source]</span></span></a><a class=\"headerlink\" href=\"#dagster.JobDefinition\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><dl class=\"py method\">\n<dt id=\"dagster.JobDefinition.execute_in_process\">\n<code class=\"sig-name descname\"><span class=\"pre\">execute_in_process</span></code><span class=\"sig-paren\">(</span><em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">run_config</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">None</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">instance</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">None</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">partition_key</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">None</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">raise_on_error</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">True</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">op_selection</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">None</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">asset_selection</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">None</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">run_id</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">None</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">input_values</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">None</span></span></em><span class=\"sig-paren\">)</span><a class=\"reference internal\" href=\"../../../../_modules/dagster/core/definitions/job_definition#JobDefinition.execute_in_process\"><span class=\"viewcode-link\"><span class=\"pre\">[source]</span></span></a><a class=\"headerlink\" href=\"#dagster.JobDefinition.execute_in_process\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Execute the Job in-process, gathering results in-memory.</p>\n<p>The <cite>executor_def</cite> on the Job will be ignored, and replaced with the in-process executor.\nIf using the default <cite>io_manager</cite>, it will switch from filesystem to in-memory.</p>\n<dl class=\"field-list simple\">\n<dt class=\"field-odd\">Parameters</dt>\n<dd class=\"field-odd\"><ul class=\"simple\">\n<li><p><strong>(</strong><strong>Optional</strong><strong>[</strong><strong>Dict</strong><strong>[</strong><strong>str</strong> (<em>run_config</em>) \u2013 The configuration for the run</p></li>\n<li><p><strong>Any</strong><strong>]</strong><strong>]</strong> \u2013 The configuration for the run</p></li>\n<li><p><strong>instance</strong> (<em>Optional</em><em>[</em><a class=\"reference internal\" href=\"internals#dagster.DagsterInstance\" title=\"dagster.DagsterInstance\"><em>DagsterInstance</em></a><em>]</em>) \u2013 The instance to execute against, an ephemeral one will be used if none provided.</p></li>\n<li><p><strong>partition_key</strong> \u2013 (Optional[str])\nThe string partition key that specifies the run config to execute. Can only be used\nto select run config for jobs with partitioned config.</p></li>\n<li><p><strong>raise_on_error</strong> (<em>Optional</em><em>[</em><a class=\"reference external\" href=\"https://docs.python.org/3/library/functions.html#bool\" title=\"(in Python v3.8)\"><em>bool</em></a><em>]</em>) \u2013 Whether or not to raise exceptions when they occur.\nDefaults to <code class=\"docutils literal notranslate\"><span class=\"pre\">True</span></code>.</p></li>\n<li><p><strong>op_selection</strong> (<em>Optional</em><em>[</em><em>List</em><em>[</em><a class=\"reference external\" href=\"https://docs.python.org/3/library/stdtypes.html#str\" title=\"(in Python v3.8)\"><em>str</em></a><em>]</em><em>]</em>) \u2013 A list of op selection queries (including single op\nnames) to execute. For example:\n* <code class=\"docutils literal notranslate\"><span class=\"pre\">['some_op']</span></code>: selects <code class=\"docutils literal notranslate\"><span class=\"pre\">some_op</span></code> itself.\n* <code class=\"docutils literal notranslate\"><span class=\"pre\">['*some_op']</span></code>: select <code class=\"docutils literal notranslate\"><span class=\"pre\">some_op</span></code> and all its ancestors (upstream dependencies).\n* <code class=\"docutils literal notranslate\"><span class=\"pre\">['*some_op+++']</span></code>: select <code class=\"docutils literal notranslate\"><span class=\"pre\">some_op</span></code>, all its ancestors, and its descendants\n(downstream dependencies) within 3 levels down.\n* <code class=\"docutils literal notranslate\"><span class=\"pre\">['*some_op',</span> <span class=\"pre\">'other_op_a',</span> <span class=\"pre\">'other_op_b+']</span></code>: select <code class=\"docutils literal notranslate\"><span class=\"pre\">some_op</span></code> and all its\nancestors, <code class=\"docutils literal notranslate\"><span class=\"pre\">other_op_a</span></code> itself, and <code class=\"docutils literal notranslate\"><span class=\"pre\">other_op_b</span></code> and its direct child ops.</p></li>\n<li><p><strong>input_values</strong> (<em>Optional</em><em>[</em><em>Mapping</em><em>[</em><a class=\"reference external\" href=\"https://docs.python.org/3/library/stdtypes.html#str\" title=\"(in Python v3.8)\"><em>str</em></a><em>, </em><em>Any</em><em>]</em><em>]</em>) \u2013 A dictionary that maps python objects to the top-level inputs of the job. Input values provided here will override input values that have been provided to the job directly.</p></li>\n</ul>\n</dd>\n<dt class=\"field-even\">Returns</dt>\n<dd class=\"field-even\"><p><a class=\"reference internal\" href=\"execution#dagster.ExecuteInProcessResult\" title=\"dagster.ExecuteInProcessResult\"><code class=\"xref py py-class docutils literal notranslate\"><span class=\"pre\">ExecuteInProcessResult</span></code></a></p>\n</dd>\n</dl>\n</dd></dl>\n\n<dl class=\"py method\">\n<dt id=\"dagster.JobDefinition.with_hooks\">\n<code class=\"sig-name descname\"><span class=\"pre\">with_hooks</span></code><span class=\"sig-paren\">(</span><em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">hook_defs</span></span></em><span class=\"sig-paren\">)</span><a class=\"reference internal\" href=\"../../../../_modules/dagster/core/definitions/job_definition#JobDefinition.with_hooks\"><span class=\"viewcode-link\"><span class=\"pre\">[source]</span></span></a><a class=\"headerlink\" href=\"#dagster.JobDefinition.with_hooks\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Apply a set of hooks to all op instances within the job.</p>\n</dd></dl>\n\n</dd></dl>\n\n<div class=\"section\" id=\"reconstructable-jobs\">\n<h2>Reconstructable jobs<a class=\"headerlink\" href=\"#reconstructable-jobs\" title=\"Permalink to this headline\">\u00b6</a></h2>\n<dl class=\"py class\">\n<dt>\n<em class=\"property\"><span class=\"pre\">class</span> </em><code class=\"sig-prename descclassname\"><span class=\"pre\">dagster.</span></code><code class=\"sig-name descname\"><span class=\"pre\">reconstructable</span></code><span class=\"sig-paren\">(</span><em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">target</span></span></em><span class=\"sig-paren\">)</span><a class=\"reference internal\" href=\"../../../../_modules/dagster/core/definitions/reconstruct#reconstructable\"><span class=\"viewcode-link\"><span class=\"pre\">[source]</span></span></a></dt>\n<dd><p>Create a <code class=\"xref py py-class docutils literal notranslate\"><span class=\"pre\">ReconstructablePipeline</span></code> from a\nfunction that returns a <a class=\"reference internal\" href=\"pipeline#dagster.PipelineDefinition\" title=\"dagster.PipelineDefinition\"><code class=\"xref py py-class docutils literal notranslate\"><span class=\"pre\">PipelineDefinition</span></code></a>/<a class=\"reference internal\" href=\"#dagster.JobDefinition\" title=\"dagster.JobDefinition\"><code class=\"xref py py-class docutils literal notranslate\"><span class=\"pre\">JobDefinition</span></code></a>,\nor a function decorated with <a class=\"reference internal\" href=\"pipeline#dagster.pipeline\" title=\"dagster.pipeline\"><code class=\"xref py py-func docutils literal notranslate\"><span class=\"pre\">&#64;pipeline</span></code></a>/<a class=\"reference internal\" href=\"#dagster.job\" title=\"dagster.job\"><code class=\"xref py py-func docutils literal notranslate\"><span class=\"pre\">&#64;job</span></code></a>.</p>\n<p>When your pipeline/job must cross process boundaries, e.g., for execution on multiple nodes or\nin different systems (like <code class=\"docutils literal notranslate\"><span class=\"pre\">dagstermill</span></code>), Dagster must know how to reconstruct the pipeline/job\non the other side of the process boundary.</p>\n<p>Passing a job created with <code class=\"docutils literal notranslate\"><span class=\"pre\">~dagster.GraphDefinition.to_job</span></code> to <code class=\"docutils literal notranslate\"><span class=\"pre\">reconstructable()</span></code>,\nrequires you to wrap that job\u2019s definition in a module-scoped function, and pass that function\ninstead:</p>\n<div class=\"highlight-python notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"kn\">from</span> <span class=\"nn\">dagster</span> <span class=\"kn\">import</span> <span class=\"n\">graph</span><span class=\"p\">,</span> <span class=\"n\">reconstructable</span>\n\n<span class=\"nd\">@graph</span>\n<span class=\"k\">def</span> <span class=\"nf\">my_graph</span><span class=\"p\">():</span>\n    <span class=\"o\">...</span>\n\n<span class=\"k\">def</span> <span class=\"nf\">define_my_job</span><span class=\"p\">():</span>\n    <span class=\"k\">return</span> <span class=\"n\">my_graph</span><span class=\"o\">.</span><span class=\"n\">to_job</span><span class=\"p\">()</span>\n\n<span class=\"n\">reconstructable</span><span class=\"p\">(</span><span class=\"n\">define_my_job</span><span class=\"p\">)</span>\n</pre></div>\n</div>\n<p>This function implements a very conservative strategy for reconstruction, so that its behavior\nis easy to predict, but as a consequence it is not able to reconstruct certain kinds of pipelines\nor jobs, such as those defined by lambdas, in nested scopes (e.g., dynamically within a method\ncall), or in interactive environments such as the Python REPL or Jupyter notebooks.</p>\n<p>If you need to reconstruct objects constructed in these ways, you should use\n<code class=\"xref py py-func docutils literal notranslate\"><span class=\"pre\">build_reconstructable_job()</span></code> instead, which allows you to\nspecify your own reconstruction strategy.</p>\n<p>Examples:</p>\n<div class=\"highlight-python notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"kn\">from</span> <span class=\"nn\">dagster</span> <span class=\"kn\">import</span> <span class=\"n\">job</span><span class=\"p\">,</span> <span class=\"n\">reconstructable</span>\n\n<span class=\"nd\">@job</span>\n<span class=\"k\">def</span> <span class=\"nf\">foo_job</span><span class=\"p\">():</span>\n    <span class=\"o\">...</span>\n\n<span class=\"n\">reconstructable_foo_job</span> <span class=\"o\">=</span> <span class=\"n\">reconstructable</span><span class=\"p\">(</span><span class=\"n\">foo_job</span><span class=\"p\">)</span>\n\n\n<span class=\"nd\">@graph</span>\n<span class=\"k\">def</span> <span class=\"nf\">foo</span><span class=\"p\">():</span>\n    <span class=\"o\">...</span>\n\n<span class=\"k\">def</span> <span class=\"nf\">make_bar_job</span><span class=\"p\">():</span>\n    <span class=\"k\">return</span> <span class=\"n\">foo</span><span class=\"o\">.</span><span class=\"n\">to_job</span><span class=\"p\">()</span>\n\n<span class=\"n\">reconstructable_bar_job</span> <span class=\"o\">=</span> <span class=\"n\">reconstructable</span><span class=\"p\">(</span><span class=\"n\">make_bar_job</span><span class=\"p\">)</span>\n</pre></div>\n</div>\n</dd></dl>\n\n<dl class=\"py function\">\n<dt id=\"dagster.build_reconstructable_job\">\n<code class=\"sig-prename descclassname\"><span class=\"pre\">dagster.</span></code><code class=\"sig-name descname\"><span class=\"pre\">build_reconstructable_job</span></code><span class=\"sig-paren\">(</span><em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">reconstructor_module_name</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">reconstructor_function_name</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">reconstructable_args</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">None</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">reconstructable_kwargs</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">None</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">reconstructor_working_directory</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">None</span></span></em><span class=\"sig-paren\">)</span><a class=\"reference internal\" href=\"../../../../_modules/dagster/core/definitions/reconstruct#build_reconstructable_job\"><span class=\"viewcode-link\"><span class=\"pre\">[source]</span></span></a><a class=\"headerlink\" href=\"#dagster.build_reconstructable_job\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Create a <code class=\"xref py py-class docutils literal notranslate\"><span class=\"pre\">dagster.core.definitions.reconstructable.ReconstructablePipeline</span></code>.</p>\n<p>When your job must cross process boundaries, e.g., for execution on multiple nodes or in\ndifferent systems (like <code class=\"docutils literal notranslate\"><span class=\"pre\">dagstermill</span></code>), Dagster must know how to reconstruct the job\non the other side of the process boundary.</p>\n<p>This function allows you to use the strategy of your choice for reconstructing jobs, so\nthat you can reconstruct certain kinds of jobs that are not supported by\n<a class=\"reference internal\" href=\"execution#dagster.reconstructable\" title=\"dagster.reconstructable\"><code class=\"xref py py-func docutils literal notranslate\"><span class=\"pre\">reconstructable()</span></code></a>, such as those defined by lambdas, in nested scopes (e.g.,\ndynamically within a method call), or in interactive environments such as the Python REPL or\nJupyter notebooks.</p>\n<p>If you need to reconstruct jobs constructed in these ways, use this function instead of\n<a class=\"reference internal\" href=\"execution#dagster.reconstructable\" title=\"dagster.reconstructable\"><code class=\"xref py py-func docutils literal notranslate\"><span class=\"pre\">reconstructable()</span></code></a>.</p>\n<dl class=\"field-list simple\">\n<dt class=\"field-odd\">Parameters</dt>\n<dd class=\"field-odd\"><ul class=\"simple\">\n<li><p><strong>reconstructor_module_name</strong> (<a class=\"reference external\" href=\"https://docs.python.org/3/library/stdtypes.html#str\" title=\"(in Python v3.8)\"><em>str</em></a>) \u2013 The name of the module containing the function to use to\nreconstruct the job.</p></li>\n<li><p><strong>reconstructor_function_name</strong> (<a class=\"reference external\" href=\"https://docs.python.org/3/library/stdtypes.html#str\" title=\"(in Python v3.8)\"><em>str</em></a>) \u2013 The name of the function to use to reconstruct the\njob.</p></li>\n<li><p><strong>reconstructable_args</strong> (<em>Tuple</em>) \u2013 Args to the function to use to reconstruct the job.\nValues of the tuple must be JSON serializable.</p></li>\n<li><p><strong>reconstructable_kwargs</strong> (<em>Dict</em><em>[</em><a class=\"reference external\" href=\"https://docs.python.org/3/library/stdtypes.html#str\" title=\"(in Python v3.8)\"><em>str</em></a><em>, </em><em>Any</em><em>]</em>) \u2013 Kwargs to the function to use to reconstruct the\njob. Values of the dict must be JSON serializable.</p></li>\n</ul>\n</dd>\n</dl>\n<p>Examples:</p>\n<div class=\"highlight-python notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"c1\"># module: mymodule</span>\n\n<span class=\"kn\">from</span> <span class=\"nn\">dagster</span> <span class=\"kn\">import</span> <span class=\"n\">JobDefinition</span><span class=\"p\">,</span> <span class=\"n\">job</span><span class=\"p\">,</span> <span class=\"n\">build_reconstructable_job</span>\n\n<span class=\"k\">class</span> <span class=\"nc\">JobFactory</span><span class=\"p\">:</span>\n    <span class=\"k\">def</span> <span class=\"nf\">make_job</span><span class=\"p\">(</span><span class=\"o\">*</span><span class=\"n\">args</span><span class=\"p\">,</span> <span class=\"o\">**</span><span class=\"n\">kwargs</span><span class=\"p\">):</span>\n\n        <span class=\"nd\">@job</span>\n        <span class=\"k\">def</span> <span class=\"nf\">_job</span><span class=\"p\">(</span><span class=\"o\">...</span><span class=\"p\">):</span>\n            <span class=\"o\">...</span>\n\n        <span class=\"k\">return</span> <span class=\"n\">_job</span>\n\n<span class=\"k\">def</span> <span class=\"nf\">reconstruct_job</span><span class=\"p\">(</span><span class=\"o\">*</span><span class=\"n\">args</span><span class=\"p\">):</span>\n    <span class=\"n\">factory</span> <span class=\"o\">=</span> <span class=\"n\">JobFactory</span><span class=\"p\">()</span>\n    <span class=\"k\">return</span> <span class=\"n\">factory</span><span class=\"o\">.</span><span class=\"n\">make_job</span><span class=\"p\">(</span><span class=\"o\">*</span><span class=\"n\">args</span><span class=\"p\">)</span>\n\n<span class=\"n\">factory</span> <span class=\"o\">=</span> <span class=\"n\">JobFactory</span><span class=\"p\">()</span>\n\n<span class=\"n\">foo_job_args</span> <span class=\"o\">=</span> <span class=\"p\">(</span><span class=\"o\">...</span><span class=\"p\">,</span><span class=\"o\">...</span><span class=\"p\">)</span>\n\n<span class=\"n\">foo_job_kwargs</span> <span class=\"o\">=</span> <span class=\"p\">{</span><span class=\"o\">...</span><span class=\"p\">:</span><span class=\"o\">...</span><span class=\"p\">}</span>\n\n<span class=\"n\">foo_job</span> <span class=\"o\">=</span> <span class=\"n\">factory</span><span class=\"o\">.</span><span class=\"n\">make_job</span><span class=\"p\">(</span><span class=\"o\">*</span><span class=\"n\">foo_job_args</span><span class=\"p\">,</span> <span class=\"o\">**</span><span class=\"n\">foo_job_kwargs</span><span class=\"p\">)</span>\n\n<span class=\"n\">reconstructable_foo_job</span> <span class=\"o\">=</span> <span class=\"n\">build_reconstructable_job</span><span class=\"p\">(</span>\n    <span class=\"s1\">&#39;mymodule&#39;</span><span class=\"p\">,</span>\n    <span class=\"s1\">&#39;reconstruct_job&#39;</span><span class=\"p\">,</span>\n    <span class=\"n\">foo_job_args</span><span class=\"p\">,</span>\n    <span class=\"n\">foo_job_kwargs</span><span class=\"p\">,</span>\n<span class=\"p\">)</span>\n</pre></div>\n</div>\n</dd></dl>\n\n</div>\n</div>\n", "current_page_name": "sections/api/apidocs/jobs", "customsidebar": null, "display_toc": true, "meta": null, "metatags": "", "next": {"link": "../loggers/", "title": "Loggers"}, "page_source_suffix": ".rst", "parents": [], "prev": {"link": "../internals/", "title": "Internals"}, "rellinks": [["genindex", "General Index", "I", "index"], ["py-modindex", "Python Module Index", "", "modules"], ["sections/api/apidocs/loggers", "Loggers", "N", "next"], ["sections/api/apidocs/internals", "Internals", "P", "previous"]], "sidebars": ["globaltoc.html", "searchbox.html"], "sourcename": "sections/api/apidocs/jobs.rst.txt", "title": "Jobs", "toc": "<ul>\n<li><a class=\"reference internal\" href=\"#\">Jobs</a><ul>\n<li><a class=\"reference internal\" href=\"#reconstructable-jobs\">Reconstructable jobs</a></li>\n</ul>\n</li>\n</ul>\n"}, "libraries": {"dagster-airbyte": {"alabaster_version": "0.7.12", "body": "<div class=\"section\" id=\"airbyte-dagster-airbyte\">\n<h1>Airbyte (dagster-airbyte)<a class=\"headerlink\" href=\"#airbyte-dagster-airbyte\" title=\"Permalink to this headline\">\u00b6</a></h1>\n<p>This library provides a Dagster integration with <a class=\"reference external\" href=\"https://www.airbyte.com/\">Airbyte</a>.</p>\n<div class=\"section\" id=\"ops\">\n<h2>Ops<a class=\"headerlink\" href=\"#ops\" title=\"Permalink to this headline\">\u00b6</a></h2>\n<dl class=\"py data\">\n<dt id=\"dagster_airbyte.airbyte_sync_op\">\n<code class=\"sig-prename descclassname\"><span class=\"pre\">dagster_airbyte.</span></code><code class=\"sig-name descname\"><span class=\"pre\">airbyte_sync_op</span></code><em class=\"property\"> <span class=\"pre\">=</span> <span class=\"pre\">&lt;dagster.core.definitions.op_definition.OpDefinition</span> <span class=\"pre\">object&gt;</span></em><a class=\"reference internal\" href=\"../../../../../_modules/dagster_airbyte/ops#airbyte_sync_op\"><span class=\"viewcode-link\"><span class=\"pre\">[source]</span></span></a><a class=\"headerlink\" href=\"#dagster_airbyte.airbyte_sync_op\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><div class=\"line-block\">\n<div class=\"line\"><br /></div>\n</div>\n<details class=\"summary-config-schema\">\n<summary>Config Schema:</summary><dl class=\"field-list\">\n<dt class=\"field-odd\">connection_id (String)</dt>\n<dd class=\"field-odd\"><p>The Airbyte Connection ID that this op will sync. You can retrieve this value from the \u201cConnections\u201d tab of a given connector in the Airbyte UI.</p>\n</dd>\n<dt class=\"field-even\">poll_interval (Float, optional)</dt>\n<dd class=\"field-even\"><p>The time (in seconds) that will be waited between successive polls.</p>\n<p><strong>Default Value:</strong> 10</p>\n</dd>\n<dt class=\"field-odd\">poll_timeout (Union[Float, None], optional)</dt>\n<dd class=\"field-odd\"><p>The maximum time that will waited before this operation is timed out. By default, this will never time out.</p>\n<p><strong>Default Value:</strong> None</p>\n</dd>\n<dt class=\"field-even\">yield_materializations (Bool, optional)</dt>\n<dd class=\"field-even\"><p>If True, materializations corresponding to the results of the Airbyte sync will be yielded when the op executes.</p>\n<p><strong>Default Value:</strong> True</p>\n</dd>\n<dt class=\"field-odd\">asset_key_prefix (List[String], optional)</dt>\n<dd class=\"field-odd\"><p>If provided and yield_materializations is True, these components will be used to prefix the generated asset keys.</p>\n<p><strong>Default Value:</strong> [\u2018airbyte\u2019]</p>\n</dd>\n</dl>\n</details><p>Executes a Airbyte job sync for a given <code class=\"docutils literal notranslate\"><span class=\"pre\">connection_id</span></code>, and polls until that sync\ncompletes, raising an error if it is unsuccessful. It outputs a AirbyteOutput which contains\nthe job details for a given <code class=\"docutils literal notranslate\"><span class=\"pre\">connection_id</span></code>.</p>\n<p>It requires the use of the <a class=\"reference internal\" href=\"#dagster_airbyte.airbyte_resource\" title=\"dagster_airbyte.airbyte_resource\"><code class=\"xref py py-class docutils literal notranslate\"><span class=\"pre\">airbyte_resource</span></code></a>, which allows it to\ncommunicate with the Airbyte API.</p>\n<p>Examples:</p>\n<div class=\"highlight-python notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"kn\">from</span> <span class=\"nn\">dagster</span> <span class=\"kn\">import</span> <span class=\"n\">job</span>\n<span class=\"kn\">from</span> <span class=\"nn\">dagster_airbyte</span> <span class=\"kn\">import</span> <span class=\"n\">airbyte_resource</span><span class=\"p\">,</span> <span class=\"n\">airbyte_sync_op</span>\n\n<span class=\"n\">my_airbyte_resource</span> <span class=\"o\">=</span> <span class=\"n\">airbyte_resource</span><span class=\"o\">.</span><span class=\"n\">configured</span><span class=\"p\">(</span>\n    <span class=\"p\">{</span>\n        <span class=\"s2\">&quot;host&quot;</span><span class=\"p\">:</span> <span class=\"p\">{</span><span class=\"s2\">&quot;env&quot;</span><span class=\"p\">:</span> <span class=\"s2\">&quot;AIRBYTE_HOST&quot;</span><span class=\"p\">},</span>\n        <span class=\"s2\">&quot;port&quot;</span><span class=\"p\">:</span> <span class=\"p\">{</span><span class=\"s2\">&quot;env&quot;</span><span class=\"p\">:</span> <span class=\"s2\">&quot;AIRBYTE_PORT&quot;</span><span class=\"p\">},</span>\n    <span class=\"p\">}</span>\n<span class=\"p\">)</span>\n\n<span class=\"n\">sync_foobar</span> <span class=\"o\">=</span> <span class=\"n\">airbyte_sync_op</span><span class=\"o\">.</span><span class=\"n\">configured</span><span class=\"p\">({</span><span class=\"s2\">&quot;connection_id&quot;</span><span class=\"p\">:</span> <span class=\"s2\">&quot;foobar&quot;</span><span class=\"p\">},</span> <span class=\"n\">name</span><span class=\"o\">=</span><span class=\"s2\">&quot;sync_foobar&quot;</span><span class=\"p\">)</span>\n\n<span class=\"nd\">@job</span><span class=\"p\">(</span><span class=\"n\">resource_defs</span><span class=\"o\">=</span><span class=\"p\">{</span><span class=\"s2\">&quot;airbyte&quot;</span><span class=\"p\">:</span> <span class=\"n\">my_airbyte_resource</span><span class=\"p\">})</span>\n<span class=\"k\">def</span> <span class=\"nf\">my_simple_airbyte_job</span><span class=\"p\">():</span>\n    <span class=\"n\">sync_foobar</span><span class=\"p\">()</span>\n\n<span class=\"nd\">@job</span><span class=\"p\">(</span><span class=\"n\">resource_defs</span><span class=\"o\">=</span><span class=\"p\">{</span><span class=\"s2\">&quot;airbyte&quot;</span><span class=\"p\">:</span> <span class=\"n\">my_airbyte_resource</span><span class=\"p\">})</span>\n<span class=\"k\">def</span> <span class=\"nf\">my_composed_airbyte_job</span><span class=\"p\">():</span>\n    <span class=\"n\">final_foobar_state</span> <span class=\"o\">=</span> <span class=\"n\">sync_foobar</span><span class=\"p\">(</span><span class=\"n\">start_after</span><span class=\"o\">=</span><span class=\"n\">some_op</span><span class=\"p\">())</span>\n    <span class=\"n\">other_op</span><span class=\"p\">(</span><span class=\"n\">final_foobar_state</span><span class=\"p\">)</span>\n</pre></div>\n</div>\n</dd></dl>\n\n</div>\n<div class=\"section\" id=\"resources\">\n<h2>Resources<a class=\"headerlink\" href=\"#resources\" title=\"Permalink to this headline\">\u00b6</a></h2>\n<dl class=\"py data\">\n<dt id=\"dagster_airbyte.airbyte_resource\">\n<code class=\"sig-prename descclassname\"><span class=\"pre\">dagster_airbyte.</span></code><code class=\"sig-name descname\"><span class=\"pre\">airbyte_resource</span></code><em class=\"property\"> <span class=\"pre\">ResourceDefinition</span></em><a class=\"reference internal\" href=\"../../../../../_modules/dagster_airbyte/resources#airbyte_resource\"><span class=\"viewcode-link\"><span class=\"pre\">[source]</span></span></a><a class=\"headerlink\" href=\"#dagster_airbyte.airbyte_resource\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><div class=\"line-block\">\n<div class=\"line\"><br /></div>\n</div>\n<details class=\"summary-config-schema\">\n<summary>Config Schema:</summary><dl class=\"field-list\">\n<dt class=\"field-odd\">host (dagster.StringSource)</dt>\n<dd class=\"field-odd\"><p>The Airbyte Server Address.</p>\n</dd>\n<dt class=\"field-even\">port (dagster.StringSource, optional)</dt>\n<dd class=\"field-even\"><p>Port for the Airbyte Server.</p>\n</dd>\n<dt class=\"field-odd\">use_https (Bool, optional)</dt>\n<dd class=\"field-odd\"><p>Use https to connect in Airbyte Server.</p>\n<p><strong>Default Value:</strong> False</p>\n</dd>\n<dt class=\"field-even\">request_max_retries (Int, optional)</dt>\n<dd class=\"field-even\"><p>The maximum number of times requests to the Airbyte API should be retried before failing.</p>\n<p><strong>Default Value:</strong> 3</p>\n</dd>\n<dt class=\"field-odd\">request_retry_delay (Float, optional)</dt>\n<dd class=\"field-odd\"><p>Time (in seconds) to wait between each request retry.</p>\n<p><strong>Default Value:</strong> 0.25</p>\n</dd>\n</dl>\n</details><p>This resource allows users to programatically interface with the Airbyte REST API to launch\nsyncs and monitor their progress. This currently implements only a subset of the functionality\nexposed by the API.</p>\n<p>For a complete set of documentation on the Airbyte REST API, including expected response JSON\nschema, see the <a class=\"reference external\" href=\"https://airbyte-public-api-docs.s3.us-east-2.amazonaws.com/rapidoc-api-docs.html#overview\">Airbyte API Docs</a>.</p>\n<p>To configure this resource, we recommend using the <a class=\"reference external\" href=\"https://docs.dagster.io/concepts/configuration/configured\">configured</a> method.</p>\n<p><strong>Examples:</strong></p>\n<div class=\"highlight-python notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"kn\">from</span> <span class=\"nn\">dagster</span> <span class=\"kn\">import</span> <span class=\"n\">job</span>\n<span class=\"kn\">from</span> <span class=\"nn\">dagster_airbyte</span> <span class=\"kn\">import</span> <span class=\"n\">airbyte_resource</span>\n\n<span class=\"n\">my_airbyte_resource</span> <span class=\"o\">=</span> <span class=\"n\">airbyte_resource</span><span class=\"o\">.</span><span class=\"n\">configured</span><span class=\"p\">(</span>\n    <span class=\"p\">{</span>\n        <span class=\"s2\">&quot;host&quot;</span><span class=\"p\">:</span> <span class=\"p\">{</span><span class=\"s2\">&quot;env&quot;</span><span class=\"p\">:</span> <span class=\"s2\">&quot;AIRBYTE_HOST&quot;</span><span class=\"p\">},</span>\n        <span class=\"s2\">&quot;port&quot;</span><span class=\"p\">:</span> <span class=\"p\">{</span><span class=\"s2\">&quot;env&quot;</span><span class=\"p\">:</span> <span class=\"s2\">&quot;AIRBYTE_PORT&quot;</span><span class=\"p\">},</span>\n    <span class=\"p\">}</span>\n<span class=\"p\">)</span>\n\n<span class=\"nd\">@job</span><span class=\"p\">(</span><span class=\"n\">resource_defs</span><span class=\"o\">=</span><span class=\"p\">{</span><span class=\"s2\">&quot;airbyte&quot;</span><span class=\"p\">:</span><span class=\"n\">my_airbyte_resource</span><span class=\"p\">})</span>\n<span class=\"k\">def</span> <span class=\"nf\">my_airbyte_job</span><span class=\"p\">():</span>\n    <span class=\"o\">...</span>\n</pre></div>\n</div>\n</dd></dl>\n\n<dl class=\"py class\">\n<dt id=\"dagster_airbyte.AirbyteResource\">\n<em class=\"property\"><span class=\"pre\">class</span> </em><code class=\"sig-prename descclassname\"><span class=\"pre\">dagster_airbyte.</span></code><code class=\"sig-name descname\"><span class=\"pre\">AirbyteResource</span></code><span class=\"sig-paren\">(</span><em class=\"sig-param\"><span class=\"pre\">host</span></em>, <em class=\"sig-param\"><span class=\"pre\">port</span></em>, <em class=\"sig-param\"><span class=\"pre\">use_https</span></em>, <em class=\"sig-param\"><span class=\"pre\">request_max_retries=3</span></em>, <em class=\"sig-param\"><span class=\"pre\">request_retry_delay=0.25</span></em>, <em class=\"sig-param\"><span class=\"pre\">log=&lt;Logger</span> <span class=\"pre\">dagster.builtin</span> <span class=\"pre\">(DEBUG)&gt;</span></em><span class=\"sig-paren\">)</span><a class=\"reference internal\" href=\"../../../../../_modules/dagster_airbyte/resources#AirbyteResource\"><span class=\"viewcode-link\"><span class=\"pre\">[source]</span></span></a><a class=\"headerlink\" href=\"#dagster_airbyte.AirbyteResource\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>This class exposes methods on top of the Airbyte REST API.</p>\n<dl class=\"py method\">\n<dt id=\"dagster_airbyte.AirbyteResource.make_request\">\n<code class=\"sig-name descname\"><span class=\"pre\">make_request</span></code><span class=\"sig-paren\">(</span><em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">endpoint</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">data</span></span></em><span class=\"sig-paren\">)</span><a class=\"reference internal\" href=\"../../../../../_modules/dagster_airbyte/resources#AirbyteResource.make_request\"><span class=\"viewcode-link\"><span class=\"pre\">[source]</span></span></a><a class=\"headerlink\" href=\"#dagster_airbyte.AirbyteResource.make_request\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Creates and sends a request to the desired Airbyte REST API endpoint.</p>\n<dl class=\"field-list simple\">\n<dt class=\"field-odd\">Parameters</dt>\n<dd class=\"field-odd\"><ul class=\"simple\">\n<li><p><strong>endpoint</strong> (<a class=\"reference external\" href=\"https://docs.python.org/3/library/stdtypes.html#str\" title=\"(in Python v3.8)\"><em>str</em></a>) \u2013 The Airbyte API endpoint to send this request to.</p></li>\n<li><p><strong>data</strong> (<em>Optional</em><em>[</em><a class=\"reference external\" href=\"https://docs.python.org/3/library/stdtypes.html#str\" title=\"(in Python v3.8)\"><em>str</em></a><em>]</em>) \u2013 JSON-formatted data string to be included in the request.</p></li>\n</ul>\n</dd>\n<dt class=\"field-even\">Returns</dt>\n<dd class=\"field-even\"><p>Parsed json data from the response to this request</p>\n</dd>\n<dt class=\"field-odd\">Return type</dt>\n<dd class=\"field-odd\"><p>Optional[Dict[<a class=\"reference external\" href=\"https://docs.python.org/3/library/stdtypes.html#str\" title=\"(in Python v3.8)\">str</a>, Any]]</p>\n</dd>\n</dl>\n</dd></dl>\n\n<dl class=\"py method\">\n<dt id=\"dagster_airbyte.AirbyteResource.sync_and_poll\">\n<code class=\"sig-name descname\"><span class=\"pre\">sync_and_poll</span></code><span class=\"sig-paren\">(</span><em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">connection_id</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">poll_interval</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">10</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">poll_timeout</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">None</span></span></em><span class=\"sig-paren\">)</span><a class=\"reference internal\" href=\"../../../../../_modules/dagster_airbyte/resources#AirbyteResource.sync_and_poll\"><span class=\"viewcode-link\"><span class=\"pre\">[source]</span></span></a><a class=\"headerlink\" href=\"#dagster_airbyte.AirbyteResource.sync_and_poll\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Initializes a sync operation for the given connector, and polls until it completes.</p>\n<dl class=\"field-list simple\">\n<dt class=\"field-odd\">Parameters</dt>\n<dd class=\"field-odd\"><ul class=\"simple\">\n<li><p><strong>connection_id</strong> (<a class=\"reference external\" href=\"https://docs.python.org/3/library/stdtypes.html#str\" title=\"(in Python v3.8)\"><em>str</em></a>) \u2013 The Airbyte Connector ID. You can retrieve this value from the\n\u201cConnection\u201d tab of a given connection in the Arbyte UI.</p></li>\n<li><p><strong>poll_interval</strong> (<a class=\"reference external\" href=\"https://docs.python.org/3/library/functions.html#float\" title=\"(in Python v3.8)\"><em>float</em></a>) \u2013 The time (in seconds) that will be waited between successive polls.</p></li>\n<li><p><strong>poll_timeout</strong> (<a class=\"reference external\" href=\"https://docs.python.org/3/library/functions.html#float\" title=\"(in Python v3.8)\"><em>float</em></a>) \u2013 The maximum time that will waited before this operation is timed\nout. By default, this will never time out.</p></li>\n</ul>\n</dd>\n<dt class=\"field-even\">Returns</dt>\n<dd class=\"field-even\"><p>Details of the sync job.</p>\n</dd>\n<dt class=\"field-odd\">Return type</dt>\n<dd class=\"field-odd\"><p><code class=\"xref py py-class docutils literal notranslate\"><span class=\"pre\">AirbyteOutput</span></code></p>\n</dd>\n</dl>\n</dd></dl>\n\n</dd></dl>\n\n</div>\n<div class=\"section\" id=\"assets\">\n<h2>Assets<a class=\"headerlink\" href=\"#assets\" title=\"Permalink to this headline\">\u00b6</a></h2>\n<dl class=\"py function\">\n<dt id=\"dagster_airbyte.build_airbyte_assets\">\n<code class=\"sig-prename descclassname\"><span class=\"pre\">dagster_airbyte.</span></code><code class=\"sig-name descname\"><span class=\"pre\">build_airbyte_assets</span></code><span class=\"sig-paren\">(</span><em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">connection_id</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">destination_tables</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">asset_key_prefix</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">None</span></span></em><span class=\"sig-paren\">)</span><a class=\"reference internal\" href=\"../../../../../_modules/dagster_airbyte/asset_defs#build_airbyte_assets\"><span class=\"viewcode-link\"><span class=\"pre\">[source]</span></span></a><a class=\"headerlink\" href=\"#dagster_airbyte.build_airbyte_assets\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Builds a set of assets representing the tables created by an Airbyte sync operation.</p>\n<dl class=\"field-list simple\">\n<dt class=\"field-odd\">Parameters</dt>\n<dd class=\"field-odd\"><ul class=\"simple\">\n<li><p><strong>connection_id</strong> (<a class=\"reference external\" href=\"https://docs.python.org/3/library/stdtypes.html#str\" title=\"(in Python v3.8)\"><em>str</em></a>) \u2013 The Airbyte Connection ID that this op will sync. You can retrieve this\nvalue from the \u201cConnections\u201d tab of a given connector in the Airbyte UI.</p></li>\n<li><p><strong>destination_tables</strong> (<em>List</em><em>[</em><a class=\"reference external\" href=\"https://docs.python.org/3/library/stdtypes.html#str\" title=\"(in Python v3.8)\"><em>str</em></a><em>]</em>) \u2013 The names of the tables that you want to be represented\nin the Dagster asset graph for this sync. This will generally map to the name of the\nstream in Airbyte, unless a stream prefix has been specified in Airbyte.</p></li>\n<li><p><strong>asset_key_prefix</strong> (<em>Optional</em><em>[</em><em>List</em><em>[</em><a class=\"reference external\" href=\"https://docs.python.org/3/library/stdtypes.html#str\" title=\"(in Python v3.8)\"><em>str</em></a><em>]</em><em>]</em>) \u2013 A prefix for the asset keys inside this asset.\nIf left blank, assets will have a key of <cite>AssetKey([table_name])</cite>.</p></li>\n</ul>\n</dd>\n</dl>\n</dd></dl>\n\n</div>\n</div>\n", "current_page_name": "sections/api/apidocs/libraries/dagster-airbyte", "customsidebar": null, "display_toc": true, "meta": null, "metatags": "", "next": {"link": "../dagster-airflow/", "title": "Airflow (dagster-airflow)"}, "page_source_suffix": ".rst", "parents": [], "prev": {"link": "../../memoization/", "title": "Versioning and Memoization"}, "rellinks": [["genindex", "General Index", "I", "index"], ["py-modindex", "Python Module Index", "", "modules"], ["sections/api/apidocs/libraries/dagster-airflow", "Airflow (dagster-airflow)", "N", "next"], ["sections/api/apidocs/memoization", "Versioning and Memoization", "P", "previous"]], "sidebars": ["globaltoc.html", "searchbox.html"], "sourcename": "sections/api/apidocs/libraries/dagster-airbyte.rst.txt", "title": "Airbyte (dagster-airbyte)", "toc": "<ul>\n<li><a class=\"reference internal\" href=\"#\">Airbyte (dagster-airbyte)</a><ul>\n<li><a class=\"reference internal\" href=\"#ops\">Ops</a></li>\n<li><a class=\"reference internal\" href=\"#resources\">Resources</a></li>\n<li><a class=\"reference internal\" href=\"#assets\">Assets</a></li>\n</ul>\n</li>\n</ul>\n"}, "dagster-airflow": {"alabaster_version": "0.7.12", "body": "<div class=\"section\" id=\"airflow-dagster-airflow\">\n<h1>Airflow (dagster-airflow)<a class=\"headerlink\" href=\"#airflow-dagster-airflow\" title=\"Permalink to this headline\">\u00b6</a></h1>\n<dl class=\"py function\">\n<dt id=\"dagster_airflow.make_airflow_dag\">\n<code class=\"sig-prename descclassname\"><span class=\"pre\">dagster_airflow.</span></code><code class=\"sig-name descname\"><span class=\"pre\">make_airflow_dag</span></code><span class=\"sig-paren\">(</span><em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">module_name</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">job_name</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">run_config</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">None</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">mode</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">None</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">instance</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">None</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">dag_id</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">None</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">dag_description</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">None</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">dag_kwargs</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">None</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">op_kwargs</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">None</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">pipeline_name</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">None</span></span></em><span class=\"sig-paren\">)</span><a class=\"reference internal\" href=\"../../../../../_modules/dagster_airflow/factory#make_airflow_dag\"><span class=\"viewcode-link\"><span class=\"pre\">[source]</span></span></a><a class=\"headerlink\" href=\"#dagster_airflow.make_airflow_dag\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Construct an Airflow DAG corresponding to a given Dagster job/pipeline.</p>\n<p>Tasks in the resulting DAG will execute the Dagster logic they encapsulate as a Python\ncallable, run by an underlying <code class=\"xref py py-class docutils literal notranslate\"><span class=\"pre\">PythonOperator</span></code>. As a\nconsequence, both dagster, any Python dependencies required by your solid logic, and the module\ncontaining your pipeline definition must be available in the Python environment within which\nyour Airflow tasks execute. If you cannot install requirements into this environment, or you\nare looking for a containerized solution to provide better isolation, see instead\n<a class=\"reference internal\" href=\"#dagster_airflow.make_airflow_dag_containerized\" title=\"dagster_airflow.make_airflow_dag_containerized\"><code class=\"xref py py-func docutils literal notranslate\"><span class=\"pre\">make_airflow_dag_containerized()</span></code></a>.</p>\n<p>This function should be invoked in an Airflow DAG definition file, such as that created by an\ninvocation of the dagster-airflow scaffold CLI tool.</p>\n<dl class=\"field-list simple\">\n<dt class=\"field-odd\">Parameters</dt>\n<dd class=\"field-odd\"><ul class=\"simple\">\n<li><p><strong>module_name</strong> (<a class=\"reference external\" href=\"https://docs.python.org/3/library/stdtypes.html#str\" title=\"(in Python v3.8)\"><em>str</em></a>) \u2013 The name of the importable module in which the pipeline/job definition can be\nfound.</p></li>\n<li><p><strong>job_name</strong> (<a class=\"reference external\" href=\"https://docs.python.org/3/library/stdtypes.html#str\" title=\"(in Python v3.8)\"><em>str</em></a>) \u2013 The name of the job definition.</p></li>\n<li><p><strong>run_config</strong> (<em>Optional</em><em>[</em><a class=\"reference external\" href=\"https://docs.python.org/3/library/stdtypes.html#dict\" title=\"(in Python v3.8)\"><em>dict</em></a><em>]</em>) \u2013 The config, if any, with which to compile\nthe pipeline/job to an execution plan, as a Python dict.</p></li>\n<li><p><strong>mode</strong> (<em>Optional</em><em>[</em><a class=\"reference external\" href=\"https://docs.python.org/3/library/stdtypes.html#str\" title=\"(in Python v3.8)\"><em>str</em></a><em>]</em>) \u2013 The mode in which to execute the pipeline.</p></li>\n<li><p><strong>instance</strong> (<em>Optional</em><em>[</em><a class=\"reference internal\" href=\"../../internals#dagster.DagsterInstance\" title=\"dagster.DagsterInstance\"><em>DagsterInstance</em></a><em>]</em>) \u2013 The Dagster instance to use to execute the pipeline/job.</p></li>\n<li><p><strong>dag_id</strong> (<em>Optional</em><em>[</em><a class=\"reference external\" href=\"https://docs.python.org/3/library/stdtypes.html#str\" title=\"(in Python v3.8)\"><em>str</em></a><em>]</em>) \u2013 The id to use for the compiled Airflow DAG (passed through to\n<a class=\"reference external\" href=\"https://airflow.apache.org/_api/airflow/models/index.html#airflow.models.DAG\" title=\"(in Airflow v1.10.6)\"><code class=\"xref py py-class docutils literal notranslate\"><span class=\"pre\">DAG</span></code></a>).</p></li>\n<li><p><strong>dag_description</strong> (<em>Optional</em><em>[</em><a class=\"reference external\" href=\"https://docs.python.org/3/library/stdtypes.html#str\" title=\"(in Python v3.8)\"><em>str</em></a><em>]</em>) \u2013 The description to use for the compiled Airflow DAG\n(passed through to <a class=\"reference external\" href=\"https://airflow.apache.org/_api/airflow/models/index.html#airflow.models.DAG\" title=\"(in Airflow v1.10.6)\"><code class=\"xref py py-class docutils literal notranslate\"><span class=\"pre\">DAG</span></code></a>)</p></li>\n<li><p><strong>dag_kwargs</strong> (<em>Optional</em><em>[</em><a class=\"reference external\" href=\"https://docs.python.org/3/library/stdtypes.html#dict\" title=\"(in Python v3.8)\"><em>dict</em></a><em>]</em>) \u2013 Any additional kwargs to pass to the Airflow\n<a class=\"reference external\" href=\"https://airflow.apache.org/_api/airflow/models/index.html#airflow.models.DAG\" title=\"(in Airflow v1.10.6)\"><code class=\"xref py py-class docutils literal notranslate\"><span class=\"pre\">DAG</span></code></a> constructor, including <code class=\"docutils literal notranslate\"><span class=\"pre\">default_args</span></code>.</p></li>\n<li><p><strong>op_kwargs</strong> (<em>Optional</em><em>[</em><a class=\"reference external\" href=\"https://docs.python.org/3/library/stdtypes.html#dict\" title=\"(in Python v3.8)\"><em>dict</em></a><em>]</em>) \u2013 Any additional kwargs to pass to the underlying Airflow\noperator (a subclass of\n<a class=\"reference external\" href=\"https://airflow.apache.org/_api/airflow/operators/python_operator/index.html#airflow.operators.python_operator.PythonOperator\" title=\"(in Airflow v1.10.6)\"><code class=\"xref py py-class docutils literal notranslate\"><span class=\"pre\">PythonOperator</span></code></a>).</p></li>\n<li><p><strong>pipeline_name</strong> (<a class=\"reference external\" href=\"https://docs.python.org/3/library/stdtypes.html#str\" title=\"(in Python v3.8)\"><em>str</em></a>) \u2013 (legacy) The name of the pipeline definition.</p></li>\n</ul>\n</dd>\n<dt class=\"field-even\">Returns</dt>\n<dd class=\"field-even\"><p>The generated Airflow DAG, and a\nlist of its constituent tasks.</p>\n</dd>\n<dt class=\"field-odd\">Return type</dt>\n<dd class=\"field-odd\"><p>(<a class=\"reference external\" href=\"https://airflow.apache.org/_api/airflow/models/index.html#airflow.models.DAG\" title=\"(in Airflow v1.10.6)\">airflow.models.DAG</a>, List[<a class=\"reference external\" href=\"https://airflow.apache.org/_api/airflow/models/index.html#airflow.models.BaseOperator\" title=\"(in Airflow v1.10.6)\">airflow.models.BaseOperator</a>])</p>\n</dd>\n</dl>\n</dd></dl>\n\n<dl class=\"py function\">\n<dt id=\"dagster_airflow.make_airflow_dag_for_operator\">\n<code class=\"sig-prename descclassname\"><span class=\"pre\">dagster_airflow.</span></code><code class=\"sig-name descname\"><span class=\"pre\">make_airflow_dag_for_operator</span></code><span class=\"sig-paren\">(</span><em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">recon_repo</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">job_name</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">operator</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">run_config</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">None</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">mode</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">None</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">dag_id</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">None</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">dag_description</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">None</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">dag_kwargs</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">None</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">op_kwargs</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">None</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">pipeline_name</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">None</span></span></em><span class=\"sig-paren\">)</span><a class=\"reference internal\" href=\"../../../../../_modules/dagster_airflow/factory#make_airflow_dag_for_operator\"><span class=\"viewcode-link\"><span class=\"pre\">[source]</span></span></a><a class=\"headerlink\" href=\"#dagster_airflow.make_airflow_dag_for_operator\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Construct an Airflow DAG corresponding to a given Dagster job/pipeline and custom operator.</p>\n<p><a class=\"reference external\" href=\"https://github.com/dagster-io/dagster/blob/master/python_modules/dagster-test/dagster_test/dagster_airflow/custom_operator.py\">Custom operator template</a></p>\n<p>Tasks in the resulting DAG will execute the Dagster logic they encapsulate run by the given\nOperator <a class=\"reference external\" href=\"https://airflow.apache.org/_api/airflow/models/index.html#airflow.models.BaseOperator\" title=\"(in Airflow v1.10.6)\"><code class=\"xref py py-class docutils literal notranslate\"><span class=\"pre\">BaseOperator</span></code></a>. If you\nare looking for a containerized solution to provide better isolation, see instead\n<a class=\"reference internal\" href=\"#dagster_airflow.make_airflow_dag_containerized\" title=\"dagster_airflow.make_airflow_dag_containerized\"><code class=\"xref py py-func docutils literal notranslate\"><span class=\"pre\">make_airflow_dag_containerized()</span></code></a>.</p>\n<p>This function should be invoked in an Airflow DAG definition file, such as that created by an\ninvocation of the dagster-airflow scaffold CLI tool.</p>\n<dl class=\"field-list simple\">\n<dt class=\"field-odd\">Parameters</dt>\n<dd class=\"field-odd\"><ul class=\"simple\">\n<li><p><strong>recon_repo</strong> (<code class=\"xref py py-class docutils literal notranslate\"><span class=\"pre\">dagster.ReconstructableRepository</span></code>) \u2013 reference to a Dagster RepositoryDefinition\nthat can be reconstructed in another process</p></li>\n<li><p><strong>job_name</strong> (<a class=\"reference external\" href=\"https://docs.python.org/3/library/stdtypes.html#str\" title=\"(in Python v3.8)\"><em>str</em></a>) \u2013 The name of the job definition.</p></li>\n<li><p><strong>operator</strong> (<a class=\"reference external\" href=\"https://docs.python.org/3/library/functions.html#type\" title=\"(in Python v3.8)\"><em>type</em></a>) \u2013 The operator to use. Must be a class that inherits from\n<a class=\"reference external\" href=\"https://airflow.apache.org/_api/airflow/models/index.html#airflow.models.BaseOperator\" title=\"(in Airflow v1.10.6)\"><code class=\"xref py py-class docutils literal notranslate\"><span class=\"pre\">BaseOperator</span></code></a></p></li>\n<li><p><strong>run_config</strong> (<em>Optional</em><em>[</em><a class=\"reference external\" href=\"https://docs.python.org/3/library/stdtypes.html#dict\" title=\"(in Python v3.8)\"><em>dict</em></a><em>]</em>) \u2013 The config, if any, with which to compile\nthe pipeline to an execution plan, as a Python dict.</p></li>\n<li><p><strong>mode</strong> (<em>Optional</em><em>[</em><a class=\"reference external\" href=\"https://docs.python.org/3/library/stdtypes.html#str\" title=\"(in Python v3.8)\"><em>str</em></a><em>]</em>) \u2013 The mode in which to execute the pipeline.</p></li>\n<li><p><strong>instance</strong> (<em>Optional</em><em>[</em><a class=\"reference internal\" href=\"../../internals#dagster.DagsterInstance\" title=\"dagster.DagsterInstance\"><em>DagsterInstance</em></a><em>]</em>) \u2013 The Dagster instance to use to execute the pipeline.</p></li>\n<li><p><strong>dag_id</strong> (<em>Optional</em><em>[</em><a class=\"reference external\" href=\"https://docs.python.org/3/library/stdtypes.html#str\" title=\"(in Python v3.8)\"><em>str</em></a><em>]</em>) \u2013 The id to use for the compiled Airflow DAG (passed through to\n<a class=\"reference external\" href=\"https://airflow.apache.org/_api/airflow/models/index.html#airflow.models.DAG\" title=\"(in Airflow v1.10.6)\"><code class=\"xref py py-class docutils literal notranslate\"><span class=\"pre\">DAG</span></code></a>).</p></li>\n<li><p><strong>dag_description</strong> (<em>Optional</em><em>[</em><a class=\"reference external\" href=\"https://docs.python.org/3/library/stdtypes.html#str\" title=\"(in Python v3.8)\"><em>str</em></a><em>]</em>) \u2013 The description to use for the compiled Airflow DAG\n(passed through to <a class=\"reference external\" href=\"https://airflow.apache.org/_api/airflow/models/index.html#airflow.models.DAG\" title=\"(in Airflow v1.10.6)\"><code class=\"xref py py-class docutils literal notranslate\"><span class=\"pre\">DAG</span></code></a>)</p></li>\n<li><p><strong>dag_kwargs</strong> (<em>Optional</em><em>[</em><a class=\"reference external\" href=\"https://docs.python.org/3/library/stdtypes.html#dict\" title=\"(in Python v3.8)\"><em>dict</em></a><em>]</em>) \u2013 Any additional kwargs to pass to the Airflow\n<a class=\"reference external\" href=\"https://airflow.apache.org/_api/airflow/models/index.html#airflow.models.DAG\" title=\"(in Airflow v1.10.6)\"><code class=\"xref py py-class docutils literal notranslate\"><span class=\"pre\">DAG</span></code></a> constructor, including <code class=\"docutils literal notranslate\"><span class=\"pre\">default_args</span></code>.</p></li>\n<li><p><strong>op_kwargs</strong> (<em>Optional</em><em>[</em><a class=\"reference external\" href=\"https://docs.python.org/3/library/stdtypes.html#dict\" title=\"(in Python v3.8)\"><em>dict</em></a><em>]</em>) \u2013 Any additional kwargs to pass to the underlying Airflow\noperator.</p></li>\n<li><p><strong>pipeline_name</strong> (<a class=\"reference external\" href=\"https://docs.python.org/3/library/stdtypes.html#str\" title=\"(in Python v3.8)\"><em>str</em></a>) \u2013 (legacy) The name of the pipeline definition.</p></li>\n</ul>\n</dd>\n<dt class=\"field-even\">Returns</dt>\n<dd class=\"field-even\"><p>The generated Airflow DAG, and a\nlist of its constituent tasks.</p>\n</dd>\n<dt class=\"field-odd\">Return type</dt>\n<dd class=\"field-odd\"><p>(<a class=\"reference external\" href=\"https://airflow.apache.org/_api/airflow/models/index.html#airflow.models.DAG\" title=\"(in Airflow v1.10.6)\">airflow.models.DAG</a>, List[<a class=\"reference external\" href=\"https://airflow.apache.org/_api/airflow/models/index.html#airflow.models.BaseOperator\" title=\"(in Airflow v1.10.6)\">airflow.models.BaseOperator</a>])</p>\n</dd>\n</dl>\n</dd></dl>\n\n<dl class=\"py function\">\n<dt id=\"dagster_airflow.make_airflow_dag_containerized\">\n<code class=\"sig-prename descclassname\"><span class=\"pre\">dagster_airflow.</span></code><code class=\"sig-name descname\"><span class=\"pre\">make_airflow_dag_containerized</span></code><span class=\"sig-paren\">(</span><em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">module_name</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">job_name</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">image</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">run_config</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">None</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">mode</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">None</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">dag_id</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">None</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">dag_description</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">None</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">dag_kwargs</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">None</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">op_kwargs</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">None</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">pipeline_name</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">None</span></span></em><span class=\"sig-paren\">)</span><a class=\"reference internal\" href=\"../../../../../_modules/dagster_airflow/factory#make_airflow_dag_containerized\"><span class=\"viewcode-link\"><span class=\"pre\">[source]</span></span></a><a class=\"headerlink\" href=\"#dagster_airflow.make_airflow_dag_containerized\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Construct a containerized Airflow DAG corresponding to a given Dagster job/pipeline.</p>\n<p>Tasks in the resulting DAG will execute the Dagster logic they encapsulate  using a subclass of\n<a class=\"reference external\" href=\"https://airflow.apache.org/_api/airflow/operators/docker_operator/index.html#airflow.operators.docker_operator.DockerOperator\" title=\"(in Airflow v1.10.6)\"><code class=\"xref py py-class docutils literal notranslate\"><span class=\"pre\">DockerOperator</span></code></a>. As a\nconsequence, both dagster, any Python dependencies required by your solid logic, and the module\ncontaining your pipeline definition must be available in the container spun up by this operator.\nTypically you\u2019ll want to install these requirements onto the image you\u2019re using.</p>\n<p>This function should be invoked in an Airflow DAG definition file, such as that created by an\ninvocation of the dagster-airflow scaffold CLI tool.</p>\n<dl class=\"field-list simple\">\n<dt class=\"field-odd\">Parameters</dt>\n<dd class=\"field-odd\"><ul class=\"simple\">\n<li><p><strong>module_name</strong> (<a class=\"reference external\" href=\"https://docs.python.org/3/library/stdtypes.html#str\" title=\"(in Python v3.8)\"><em>str</em></a>) \u2013 The name of the importable module in which the pipeline/job definition can be\nfound.</p></li>\n<li><p><strong>job_name</strong> (<a class=\"reference external\" href=\"https://docs.python.org/3/library/stdtypes.html#str\" title=\"(in Python v3.8)\"><em>str</em></a>) \u2013 The name of the job definition.</p></li>\n<li><p><strong>image</strong> (<a class=\"reference external\" href=\"https://docs.python.org/3/library/stdtypes.html#str\" title=\"(in Python v3.8)\"><em>str</em></a>) \u2013 The name of the Docker image to use for execution (passed through to\n<a class=\"reference external\" href=\"https://airflow.apache.org/_api/airflow/operators/docker_operator/index.html#airflow.operators.docker_operator.DockerOperator\" title=\"(in Airflow v1.10.6)\"><code class=\"xref py py-class docutils literal notranslate\"><span class=\"pre\">DockerOperator</span></code></a>).</p></li>\n<li><p><strong>run_config</strong> (<em>Optional</em><em>[</em><a class=\"reference external\" href=\"https://docs.python.org/3/library/stdtypes.html#dict\" title=\"(in Python v3.8)\"><em>dict</em></a><em>]</em>) \u2013 The config, if any, with which to compile\nthe pipeline/job to an execution plan, as a Python dict.</p></li>\n<li><p><strong>mode</strong> (<em>Optional</em><em>[</em><a class=\"reference external\" href=\"https://docs.python.org/3/library/stdtypes.html#str\" title=\"(in Python v3.8)\"><em>str</em></a><em>]</em>) \u2013 The mode in which to execute the pipeline.</p></li>\n<li><p><strong>dag_id</strong> (<em>Optional</em><em>[</em><a class=\"reference external\" href=\"https://docs.python.org/3/library/stdtypes.html#str\" title=\"(in Python v3.8)\"><em>str</em></a><em>]</em>) \u2013 The id to use for the compiled Airflow DAG (passed through to\n<a class=\"reference external\" href=\"https://airflow.apache.org/_api/airflow/models/index.html#airflow.models.DAG\" title=\"(in Airflow v1.10.6)\"><code class=\"xref py py-class docutils literal notranslate\"><span class=\"pre\">DAG</span></code></a>).</p></li>\n<li><p><strong>dag_description</strong> (<em>Optional</em><em>[</em><a class=\"reference external\" href=\"https://docs.python.org/3/library/stdtypes.html#str\" title=\"(in Python v3.8)\"><em>str</em></a><em>]</em>) \u2013 The description to use for the compiled Airflow DAG\n(passed through to <a class=\"reference external\" href=\"https://airflow.apache.org/_api/airflow/models/index.html#airflow.models.DAG\" title=\"(in Airflow v1.10.6)\"><code class=\"xref py py-class docutils literal notranslate\"><span class=\"pre\">DAG</span></code></a>)</p></li>\n<li><p><strong>dag_kwargs</strong> (<em>Optional</em><em>[</em><a class=\"reference external\" href=\"https://docs.python.org/3/library/stdtypes.html#dict\" title=\"(in Python v3.8)\"><em>dict</em></a><em>]</em>) \u2013 Any additional kwargs to pass to the Airflow\n<a class=\"reference external\" href=\"https://airflow.apache.org/_api/airflow/models/index.html#airflow.models.DAG\" title=\"(in Airflow v1.10.6)\"><code class=\"xref py py-class docutils literal notranslate\"><span class=\"pre\">DAG</span></code></a> constructor, including <code class=\"docutils literal notranslate\"><span class=\"pre\">default_args</span></code>.</p></li>\n<li><p><strong>op_kwargs</strong> (<em>Optional</em><em>[</em><a class=\"reference external\" href=\"https://docs.python.org/3/library/stdtypes.html#dict\" title=\"(in Python v3.8)\"><em>dict</em></a><em>]</em>) \u2013 Any additional kwargs to pass to the underlying Airflow\noperator (a subclass of\n<a class=\"reference external\" href=\"https://airflow.apache.org/_api/airflow/operators/docker_operator/index.html#airflow.operators.docker_operator.DockerOperator\" title=\"(in Airflow v1.10.6)\"><code class=\"xref py py-class docutils literal notranslate\"><span class=\"pre\">DockerOperator</span></code></a>).</p></li>\n<li><p><strong>pipeline_name</strong> (<a class=\"reference external\" href=\"https://docs.python.org/3/library/stdtypes.html#str\" title=\"(in Python v3.8)\"><em>str</em></a>) \u2013 (legacy) The name of the pipeline definition.</p></li>\n</ul>\n</dd>\n<dt class=\"field-even\">Returns</dt>\n<dd class=\"field-even\"><p>The generated Airflow DAG, and a\nlist of its constituent tasks.</p>\n</dd>\n<dt class=\"field-odd\">Return type</dt>\n<dd class=\"field-odd\"><p>(<a class=\"reference external\" href=\"https://airflow.apache.org/_api/airflow/models/index.html#airflow.models.DAG\" title=\"(in Airflow v1.10.6)\">airflow.models.DAG</a>, List[<a class=\"reference external\" href=\"https://airflow.apache.org/_api/airflow/models/index.html#airflow.models.BaseOperator\" title=\"(in Airflow v1.10.6)\">airflow.models.BaseOperator</a>])</p>\n</dd>\n</dl>\n</dd></dl>\n\n<dl class=\"py function\">\n<dt id=\"dagster_airflow.make_dagster_job_from_airflow_dag\">\n<code class=\"sig-prename descclassname\"><span class=\"pre\">dagster_airflow.</span></code><code class=\"sig-name descname\"><span class=\"pre\">make_dagster_job_from_airflow_dag</span></code><span class=\"sig-paren\">(</span><em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">dag</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">tags</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">None</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">use_airflow_template_context</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">False</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">unique_id</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">None</span></span></em><span class=\"sig-paren\">)</span><a class=\"reference internal\" href=\"../../../../../_modules/dagster_airflow/dagster_job_factory#make_dagster_job_from_airflow_dag\"><span class=\"viewcode-link\"><span class=\"pre\">[source]</span></span></a><a class=\"headerlink\" href=\"#dagster_airflow.make_dagster_job_from_airflow_dag\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Construct a Dagster job corresponding to a given Airflow DAG.</p>\n<p>Tasks in the resulting job will execute the <code class=\"docutils literal notranslate\"><span class=\"pre\">execute()</span></code> method on the corresponding\nAirflow Operator. Dagster, any dependencies required by Airflow Operators, and the module\ncontaining your DAG definition must be available in the Python environment within which your\nDagster solids execute.</p>\n<p>To set Airflow\u2019s <code class=\"docutils literal notranslate\"><span class=\"pre\">execution_date</span></code> for use with Airflow Operator\u2019s <code class=\"docutils literal notranslate\"><span class=\"pre\">execute()</span></code> methods,\neither:</p>\n<ol class=\"arabic\">\n<li><dl class=\"simple\">\n<dt>(Best for ad hoc runs) Execute job directly. This will set execution_date to the</dt><dd><p>time (in UTC) of the run.</p>\n</dd>\n</dl>\n</li>\n<li><dl>\n<dt>Add <code class=\"docutils literal notranslate\"><span class=\"pre\">{'airflow_execution_date':</span> <span class=\"pre\">utc_date_string}</span></code> to the job tags. This will override</dt><dd><p>behavior from (1).</p>\n<div class=\"highlight-python notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"n\">my_dagster_job</span> <span class=\"o\">=</span> <span class=\"n\">make_dagster_job_from_airflow_dag</span><span class=\"p\">(</span>\n        <span class=\"n\">dag</span><span class=\"o\">=</span><span class=\"n\">dag</span><span class=\"p\">,</span>\n        <span class=\"n\">tags</span><span class=\"o\">=</span><span class=\"p\">{</span><span class=\"s1\">&#39;airflow_execution_date&#39;</span><span class=\"p\">:</span> <span class=\"n\">utc_execution_date_str</span><span class=\"p\">}</span>\n<span class=\"p\">)</span>\n<span class=\"n\">my_dagster_job</span><span class=\"o\">.</span><span class=\"n\">execute_in_process</span><span class=\"p\">()</span>\n</pre></div>\n</div>\n</dd>\n</dl>\n</li>\n<li><dl class=\"simple\">\n<dt>(Recommended) Add <code class=\"docutils literal notranslate\"><span class=\"pre\">{'airflow_execution_date':</span> <span class=\"pre\">utc_date_string}</span></code> to the run tags,</dt><dd><p>such as in the Dagit UI. This will override behavior from (1) and (2)</p>\n</dd>\n</dl>\n</li>\n</ol>\n<p>We apply normalized_name() to the dag id and task ids when generating job name and op\nnames to ensure that names conform to Dagster\u2019s naming conventions.</p>\n<dl class=\"field-list simple\">\n<dt class=\"field-odd\">Parameters</dt>\n<dd class=\"field-odd\"><ul class=\"simple\">\n<li><p><strong>dag</strong> (<em>DAG</em>) \u2013 The Airflow DAG to compile into a Dagster job</p></li>\n<li><p><strong>tags</strong> (<em>Dict</em><em>[</em><a class=\"reference external\" href=\"https://docs.python.org/3/library/stdtypes.html#str\" title=\"(in Python v3.8)\"><em>str</em></a><em>, </em><a class=\"reference internal\" href=\"../../config#dagster.Field\" title=\"dagster.Field\"><em>Field</em></a><em>]</em>) \u2013 Job tags. Optionally include\n<cite>tags={\u2018airflow_execution_date\u2019: utc_date_string}</cite> to specify execution_date used within\nexecution of Airflow Operators.</p></li>\n<li><p><strong>use_airflow_template_context</strong> (<a class=\"reference external\" href=\"https://docs.python.org/3/library/functions.html#bool\" title=\"(in Python v3.8)\"><em>bool</em></a>) \u2013 If True, will call get_template_context() on the\nAirflow TaskInstance model which requires and modifies the DagRun table.\n(default: False)</p></li>\n<li><p><strong>unique_id</strong> (<a class=\"reference external\" href=\"https://docs.python.org/3/library/functions.html#int\" title=\"(in Python v3.8)\"><em>int</em></a>) \u2013 If not None, this id will be postpended to generated op names. Used by\nframework authors to enforce unique op names within a repo.</p></li>\n</ul>\n</dd>\n<dt class=\"field-even\">Returns</dt>\n<dd class=\"field-even\"><p>The generated Dagster job</p>\n</dd>\n<dt class=\"field-odd\">Return type</dt>\n<dd class=\"field-odd\"><p><a class=\"reference internal\" href=\"../../jobs#dagster.JobDefinition\" title=\"dagster.JobDefinition\">JobDefinition</a></p>\n</dd>\n</dl>\n</dd></dl>\n\n<dl class=\"py function\">\n<dt id=\"dagster_airflow.make_dagster_repo_from_airflow_dags_path\">\n<code class=\"sig-prename descclassname\"><span class=\"pre\">dagster_airflow.</span></code><code class=\"sig-name descname\"><span class=\"pre\">make_dagster_repo_from_airflow_dags_path</span></code><span class=\"sig-paren\">(</span><em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">dag_path</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">repo_name</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">safe_mode</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">True</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">store_serialized_dags</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">False</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">use_airflow_template_context</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">False</span></span></em><span class=\"sig-paren\">)</span><a class=\"reference internal\" href=\"../../../../../_modules/dagster_airflow/dagster_pipeline_factory#make_dagster_repo_from_airflow_dags_path\"><span class=\"viewcode-link\"><span class=\"pre\">[source]</span></span></a><a class=\"headerlink\" href=\"#dagster_airflow.make_dagster_repo_from_airflow_dags_path\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Construct a Dagster repository corresponding to Airflow DAGs in dag_path.</p>\n<p><code class=\"docutils literal notranslate\"><span class=\"pre\">DagBag.get_dag()</span></code> dependency requires Airflow DB to be initialized.</p>\n<dl>\n<dt>Usage:</dt><dd><p>Create <code class=\"docutils literal notranslate\"><span class=\"pre\">make_dagster_repo.py</span></code>:</p>\n<div class=\"highlight-python notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"kn\">from</span> <span class=\"nn\">dagster_airflow.dagster_pipeline_factory</span> <span class=\"kn\">import</span> <span class=\"n\">make_dagster_repo_from_airflow_dags_path</span>\n\n<span class=\"k\">def</span> <span class=\"nf\">make_repo_from_dir</span><span class=\"p\">():</span>\n    <span class=\"k\">return</span> <span class=\"n\">make_dagster_repo_from_airflow_dags_path</span><span class=\"p\">(</span>\n        <span class=\"s1\">&#39;/path/to/dags/&#39;</span><span class=\"p\">,</span> <span class=\"s1\">&#39;my_repo_name&#39;</span>\n    <span class=\"p\">)</span>\n</pre></div>\n</div>\n<p>Use RepositoryDefinition as usual, for example:\n<code class=\"docutils literal notranslate\"><span class=\"pre\">dagit</span> <span class=\"pre\">-f</span> <span class=\"pre\">path/to/make_dagster_repo.py</span> <span class=\"pre\">-n</span> <span class=\"pre\">make_repo_from_dir</span></code></p>\n</dd>\n</dl>\n<dl class=\"field-list simple\">\n<dt class=\"field-odd\">Parameters</dt>\n<dd class=\"field-odd\"><ul class=\"simple\">\n<li><p><strong>dag_path</strong> (<a class=\"reference external\" href=\"https://docs.python.org/3/library/stdtypes.html#str\" title=\"(in Python v3.8)\"><em>str</em></a>) \u2013 Path to directory or file that contains Airflow Dags</p></li>\n<li><p><strong>repo_name</strong> (<a class=\"reference external\" href=\"https://docs.python.org/3/library/stdtypes.html#str\" title=\"(in Python v3.8)\"><em>str</em></a>) \u2013 Name for generated RepositoryDefinition</p></li>\n<li><p><strong>include_examples</strong> (<a class=\"reference external\" href=\"https://docs.python.org/3/library/functions.html#bool\" title=\"(in Python v3.8)\"><em>bool</em></a>) \u2013 True to include Airflow\u2019s example DAGs. (default: False)</p></li>\n<li><p><strong>safe_mode</strong> (<a class=\"reference external\" href=\"https://docs.python.org/3/library/functions.html#bool\" title=\"(in Python v3.8)\"><em>bool</em></a>) \u2013 True to use Airflow\u2019s default heuristic to find files that contain DAGs\n(ie find files that contain both b\u2019DAG\u2019 and b\u2019airflow\u2019) (default: True)</p></li>\n<li><p><strong>store_serialized_dags</strong> (<a class=\"reference external\" href=\"https://docs.python.org/3/library/functions.html#bool\" title=\"(in Python v3.8)\"><em>bool</em></a>) \u2013 True to read Airflow DAGS from Airflow DB. False to read DAGS\nfrom Python files. (default: False)</p></li>\n<li><p><strong>use_airflow_template_context</strong> (<a class=\"reference external\" href=\"https://docs.python.org/3/library/functions.html#bool\" title=\"(in Python v3.8)\"><em>bool</em></a>) \u2013 If True, will call get_template_context() on the\nAirflow TaskInstance model which requires and modifies the DagRun table.\n(default: False)</p></li>\n</ul>\n</dd>\n<dt class=\"field-even\">Returns</dt>\n<dd class=\"field-even\"><p>RepositoryDefinition</p>\n</dd>\n</dl>\n</dd></dl>\n\n<dl class=\"py function\">\n<dt id=\"dagster_airflow.make_dagster_repo_from_airflow_dag_bag\">\n<code class=\"sig-prename descclassname\"><span class=\"pre\">dagster_airflow.</span></code><code class=\"sig-name descname\"><span class=\"pre\">make_dagster_repo_from_airflow_dag_bag</span></code><span class=\"sig-paren\">(</span><em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">dag_bag</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">repo_name</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">refresh_from_airflow_db</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">False</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">use_airflow_template_context</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">False</span></span></em><span class=\"sig-paren\">)</span><a class=\"reference internal\" href=\"../../../../../_modules/dagster_airflow/dagster_pipeline_factory#make_dagster_repo_from_airflow_dag_bag\"><span class=\"viewcode-link\"><span class=\"pre\">[source]</span></span></a><a class=\"headerlink\" href=\"#dagster_airflow.make_dagster_repo_from_airflow_dag_bag\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Construct a Dagster repository corresponding to Airflow DAGs in DagBag.</p>\n<dl>\n<dt>Usage:</dt><dd><dl>\n<dt>Create <cite>make_dagster_repo.py</cite>:</dt><dd><p>from dagster_airflow.dagster_pipeline_factory import make_dagster_repo_from_airflow_dag_bag\nfrom airflow_home import my_dag_bag</p>\n<dl class=\"simple\">\n<dt>def make_repo_from_dag_bag():</dt><dd><p>return make_dagster_repo_from_airflow_dag_bag(my_dag_bag, \u2018my_repo_name\u2019)</p>\n</dd>\n</dl>\n</dd>\n<dt>Use RepositoryDefinition as usual, for example:</dt><dd><p><cite>dagit -f path/to/make_dagster_repo.py -n make_repo_from_dag_bag</cite></p>\n</dd>\n</dl>\n</dd>\n</dl>\n<dl class=\"field-list simple\">\n<dt class=\"field-odd\">Parameters</dt>\n<dd class=\"field-odd\"><ul class=\"simple\">\n<li><p><strong>dag_path</strong> (<a class=\"reference external\" href=\"https://docs.python.org/3/library/stdtypes.html#str\" title=\"(in Python v3.8)\"><em>str</em></a>) \u2013 Path to directory or file that contains Airflow Dags</p></li>\n<li><p><strong>repo_name</strong> (<a class=\"reference external\" href=\"https://docs.python.org/3/library/stdtypes.html#str\" title=\"(in Python v3.8)\"><em>str</em></a>) \u2013 Name for generated RepositoryDefinition</p></li>\n<li><p><strong>refresh_from_airflow_db</strong> (<a class=\"reference external\" href=\"https://docs.python.org/3/library/functions.html#bool\" title=\"(in Python v3.8)\"><em>bool</em></a>) \u2013 If True, will refresh DAG if expired via DagBag.get_dag(),\nwhich requires access to initialized Airflow DB. If False (recommended), gets dag from\nDagBag\u2019s dags dict without depending on Airflow DB. (default: False)</p></li>\n<li><p><strong>use_airflow_template_context</strong> (<a class=\"reference external\" href=\"https://docs.python.org/3/library/functions.html#bool\" title=\"(in Python v3.8)\"><em>bool</em></a>) \u2013 If True, will call get_template_context() on the\nAirflow TaskInstance model which requires and modifies the DagRun table.\n(default: False)</p></li>\n</ul>\n</dd>\n<dt class=\"field-even\">Returns</dt>\n<dd class=\"field-even\"><p>RepositoryDefinition</p>\n</dd>\n</dl>\n</dd></dl>\n\n<dl class=\"py function\">\n<dt id=\"dagster_airflow.make_dagster_repo_from_airflow_example_dags\">\n<code class=\"sig-prename descclassname\"><span class=\"pre\">dagster_airflow.</span></code><code class=\"sig-name descname\"><span class=\"pre\">make_dagster_repo_from_airflow_example_dags</span></code><span class=\"sig-paren\">(</span><em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">repo_name</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">'airflow_example_dags_repo'</span></span></em><span class=\"sig-paren\">)</span><a class=\"reference internal\" href=\"../../../../../_modules/dagster_airflow/dagster_pipeline_factory#make_dagster_repo_from_airflow_example_dags\"><span class=\"viewcode-link\"><span class=\"pre\">[source]</span></span></a><a class=\"headerlink\" href=\"#dagster_airflow.make_dagster_repo_from_airflow_example_dags\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Construct a Dagster repository for Airflow\u2019s example DAGs.</p>\n<dl class=\"simple\">\n<dt>Execution of the following Airflow example DAGs is not currently supported:</dt><dd><p>\u2018example_external_task_marker_child\u2019,\n\u2018example_pig_operator\u2019,\n\u2018example_skip_dag\u2019,\n\u2018example_trigger_target_dag\u2019,\n\u2018example_xcom\u2019,\n\u2018test_utils\u2019,</p>\n</dd>\n</dl>\n<p>Usage:</p>\n<blockquote>\n<div><dl>\n<dt>Create <cite>make_dagster_repo.py</cite>:</dt><dd><p>from dagster_airflow.dagster_pipeline_factory import make_dagster_repo_from_airflow_example_dags</p>\n<dl class=\"simple\">\n<dt>def make_airflow_example_dags():</dt><dd><p>return make_dagster_repo_from_airflow_example_dags()</p>\n</dd>\n</dl>\n</dd>\n<dt>Use RepositoryDefinition as usual, for example:</dt><dd><p><cite>dagit -f path/to/make_dagster_repo.py -n make_airflow_example_dags</cite></p>\n</dd>\n</dl>\n</div></blockquote>\n<dl class=\"field-list simple\">\n<dt class=\"field-odd\">Parameters</dt>\n<dd class=\"field-odd\"><p><strong>repo_name</strong> (<a class=\"reference external\" href=\"https://docs.python.org/3/library/stdtypes.html#str\" title=\"(in Python v3.8)\"><em>str</em></a>) \u2013 Name for generated RepositoryDefinition</p>\n</dd>\n<dt class=\"field-even\">Returns</dt>\n<dd class=\"field-even\"><p>RepositoryDefinition</p>\n</dd>\n</dl>\n</dd></dl>\n\n<dl class=\"py function\">\n<dt id=\"dagster_airflow.make_dagster_pipeline_from_airflow_dag\">\n<code class=\"sig-prename descclassname\"><span class=\"pre\">dagster_airflow.</span></code><code class=\"sig-name descname\"><span class=\"pre\">make_dagster_pipeline_from_airflow_dag</span></code><span class=\"sig-paren\">(</span><em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">dag</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">tags</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">None</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">use_airflow_template_context</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">False</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">unique_id</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">None</span></span></em><span class=\"sig-paren\">)</span><a class=\"reference internal\" href=\"../../../../../_modules/dagster_airflow/dagster_pipeline_factory#make_dagster_pipeline_from_airflow_dag\"><span class=\"viewcode-link\"><span class=\"pre\">[source]</span></span></a><a class=\"headerlink\" href=\"#dagster_airflow.make_dagster_pipeline_from_airflow_dag\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Construct a Dagster pipeline corresponding to a given Airflow DAG.</p>\n<p>Tasks in the resulting pipeline will execute the <code class=\"docutils literal notranslate\"><span class=\"pre\">execute()</span></code> method on the corresponding\nAirflow Operator. Dagster, any dependencies required by Airflow Operators, and the module\ncontaining your DAG definition must be available in the Python environment within which your\nDagster solids execute.</p>\n<p>To set Airflow\u2019s <code class=\"docutils literal notranslate\"><span class=\"pre\">execution_date</span></code> for use with Airflow Operator\u2019s <code class=\"docutils literal notranslate\"><span class=\"pre\">execute()</span></code> methods,\neither:</p>\n<ol class=\"arabic\">\n<li><dl>\n<dt>(Best for ad hoc runs) Run Pipeline with \u2018default\u2019 preset, which sets execution_date to the</dt><dd><p>time (in UTC) of pipeline invocation:</p>\n<div class=\"highlight-python notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"n\">execute_pipeline</span><span class=\"p\">(</span>\n    <span class=\"n\">pipeline</span><span class=\"o\">=</span><span class=\"n\">make_dagster_pipeline_from_airflow_dag</span><span class=\"p\">(</span><span class=\"n\">dag</span><span class=\"o\">=</span><span class=\"n\">dag</span><span class=\"p\">),</span>\n    <span class=\"n\">preset</span><span class=\"o\">=</span><span class=\"s1\">&#39;default&#39;</span><span class=\"p\">)</span>\n</pre></div>\n</div>\n</dd>\n</dl>\n</li>\n<li><p>Add <code class=\"docutils literal notranslate\"><span class=\"pre\">{'airflow_execution_date':</span> <span class=\"pre\">utc_date_string}</span></code> to the PipelineDefinition tags. This will\noverride behavior from (1).</p>\n<blockquote>\n<div><div class=\"highlight-python notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"n\">execute_pipeline</span><span class=\"p\">(</span>\n    <span class=\"n\">make_dagster_pipeline_from_airflow_dag</span><span class=\"p\">(</span>\n        <span class=\"n\">dag</span><span class=\"o\">=</span><span class=\"n\">dag</span><span class=\"p\">,</span>\n        <span class=\"n\">tags</span><span class=\"o\">=</span><span class=\"p\">{</span><span class=\"s1\">&#39;airflow_execution_date&#39;</span><span class=\"p\">:</span> <span class=\"n\">utc_execution_date_str</span><span class=\"p\">}</span>\n    <span class=\"p\">)</span>\n<span class=\"p\">)</span>\n</pre></div>\n</div>\n</div></blockquote>\n</li>\n<li><dl class=\"simple\">\n<dt>(Recommended) Add <code class=\"docutils literal notranslate\"><span class=\"pre\">{'airflow_execution_date':</span> <span class=\"pre\">utc_date_string}</span></code> to the PipelineRun tags,</dt><dd><p>such as in the Dagit UI. This will override behavior from (1) and (2)</p>\n</dd>\n</dl>\n</li>\n</ol>\n<p>We apply normalized_name() to the dag id and task ids when generating pipeline name and solid\nnames to ensure that names conform to Dagster\u2019s naming conventions.</p>\n<dl class=\"field-list simple\">\n<dt class=\"field-odd\">Parameters</dt>\n<dd class=\"field-odd\"><ul class=\"simple\">\n<li><p><strong>dag</strong> (<em>DAG</em>) \u2013 The Airflow DAG to compile into a Dagster pipeline</p></li>\n<li><p><strong>tags</strong> (<em>Dict</em><em>[</em><a class=\"reference external\" href=\"https://docs.python.org/3/library/stdtypes.html#str\" title=\"(in Python v3.8)\"><em>str</em></a><em>, </em><a class=\"reference internal\" href=\"../../config#dagster.Field\" title=\"dagster.Field\"><em>Field</em></a><em>]</em>) \u2013 Pipeline tags. Optionally include\n<cite>tags={\u2018airflow_execution_date\u2019: utc_date_string}</cite> to specify execution_date used within\nexecution of Airflow Operators.</p></li>\n<li><p><strong>use_airflow_template_context</strong> (<a class=\"reference external\" href=\"https://docs.python.org/3/library/functions.html#bool\" title=\"(in Python v3.8)\"><em>bool</em></a>) \u2013 If True, will call get_template_context() on the\nAirflow TaskInstance model which requires and modifies the DagRun table.\n(default: False)</p></li>\n<li><p><strong>unique_id</strong> (<a class=\"reference external\" href=\"https://docs.python.org/3/library/functions.html#int\" title=\"(in Python v3.8)\"><em>int</em></a>) \u2013 If not None, this id will be postpended to generated solid names. Used by\nframework authors to enforce unique solid names within a repo.</p></li>\n</ul>\n</dd>\n<dt class=\"field-even\">Returns</dt>\n<dd class=\"field-even\"><p>The generated Dagster pipeline</p>\n</dd>\n<dt class=\"field-odd\">Return type</dt>\n<dd class=\"field-odd\"><p>pipeline_def (<a class=\"reference internal\" href=\"../../pipeline#dagster.PipelineDefinition\" title=\"dagster.PipelineDefinition\">PipelineDefinition</a>)</p>\n</dd>\n</dl>\n</dd></dl>\n\n</div>\n", "current_page_name": "sections/api/apidocs/libraries/dagster-airflow", "customsidebar": null, "display_toc": false, "meta": null, "metatags": "", "next": {"link": "../dagster-aws/", "title": "AWS (dagster-aws)"}, "page_source_suffix": ".rst", "parents": [], "prev": {"link": "../dagster-airbyte/", "title": "Airbyte (dagster-airbyte)"}, "rellinks": [["genindex", "General Index", "I", "index"], ["py-modindex", "Python Module Index", "", "modules"], ["sections/api/apidocs/libraries/dagster-aws", "AWS (dagster-aws)", "N", "next"], ["sections/api/apidocs/libraries/dagster-airbyte", "Airbyte (dagster-airbyte)", "P", "previous"]], "sidebars": ["globaltoc.html", "searchbox.html"], "sourcename": "sections/api/apidocs/libraries/dagster-airflow.rst.txt", "title": "Airflow (dagster-airflow)", "toc": "<ul>\n<li><a class=\"reference internal\" href=\"#\">Airflow (dagster-airflow)</a></li>\n</ul>\n"}, "dagster-aws": {"alabaster_version": "0.7.12", "body": "<div class=\"section\" id=\"aws-dagster-aws\">\n<h1>AWS (dagster-aws)<a class=\"headerlink\" href=\"#aws-dagster-aws\" title=\"Permalink to this headline\">\u00b6</a></h1>\n<p>Utilities for interfacing with AWS with Dagster.</p>\n<div class=\"section\" id=\"s3\">\n<h2>S3<a class=\"headerlink\" href=\"#s3\" title=\"Permalink to this headline\">\u00b6</a></h2>\n<dl class=\"py class\">\n<dt id=\"dagster_aws.s3.S3ComputeLogManager\">\n<em class=\"property\"><span class=\"pre\">class</span> </em><code class=\"sig-prename descclassname\"><span class=\"pre\">dagster_aws.s3.</span></code><code class=\"sig-name descname\"><span class=\"pre\">S3ComputeLogManager</span></code><span class=\"sig-paren\">(</span><em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">bucket</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">local_dir</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">None</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">inst_data</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">None</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">prefix</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">'dagster'</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">use_ssl</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">True</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">verify</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">True</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">verify_cert_path</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">None</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">endpoint_url</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">None</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">skip_empty_files</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">False</span></span></em><span class=\"sig-paren\">)</span><a class=\"reference internal\" href=\"../../../../../_modules/dagster_aws/s3/compute_log_manager#S3ComputeLogManager\"><span class=\"viewcode-link\"><span class=\"pre\">[source]</span></span></a><a class=\"headerlink\" href=\"#dagster_aws.s3.S3ComputeLogManager\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Logs compute function stdout and stderr to S3.</p>\n<p>Users should not instantiate this class directly. Instead, use a YAML block in <code class=\"docutils literal notranslate\"><span class=\"pre\">dagster.yaml</span></code>\nsuch as the following:</p>\n<div class=\"highlight-YAML notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"nt\">compute_logs</span><span class=\"p\">:</span><span class=\"w\"></span>\n<span class=\"w\">  </span><span class=\"nt\">module</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"l l-Scalar l-Scalar-Plain\">dagster_aws.s3.compute_log_manager</span><span class=\"w\"></span>\n<span class=\"w\">  </span><span class=\"nt\">class</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"l l-Scalar l-Scalar-Plain\">S3ComputeLogManager</span><span class=\"w\"></span>\n<span class=\"w\">  </span><span class=\"nt\">config</span><span class=\"p\">:</span><span class=\"w\"></span>\n<span class=\"w\">    </span><span class=\"nt\">bucket</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"s\">&quot;mycorp-dagster-compute-logs&quot;</span><span class=\"w\"></span>\n<span class=\"w\">    </span><span class=\"nt\">local_dir</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"s\">&quot;/tmp/cool&quot;</span><span class=\"w\"></span>\n<span class=\"w\">    </span><span class=\"nt\">prefix</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"s\">&quot;dagster-test-&quot;</span><span class=\"w\"></span>\n<span class=\"w\">    </span><span class=\"nt\">use_ssl</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"l l-Scalar l-Scalar-Plain\">true</span><span class=\"w\"></span>\n<span class=\"w\">    </span><span class=\"nt\">verify</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"l l-Scalar l-Scalar-Plain\">true</span><span class=\"w\"></span>\n<span class=\"w\">    </span><span class=\"nt\">verify_cert_path</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"s\">&quot;/path/to/cert/bundle.pem&quot;</span><span class=\"w\"></span>\n<span class=\"w\">    </span><span class=\"nt\">endpoint_url</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"s\">&quot;http://alternate-s3-host.io&quot;</span><span class=\"w\"></span>\n<span class=\"w\">    </span><span class=\"nt\">skip_empty_files</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"l l-Scalar l-Scalar-Plain\">true</span><span class=\"w\"></span>\n</pre></div>\n</div>\n<dl class=\"field-list simple\">\n<dt class=\"field-odd\">Parameters</dt>\n<dd class=\"field-odd\"><ul class=\"simple\">\n<li><p><strong>bucket</strong> (<a class=\"reference external\" href=\"https://docs.python.org/3/library/stdtypes.html#str\" title=\"(in Python v3.8)\"><em>str</em></a>) \u2013 The name of the s3 bucket to which to log.</p></li>\n<li><p><strong>local_dir</strong> (<em>Optional</em><em>[</em><a class=\"reference external\" href=\"https://docs.python.org/3/library/stdtypes.html#str\" title=\"(in Python v3.8)\"><em>str</em></a><em>]</em>) \u2013 Path to the local directory in which to stage logs. Default:\n<code class=\"docutils literal notranslate\"><span class=\"pre\">dagster.seven.get_system_temp_directory()</span></code>.</p></li>\n<li><p><strong>prefix</strong> (<em>Optional</em><em>[</em><a class=\"reference external\" href=\"https://docs.python.org/3/library/stdtypes.html#str\" title=\"(in Python v3.8)\"><em>str</em></a><em>]</em>) \u2013 Prefix for the log file keys.</p></li>\n<li><p><strong>use_ssl</strong> (<em>Optional</em><em>[</em><a class=\"reference external\" href=\"https://docs.python.org/3/library/functions.html#bool\" title=\"(in Python v3.8)\"><em>bool</em></a><em>]</em>) \u2013 Whether or not to use SSL. Default True.</p></li>\n<li><p><strong>verify</strong> (<em>Optional</em><em>[</em><a class=\"reference external\" href=\"https://docs.python.org/3/library/functions.html#bool\" title=\"(in Python v3.8)\"><em>bool</em></a><em>]</em>) \u2013 Whether or not to verify SSL certificates. Default True.</p></li>\n<li><p><strong>verify_cert_path</strong> (<em>Optional</em><em>[</em><a class=\"reference external\" href=\"https://docs.python.org/3/library/stdtypes.html#str\" title=\"(in Python v3.8)\"><em>str</em></a><em>]</em>) \u2013 A filename of the CA cert bundle to use. Only used if\n<cite>verify</cite> set to False.</p></li>\n<li><p><strong>endpoint_url</strong> (<em>Optional</em><em>[</em><a class=\"reference external\" href=\"https://docs.python.org/3/library/stdtypes.html#str\" title=\"(in Python v3.8)\"><em>str</em></a><em>]</em>) \u2013 Override for the S3 endpoint url.</p></li>\n<li><p><strong>skip_empty_files</strong> \u2013 (Optional[bool]): Skip upload of empty log files.</p></li>\n<li><p><strong>inst_data</strong> (<em>Optional</em><em>[</em><a class=\"reference internal\" href=\"../../internals#dagster.serdes.ConfigurableClassData\" title=\"dagster.serdes.ConfigurableClassData\"><em>ConfigurableClassData</em></a><em>]</em>) \u2013 Serializable representation of the compute\nlog manager when newed up from config.</p></li>\n</ul>\n</dd>\n</dl>\n</dd></dl>\n\n<dl class=\"py class\">\n<dt id=\"dagster_aws.s3.S3FileHandle\">\n<em class=\"property\"><span class=\"pre\">class</span> </em><code class=\"sig-prename descclassname\"><span class=\"pre\">dagster_aws.s3.</span></code><code class=\"sig-name descname\"><span class=\"pre\">S3FileHandle</span></code><span class=\"sig-paren\">(</span><em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">s3_bucket</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">s3_key</span></span></em><span class=\"sig-paren\">)</span><a class=\"reference internal\" href=\"../../../../../_modules/dagster_aws/s3/file_manager#S3FileHandle\"><span class=\"viewcode-link\"><span class=\"pre\">[source]</span></span></a><a class=\"headerlink\" href=\"#dagster_aws.s3.S3FileHandle\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>A reference to a file on S3.</p>\n<dl class=\"py method\">\n<dt id=\"dagster_aws.s3.S3FileHandle.path_desc\">\n<em class=\"property\"><span class=\"pre\">property</span> </em><code class=\"sig-name descname\"><span class=\"pre\">path_desc</span></code><a class=\"headerlink\" href=\"#dagster_aws.s3.S3FileHandle.path_desc\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>The file\u2019s S3 URL.</p>\n<dl class=\"field-list simple\">\n<dt class=\"field-odd\">Type</dt>\n<dd class=\"field-odd\"><p><a class=\"reference external\" href=\"https://docs.python.org/3/library/stdtypes.html#str\" title=\"(in Python v3.8)\">str</a></p>\n</dd>\n</dl>\n</dd></dl>\n\n<dl class=\"py method\">\n<dt id=\"dagster_aws.s3.S3FileHandle.s3_bucket\">\n<em class=\"property\"><span class=\"pre\">property</span> </em><code class=\"sig-name descname\"><span class=\"pre\">s3_bucket</span></code><a class=\"headerlink\" href=\"#dagster_aws.s3.S3FileHandle.s3_bucket\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>The name of the S3 bucket.</p>\n<dl class=\"field-list simple\">\n<dt class=\"field-odd\">Type</dt>\n<dd class=\"field-odd\"><p><a class=\"reference external\" href=\"https://docs.python.org/3/library/stdtypes.html#str\" title=\"(in Python v3.8)\">str</a></p>\n</dd>\n</dl>\n</dd></dl>\n\n<dl class=\"py method\">\n<dt id=\"dagster_aws.s3.S3FileHandle.s3_key\">\n<em class=\"property\"><span class=\"pre\">property</span> </em><code class=\"sig-name descname\"><span class=\"pre\">s3_key</span></code><a class=\"headerlink\" href=\"#dagster_aws.s3.S3FileHandle.s3_key\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>The S3 key.</p>\n<dl class=\"field-list simple\">\n<dt class=\"field-odd\">Type</dt>\n<dd class=\"field-odd\"><p><a class=\"reference external\" href=\"https://docs.python.org/3/library/stdtypes.html#str\" title=\"(in Python v3.8)\">str</a></p>\n</dd>\n</dl>\n</dd></dl>\n\n<dl class=\"py method\">\n<dt id=\"dagster_aws.s3.S3FileHandle.s3_path\">\n<em class=\"property\"><span class=\"pre\">property</span> </em><code class=\"sig-name descname\"><span class=\"pre\">s3_path</span></code><a class=\"headerlink\" href=\"#dagster_aws.s3.S3FileHandle.s3_path\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>The file\u2019s S3 URL.</p>\n<dl class=\"field-list simple\">\n<dt class=\"field-odd\">Type</dt>\n<dd class=\"field-odd\"><p><a class=\"reference external\" href=\"https://docs.python.org/3/library/stdtypes.html#str\" title=\"(in Python v3.8)\">str</a></p>\n</dd>\n</dl>\n</dd></dl>\n\n</dd></dl>\n\n<dl class=\"py data\">\n<dt id=\"dagster_aws.s3.s3_file_manager\">\n<code class=\"sig-prename descclassname\"><span class=\"pre\">dagster_aws.s3.</span></code><code class=\"sig-name descname\"><span class=\"pre\">s3_file_manager</span></code><em class=\"property\"> <span class=\"pre\">ResourceDefinition</span></em><a class=\"reference internal\" href=\"../../../../../_modules/dagster_aws/s3/resources#s3_file_manager\"><span class=\"viewcode-link\"><span class=\"pre\">[source]</span></span></a><a class=\"headerlink\" href=\"#dagster_aws.s3.s3_file_manager\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><div class=\"line-block\">\n<div class=\"line\"><br /></div>\n</div>\n<details class=\"summary-config-schema\">\n<summary>Config Schema:</summary><dl class=\"field-list\">\n<dt class=\"field-odd\">use_unsigned_session (Bool, optional)</dt>\n<dd class=\"field-odd\"><p>Specifies whether to use an unsigned S3 session</p>\n<p><strong>Default Value:</strong> False</p>\n</dd>\n<dt class=\"field-even\">region_name (String, optional)</dt>\n<dd class=\"field-even\"><p>Specifies a custom region for the S3 session</p>\n</dd>\n<dt class=\"field-odd\">endpoint_url (dagster.StringSource, optional)</dt>\n<dd class=\"field-odd\"><p>Specifies a custom endpoint for the S3 session</p>\n</dd>\n<dt class=\"field-even\">max_attempts (Int, optional)</dt>\n<dd class=\"field-even\"><p>This provides Boto3\u2019s retry handler with a value of maximum retry attempts, where the initial call counts toward the max_attempts value that you provide</p>\n<p><strong>Default Value:</strong> 5</p>\n</dd>\n<dt class=\"field-odd\">profile_name (String, optional)</dt>\n<dd class=\"field-odd\"><p>Specifies a profile to connect that session</p>\n</dd>\n<dt class=\"field-even\">s3_bucket (dagster.StringSource)</dt>\n<dd class=\"field-even\"><p></p></dd>\n<dt class=\"field-odd\">s3_prefix (dagster.StringSource, optional)</dt>\n<dd class=\"field-odd\"><p><strong>Default Value:</strong> \u2018dagster\u2019</p>\n</dd>\n</dl>\n</details><p>FileManager that provides abstract access to S3.</p>\n<p>Implements the <a class=\"reference internal\" href=\"../../internals#dagster.core.storage.file_manager.FileManager\" title=\"dagster.core.storage.file_manager.FileManager\"><code class=\"xref py py-class docutils literal notranslate\"><span class=\"pre\">FileManager</span></code></a> API.</p>\n</dd></dl>\n\n<dl class=\"py data\">\n<dt id=\"dagster_aws.s3.s3_resource\">\n<code class=\"sig-prename descclassname\"><span class=\"pre\">dagster_aws.s3.</span></code><code class=\"sig-name descname\"><span class=\"pre\">s3_resource</span></code><em class=\"property\"> <span class=\"pre\">ResourceDefinition</span></em><a class=\"reference internal\" href=\"../../../../../_modules/dagster_aws/s3/resources#s3_resource\"><span class=\"viewcode-link\"><span class=\"pre\">[source]</span></span></a><a class=\"headerlink\" href=\"#dagster_aws.s3.s3_resource\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><div class=\"line-block\">\n<div class=\"line\"><br /></div>\n</div>\n<details class=\"summary-config-schema\">\n<summary>Config Schema:</summary><dl class=\"field-list\">\n<dt class=\"field-odd\">use_unsigned_session (Bool, optional)</dt>\n<dd class=\"field-odd\"><p>Specifies whether to use an unsigned S3 session</p>\n<p><strong>Default Value:</strong> False</p>\n</dd>\n<dt class=\"field-even\">region_name (String, optional)</dt>\n<dd class=\"field-even\"><p>Specifies a custom region for the S3 session</p>\n</dd>\n<dt class=\"field-odd\">endpoint_url (dagster.StringSource, optional)</dt>\n<dd class=\"field-odd\"><p>Specifies a custom endpoint for the S3 session</p>\n</dd>\n<dt class=\"field-even\">max_attempts (Int, optional)</dt>\n<dd class=\"field-even\"><p>This provides Boto3\u2019s retry handler with a value of maximum retry attempts, where the initial call counts toward the max_attempts value that you provide</p>\n<p><strong>Default Value:</strong> 5</p>\n</dd>\n<dt class=\"field-odd\">profile_name (String, optional)</dt>\n<dd class=\"field-odd\"><p>Specifies a profile to connect that session</p>\n</dd>\n</dl>\n</details><p>Resource that gives access to S3.</p>\n<p>The underlying S3 session is created by calling\n<code class=\"xref py py-func docutils literal notranslate\"><span class=\"pre\">boto3.session.Session(profile_name)</span></code>.\nThe returned resource object is an S3 client, an instance of <cite>botocore.client.S3</cite>.</p>\n<p class=\"rubric\">Example</p>\n<div class=\"highlight-python notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"kn\">from</span> <span class=\"nn\">dagster</span> <span class=\"kn\">import</span> <span class=\"n\">build_op_context</span><span class=\"p\">,</span> <span class=\"n\">job</span><span class=\"p\">,</span> <span class=\"n\">op</span>\n<span class=\"kn\">from</span> <span class=\"nn\">dagster_aws.s3</span> <span class=\"kn\">import</span> <span class=\"n\">s3_resource</span>\n\n<span class=\"nd\">@op</span><span class=\"p\">(</span><span class=\"n\">required_resource_keys</span><span class=\"o\">=</span><span class=\"p\">{</span><span class=\"s1\">&#39;s3&#39;</span><span class=\"p\">})</span>\n<span class=\"k\">def</span> <span class=\"nf\">example_s3_op</span><span class=\"p\">(</span><span class=\"n\">context</span><span class=\"p\">):</span>\n    <span class=\"k\">return</span> <span class=\"n\">context</span><span class=\"o\">.</span><span class=\"n\">resources</span><span class=\"o\">.</span><span class=\"n\">s3</span><span class=\"o\">.</span><span class=\"n\">list_objects_v2</span><span class=\"p\">(</span>\n        <span class=\"n\">Bucket</span><span class=\"o\">=</span><span class=\"s1\">&#39;my-bucket&#39;</span><span class=\"p\">,</span>\n        <span class=\"n\">Prefix</span><span class=\"o\">=</span><span class=\"s1\">&#39;some-key&#39;</span>\n    <span class=\"p\">)</span>\n\n<span class=\"nd\">@job</span><span class=\"p\">(</span><span class=\"n\">resource_defs</span><span class=\"o\">=</span><span class=\"p\">{</span><span class=\"s1\">&#39;s3&#39;</span><span class=\"p\">:</span> <span class=\"n\">s3_resource</span><span class=\"p\">})</span>\n<span class=\"k\">def</span> <span class=\"nf\">example_job</span><span class=\"p\">(</span><span class=\"n\">context</span><span class=\"p\">):</span>\n    <span class=\"n\">example_s3_op</span><span class=\"p\">()</span>\n\n<span class=\"n\">example_job</span><span class=\"o\">.</span><span class=\"n\">execute_in_process</span><span class=\"p\">(</span>\n    <span class=\"n\">run_config</span><span class=\"o\">=</span><span class=\"p\">{</span>\n        <span class=\"s1\">&#39;resources&#39;</span><span class=\"p\">:</span> <span class=\"p\">{</span>\n            <span class=\"s1\">&#39;s3&#39;</span><span class=\"p\">:</span> <span class=\"p\">{</span>\n                <span class=\"s1\">&#39;config&#39;</span><span class=\"p\">:</span> <span class=\"p\">{</span>\n                    <span class=\"s1\">&#39;region_name&#39;</span><span class=\"p\">:</span> <span class=\"s1\">&#39;us-west-1&#39;</span><span class=\"p\">,</span>\n                <span class=\"p\">}</span>\n            <span class=\"p\">}</span>\n        <span class=\"p\">}</span>\n    <span class=\"p\">}</span>\n<span class=\"p\">)</span>\n</pre></div>\n</div>\n<p>Note that your ops must also declare that they require this resource with\n<cite>required_resource_keys</cite>, or it will not be initialized for the execution of their compute\nfunctions.</p>\n<p>You may configure this resource as follows:</p>\n<div class=\"highlight-YAML notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"nt\">resources</span><span class=\"p\">:</span><span class=\"w\"></span>\n<span class=\"w\">  </span><span class=\"nt\">s3</span><span class=\"p\">:</span><span class=\"w\"></span>\n<span class=\"w\">    </span><span class=\"nt\">config</span><span class=\"p\">:</span><span class=\"w\"></span>\n<span class=\"w\">      </span><span class=\"nt\">region_name</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"s\">&quot;us-west-1&quot;</span><span class=\"w\"></span>\n<span class=\"w\">      </span><span class=\"c1\"># Optional[str]: Specifies a custom region for the S3 session. Default is chosen</span><span class=\"w\"></span>\n<span class=\"w\">      </span><span class=\"c1\"># through the ordinary boto credential chain.</span><span class=\"w\"></span>\n<span class=\"w\">      </span><span class=\"nt\">use_unsigned_session</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"l l-Scalar l-Scalar-Plain\">false</span><span class=\"w\"></span>\n<span class=\"w\">      </span><span class=\"c1\"># Optional[bool]: Specifies whether to use an unsigned S3 session. Default: True</span><span class=\"w\"></span>\n<span class=\"w\">      </span><span class=\"nt\">endpoint_url</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"s\">&quot;http://localhost&quot;</span><span class=\"w\"></span>\n<span class=\"w\">      </span><span class=\"c1\"># Optional[str]: Specifies a custom endpoint for the S3 session. Default is None.</span><span class=\"w\"></span>\n<span class=\"w\">      </span><span class=\"nt\">profile_name</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"s\">&quot;dev&quot;</span><span class=\"w\"></span>\n<span class=\"w\">      </span><span class=\"c1\"># Optional[str]: Specifies a custom profile for S3 session. Default is default</span><span class=\"w\"></span>\n<span class=\"w\">      </span><span class=\"c1\"># profile as specified in ~/.aws/credentials file</span><span class=\"w\"></span>\n</pre></div>\n</div>\n</dd></dl>\n\n<dl class=\"py data\">\n<dt id=\"dagster_aws.s3.S3Coordinate\">\n<code class=\"sig-prename descclassname\"><span class=\"pre\">dagster_aws.s3.</span></code><code class=\"sig-name descname\"><span class=\"pre\">S3Coordinate</span></code><em class=\"property\"> <span class=\"pre\">DagsterType</span></em><a class=\"headerlink\" href=\"#dagster_aws.s3.S3Coordinate\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>A <a class=\"reference internal\" href=\"../../types#dagster.DagsterType\" title=\"dagster.DagsterType\"><code class=\"xref py py-class docutils literal notranslate\"><span class=\"pre\">dagster.DagsterType</span></code></a> intended to make it easier to pass information about files on S3\nfrom op to op. Objects of this type should be dicts with <code class=\"docutils literal notranslate\"><span class=\"pre\">'bucket'</span></code> and <code class=\"docutils literal notranslate\"><span class=\"pre\">'key'</span></code> keys,\nand may be hydrated from config in the intuitive way, e.g., for an input with the name\n<code class=\"docutils literal notranslate\"><span class=\"pre\">s3_file</span></code>:</p>\n<div class=\"highlight-YAML notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"nt\">inputs</span><span class=\"p\">:</span><span class=\"w\"></span>\n<span class=\"w\">  </span><span class=\"nt\">s3_file</span><span class=\"p\">:</span><span class=\"w\"></span>\n<span class=\"w\">    </span><span class=\"nt\">value</span><span class=\"p\">:</span><span class=\"w\"></span>\n<span class=\"w\">      </span><span class=\"nt\">bucket</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"l l-Scalar l-Scalar-Plain\">my-bucket</span><span class=\"w\"></span>\n<span class=\"w\">      </span><span class=\"nt\">key</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"l l-Scalar l-Scalar-Plain\">my-key</span><span class=\"w\"></span>\n</pre></div>\n</div>\n</dd></dl>\n\n<dl class=\"py data\">\n<dt id=\"dagster_aws.s3.s3_pickle_io_manager\">\n<code class=\"sig-prename descclassname\"><span class=\"pre\">dagster_aws.s3.</span></code><code class=\"sig-name descname\"><span class=\"pre\">s3_pickle_io_manager</span></code><em class=\"property\"> <span class=\"pre\">IOManagerDefinition</span></em><a class=\"reference internal\" href=\"../../../../../_modules/dagster_aws/s3/io_manager#s3_pickle_io_manager\"><span class=\"viewcode-link\"><span class=\"pre\">[source]</span></span></a><a class=\"headerlink\" href=\"#dagster_aws.s3.s3_pickle_io_manager\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><div class=\"line-block\">\n<div class=\"line\"><br /></div>\n</div>\n<details class=\"summary-config-schema\">\n<summary>Config Schema:</summary><dl class=\"field-list simple\">\n<dt class=\"field-odd\">s3_bucket (dagster.StringSource)</dt>\n<dd class=\"field-odd\"><p></p></dd>\n<dt class=\"field-even\">s3_prefix (dagster.StringSource, optional)</dt>\n<dd class=\"field-even\"><p><strong>Default Value:</strong> \u2018dagster\u2019</p>\n</dd>\n</dl>\n</details><p>Persistent IO manager using S3 for storage.</p>\n<p>Serializes objects via pickling. Suitable for objects storage for distributed executors, so long\nas each execution node has network connectivity and credentials for S3 and the backing bucket.</p>\n<p>Assigns each op output to a unique filepath containing run ID, step key, and output name.\nAssigns each asset to a single filesystem path, at \u201c&lt;base_dir&gt;/&lt;asset_key&gt;\u201d. If the asset key\nhas multiple components, the final component is used as the name of the file, and the preceding\ncomponents as parent directories under the base_dir.</p>\n<p>Subsequent materializations of an asset will overwrite previous materializations of that asset.\nWith a base directory of \u201c/my/base/path\u201d, an asset with key\n<cite>AssetKey([\u201cone\u201d, \u201ctwo\u201d, \u201cthree\u201d])</cite> would be stored in a file called \u201cthree\u201d in a directory\nwith path \u201c/my/base/path/one/two/\u201d.</p>\n<p>Attach this resource definition to your job to make it available to your ops.</p>\n<div class=\"highlight-python notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"nd\">@job</span><span class=\"p\">(</span><span class=\"n\">resource_defs</span><span class=\"o\">=</span><span class=\"p\">{</span><span class=\"s1\">&#39;io_manager&#39;</span><span class=\"p\">:</span> <span class=\"n\">s3_pickle_io_manager</span><span class=\"p\">,</span> <span class=\"s2\">&quot;s3&quot;</span><span class=\"p\">:</span> <span class=\"n\">s3_resource</span><span class=\"p\">,</span> <span class=\"o\">...</span><span class=\"p\">})</span>\n<span class=\"k\">def</span> <span class=\"nf\">my_job</span><span class=\"p\">():</span>\n    <span class=\"o\">...</span>\n</pre></div>\n</div>\n<p>You may configure this storage as follows:</p>\n<div class=\"highlight-YAML notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"nt\">resources</span><span class=\"p\">:</span><span class=\"w\"></span>\n<span class=\"w\">    </span><span class=\"nt\">io_manager</span><span class=\"p\">:</span><span class=\"w\"></span>\n<span class=\"w\">        </span><span class=\"nt\">config</span><span class=\"p\">:</span><span class=\"w\"></span>\n<span class=\"w\">            </span><span class=\"nt\">s3_bucket</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"l l-Scalar l-Scalar-Plain\">my-cool-bucket</span><span class=\"w\"></span>\n<span class=\"w\">            </span><span class=\"nt\">s3_prefix</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"l l-Scalar l-Scalar-Plain\">good/prefix-for-files-</span><span class=\"w\"></span>\n</pre></div>\n</div>\n</dd></dl>\n\n</div>\n<div class=\"section\" id=\"ecs\">\n<h2>ECS<a class=\"headerlink\" href=\"#ecs\" title=\"Permalink to this headline\">\u00b6</a></h2>\n<dl class=\"py data\">\n<dt id=\"dagster_aws.ecs.EcsRunLauncher\">\n<code class=\"sig-prename descclassname\"><span class=\"pre\">dagster_aws.ecs.</span></code><code class=\"sig-name descname\"><span class=\"pre\">EcsRunLauncher</span></code><em class=\"property\"> <span class=\"pre\">RunLauncher</span></em><a class=\"reference internal\" href=\"../../../../../_modules/dagster_aws/ecs/launcher#EcsRunLauncher\"><span class=\"viewcode-link\"><span class=\"pre\">[source]</span></span></a><a class=\"headerlink\" href=\"#dagster_aws.ecs.EcsRunLauncher\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><div class=\"line-block\">\n<div class=\"line\"><br /></div>\n</div>\n<details class=\"summary-config-schema\">\n<summary>Config Schema:</summary><dl class=\"field-list\">\n<dt class=\"field-odd\">task_definition (dagster.StringSource, optional)</dt>\n<dd class=\"field-odd\"><p>The task definition to use when launching new tasks. If none is provided, each run will create its own task definition.</p>\n</dd>\n<dt class=\"field-even\">container_name (dagster.StringSource, optional)</dt>\n<dd class=\"field-even\"><p>The container name to use when launching new tasks. Defaults to \u2018run\u2019.</p>\n<p><strong>Default Value:</strong> \u2018run\u2019</p>\n</dd>\n<dt class=\"field-odd\">secrets (List[Union[String, strict dict]], optional)</dt>\n<dd class=\"field-odd\"><p>An array of AWS Secrets Manager secrets. These secrets will be mounted as environment variables in the container. See <a class=\"reference external\" href=\"https://docs.aws.amazon.com/AmazonECS/latest/APIReference/API_Secret.html\">https://docs.aws.amazon.com/AmazonECS/latest/APIReference/API_Secret.html</a>.</p>\n</dd>\n<dt class=\"field-even\">secrets_tag (Union[dagster.StringSource, None], optional)</dt>\n<dd class=\"field-even\"><p>AWS Secrets Manager secrets with this tag will be mounted as environment variables in the container. Defaults to \u2018dagster\u2019.</p>\n<p><strong>Default Value:</strong> \u2018dagster\u2019</p>\n</dd>\n<dt class=\"field-odd\">include_sidecars (Bool, optional)</dt>\n<dd class=\"field-odd\"><p>Whether each run should use the same sidecars as the task that launches it. Defaults to False.</p>\n<p><strong>Default Value:</strong> False</p>\n</dd>\n<dt class=\"field-even\">env_vars (List[dagster.StringSource], optional)</dt>\n<dd class=\"field-even\"><p>List of environment variable names to include in the ECS task. Each can be of the form KEY=VALUE or just KEY (in which case the value will be pulled from the current process)</p>\n</dd>\n</dl>\n</details><p>RunLauncher that starts a task in ECS for each Dagster job run.</p>\n</dd></dl>\n\n</div>\n<div class=\"section\" id=\"redshift\">\n<h2>Redshift<a class=\"headerlink\" href=\"#redshift\" title=\"Permalink to this headline\">\u00b6</a></h2>\n<dl class=\"py data\">\n<dt id=\"dagster_aws.redshift.redshift_resource\">\n<code class=\"sig-prename descclassname\"><span class=\"pre\">dagster_aws.redshift.</span></code><code class=\"sig-name descname\"><span class=\"pre\">redshift_resource</span></code><em class=\"property\"> <span class=\"pre\">ResourceDefinition</span></em><a class=\"reference internal\" href=\"../../../../../_modules/dagster_aws/redshift/resources#redshift_resource\"><span class=\"viewcode-link\"><span class=\"pre\">[source]</span></span></a><a class=\"headerlink\" href=\"#dagster_aws.redshift.redshift_resource\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><div class=\"line-block\">\n<div class=\"line\"><br /></div>\n</div>\n<details class=\"summary-config-schema\">\n<summary>Config Schema:</summary><dl class=\"field-list\">\n<dt class=\"field-odd\">host (dagster.StringSource)</dt>\n<dd class=\"field-odd\"><p>Redshift host</p>\n</dd>\n<dt class=\"field-even\">port (dagster.IntSource, optional)</dt>\n<dd class=\"field-even\"><p>Redshift port</p>\n<p><strong>Default Value:</strong> 5439</p>\n</dd>\n<dt class=\"field-odd\">user (dagster.StringSource, optional)</dt>\n<dd class=\"field-odd\"><p>Username for Redshift connection</p>\n</dd>\n<dt class=\"field-even\">password (dagster.StringSource, optional)</dt>\n<dd class=\"field-even\"><p>Password for Redshift connection</p>\n</dd>\n<dt class=\"field-odd\">database (dagster.StringSource, optional)</dt>\n<dd class=\"field-odd\"><p>Name of the default database to use. After login, you can use USE DATABASE to change the database.</p>\n</dd>\n<dt class=\"field-even\">schema (dagster.StringSource, optional)</dt>\n<dd class=\"field-even\"><p>Name of the default schema to use. After login, you can use USE SCHEMA to change the schema.</p>\n</dd>\n<dt class=\"field-odd\">autocommit (Bool, optional)</dt>\n<dd class=\"field-odd\"><p>None by default, which honors the Redshift parameter AUTOCOMMIT. Set to True or False to enable or disable autocommit mode in the session, respectively.</p>\n</dd>\n<dt class=\"field-even\">connect_timeout (Int, optional)</dt>\n<dd class=\"field-even\"><p>Connection timeout in seconds. 5 seconds by default</p>\n<p><strong>Default Value:</strong> 5</p>\n</dd>\n<dt class=\"field-odd\">sslmode (String, optional)</dt>\n<dd class=\"field-odd\"><p>SSL mode to use. See the Redshift documentation for more information on usage: <a class=\"reference external\" href=\"https://docs.aws.amazon.com/redshift/latest/mgmt/connecting-ssl-support.html\">https://docs.aws.amazon.com/redshift/latest/mgmt/connecting-ssl-support.html</a></p>\n<p><strong>Default Value:</strong> \u2018require\u2019</p>\n</dd>\n</dl>\n</details><p>This resource enables connecting to a Redshift cluster and issuing queries against that\ncluster.</p>\n<p class=\"rubric\">Example</p>\n<div class=\"highlight-python notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"kn\">from</span> <span class=\"nn\">dagster</span> <span class=\"kn\">import</span> <span class=\"n\">build_op_context</span><span class=\"p\">,</span> <span class=\"n\">op</span>\n<span class=\"kn\">from</span> <span class=\"nn\">dagster_aws.redshift</span> <span class=\"kn\">import</span> <span class=\"n\">redshift_resource</span>\n\n<span class=\"nd\">@op</span><span class=\"p\">(</span><span class=\"n\">required_resource_keys</span><span class=\"o\">=</span><span class=\"p\">{</span><span class=\"s1\">&#39;redshift&#39;</span><span class=\"p\">})</span>\n<span class=\"k\">def</span> <span class=\"nf\">example_redshift_op</span><span class=\"p\">(</span><span class=\"n\">context</span><span class=\"p\">):</span>\n    <span class=\"k\">return</span> <span class=\"n\">context</span><span class=\"o\">.</span><span class=\"n\">resources</span><span class=\"o\">.</span><span class=\"n\">redshift</span><span class=\"o\">.</span><span class=\"n\">execute_query</span><span class=\"p\">(</span><span class=\"s1\">&#39;SELECT 1&#39;</span><span class=\"p\">,</span> <span class=\"n\">fetch_results</span><span class=\"o\">=</span><span class=\"kc\">True</span><span class=\"p\">)</span>\n\n<span class=\"n\">redshift_configured</span> <span class=\"o\">=</span> <span class=\"n\">redshift_resource</span><span class=\"o\">.</span><span class=\"n\">configured</span><span class=\"p\">({</span>\n    <span class=\"s1\">&#39;host&#39;</span><span class=\"p\">:</span> <span class=\"s1\">&#39;my-redshift-cluster.us-east-1.redshift.amazonaws.com&#39;</span><span class=\"p\">,</span>\n    <span class=\"s1\">&#39;port&#39;</span><span class=\"p\">:</span> <span class=\"mi\">5439</span><span class=\"p\">,</span>\n    <span class=\"s1\">&#39;user&#39;</span><span class=\"p\">:</span> <span class=\"s1\">&#39;dagster&#39;</span><span class=\"p\">,</span>\n    <span class=\"s1\">&#39;password&#39;</span><span class=\"p\">:</span> <span class=\"s1\">&#39;dagster&#39;</span><span class=\"p\">,</span>\n    <span class=\"s1\">&#39;database&#39;</span><span class=\"p\">:</span> <span class=\"s1\">&#39;dev&#39;</span><span class=\"p\">,</span>\n<span class=\"p\">})</span>\n<span class=\"n\">context</span> <span class=\"o\">=</span> <span class=\"n\">build_op_context</span><span class=\"p\">(</span><span class=\"n\">resources</span><span class=\"o\">=</span><span class=\"p\">{</span><span class=\"s1\">&#39;redshift&#39;</span><span class=\"p\">:</span> <span class=\"n\">redshift_configured</span><span class=\"p\">})</span>\n<span class=\"k\">assert</span> <span class=\"n\">example_redshift_op</span><span class=\"p\">(</span><span class=\"n\">context</span><span class=\"p\">)</span> <span class=\"o\">==</span> <span class=\"p\">[(</span><span class=\"mi\">1</span><span class=\"p\">,)]</span>\n</pre></div>\n</div>\n</dd></dl>\n\n<div class=\"section\" id=\"testing\">\n<h3>Testing<a class=\"headerlink\" href=\"#testing\" title=\"Permalink to this headline\">\u00b6</a></h3>\n<dl class=\"py data\">\n<dt id=\"dagster_aws.redshift.fake_redshift_resource\">\n<code class=\"sig-prename descclassname\"><span class=\"pre\">dagster_aws.redshift.</span></code><code class=\"sig-name descname\"><span class=\"pre\">fake_redshift_resource</span></code><em class=\"property\"> <span class=\"pre\">ResourceDefinition</span></em><a class=\"reference internal\" href=\"../../../../../_modules/dagster_aws/redshift/resources#fake_redshift_resource\"><span class=\"viewcode-link\"><span class=\"pre\">[source]</span></span></a><a class=\"headerlink\" href=\"#dagster_aws.redshift.fake_redshift_resource\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><div class=\"line-block\">\n<div class=\"line\"><br /></div>\n</div>\n<details class=\"summary-config-schema\">\n<summary>Config Schema:</summary><dl class=\"field-list\">\n<dt class=\"field-odd\">host (dagster.StringSource)</dt>\n<dd class=\"field-odd\"><p>Redshift host</p>\n</dd>\n<dt class=\"field-even\">port (dagster.IntSource, optional)</dt>\n<dd class=\"field-even\"><p>Redshift port</p>\n<p><strong>Default Value:</strong> 5439</p>\n</dd>\n<dt class=\"field-odd\">user (dagster.StringSource, optional)</dt>\n<dd class=\"field-odd\"><p>Username for Redshift connection</p>\n</dd>\n<dt class=\"field-even\">password (dagster.StringSource, optional)</dt>\n<dd class=\"field-even\"><p>Password for Redshift connection</p>\n</dd>\n<dt class=\"field-odd\">database (dagster.StringSource, optional)</dt>\n<dd class=\"field-odd\"><p>Name of the default database to use. After login, you can use USE DATABASE to change the database.</p>\n</dd>\n<dt class=\"field-even\">schema (dagster.StringSource, optional)</dt>\n<dd class=\"field-even\"><p>Name of the default schema to use. After login, you can use USE SCHEMA to change the schema.</p>\n</dd>\n<dt class=\"field-odd\">autocommit (Bool, optional)</dt>\n<dd class=\"field-odd\"><p>None by default, which honors the Redshift parameter AUTOCOMMIT. Set to True or False to enable or disable autocommit mode in the session, respectively.</p>\n</dd>\n<dt class=\"field-even\">connect_timeout (Int, optional)</dt>\n<dd class=\"field-even\"><p>Connection timeout in seconds. 5 seconds by default</p>\n<p><strong>Default Value:</strong> 5</p>\n</dd>\n<dt class=\"field-odd\">sslmode (String, optional)</dt>\n<dd class=\"field-odd\"><p>SSL mode to use. See the Redshift documentation for more information on usage: <a class=\"reference external\" href=\"https://docs.aws.amazon.com/redshift/latest/mgmt/connecting-ssl-support.html\">https://docs.aws.amazon.com/redshift/latest/mgmt/connecting-ssl-support.html</a></p>\n<p><strong>Default Value:</strong> \u2018require\u2019</p>\n</dd>\n</dl>\n</details></dd></dl>\n\n</div>\n</div>\n<div class=\"section\" id=\"emr\">\n<h2>EMR<a class=\"headerlink\" href=\"#emr\" title=\"Permalink to this headline\">\u00b6</a></h2>\n<dl class=\"py data\">\n<dt id=\"dagster_aws.emr.emr_pyspark_step_launcher\">\n<code class=\"sig-prename descclassname\"><span class=\"pre\">dagster_aws.emr.</span></code><code class=\"sig-name descname\"><span class=\"pre\">emr_pyspark_step_launcher</span></code><em class=\"property\"> <span class=\"pre\">ResourceDefinition</span></em><a class=\"reference internal\" href=\"../../../../../_modules/dagster_aws/emr/pyspark_step_launcher#emr_pyspark_step_launcher\"><span class=\"viewcode-link\"><span class=\"pre\">[source]</span></span></a><a class=\"headerlink\" href=\"#dagster_aws.emr.emr_pyspark_step_launcher\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><div class=\"line-block\">\n<div class=\"line\"><br /></div>\n</div>\n<details class=\"summary-config-schema\">\n<summary>Config Schema:</summary><dl class=\"field-list\">\n<dt class=\"field-odd\">spark_config (permissive dict, optional)</dt>\n<dd class=\"field-odd\"><details class=\"summary-default-value\">\n<summary>Default Value:</summary><div class=\"highlight-javascript notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"p\">{</span>\n    <span class=\"s2\">&quot;spark&quot;</span><span class=\"o\">:</span> <span class=\"p\">{</span>\n        <span class=\"s2\">&quot;app&quot;</span><span class=\"o\">:</span> <span class=\"p\">{},</span>\n        <span class=\"s2\">&quot;driver&quot;</span><span class=\"o\">:</span> <span class=\"p\">{</span>\n            <span class=\"s2\">&quot;blockManager&quot;</span><span class=\"o\">:</span> <span class=\"p\">{}</span>\n        <span class=\"p\">},</span>\n        <span class=\"s2\">&quot;executor&quot;</span><span class=\"o\">:</span> <span class=\"p\">{</span>\n            <span class=\"s2\">&quot;pyspark&quot;</span><span class=\"o\">:</span> <span class=\"p\">{},</span>\n            <span class=\"s2\">&quot;logs&quot;</span><span class=\"o\">:</span> <span class=\"p\">{</span>\n                <span class=\"s2\">&quot;rolling&quot;</span><span class=\"o\">:</span> <span class=\"p\">{</span>\n                    <span class=\"s2\">&quot;time&quot;</span><span class=\"o\">:</span> <span class=\"p\">{}</span>\n                <span class=\"p\">}</span>\n            <span class=\"p\">}</span>\n        <span class=\"p\">},</span>\n        <span class=\"s2\">&quot;local&quot;</span><span class=\"o\">:</span> <span class=\"p\">{},</span>\n        <span class=\"s2\">&quot;submit&quot;</span><span class=\"o\">:</span> <span class=\"p\">{},</span>\n        <span class=\"s2\">&quot;log&quot;</span><span class=\"o\">:</span> <span class=\"p\">{},</span>\n        <span class=\"s2\">&quot;redaction&quot;</span><span class=\"o\">:</span> <span class=\"p\">{},</span>\n        <span class=\"s2\">&quot;python&quot;</span><span class=\"o\">:</span> <span class=\"p\">{</span>\n            <span class=\"s2\">&quot;profile&quot;</span><span class=\"o\">:</span> <span class=\"p\">{},</span>\n            <span class=\"s2\">&quot;worker&quot;</span><span class=\"o\">:</span> <span class=\"p\">{}</span>\n        <span class=\"p\">},</span>\n        <span class=\"s2\">&quot;files&quot;</span><span class=\"o\">:</span> <span class=\"p\">{},</span>\n        <span class=\"s2\">&quot;jars&quot;</span><span class=\"o\">:</span> <span class=\"p\">{},</span>\n        <span class=\"s2\">&quot;pyspark&quot;</span><span class=\"o\">:</span> <span class=\"p\">{</span>\n            <span class=\"s2\">&quot;driver&quot;</span><span class=\"o\">:</span> <span class=\"p\">{}</span>\n        <span class=\"p\">},</span>\n        <span class=\"s2\">&quot;reducer&quot;</span><span class=\"o\">:</span> <span class=\"p\">{},</span>\n        <span class=\"s2\">&quot;shuffle&quot;</span><span class=\"o\">:</span> <span class=\"p\">{</span>\n            <span class=\"s2\">&quot;file&quot;</span><span class=\"o\">:</span> <span class=\"p\">{},</span>\n            <span class=\"s2\">&quot;io&quot;</span><span class=\"o\">:</span> <span class=\"p\">{},</span>\n            <span class=\"s2\">&quot;service&quot;</span><span class=\"o\">:</span> <span class=\"p\">{</span>\n                <span class=\"s2\">&quot;index&quot;</span><span class=\"o\">:</span> <span class=\"p\">{</span>\n                    <span class=\"s2\">&quot;cache&quot;</span><span class=\"o\">:</span> <span class=\"p\">{}</span>\n                <span class=\"p\">}</span>\n            <span class=\"p\">},</span>\n            <span class=\"s2\">&quot;sort&quot;</span><span class=\"o\">:</span> <span class=\"p\">{},</span>\n            <span class=\"s2\">&quot;spill&quot;</span><span class=\"o\">:</span> <span class=\"p\">{},</span>\n            <span class=\"s2\">&quot;registration&quot;</span><span class=\"o\">:</span> <span class=\"p\">{}</span>\n        <span class=\"p\">},</span>\n        <span class=\"s2\">&quot;eventLog&quot;</span><span class=\"o\">:</span> <span class=\"p\">{</span>\n            <span class=\"s2\">&quot;logBlockUpdates&quot;</span><span class=\"o\">:</span> <span class=\"p\">{},</span>\n            <span class=\"s2\">&quot;longForm&quot;</span><span class=\"o\">:</span> <span class=\"p\">{},</span>\n            <span class=\"s2\">&quot;buffer&quot;</span><span class=\"o\">:</span> <span class=\"p\">{}</span>\n        <span class=\"p\">},</span>\n        <span class=\"s2\">&quot;ui&quot;</span><span class=\"o\">:</span> <span class=\"p\">{</span>\n            <span class=\"s2\">&quot;dagGraph&quot;</span><span class=\"o\">:</span> <span class=\"p\">{},</span>\n            <span class=\"s2\">&quot;liveUpdate&quot;</span><span class=\"o\">:</span> <span class=\"p\">{}</span>\n        <span class=\"p\">},</span>\n        <span class=\"s2\">&quot;worker&quot;</span><span class=\"o\">:</span> <span class=\"p\">{</span>\n            <span class=\"s2\">&quot;ui&quot;</span><span class=\"o\">:</span> <span class=\"p\">{}</span>\n        <span class=\"p\">},</span>\n        <span class=\"s2\">&quot;sql&quot;</span><span class=\"o\">:</span> <span class=\"p\">{</span>\n            <span class=\"s2\">&quot;ui&quot;</span><span class=\"o\">:</span> <span class=\"p\">{}</span>\n        <span class=\"p\">},</span>\n        <span class=\"s2\">&quot;streaming&quot;</span><span class=\"o\">:</span> <span class=\"p\">{</span>\n            <span class=\"s2\">&quot;ui&quot;</span><span class=\"o\">:</span> <span class=\"p\">{},</span>\n            <span class=\"s2\">&quot;backpressure&quot;</span><span class=\"o\">:</span> <span class=\"p\">{},</span>\n            <span class=\"s2\">&quot;receiver&quot;</span><span class=\"o\">:</span> <span class=\"p\">{</span>\n                <span class=\"s2\">&quot;writeAheadLog&quot;</span><span class=\"o\">:</span> <span class=\"p\">{}</span>\n            <span class=\"p\">},</span>\n            <span class=\"s2\">&quot;kafka&quot;</span><span class=\"o\">:</span> <span class=\"p\">{},</span>\n            <span class=\"s2\">&quot;driver&quot;</span><span class=\"o\">:</span> <span class=\"p\">{</span>\n                <span class=\"s2\">&quot;writeAheadLog&quot;</span><span class=\"o\">:</span> <span class=\"p\">{}</span>\n            <span class=\"p\">}</span>\n        <span class=\"p\">},</span>\n        <span class=\"s2\">&quot;broadcast&quot;</span><span class=\"o\">:</span> <span class=\"p\">{},</span>\n        <span class=\"s2\">&quot;io&quot;</span><span class=\"o\">:</span> <span class=\"p\">{</span>\n            <span class=\"s2\">&quot;compression&quot;</span><span class=\"o\">:</span> <span class=\"p\">{</span>\n                <span class=\"s2\">&quot;lz4&quot;</span><span class=\"o\">:</span> <span class=\"p\">{},</span>\n                <span class=\"s2\">&quot;snappy&quot;</span><span class=\"o\">:</span> <span class=\"p\">{},</span>\n                <span class=\"s2\">&quot;zstd&quot;</span><span class=\"o\">:</span> <span class=\"p\">{}</span>\n            <span class=\"p\">}</span>\n        <span class=\"p\">},</span>\n        <span class=\"s2\">&quot;kryo&quot;</span><span class=\"o\">:</span> <span class=\"p\">{},</span>\n        <span class=\"s2\">&quot;kryoserializer&quot;</span><span class=\"o\">:</span> <span class=\"p\">{</span>\n            <span class=\"s2\">&quot;buffer&quot;</span><span class=\"o\">:</span> <span class=\"p\">{}</span>\n        <span class=\"p\">},</span>\n        <span class=\"s2\">&quot;rdd&quot;</span><span class=\"o\">:</span> <span class=\"p\">{},</span>\n        <span class=\"s2\">&quot;serializer&quot;</span><span class=\"o\">:</span> <span class=\"p\">{},</span>\n        <span class=\"s2\">&quot;memory&quot;</span><span class=\"o\">:</span> <span class=\"p\">{</span>\n            <span class=\"s2\">&quot;offHeap&quot;</span><span class=\"o\">:</span> <span class=\"p\">{}</span>\n        <span class=\"p\">},</span>\n        <span class=\"s2\">&quot;storage&quot;</span><span class=\"o\">:</span> <span class=\"p\">{</span>\n            <span class=\"s2\">&quot;replication&quot;</span><span class=\"o\">:</span> <span class=\"p\">{}</span>\n        <span class=\"p\">},</span>\n        <span class=\"s2\">&quot;cleaner&quot;</span><span class=\"o\">:</span> <span class=\"p\">{</span>\n            <span class=\"s2\">&quot;periodicGC&quot;</span><span class=\"o\">:</span> <span class=\"p\">{},</span>\n            <span class=\"s2\">&quot;referenceTracking&quot;</span><span class=\"o\">:</span> <span class=\"p\">{</span>\n                <span class=\"s2\">&quot;blocking&quot;</span><span class=\"o\">:</span> <span class=\"p\">{}</span>\n            <span class=\"p\">}</span>\n        <span class=\"p\">},</span>\n        <span class=\"s2\">&quot;default&quot;</span><span class=\"o\">:</span> <span class=\"p\">{},</span>\n        <span class=\"s2\">&quot;hadoop&quot;</span><span class=\"o\">:</span> <span class=\"p\">{</span>\n            <span class=\"s2\">&quot;mapreduce&quot;</span><span class=\"o\">:</span> <span class=\"p\">{</span>\n                <span class=\"s2\">&quot;fileoutputcommitter&quot;</span><span class=\"o\">:</span> <span class=\"p\">{</span>\n                    <span class=\"s2\">&quot;algorithm&quot;</span><span class=\"o\">:</span> <span class=\"p\">{}</span>\n                <span class=\"p\">}</span>\n            <span class=\"p\">}</span>\n        <span class=\"p\">},</span>\n        <span class=\"s2\">&quot;rpc&quot;</span><span class=\"o\">:</span> <span class=\"p\">{</span>\n            <span class=\"s2\">&quot;message&quot;</span><span class=\"o\">:</span> <span class=\"p\">{},</span>\n            <span class=\"s2\">&quot;retry&quot;</span><span class=\"o\">:</span> <span class=\"p\">{}</span>\n        <span class=\"p\">},</span>\n        <span class=\"s2\">&quot;blockManager&quot;</span><span class=\"o\">:</span> <span class=\"p\">{},</span>\n        <span class=\"s2\">&quot;network&quot;</span><span class=\"o\">:</span> <span class=\"p\">{},</span>\n        <span class=\"s2\">&quot;port&quot;</span><span class=\"o\">:</span> <span class=\"p\">{},</span>\n        <span class=\"s2\">&quot;core&quot;</span><span class=\"o\">:</span> <span class=\"p\">{</span>\n            <span class=\"s2\">&quot;connection&quot;</span><span class=\"o\">:</span> <span class=\"p\">{</span>\n                <span class=\"s2\">&quot;ack&quot;</span><span class=\"o\">:</span> <span class=\"p\">{</span>\n                    <span class=\"s2\">&quot;wait&quot;</span><span class=\"o\">:</span> <span class=\"p\">{}</span>\n                <span class=\"p\">}</span>\n            <span class=\"p\">}</span>\n        <span class=\"p\">},</span>\n        <span class=\"s2\">&quot;cores&quot;</span><span class=\"o\">:</span> <span class=\"p\">{},</span>\n        <span class=\"s2\">&quot;locality&quot;</span><span class=\"o\">:</span> <span class=\"p\">{</span>\n            <span class=\"s2\">&quot;wait&quot;</span><span class=\"o\">:</span> <span class=\"p\">{}</span>\n        <span class=\"p\">},</span>\n        <span class=\"s2\">&quot;scheduler&quot;</span><span class=\"o\">:</span> <span class=\"p\">{</span>\n            <span class=\"s2\">&quot;revive&quot;</span><span class=\"o\">:</span> <span class=\"p\">{},</span>\n            <span class=\"s2\">&quot;listenerbus&quot;</span><span class=\"o\">:</span> <span class=\"p\">{</span>\n                <span class=\"s2\">&quot;eventqueue&quot;</span><span class=\"o\">:</span> <span class=\"p\">{}</span>\n            <span class=\"p\">}</span>\n        <span class=\"p\">},</span>\n        <span class=\"s2\">&quot;blacklist&quot;</span><span class=\"o\">:</span> <span class=\"p\">{</span>\n            <span class=\"s2\">&quot;task&quot;</span><span class=\"o\">:</span> <span class=\"p\">{},</span>\n            <span class=\"s2\">&quot;stage&quot;</span><span class=\"o\">:</span> <span class=\"p\">{},</span>\n            <span class=\"s2\">&quot;application&quot;</span><span class=\"o\">:</span> <span class=\"p\">{</span>\n                <span class=\"s2\">&quot;fetchFailure&quot;</span><span class=\"o\">:</span> <span class=\"p\">{}</span>\n            <span class=\"p\">}</span>\n        <span class=\"p\">},</span>\n        <span class=\"s2\">&quot;speculation&quot;</span><span class=\"o\">:</span> <span class=\"p\">{},</span>\n        <span class=\"s2\">&quot;task&quot;</span><span class=\"o\">:</span> <span class=\"p\">{</span>\n            <span class=\"s2\">&quot;reaper&quot;</span><span class=\"o\">:</span> <span class=\"p\">{}</span>\n        <span class=\"p\">},</span>\n        <span class=\"s2\">&quot;stage&quot;</span><span class=\"o\">:</span> <span class=\"p\">{},</span>\n        <span class=\"s2\">&quot;dynamicAllocation&quot;</span><span class=\"o\">:</span> <span class=\"p\">{},</span>\n        <span class=\"s2\">&quot;r&quot;</span><span class=\"o\">:</span> <span class=\"p\">{</span>\n            <span class=\"s2\">&quot;driver&quot;</span><span class=\"o\">:</span> <span class=\"p\">{},</span>\n            <span class=\"s2\">&quot;shell&quot;</span><span class=\"o\">:</span> <span class=\"p\">{}</span>\n        <span class=\"p\">},</span>\n        <span class=\"s2\">&quot;graphx&quot;</span><span class=\"o\">:</span> <span class=\"p\">{</span>\n            <span class=\"s2\">&quot;pregel&quot;</span><span class=\"o\">:</span> <span class=\"p\">{}</span>\n        <span class=\"p\">},</span>\n        <span class=\"s2\">&quot;deploy&quot;</span><span class=\"o\">:</span> <span class=\"p\">{</span>\n            <span class=\"s2\">&quot;zookeeper&quot;</span><span class=\"o\">:</span> <span class=\"p\">{}</span>\n        <span class=\"p\">}</span>\n    <span class=\"p\">}</span>\n<span class=\"p\">}</span>\n</pre></div>\n</div>\n</details><details class=\"summary-config-schema\">\n<summary>Config Schema:</summary><dl class=\"field-list\">\n<dt class=\"field-odd\">spark (permissive dict, optional)</dt>\n<dd class=\"field-odd\"><details class=\"summary-default-value\">\n<summary>Default Value:</summary><div class=\"highlight-javascript notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"p\">{</span>\n    <span class=\"s2\">&quot;app&quot;</span><span class=\"o\">:</span> <span class=\"p\">{},</span>\n    <span class=\"s2\">&quot;driver&quot;</span><span class=\"o\">:</span> <span class=\"p\">{</span>\n        <span class=\"s2\">&quot;blockManager&quot;</span><span class=\"o\">:</span> <span class=\"p\">{}</span>\n    <span class=\"p\">},</span>\n    <span class=\"s2\">&quot;executor&quot;</span><span class=\"o\">:</span> <span class=\"p\">{</span>\n        <span class=\"s2\">&quot;pyspark&quot;</span><span class=\"o\">:</span> <span class=\"p\">{},</span>\n        <span class=\"s2\">&quot;logs&quot;</span><span class=\"o\">:</span> <span class=\"p\">{</span>\n            <span class=\"s2\">&quot;rolling&quot;</span><span class=\"o\">:</span> <span class=\"p\">{</span>\n                <span class=\"s2\">&quot;time&quot;</span><span class=\"o\">:</span> <span class=\"p\">{}</span>\n            <span class=\"p\">}</span>\n        <span class=\"p\">}</span>\n    <span class=\"p\">},</span>\n    <span class=\"s2\">&quot;local&quot;</span><span class=\"o\">:</span> <span class=\"p\">{},</span>\n    <span class=\"s2\">&quot;submit&quot;</span><span class=\"o\">:</span> <span class=\"p\">{},</span>\n    <span class=\"s2\">&quot;log&quot;</span><span class=\"o\">:</span> <span class=\"p\">{},</span>\n    <span class=\"s2\">&quot;redaction&quot;</span><span class=\"o\">:</span> <span class=\"p\">{},</span>\n    <span class=\"s2\">&quot;python&quot;</span><span class=\"o\">:</span> <span class=\"p\">{</span>\n        <span class=\"s2\">&quot;profile&quot;</span><span class=\"o\">:</span> <span class=\"p\">{},</span>\n        <span class=\"s2\">&quot;worker&quot;</span><span class=\"o\">:</span> <span class=\"p\">{}</span>\n    <span class=\"p\">},</span>\n    <span class=\"s2\">&quot;files&quot;</span><span class=\"o\">:</span> <span class=\"p\">{},</span>\n    <span class=\"s2\">&quot;jars&quot;</span><span class=\"o\">:</span> <span class=\"p\">{},</span>\n    <span class=\"s2\">&quot;pyspark&quot;</span><span class=\"o\">:</span> <span class=\"p\">{</span>\n        <span class=\"s2\">&quot;driver&quot;</span><span class=\"o\">:</span> <span class=\"p\">{}</span>\n    <span class=\"p\">},</span>\n    <span class=\"s2\">&quot;reducer&quot;</span><span class=\"o\">:</span> <span class=\"p\">{},</span>\n    <span class=\"s2\">&quot;shuffle&quot;</span><span class=\"o\">:</span> <span class=\"p\">{</span>\n        <span class=\"s2\">&quot;file&quot;</span><span class=\"o\">:</span> <span class=\"p\">{},</span>\n        <span class=\"s2\">&quot;io&quot;</span><span class=\"o\">:</span> <span class=\"p\">{},</span>\n        <span class=\"s2\">&quot;service&quot;</span><span class=\"o\">:</span> <span class=\"p\">{</span>\n            <span class=\"s2\">&quot;index&quot;</span><span class=\"o\">:</span> <span class=\"p\">{</span>\n                <span class=\"s2\">&quot;cache&quot;</span><span class=\"o\">:</span> <span class=\"p\">{}</span>\n            <span class=\"p\">}</span>\n        <span class=\"p\">},</span>\n        <span class=\"s2\">&quot;sort&quot;</span><span class=\"o\">:</span> <span class=\"p\">{},</span>\n        <span class=\"s2\">&quot;spill&quot;</span><span class=\"o\">:</span> <span class=\"p\">{},</span>\n        <span class=\"s2\">&quot;registration&quot;</span><span class=\"o\">:</span> <span class=\"p\">{}</span>\n    <span class=\"p\">},</span>\n    <span class=\"s2\">&quot;eventLog&quot;</span><span class=\"o\">:</span> <span class=\"p\">{</span>\n        <span class=\"s2\">&quot;logBlockUpdates&quot;</span><span class=\"o\">:</span> <span class=\"p\">{},</span>\n        <span class=\"s2\">&quot;longForm&quot;</span><span class=\"o\">:</span> <span class=\"p\">{},</span>\n        <span class=\"s2\">&quot;buffer&quot;</span><span class=\"o\">:</span> <span class=\"p\">{}</span>\n    <span class=\"p\">},</span>\n    <span class=\"s2\">&quot;ui&quot;</span><span class=\"o\">:</span> <span class=\"p\">{</span>\n        <span class=\"s2\">&quot;dagGraph&quot;</span><span class=\"o\">:</span> <span class=\"p\">{},</span>\n        <span class=\"s2\">&quot;liveUpdate&quot;</span><span class=\"o\">:</span> <span class=\"p\">{}</span>\n    <span class=\"p\">},</span>\n    <span class=\"s2\">&quot;worker&quot;</span><span class=\"o\">:</span> <span class=\"p\">{</span>\n        <span class=\"s2\">&quot;ui&quot;</span><span class=\"o\">:</span> <span class=\"p\">{}</span>\n    <span class=\"p\">},</span>\n    <span class=\"s2\">&quot;sql&quot;</span><span class=\"o\">:</span> <span class=\"p\">{</span>\n        <span class=\"s2\">&quot;ui&quot;</span><span class=\"o\">:</span> <span class=\"p\">{}</span>\n    <span class=\"p\">},</span>\n    <span class=\"s2\">&quot;streaming&quot;</span><span class=\"o\">:</span> <span class=\"p\">{</span>\n        <span class=\"s2\">&quot;ui&quot;</span><span class=\"o\">:</span> <span class=\"p\">{},</span>\n        <span class=\"s2\">&quot;backpressure&quot;</span><span class=\"o\">:</span> <span class=\"p\">{},</span>\n        <span class=\"s2\">&quot;receiver&quot;</span><span class=\"o\">:</span> <span class=\"p\">{</span>\n            <span class=\"s2\">&quot;writeAheadLog&quot;</span><span class=\"o\">:</span> <span class=\"p\">{}</span>\n        <span class=\"p\">},</span>\n        <span class=\"s2\">&quot;kafka&quot;</span><span class=\"o\">:</span> <span class=\"p\">{},</span>\n        <span class=\"s2\">&quot;driver&quot;</span><span class=\"o\">:</span> <span class=\"p\">{</span>\n            <span class=\"s2\">&quot;writeAheadLog&quot;</span><span class=\"o\">:</span> <span class=\"p\">{}</span>\n        <span class=\"p\">}</span>\n    <span class=\"p\">},</span>\n    <span class=\"s2\">&quot;broadcast&quot;</span><span class=\"o\">:</span> <span class=\"p\">{},</span>\n    <span class=\"s2\">&quot;io&quot;</span><span class=\"o\">:</span> <span class=\"p\">{</span>\n        <span class=\"s2\">&quot;compression&quot;</span><span class=\"o\">:</span> <span class=\"p\">{</span>\n            <span class=\"s2\">&quot;lz4&quot;</span><span class=\"o\">:</span> <span class=\"p\">{},</span>\n            <span class=\"s2\">&quot;snappy&quot;</span><span class=\"o\">:</span> <span class=\"p\">{},</span>\n            <span class=\"s2\">&quot;zstd&quot;</span><span class=\"o\">:</span> <span class=\"p\">{}</span>\n        <span class=\"p\">}</span>\n    <span class=\"p\">},</span>\n    <span class=\"s2\">&quot;kryo&quot;</span><span class=\"o\">:</span> <span class=\"p\">{},</span>\n    <span class=\"s2\">&quot;kryoserializer&quot;</span><span class=\"o\">:</span> <span class=\"p\">{</span>\n        <span class=\"s2\">&quot;buffer&quot;</span><span class=\"o\">:</span> <span class=\"p\">{}</span>\n    <span class=\"p\">},</span>\n    <span class=\"s2\">&quot;rdd&quot;</span><span class=\"o\">:</span> <span class=\"p\">{},</span>\n    <span class=\"s2\">&quot;serializer&quot;</span><span class=\"o\">:</span> <span class=\"p\">{},</span>\n    <span class=\"s2\">&quot;memory&quot;</span><span class=\"o\">:</span> <span class=\"p\">{</span>\n        <span class=\"s2\">&quot;offHeap&quot;</span><span class=\"o\">:</span> <span class=\"p\">{}</span>\n    <span class=\"p\">},</span>\n    <span class=\"s2\">&quot;storage&quot;</span><span class=\"o\">:</span> <span class=\"p\">{</span>\n        <span class=\"s2\">&quot;replication&quot;</span><span class=\"o\">:</span> <span class=\"p\">{}</span>\n    <span class=\"p\">},</span>\n    <span class=\"s2\">&quot;cleaner&quot;</span><span class=\"o\">:</span> <span class=\"p\">{</span>\n        <span class=\"s2\">&quot;periodicGC&quot;</span><span class=\"o\">:</span> <span class=\"p\">{},</span>\n        <span class=\"s2\">&quot;referenceTracking&quot;</span><span class=\"o\">:</span> <span class=\"p\">{</span>\n            <span class=\"s2\">&quot;blocking&quot;</span><span class=\"o\">:</span> <span class=\"p\">{}</span>\n        <span class=\"p\">}</span>\n    <span class=\"p\">},</span>\n    <span class=\"s2\">&quot;default&quot;</span><span class=\"o\">:</span> <span class=\"p\">{},</span>\n    <span class=\"s2\">&quot;hadoop&quot;</span><span class=\"o\">:</span> <span class=\"p\">{</span>\n        <span class=\"s2\">&quot;mapreduce&quot;</span><span class=\"o\">:</span> <span class=\"p\">{</span>\n            <span class=\"s2\">&quot;fileoutputcommitter&quot;</span><span class=\"o\">:</span> <span class=\"p\">{</span>\n                <span class=\"s2\">&quot;algorithm&quot;</span><span class=\"o\">:</span> <span class=\"p\">{}</span>\n            <span class=\"p\">}</span>\n        <span class=\"p\">}</span>\n    <span class=\"p\">},</span>\n    <span class=\"s2\">&quot;rpc&quot;</span><span class=\"o\">:</span> <span class=\"p\">{</span>\n        <span class=\"s2\">&quot;message&quot;</span><span class=\"o\">:</span> <span class=\"p\">{},</span>\n        <span class=\"s2\">&quot;retry&quot;</span><span class=\"o\">:</span> <span class=\"p\">{}</span>\n    <span class=\"p\">},</span>\n    <span class=\"s2\">&quot;blockManager&quot;</span><span class=\"o\">:</span> <span class=\"p\">{},</span>\n    <span class=\"s2\">&quot;network&quot;</span><span class=\"o\">:</span> <span class=\"p\">{},</span>\n    <span class=\"s2\">&quot;port&quot;</span><span class=\"o\">:</span> <span class=\"p\">{},</span>\n    <span class=\"s2\">&quot;core&quot;</span><span class=\"o\">:</span> <span class=\"p\">{</span>\n        <span class=\"s2\">&quot;connection&quot;</span><span class=\"o\">:</span> <span class=\"p\">{</span>\n            <span class=\"s2\">&quot;ack&quot;</span><span class=\"o\">:</span> <span class=\"p\">{</span>\n                <span class=\"s2\">&quot;wait&quot;</span><span class=\"o\">:</span> <span class=\"p\">{}</span>\n            <span class=\"p\">}</span>\n        <span class=\"p\">}</span>\n    <span class=\"p\">},</span>\n    <span class=\"s2\">&quot;cores&quot;</span><span class=\"o\">:</span> <span class=\"p\">{},</span>\n    <span class=\"s2\">&quot;locality&quot;</span><span class=\"o\">:</span> <span class=\"p\">{</span>\n        <span class=\"s2\">&quot;wait&quot;</span><span class=\"o\">:</span> <span class=\"p\">{}</span>\n    <span class=\"p\">},</span>\n    <span class=\"s2\">&quot;scheduler&quot;</span><span class=\"o\">:</span> <span class=\"p\">{</span>\n        <span class=\"s2\">&quot;revive&quot;</span><span class=\"o\">:</span> <span class=\"p\">{},</span>\n        <span class=\"s2\">&quot;listenerbus&quot;</span><span class=\"o\">:</span> <span class=\"p\">{</span>\n            <span class=\"s2\">&quot;eventqueue&quot;</span><span class=\"o\">:</span> <span class=\"p\">{}</span>\n        <span class=\"p\">}</span>\n    <span class=\"p\">},</span>\n    <span class=\"s2\">&quot;blacklist&quot;</span><span class=\"o\">:</span> <span class=\"p\">{</span>\n        <span class=\"s2\">&quot;task&quot;</span><span class=\"o\">:</span> <span class=\"p\">{},</span>\n        <span class=\"s2\">&quot;stage&quot;</span><span class=\"o\">:</span> <span class=\"p\">{},</span>\n        <span class=\"s2\">&quot;application&quot;</span><span class=\"o\">:</span> <span class=\"p\">{</span>\n            <span class=\"s2\">&quot;fetchFailure&quot;</span><span class=\"o\">:</span> <span class=\"p\">{}</span>\n        <span class=\"p\">}</span>\n    <span class=\"p\">},</span>\n    <span class=\"s2\">&quot;speculation&quot;</span><span class=\"o\">:</span> <span class=\"p\">{},</span>\n    <span class=\"s2\">&quot;task&quot;</span><span class=\"o\">:</span> <span class=\"p\">{</span>\n        <span class=\"s2\">&quot;reaper&quot;</span><span class=\"o\">:</span> <span class=\"p\">{}</span>\n    <span class=\"p\">},</span>\n    <span class=\"s2\">&quot;stage&quot;</span><span class=\"o\">:</span> <span class=\"p\">{},</span>\n    <span class=\"s2\">&quot;dynamicAllocation&quot;</span><span class=\"o\">:</span> <span class=\"p\">{},</span>\n    <span class=\"s2\">&quot;r&quot;</span><span class=\"o\">:</span> <span class=\"p\">{</span>\n        <span class=\"s2\">&quot;driver&quot;</span><span class=\"o\">:</span> <span class=\"p\">{},</span>\n        <span class=\"s2\">&quot;shell&quot;</span><span class=\"o\">:</span> <span class=\"p\">{}</span>\n    <span class=\"p\">},</span>\n    <span class=\"s2\">&quot;graphx&quot;</span><span class=\"o\">:</span> <span class=\"p\">{</span>\n        <span class=\"s2\">&quot;pregel&quot;</span><span class=\"o\">:</span> <span class=\"p\">{}</span>\n    <span class=\"p\">},</span>\n    <span class=\"s2\">&quot;deploy&quot;</span><span class=\"o\">:</span> <span class=\"p\">{</span>\n        <span class=\"s2\">&quot;zookeeper&quot;</span><span class=\"o\">:</span> <span class=\"p\">{}</span>\n    <span class=\"p\">}</span>\n<span class=\"p\">}</span>\n</pre></div>\n</div>\n</details><details class=\"summary-config-schema\">\n<summary>Config Schema:</summary><dl class=\"field-list\">\n<dt class=\"field-odd\">app (permissive dict, optional)</dt>\n<dd class=\"field-odd\"><details class=\"summary-default-value\">\n<summary>Default Value:</summary><div class=\"highlight-javascript notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"p\">{}</span>\n</pre></div>\n</div>\n</details><details class=\"summary-config-schema\">\n<summary>Config Schema:</summary><dl class=\"field-list simple\">\n<dt class=\"field-odd\">name (dagster.StringSource, optional)</dt>\n<dd class=\"field-odd\"><p>Application Properties: The name of your application. This will appear in the UI and in log data.</p>\n</dd>\n</dl>\n</details></dd>\n<dt class=\"field-even\">driver (permissive dict, optional)</dt>\n<dd class=\"field-even\"><details class=\"summary-default-value\">\n<summary>Default Value:</summary><div class=\"highlight-javascript notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"p\">{</span>\n    <span class=\"s2\">&quot;blockManager&quot;</span><span class=\"o\">:</span> <span class=\"p\">{}</span>\n<span class=\"p\">}</span>\n</pre></div>\n</div>\n</details><details class=\"summary-config-schema\">\n<summary>Config Schema:</summary><dl class=\"field-list\">\n<dt class=\"field-odd\">cores (dagster.IntSource, optional)</dt>\n<dd class=\"field-odd\"><p>Application Properties: Number of cores to use for the driver process, only in cluster mode.</p>\n</dd>\n<dt class=\"field-even\">maxResultSize (dagster.StringSource, optional)</dt>\n<dd class=\"field-even\"><p>Application Properties: Limit of total size of serialized results of all partitions for each Spark action (e.g. collect) in bytes. Should be at least 1M, or 0 for unlimited. Jobs will be aborted if the total size is above this limit. Having a high limit may cause out-of-memory errors in driver (depends on spark.driver.memory and memory overhead of objects in JVM). Setting a proper limit can protect the driver from out-of-memory errors.</p>\n</dd>\n<dt class=\"field-odd\">memory (dagster.StringSource, optional)</dt>\n<dd class=\"field-odd\"><p>Application Properties: Amount of memory to use for the driver process, i.e. where SparkContext is initialized, in the same format as JVM memory strings with a size unit suffix (\u201ck\u201d, \u201cm\u201d, \u201cg\u201d or \u201ct\u201d) (e.g. 512m, 2g). Note: In client mode, this config must not be set through the SparkConf directly in your application, because the driver JVM has already started at that point. Instead, please set this through the \u2013driver-memory command line option or in your default properties file.</p>\n</dd>\n<dt class=\"field-even\">memoryOverhead (dagster.StringSource, optional)</dt>\n<dd class=\"field-even\"><p>Application Properties: The amount of off-heap memory to be allocated per driver in cluster mode, in MiB unless otherwise specified. This is memory that accounts for things like VM overheads, interned strings, other native overheads, etc. This tends to grow with the container size (typically 6-10%). This option is currently supported on YARN and Kubernetes.</p>\n</dd>\n<dt class=\"field-odd\">supervise (Bool, optional)</dt>\n<dd class=\"field-odd\"><p>Application Properties: If true, restarts the driver automatically if it fails with a non-zero exit status. Only has effect in Spark standalone mode or Mesos cluster deploy mode.</p>\n</dd>\n<dt class=\"field-even\">extraClassPath (dagster.StringSource, optional)</dt>\n<dd class=\"field-even\"><p>Runtime Environment: Extra classpath entries to prepend to the classpath of the driver. Note: In client mode, this config must not be set through the SparkConf directly in your application, because the driver JVM has already started at that point. Instead, please set this through the \u2013driver-class-path command line option or in your default properties file.</p>\n</dd>\n<dt class=\"field-odd\">extraJavaOptions (dagster.StringSource, optional)</dt>\n<dd class=\"field-odd\"><p>Runtime Environment: A string of extra JVM options to pass to the driver. For instance, GC settings or other logging. Note that it is illegal to set maximum heap size (-Xmx) settings with this option. Maximum heap size settings can be set with spark.driver.memory in the cluster mode and through the \u2013driver-memory command line option in the client mode. Note: In client mode, this config must not be set through the SparkConf directly in your application, because the driver JVM has already started at that point. Instead, please set this through the \u2013driver-java-options command line option or in your default properties file.</p>\n</dd>\n<dt class=\"field-even\">extraLibraryPath (dagster.StringSource, optional)</dt>\n<dd class=\"field-even\"><p>Runtime Environment: Set a special library path to use when launching the driver JVM. Note: In client mode, this config must not be set through the SparkConf directly in your application, because the driver JVM has already started at that point. Instead, please set this through the \u2013driver-library-path command line option or in your default properties file.</p>\n</dd>\n<dt class=\"field-odd\">userClassPathFirst (Bool, optional)</dt>\n<dd class=\"field-odd\"><p>Runtime Environment: (Experimental) Whether to give user-added jars precedence over Spark\u2019s own jars when loading classes in the driver. This feature can be used to mitigate conflicts between Spark\u2019s dependencies and user dependencies. It is currently an experimental feature. This is used in cluster mode only.</p>\n</dd>\n<dt class=\"field-even\">blockManager (permissive dict, optional)</dt>\n<dd class=\"field-even\"><details class=\"summary-default-value\">\n<summary>Default Value:</summary><div class=\"highlight-javascript notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"p\">{}</span>\n</pre></div>\n</div>\n</details><details class=\"summary-config-schema\">\n<summary>Config Schema:</summary><dl class=\"field-list simple\">\n<dt class=\"field-odd\">port (dagster.StringSource, optional)</dt>\n<dd class=\"field-odd\"><p>Networking: Driver-specific port for the block manager to listen on, for cases where it cannot use the same configuration as executors.</p>\n</dd>\n</dl>\n</details></dd>\n<dt class=\"field-even\">bindAddress (dagster.StringSource, optional)</dt>\n<dd class=\"field-even\"><p>Networking: Hostname or IP address where to bind listening sockets. This config overrides the SPARK_LOCAL_IP environment variable (see below). It also allows a different address from the local one to be advertised to executors or external systems. This is useful, for example, when running containers with bridged networking. For this to properly work, the different ports used by the driver (RPC, block manager and UI) need to be forwarded from the container\u2019s host.</p>\n</dd>\n<dt class=\"field-odd\">host (dagster.StringSource, optional)</dt>\n<dd class=\"field-odd\"><p>Networking: Hostname or IP address for the driver. This is used for communicating with the executors and the standalone Master.</p>\n</dd>\n<dt class=\"field-even\">port (dagster.StringSource, optional)</dt>\n<dd class=\"field-even\"><p>Networking: Port for the driver to listen on. This is used for communicating with the executors and the standalone Master.</p>\n</dd>\n</dl>\n</details></dd>\n<dt class=\"field-odd\">executor (permissive dict, optional)</dt>\n<dd class=\"field-odd\"><details class=\"summary-default-value\">\n<summary>Default Value:</summary><div class=\"highlight-javascript notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"p\">{</span>\n    <span class=\"s2\">&quot;pyspark&quot;</span><span class=\"o\">:</span> <span class=\"p\">{},</span>\n    <span class=\"s2\">&quot;logs&quot;</span><span class=\"o\">:</span> <span class=\"p\">{</span>\n        <span class=\"s2\">&quot;rolling&quot;</span><span class=\"o\">:</span> <span class=\"p\">{</span>\n            <span class=\"s2\">&quot;time&quot;</span><span class=\"o\">:</span> <span class=\"p\">{}</span>\n        <span class=\"p\">}</span>\n    <span class=\"p\">}</span>\n<span class=\"p\">}</span>\n</pre></div>\n</div>\n</details><details class=\"summary-config-schema\">\n<summary>Config Schema:</summary><dl class=\"field-list\">\n<dt class=\"field-odd\">memory (dagster.StringSource, optional)</dt>\n<dd class=\"field-odd\"><p>Application Properties: Amount of memory to use per executor process, in the same format as JVM memory strings with a size unit suffix (\u201ck\u201d, \u201cm\u201d, \u201cg\u201d or \u201ct\u201d) (e.g. 512m, 2g).</p>\n</dd>\n<dt class=\"field-even\">pyspark (permissive dict, optional)</dt>\n<dd class=\"field-even\"><details class=\"summary-default-value\">\n<summary>Default Value:</summary><div class=\"highlight-javascript notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"p\">{}</span>\n</pre></div>\n</div>\n</details><details class=\"summary-config-schema\">\n<summary>Config Schema:</summary><dl class=\"field-list simple\">\n<dt class=\"field-odd\">memory (dagster.StringSource, optional)</dt>\n<dd class=\"field-odd\"><p>Application Properties: The amount of memory to be allocated to PySpark in each executor, in MiB unless otherwise specified. If set, PySpark memory for an executor will be limited to this amount. If not set, Spark will not limit Python\u2019s memory use and it is up to the application to avoid exceeding the overhead memory space shared with other non-JVM processes. When PySpark is run in YARN or Kubernetes, this memory is added to executor resource requests.</p>\n</dd>\n</dl>\n</details></dd>\n<dt class=\"field-even\">memoryOverhead (dagster.StringSource, optional)</dt>\n<dd class=\"field-even\"><p>Application Properties: The amount of off-heap memory to be allocated per executor, in MiB unless otherwise specified. This is memory that accounts for things like VM overheads, interned strings, other native overheads, etc. This tends to grow with the executor size (typically 6-10%). This option is currently supported on YARN and Kubernetes.</p>\n</dd>\n<dt class=\"field-odd\">extraClassPath (dagster.StringSource, optional)</dt>\n<dd class=\"field-odd\"><p>Runtime Environment: Extra classpath entries to prepend to the classpath of executors. This exists primarily for backwards-compatibility with older versions of Spark. Users typically should not need to set this option.</p>\n</dd>\n<dt class=\"field-even\">extraJavaOptions (dagster.StringSource, optional)</dt>\n<dd class=\"field-even\"><p>Runtime Environment: A string of extra JVM options to pass to executors. For instance, GC settings or other logging. Note that it is illegal to set Spark properties or maximum heap size (-Xmx) settings with this option. Spark properties should be set using a SparkConf object or the spark-defaults.conf file used with the spark-submit script. Maximum heap size settings can be set with spark.executor.memory. The following symbols, if present will be interpolated: {{APP_ID}} will be replaced by application ID and {{EXECUTOR_ID}} will be replaced by executor ID. For example, to enable verbose gc logging to a file named for the executor ID of the app in /tmp, pass a \u2018value\u2019 of: -verbose:gc -Xloggc:/tmp/{{APP_ID}}-{{EXECUTOR_ID}}.gc</p>\n</dd>\n<dt class=\"field-odd\">extraLibraryPath (dagster.StringSource, optional)</dt>\n<dd class=\"field-odd\"><p>Runtime Environment: Set a special library path to use when launching executor JVM\u2019s.</p>\n</dd>\n<dt class=\"field-even\">logs (permissive dict, optional)</dt>\n<dd class=\"field-even\"><details class=\"summary-default-value\">\n<summary>Default Value:</summary><div class=\"highlight-javascript notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"p\">{</span>\n    <span class=\"s2\">&quot;rolling&quot;</span><span class=\"o\">:</span> <span class=\"p\">{</span>\n        <span class=\"s2\">&quot;time&quot;</span><span class=\"o\">:</span> <span class=\"p\">{}</span>\n    <span class=\"p\">}</span>\n<span class=\"p\">}</span>\n</pre></div>\n</div>\n</details><details class=\"summary-config-schema\">\n<summary>Config Schema:</summary><dl class=\"field-list\">\n<dt class=\"field-odd\">rolling (permissive dict, optional)</dt>\n<dd class=\"field-odd\"><details class=\"summary-default-value\">\n<summary>Default Value:</summary><div class=\"highlight-javascript notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"p\">{</span>\n    <span class=\"s2\">&quot;time&quot;</span><span class=\"o\">:</span> <span class=\"p\">{}</span>\n<span class=\"p\">}</span>\n</pre></div>\n</div>\n</details><details class=\"summary-config-schema\">\n<summary>Config Schema:</summary><dl class=\"field-list\">\n<dt class=\"field-odd\">maxRetainedFiles (dagster.IntSource, optional)</dt>\n<dd class=\"field-odd\"><p>Runtime Environment: Sets the number of latest rolling log files that are going to be retained by the system. Older log files will be deleted. Disabled by default.</p>\n</dd>\n<dt class=\"field-even\">enableCompression (Bool, optional)</dt>\n<dd class=\"field-even\"><p>Runtime Environment: Enable executor log compression. If it is enabled, the rolled executor logs will be compressed. Disabled by default.</p>\n</dd>\n<dt class=\"field-odd\">maxSize (dagster.IntSource, optional)</dt>\n<dd class=\"field-odd\"><p>Runtime Environment: Set the max size of the file in bytes by which the executor logs will be rolled over. Rolling is disabled by default. See spark.executor.logs.rolling.maxRetainedFiles for automatic cleaning of old logs.</p>\n</dd>\n<dt class=\"field-even\">strategy (dagster.StringSource, optional)</dt>\n<dd class=\"field-even\"><p>Runtime Environment: Set the strategy of rolling of executor logs. By default it is disabled. It can be set to \u201ctime\u201d (time-based rolling) or \u201csize\u201d (size-based rolling). For \u201ctime\u201d, use spark.executor.logs.rolling.time.interval to set the rolling interval. For \u201csize\u201d, use spark.executor.logs.rolling.maxSize to set the maximum file size for rolling.</p>\n</dd>\n<dt class=\"field-odd\">time (permissive dict, optional)</dt>\n<dd class=\"field-odd\"><details class=\"summary-default-value\">\n<summary>Default Value:</summary><div class=\"highlight-javascript notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"p\">{}</span>\n</pre></div>\n</div>\n</details><details class=\"summary-config-schema\">\n<summary>Config Schema:</summary><dl class=\"field-list simple\">\n<dt class=\"field-odd\">interval (dagster.StringSource, optional)</dt>\n<dd class=\"field-odd\"><p>Runtime Environment: Set the time interval by which the executor logs will be rolled over. Rolling is disabled by default. Valid values are daily, hourly, minutely or any interval in seconds. See spark.executor.logs.rolling.maxRetainedFiles for automatic cleaning of old logs.</p>\n</dd>\n</dl>\n</details></dd>\n</dl>\n</details></dd>\n</dl>\n</details></dd>\n<dt class=\"field-even\">userClassPathFirst (Bool, optional)</dt>\n<dd class=\"field-even\"><p>Runtime Environment: (Experimental) Same functionality as spark.driver.userClassPathFirst, but applied to executor instances.</p>\n</dd>\n<dt class=\"field-odd\">cores (dagster.IntSource, optional)</dt>\n<dd class=\"field-odd\"><p>Execution Behavior: The number of cores to use on each executor. In standalone and Mesos coarse-grained modes, for more detail, see this description.</p>\n</dd>\n<dt class=\"field-even\">heartbeatInterval (dagster.StringSource, optional)</dt>\n<dd class=\"field-even\"><p>Execution Behavior: Interval between each executor\u2019s heartbeats to the driver. Heartbeats let the driver know that the executor is still alive and update it with metrics for in-progress tasks. spark.executor.heartbeatInterval should be significantly less than spark.network.timeout</p>\n</dd>\n</dl>\n</details></dd>\n<dt class=\"field-odd\">extraListeners (dagster.StringSource, optional)</dt>\n<dd class=\"field-odd\"><p>Application Properties: A comma-separated list of classes that implement SparkListener; when initializing SparkContext, instances of these classes will be created and registered with Spark\u2019s listener bus. If a class has a single-argument constructor that accepts a SparkConf, that constructor will be called; otherwise, a zero-argument constructor will be called. If no valid constructor can be found, the SparkContext creation will fail with an exception.</p>\n</dd>\n<dt class=\"field-even\">local (permissive dict, optional)</dt>\n<dd class=\"field-even\"><details class=\"summary-default-value\">\n<summary>Default Value:</summary><div class=\"highlight-javascript notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"p\">{}</span>\n</pre></div>\n</div>\n</details><details class=\"summary-config-schema\">\n<summary>Config Schema:</summary><dl class=\"field-list simple\">\n<dt class=\"field-odd\">dir (dagster.StringSource, optional)</dt>\n<dd class=\"field-odd\"><p>Application Properties: Directory to use for \u201cscratch\u201d space in Spark, including map output files and RDDs that get stored on disk. This should be on a fast, local disk in your system. It can also be a comma-separated list of multiple directories on different disks. NOTE: In Spark 1.0 and later this will be overridden by SPARK_LOCAL_DIRS (Standalone), MESOS_SANDBOX (Mesos) or LOCAL_DIRS (YARN) environment variables set by the cluster manager.</p>\n</dd>\n</dl>\n</details></dd>\n<dt class=\"field-even\">logConf (Bool, optional)</dt>\n<dd class=\"field-even\"><p>Application Properties: Logs the effective SparkConf as INFO when a SparkContext is started.</p>\n</dd>\n<dt class=\"field-odd\">master (dagster.StringSource, optional)</dt>\n<dd class=\"field-odd\"><p>Application Properties: The cluster manager to connect to. See the list of allowed master URL\u2019s.</p>\n</dd>\n<dt class=\"field-even\">submit (permissive dict, optional)</dt>\n<dd class=\"field-even\"><details class=\"summary-default-value\">\n<summary>Default Value:</summary><div class=\"highlight-javascript notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"p\">{}</span>\n</pre></div>\n</div>\n</details><details class=\"summary-config-schema\">\n<summary>Config Schema:</summary><dl class=\"field-list simple\">\n<dt class=\"field-odd\">deployMode (dagster.StringSource, optional)</dt>\n<dd class=\"field-odd\"><p>Application Properties: The deploy mode of Spark driver program, either \u201cclient\u201d or \u201ccluster\u201d, Which means to launch driver program locally (\u201cclient\u201d) or remotely (\u201ccluster\u201d) on one of the nodes inside the cluster.</p>\n</dd>\n<dt class=\"field-even\">pyFiles (dagster.StringSource, optional)</dt>\n<dd class=\"field-even\"><p>Runtime Environment: Comma-separated list of .zip, .egg, or .py files to place on the PYTHONPATH for Python apps. Globs are allowed.</p>\n</dd>\n</dl>\n</details></dd>\n<dt class=\"field-odd\">log (permissive dict, optional)</dt>\n<dd class=\"field-odd\"><details class=\"summary-default-value\">\n<summary>Default Value:</summary><div class=\"highlight-javascript notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"p\">{}</span>\n</pre></div>\n</div>\n</details><details class=\"summary-config-schema\">\n<summary>Config Schema:</summary><dl class=\"field-list simple\">\n<dt class=\"field-odd\">callerContext (dagster.StringSource, optional)</dt>\n<dd class=\"field-odd\"><p>Application Properties: Application information that will be written into Yarn RM log/HDFS audit log when running on Yarn/HDFS. Its length depends on the Hadoop configuration hadoop.caller.context.max.size. It should be concise, and typically can have up to 50 characters.</p>\n</dd>\n</dl>\n</details></dd>\n<dt class=\"field-even\">redaction (permissive dict, optional)</dt>\n<dd class=\"field-even\"><details class=\"summary-default-value\">\n<summary>Default Value:</summary><div class=\"highlight-javascript notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"p\">{}</span>\n</pre></div>\n</div>\n</details><details class=\"summary-config-schema\">\n<summary>Config Schema:</summary><dl class=\"field-list simple\">\n<dt class=\"field-odd\">regex (dagster.StringSource, optional)</dt>\n<dd class=\"field-odd\"><p>Runtime Environment: Regex to decide which Spark configuration properties and environment variables in driver and executor environments contain sensitive information. When this regex matches a property key or value, the value is redacted from the environment UI and various logs like YARN and event logs.</p>\n</dd>\n</dl>\n</details></dd>\n<dt class=\"field-even\">python (permissive dict, optional)</dt>\n<dd class=\"field-even\"><details class=\"summary-default-value\">\n<summary>Default Value:</summary><div class=\"highlight-javascript notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"p\">{</span>\n    <span class=\"s2\">&quot;profile&quot;</span><span class=\"o\">:</span> <span class=\"p\">{},</span>\n    <span class=\"s2\">&quot;worker&quot;</span><span class=\"o\">:</span> <span class=\"p\">{}</span>\n<span class=\"p\">}</span>\n</pre></div>\n</div>\n</details><details class=\"summary-config-schema\">\n<summary>Config Schema:</summary><dl class=\"field-list\">\n<dt class=\"field-odd\">profile (permissive dict, optional)</dt>\n<dd class=\"field-odd\"><details class=\"summary-default-value\">\n<summary>Default Value:</summary><div class=\"highlight-javascript notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"p\">{}</span>\n</pre></div>\n</div>\n</details><details class=\"summary-config-schema\">\n<summary>Config Schema:</summary><dl class=\"field-list simple\">\n<dt class=\"field-odd\">root (Bool, optional)</dt>\n<dd class=\"field-odd\"><p>Runtime Environment: Enable profiling in Python worker, the profile result will show up by sc.show_profiles(), or it will be displayed before the driver exits. It also can be dumped into disk by sc.dump_profiles(path). If some of the profile results had been displayed manually, they will not be displayed automatically before driver exiting. By default the pyspark.profiler.BasicProfiler will be used, but this can be overridden by passing a profiler class in as a parameter to the SparkContext constructor.</p>\n</dd>\n<dt class=\"field-even\">dump (dagster.StringSource, optional)</dt>\n<dd class=\"field-even\"><p>Runtime Environment: The directory which is used to dump the profile result before driver exiting. The results will be dumped as separated file for each RDD. They can be loaded by ptats.Stats(). If this is specified, the profile result will not be displayed automatically.</p>\n</dd>\n</dl>\n</details></dd>\n<dt class=\"field-odd\">worker (permissive dict, optional)</dt>\n<dd class=\"field-odd\"><details class=\"summary-default-value\">\n<summary>Default Value:</summary><div class=\"highlight-javascript notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"p\">{}</span>\n</pre></div>\n</div>\n</details><details class=\"summary-config-schema\">\n<summary>Config Schema:</summary><dl class=\"field-list simple\">\n<dt class=\"field-odd\">memory (dagster.StringSource, optional)</dt>\n<dd class=\"field-odd\"><p>Runtime Environment: Amount of memory to use per python worker process during aggregation, in the same format as JVM memory strings with a size unit suffix (\u201ck\u201d, \u201cm\u201d, \u201cg\u201d or \u201ct\u201d) (e.g. 512m, 2g). If the memory used during aggregation goes above this amount, it will spill the data into disks.</p>\n</dd>\n<dt class=\"field-even\">reuse (Bool, optional)</dt>\n<dd class=\"field-even\"><p>Runtime Environment: Reuse Python worker or not. If yes, it will use a fixed number of Python workers, does not need to fork() a Python process for every task. It will be very useful if there is large broadcast, then the broadcast will not be needed to transferred from JVM to Python worker for every task.</p>\n</dd>\n</dl>\n</details></dd>\n</dl>\n</details></dd>\n<dt class=\"field-odd\">files (permissive dict, optional)</dt>\n<dd class=\"field-odd\"><details class=\"summary-default-value\">\n<summary>Default Value:</summary><div class=\"highlight-javascript notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"p\">{}</span>\n</pre></div>\n</div>\n</details><details class=\"summary-config-schema\">\n<summary>Config Schema:</summary><dl class=\"field-list simple\">\n<dt class=\"field-odd\">root (dagster.StringSource, optional)</dt>\n<dd class=\"field-odd\"><p>Runtime Environment: Comma-separated list of files to be placed in the working directory of each executor. Globs are allowed.</p>\n</dd>\n<dt class=\"field-even\">fetchTimeout (dagster.StringSource, optional)</dt>\n<dd class=\"field-even\"><p>Execution Behavior: Communication timeout to use when fetching files added through SparkContext.addFile() from the driver.</p>\n</dd>\n<dt class=\"field-odd\">useFetchCache (Bool, optional)</dt>\n<dd class=\"field-odd\"><p>Execution Behavior: If set to true (default), file fetching will use a local cache that is shared by executors that belong to the same application, which can improve task launching performance when running many executors on the same host. If set to false, these caching optimizations will be disabled and all executors will fetch their own copies of files. This optimization may be disabled in order to use Spark local directories that reside on NFS filesystems (see SPARK-6313 for more details).</p>\n</dd>\n<dt class=\"field-even\">overwrite (Bool, optional)</dt>\n<dd class=\"field-even\"><p>Execution Behavior: Whether to overwrite files added through SparkContext.addFile() when the target file exists and its contents do not match those of the source.</p>\n</dd>\n<dt class=\"field-odd\">maxPartitionBytes (dagster.IntSource, optional)</dt>\n<dd class=\"field-odd\"><p>Execution Behavior: The maximum number of bytes to pack into a single partition when reading files.</p>\n</dd>\n<dt class=\"field-even\">openCostInBytes (dagster.IntSource, optional)</dt>\n<dd class=\"field-even\"><p>Execution Behavior: The estimated cost to open a file, measured by the number of bytes could be scanned at the same time. This is used when putting multiple files into a partition. It is better to overestimate, then the partitions with small files will be faster than partitions with bigger files.</p>\n</dd>\n</dl>\n</details></dd>\n<dt class=\"field-odd\">jars (permissive dict, optional)</dt>\n<dd class=\"field-odd\"><details class=\"summary-default-value\">\n<summary>Default Value:</summary><div class=\"highlight-javascript notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"p\">{}</span>\n</pre></div>\n</div>\n</details><details class=\"summary-config-schema\">\n<summary>Config Schema:</summary><dl class=\"field-list simple\">\n<dt class=\"field-odd\">root (dagster.StringSource, optional)</dt>\n<dd class=\"field-odd\"><p>Runtime Environment: Comma-separated list of jars to include on the driver and executor classpaths. Globs are allowed.</p>\n</dd>\n<dt class=\"field-even\">packages (dagster.StringSource, optional)</dt>\n<dd class=\"field-even\"><p>Runtime Environment: Comma-separated list of Maven coordinates of jars to include on the driver and executor classpaths. The coordinates should be groupId:artifactId:version. If spark.jars.ivySettings is given artifacts will be resolved according to the configuration in the file, otherwise artifacts will be searched for in the local maven repo, then maven central and finally any additional remote repositories given by the command-line option \u2013repositories. For more details, see Advanced Dependency Management.</p>\n</dd>\n<dt class=\"field-odd\">excludes (dagster.StringSource, optional)</dt>\n<dd class=\"field-odd\"><p>Runtime Environment: Comma-separated list of groupId:artifactId, to exclude while resolving the dependencies provided in spark.jars.packages to avoid dependency conflicts.</p>\n</dd>\n<dt class=\"field-even\">ivy (dagster.StringSource, optional)</dt>\n<dd class=\"field-even\"><p>Runtime Environment: Path to specify the Ivy user directory, used for the local Ivy cache and package files from spark.jars.packages. This will override the Ivy property ivy.default.ivy.user.dir which defaults to ~/.ivy2.</p>\n</dd>\n<dt class=\"field-odd\">ivySettings (dagster.StringSource, optional)</dt>\n<dd class=\"field-odd\"><p>Runtime Environment: Path to an Ivy settings file to customize resolution of jars specified using spark.jars.packages instead of the built-in defaults, such as maven central. Additional repositories given by the command-line option \u2013repositories or spark.jars.repositories will also be included. Useful for allowing Spark to resolve artifacts from behind a firewall e.g. via an in-house artifact server like Artifactory. Details on the settings file format can be found at <a class=\"reference external\" href=\"http://ant.apache.org/ivy/history/latest-milestone/settings.html\">http://ant.apache.org/ivy/history/latest-milestone/settings.html</a></p>\n</dd>\n<dt class=\"field-even\">repositories (dagster.StringSource, optional)</dt>\n<dd class=\"field-even\"><p>Runtime Environment: Comma-separated list of additional remote repositories to search for the maven coordinates given with \u2013packages or spark.jars.packages.</p>\n</dd>\n</dl>\n</details></dd>\n<dt class=\"field-odd\">pyspark (permissive dict, optional)</dt>\n<dd class=\"field-odd\"><details class=\"summary-default-value\">\n<summary>Default Value:</summary><div class=\"highlight-javascript notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"p\">{</span>\n    <span class=\"s2\">&quot;driver&quot;</span><span class=\"o\">:</span> <span class=\"p\">{}</span>\n<span class=\"p\">}</span>\n</pre></div>\n</div>\n</details><details class=\"summary-config-schema\">\n<summary>Config Schema:</summary><dl class=\"field-list\">\n<dt class=\"field-odd\">driver (permissive dict, optional)</dt>\n<dd class=\"field-odd\"><details class=\"summary-default-value\">\n<summary>Default Value:</summary><div class=\"highlight-javascript notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"p\">{}</span>\n</pre></div>\n</div>\n</details><details class=\"summary-config-schema\">\n<summary>Config Schema:</summary><dl class=\"field-list simple\">\n<dt class=\"field-odd\">python (dagster.StringSource, optional)</dt>\n<dd class=\"field-odd\"><p>Runtime Environment: Python binary executable to use for PySpark in driver. (default is spark.pyspark.python)</p>\n</dd>\n</dl>\n</details></dd>\n<dt class=\"field-even\">python (dagster.StringSource, optional)</dt>\n<dd class=\"field-even\"><p>Runtime Environment: Python binary executable to use for PySpark in both driver and executors.</p>\n</dd>\n</dl>\n</details></dd>\n<dt class=\"field-odd\">reducer (permissive dict, optional)</dt>\n<dd class=\"field-odd\"><details class=\"summary-default-value\">\n<summary>Default Value:</summary><div class=\"highlight-javascript notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"p\">{}</span>\n</pre></div>\n</div>\n</details><details class=\"summary-config-schema\">\n<summary>Config Schema:</summary><dl class=\"field-list simple\">\n<dt class=\"field-odd\">maxSizeInFlight (dagster.StringSource, optional)</dt>\n<dd class=\"field-odd\"><p>Shuffle Behavior: Maximum size of map outputs to fetch simultaneously from each reduce task, in MiB unless otherwise specified. Since each output requires us to create a buffer to receive it, this represents a fixed memory overhead per reduce task, so keep it small unless you have a large amount of memory.</p>\n</dd>\n<dt class=\"field-even\">maxReqsInFlight (dagster.IntSource, optional)</dt>\n<dd class=\"field-even\"><p>Shuffle Behavior: This configuration limits the number of remote requests to fetch blocks at any given point. When the number of hosts in the cluster increase, it might lead to very large number of inbound connections to one or more nodes, causing the workers to fail under load. By allowing it to limit the number of fetch requests, this scenario can be mitigated.</p>\n</dd>\n<dt class=\"field-odd\">maxBlocksInFlightPerAddress (dagster.IntSource, optional)</dt>\n<dd class=\"field-odd\"><p>Shuffle Behavior: This configuration limits the number of remote blocks being fetched per reduce task from a given host port. When a large number of blocks are being requested from a given address in a single fetch or simultaneously, this could crash the serving executor or Node Manager. This is especially useful to reduce the load on the Node Manager when external shuffle is enabled. You can mitigate this issue by setting it to a lower value.</p>\n</dd>\n</dl>\n</details></dd>\n<dt class=\"field-even\">maxRemoteBlockSizeFetchToMem (dagster.IntSource, optional)</dt>\n<dd class=\"field-even\"><p>Shuffle Behavior: The remote block will be fetched to disk when size of the block is above this threshold in bytes. This is to avoid a giant request that takes too much memory. By default, this is only enabled for blocks &gt; 2GB, as those cannot be fetched directly into memory, no matter what resources are available. But it can be turned down to a much lower value (eg. 200m) to avoid using too much memory on smaller blocks as well. Note this configuration will affect both shuffle fetch and block manager remote block fetch. For users who enabled external shuffle service, this feature can only be used when external shuffle service is newer than Spark 2.2.</p>\n</dd>\n<dt class=\"field-odd\">shuffle (permissive dict, optional)</dt>\n<dd class=\"field-odd\"><details class=\"summary-default-value\">\n<summary>Default Value:</summary><div class=\"highlight-javascript notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"p\">{</span>\n    <span class=\"s2\">&quot;file&quot;</span><span class=\"o\">:</span> <span class=\"p\">{},</span>\n    <span class=\"s2\">&quot;io&quot;</span><span class=\"o\">:</span> <span class=\"p\">{},</span>\n    <span class=\"s2\">&quot;service&quot;</span><span class=\"o\">:</span> <span class=\"p\">{</span>\n        <span class=\"s2\">&quot;index&quot;</span><span class=\"o\">:</span> <span class=\"p\">{</span>\n            <span class=\"s2\">&quot;cache&quot;</span><span class=\"o\">:</span> <span class=\"p\">{}</span>\n        <span class=\"p\">}</span>\n    <span class=\"p\">},</span>\n    <span class=\"s2\">&quot;sort&quot;</span><span class=\"o\">:</span> <span class=\"p\">{},</span>\n    <span class=\"s2\">&quot;spill&quot;</span><span class=\"o\">:</span> <span class=\"p\">{},</span>\n    <span class=\"s2\">&quot;registration&quot;</span><span class=\"o\">:</span> <span class=\"p\">{}</span>\n<span class=\"p\">}</span>\n</pre></div>\n</div>\n</details><details class=\"summary-config-schema\">\n<summary>Config Schema:</summary><dl class=\"field-list\">\n<dt class=\"field-odd\">compress (Bool, optional)</dt>\n<dd class=\"field-odd\"><p>Shuffle Behavior: Whether to compress map output files. Generally a good idea. Compression will use spark.io.compression.codec.</p>\n</dd>\n<dt class=\"field-even\">file (permissive dict, optional)</dt>\n<dd class=\"field-even\"><details class=\"summary-default-value\">\n<summary>Default Value:</summary><div class=\"highlight-javascript notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"p\">{}</span>\n</pre></div>\n</div>\n</details><details class=\"summary-config-schema\">\n<summary>Config Schema:</summary><dl class=\"field-list simple\">\n<dt class=\"field-odd\">buffer (dagster.StringSource, optional)</dt>\n<dd class=\"field-odd\"><p>Shuffle Behavior: Size of the in-memory buffer for each shuffle file output stream, in KiB unless otherwise specified. These buffers reduce the number of disk seeks and system calls made in creating intermediate shuffle files.</p>\n</dd>\n</dl>\n</details></dd>\n<dt class=\"field-even\">io (permissive dict, optional)</dt>\n<dd class=\"field-even\"><details class=\"summary-default-value\">\n<summary>Default Value:</summary><div class=\"highlight-javascript notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"p\">{}</span>\n</pre></div>\n</div>\n</details><details class=\"summary-config-schema\">\n<summary>Config Schema:</summary><dl class=\"field-list simple\">\n<dt class=\"field-odd\">maxRetries (dagster.IntSource, optional)</dt>\n<dd class=\"field-odd\"><p>Shuffle Behavior: (Netty only) Fetches that fail due to IO-related exceptions are automatically retried if this is set to a non-zero value. This retry logic helps stabilize large shuffles in the face of long GC pauses or transient network connectivity issues.</p>\n</dd>\n<dt class=\"field-even\">numConnectionsPerPeer (dagster.IntSource, optional)</dt>\n<dd class=\"field-even\"><p>Shuffle Behavior: (Netty only) Connections between hosts are reused in order to reduce connection buildup for large clusters. For clusters with many hard disks and few hosts, this may result in insufficient concurrency to saturate all disks, and so users may consider increasing this value.</p>\n</dd>\n<dt class=\"field-odd\">preferDirectBufs (Bool, optional)</dt>\n<dd class=\"field-odd\"><p>Shuffle Behavior: (Netty only) Off-heap buffers are used to reduce garbage collection during shuffle and cache block transfer. For environments where off-heap memory is tightly limited, users may wish to turn this off to force all allocations from Netty to be on-heap.</p>\n</dd>\n<dt class=\"field-even\">retryWait (dagster.StringSource, optional)</dt>\n<dd class=\"field-even\"><p>Shuffle Behavior: (Netty only) How long to wait between retries of fetches. The maximum delay caused by retrying is 15 seconds by default, calculated as maxRetries * retryWait.</p>\n</dd>\n</dl>\n</details></dd>\n<dt class=\"field-odd\">service (permissive dict, optional)</dt>\n<dd class=\"field-odd\"><details class=\"summary-default-value\">\n<summary>Default Value:</summary><div class=\"highlight-javascript notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"p\">{</span>\n    <span class=\"s2\">&quot;index&quot;</span><span class=\"o\">:</span> <span class=\"p\">{</span>\n        <span class=\"s2\">&quot;cache&quot;</span><span class=\"o\">:</span> <span class=\"p\">{}</span>\n    <span class=\"p\">}</span>\n<span class=\"p\">}</span>\n</pre></div>\n</div>\n</details><details class=\"summary-config-schema\">\n<summary>Config Schema:</summary><dl class=\"field-list\">\n<dt class=\"field-odd\">enabled (Bool, optional)</dt>\n<dd class=\"field-odd\"><p>Shuffle Behavior: Enables the external shuffle service. This service preserves the shuffle files written by executors so the executors can be safely removed. This must be enabled if spark.dynamicAllocation.enabled is \u201ctrue\u201d. The external shuffle service must be set up in order to enable it. See dynamic allocation configuration and setup documentation for more information.</p>\n</dd>\n<dt class=\"field-even\">port (dagster.IntSource, optional)</dt>\n<dd class=\"field-even\"><p>Shuffle Behavior: Port on which the external shuffle service will run.</p>\n</dd>\n<dt class=\"field-odd\">index (permissive dict, optional)</dt>\n<dd class=\"field-odd\"><details class=\"summary-default-value\">\n<summary>Default Value:</summary><div class=\"highlight-javascript notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"p\">{</span>\n    <span class=\"s2\">&quot;cache&quot;</span><span class=\"o\">:</span> <span class=\"p\">{}</span>\n<span class=\"p\">}</span>\n</pre></div>\n</div>\n</details><details class=\"summary-config-schema\">\n<summary>Config Schema:</summary><dl class=\"field-list\">\n<dt class=\"field-odd\">cache (permissive dict, optional)</dt>\n<dd class=\"field-odd\"><details class=\"summary-default-value\">\n<summary>Default Value:</summary><div class=\"highlight-javascript notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"p\">{}</span>\n</pre></div>\n</div>\n</details><details class=\"summary-config-schema\">\n<summary>Config Schema:</summary><dl class=\"field-list simple\">\n<dt class=\"field-odd\">size (dagster.StringSource, optional)</dt>\n<dd class=\"field-odd\"><p>Shuffle Behavior: Cache entries limited to the specified memory footprint in bytes.</p>\n</dd>\n</dl>\n</details></dd>\n</dl>\n</details></dd>\n</dl>\n</details></dd>\n<dt class=\"field-even\">maxChunksBeingTransferred (dagster.IntSource, optional)</dt>\n<dd class=\"field-even\"><p>Shuffle Behavior: The max number of chunks allowed to be transferred at the same time on shuffle service. Note that new incoming connections will be closed when the max number is hit. The client will retry according to the shuffle retry configs (see spark.shuffle.io.maxRetries and spark.shuffle.io.retryWait), if those limits are reached the task will fail with fetch failure.</p>\n</dd>\n<dt class=\"field-odd\">sort (permissive dict, optional)</dt>\n<dd class=\"field-odd\"><details class=\"summary-default-value\">\n<summary>Default Value:</summary><div class=\"highlight-javascript notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"p\">{}</span>\n</pre></div>\n</div>\n</details><details class=\"summary-config-schema\">\n<summary>Config Schema:</summary><dl class=\"field-list simple\">\n<dt class=\"field-odd\">bypassMergeThreshold (dagster.IntSource, optional)</dt>\n<dd class=\"field-odd\"><p>Shuffle Behavior: (Advanced) In the sort-based shuffle manager, avoid merge-sorting data if there is no map-side aggregation and there are at most this many reduce partitions.</p>\n</dd>\n</dl>\n</details></dd>\n<dt class=\"field-even\">spill (permissive dict, optional)</dt>\n<dd class=\"field-even\"><details class=\"summary-default-value\">\n<summary>Default Value:</summary><div class=\"highlight-javascript notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"p\">{}</span>\n</pre></div>\n</div>\n</details><details class=\"summary-config-schema\">\n<summary>Config Schema:</summary><dl class=\"field-list simple\">\n<dt class=\"field-odd\">compress (Bool, optional)</dt>\n<dd class=\"field-odd\"><p>Shuffle Behavior: Whether to compress data spilled during shuffles. Compression will use spark.io.compression.codec.</p>\n</dd>\n</dl>\n</details></dd>\n<dt class=\"field-even\">accurateBlockThreshold (dagster.IntSource, optional)</dt>\n<dd class=\"field-even\"><p>Shuffle Behavior: Threshold in bytes above which the size of shuffle blocks in HighlyCompressedMapStatus is accurately recorded. This helps to prevent OOM by avoiding underestimating shuffle block size when fetch shuffle blocks.</p>\n</dd>\n<dt class=\"field-odd\">registration (permissive dict, optional)</dt>\n<dd class=\"field-odd\"><details class=\"summary-default-value\">\n<summary>Default Value:</summary><div class=\"highlight-javascript notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"p\">{}</span>\n</pre></div>\n</div>\n</details><details class=\"summary-config-schema\">\n<summary>Config Schema:</summary><dl class=\"field-list simple\">\n<dt class=\"field-odd\">timeout (dagster.IntSource, optional)</dt>\n<dd class=\"field-odd\"><p>Shuffle Behavior: Timeout in milliseconds for registration to the external shuffle service.</p>\n</dd>\n<dt class=\"field-even\">maxAttempts (dagster.IntSource, optional)</dt>\n<dd class=\"field-even\"><p>Shuffle Behavior: When we fail to register to the external shuffle service, we will retry for maxAttempts times.</p>\n</dd>\n</dl>\n</details></dd>\n<dt class=\"field-odd\">memoryFraction (Float, optional)</dt>\n<dd class=\"field-odd\"><p>Memory Management: (deprecated) This is read only if spark.memory.useLegacyMode is enabled. Fraction of Java heap to use for aggregation and cogroups during shuffles. At any given time, the collective size of all in-memory maps used for shuffles is bounded by this limit, beyond which the contents will begin to spill to disk. If spills are often, consider increasing this value at the expense of spark.storage.memoryFraction.</p>\n</dd>\n</dl>\n</details></dd>\n<dt class=\"field-even\">eventLog (permissive dict, optional)</dt>\n<dd class=\"field-even\"><details class=\"summary-default-value\">\n<summary>Default Value:</summary><div class=\"highlight-javascript notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"p\">{</span>\n    <span class=\"s2\">&quot;logBlockUpdates&quot;</span><span class=\"o\">:</span> <span class=\"p\">{},</span>\n    <span class=\"s2\">&quot;longForm&quot;</span><span class=\"o\">:</span> <span class=\"p\">{},</span>\n    <span class=\"s2\">&quot;buffer&quot;</span><span class=\"o\">:</span> <span class=\"p\">{}</span>\n<span class=\"p\">}</span>\n</pre></div>\n</div>\n</details><details class=\"summary-config-schema\">\n<summary>Config Schema:</summary><dl class=\"field-list\">\n<dt class=\"field-odd\">logBlockUpdates (permissive dict, optional)</dt>\n<dd class=\"field-odd\"><details class=\"summary-default-value\">\n<summary>Default Value:</summary><div class=\"highlight-javascript notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"p\">{}</span>\n</pre></div>\n</div>\n</details><details class=\"summary-config-schema\">\n<summary>Config Schema:</summary><dl class=\"field-list simple\">\n<dt class=\"field-odd\">enabled (dagster.StringSource, optional)</dt>\n<dd class=\"field-odd\"><p>Spark UI: Whether to log events for every block update, if spark.eventLog.enabled is true. *Warning*: This will increase the size of the event log considerably.</p>\n</dd>\n</dl>\n</details></dd>\n<dt class=\"field-even\">longForm (permissive dict, optional)</dt>\n<dd class=\"field-even\"><details class=\"summary-default-value\">\n<summary>Default Value:</summary><div class=\"highlight-javascript notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"p\">{}</span>\n</pre></div>\n</div>\n</details><details class=\"summary-config-schema\">\n<summary>Config Schema:</summary><dl class=\"field-list simple\">\n<dt class=\"field-odd\">enabled (dagster.StringSource, optional)</dt>\n<dd class=\"field-odd\"><p>Spark UI: If true, use the long form of call sites in the event log. Otherwise use the short form.</p>\n</dd>\n</dl>\n</details></dd>\n<dt class=\"field-even\">compress (dagster.StringSource, optional)</dt>\n<dd class=\"field-even\"><p>Spark UI: Whether to compress logged events, if spark.eventLog.enabled is true. Compression will use spark.io.compression.codec.</p>\n</dd>\n<dt class=\"field-odd\">dir (dagster.StringSource, optional)</dt>\n<dd class=\"field-odd\"><p>Spark UI: Base directory in which Spark events are logged, if spark.eventLog.enabled is true. Within this base directory, Spark creates a sub-directory for each application, and logs the events specific to the application in this directory. Users may want to set this to a unified location like an HDFS directory so history files can be read by the history server.</p>\n</dd>\n<dt class=\"field-even\">enabled (dagster.StringSource, optional)</dt>\n<dd class=\"field-even\"><p>Spark UI: Whether to log Spark events, useful for reconstructing the Web UI after the application has finished.</p>\n</dd>\n<dt class=\"field-odd\">overwrite (dagster.StringSource, optional)</dt>\n<dd class=\"field-odd\"><p>Spark UI: Whether to overwrite any existing files.</p>\n</dd>\n<dt class=\"field-even\">buffer (permissive dict, optional)</dt>\n<dd class=\"field-even\"><details class=\"summary-default-value\">\n<summary>Default Value:</summary><div class=\"highlight-javascript notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"p\">{}</span>\n</pre></div>\n</div>\n</details><details class=\"summary-config-schema\">\n<summary>Config Schema:</summary><dl class=\"field-list simple\">\n<dt class=\"field-odd\">kb (dagster.StringSource, optional)</dt>\n<dd class=\"field-odd\"><p>Spark UI: Buffer size to use when writing to output streams, in KiB unless otherwise specified.</p>\n</dd>\n</dl>\n</details></dd>\n</dl>\n</details></dd>\n<dt class=\"field-even\">ui (permissive dict, optional)</dt>\n<dd class=\"field-even\"><details class=\"summary-default-value\">\n<summary>Default Value:</summary><div class=\"highlight-javascript notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"p\">{</span>\n    <span class=\"s2\">&quot;dagGraph&quot;</span><span class=\"o\">:</span> <span class=\"p\">{},</span>\n    <span class=\"s2\">&quot;liveUpdate&quot;</span><span class=\"o\">:</span> <span class=\"p\">{}</span>\n<span class=\"p\">}</span>\n</pre></div>\n</div>\n</details><details class=\"summary-config-schema\">\n<summary>Config Schema:</summary><dl class=\"field-list\">\n<dt class=\"field-odd\">dagGraph (permissive dict, optional)</dt>\n<dd class=\"field-odd\"><details class=\"summary-default-value\">\n<summary>Default Value:</summary><div class=\"highlight-javascript notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"p\">{}</span>\n</pre></div>\n</div>\n</details><details class=\"summary-config-schema\">\n<summary>Config Schema:</summary><dl class=\"field-list simple\">\n<dt class=\"field-odd\">retainedRootRDDs (dagster.StringSource, optional)</dt>\n<dd class=\"field-odd\"><p>Spark UI: How many DAG graph nodes the Spark UI and status APIs remember before garbage collecting.</p>\n</dd>\n</dl>\n</details></dd>\n<dt class=\"field-even\">enabled (dagster.StringSource, optional)</dt>\n<dd class=\"field-even\"><p>Spark UI: Whether to run the web UI for the Spark application.</p>\n</dd>\n<dt class=\"field-odd\">killEnabled (dagster.StringSource, optional)</dt>\n<dd class=\"field-odd\"><p>Spark UI: Allows jobs and stages to be killed from the web UI.</p>\n</dd>\n<dt class=\"field-even\">liveUpdate (permissive dict, optional)</dt>\n<dd class=\"field-even\"><details class=\"summary-default-value\">\n<summary>Default Value:</summary><div class=\"highlight-javascript notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"p\">{}</span>\n</pre></div>\n</div>\n</details><details class=\"summary-config-schema\">\n<summary>Config Schema:</summary><dl class=\"field-list simple\">\n<dt class=\"field-odd\">period (dagster.StringSource, optional)</dt>\n<dd class=\"field-odd\"><p>Spark UI: How often to update live entities. -1 means \u201cnever update\u201d when replaying applications, meaning only the last write will happen. For live applications, this avoids a few operations that we can live without when rapidly processing incoming task events.</p>\n</dd>\n</dl>\n</details></dd>\n<dt class=\"field-even\">port (dagster.StringSource, optional)</dt>\n<dd class=\"field-even\"><p>Spark UI: Port for your application\u2019s dashboard, which shows memory and workload data.</p>\n</dd>\n<dt class=\"field-odd\">retainedJobs (dagster.StringSource, optional)</dt>\n<dd class=\"field-odd\"><p>Spark UI: How many jobs the Spark UI and status APIs remember before garbage collecting. This is a target maximum, and fewer elements may be retained in some circumstances.</p>\n</dd>\n<dt class=\"field-even\">retainedStages (dagster.StringSource, optional)</dt>\n<dd class=\"field-even\"><p>Spark UI: How many stages the Spark UI and status APIs remember before garbage collecting. This is a target maximum, and fewer elements may be retained in some circumstances.</p>\n</dd>\n<dt class=\"field-odd\">retainedTasks (dagster.StringSource, optional)</dt>\n<dd class=\"field-odd\"><p>Spark UI: How many tasks the Spark UI and status APIs remember before garbage collecting. This is a target maximum, and fewer elements may be retained in some circumstances.</p>\n</dd>\n<dt class=\"field-even\">reverseProxy (dagster.StringSource, optional)</dt>\n<dd class=\"field-even\"><p>Spark UI: Enable running Spark Master as reverse proxy for worker and application UIs. In this mode, Spark master will reverse proxy the worker and application UIs to enable access without requiring direct access to their hosts. Use it with caution, as worker and application UI will not be accessible directly, you will only be able to access them through spark master/proxy public URL. This setting affects all the workers and application UIs running in the cluster and must be set on all the workers, drivers and masters.</p>\n</dd>\n<dt class=\"field-odd\">reverseProxyUrl (dagster.StringSource, optional)</dt>\n<dd class=\"field-odd\"><p>Spark UI: This is the URL where your proxy is running. This URL is for proxy which is running in front of Spark Master. This is useful when running proxy for authentication e.g. OAuth proxy. Make sure this is a complete URL including scheme (http/https) and port to reach your proxy.</p>\n</dd>\n<dt class=\"field-even\">showConsoleProgress (dagster.StringSource, optional)</dt>\n<dd class=\"field-even\"><p>Spark UI: Show the progress bar in the console. The progress bar shows the progress of stages that run for longer than 500ms. If multiple stages run at the same time, multiple progress bars will be displayed on the same line.</p>\n</dd>\n<dt class=\"field-odd\">retainedDeadExecutors (dagster.StringSource, optional)</dt>\n<dd class=\"field-odd\"><p>Spark UI: How many dead executors the Spark UI and status APIs remember before garbage collecting.</p>\n</dd>\n<dt class=\"field-even\">filters (dagster.StringSource, optional)</dt>\n<dd class=\"field-even\"><p>Spark UI: Comma separated list of filter class names to apply to the Spark Web UI. The filter should be a standard javax servlet Filter. Filter parameters can also be specified in the configuration, by setting config entries of the form spark.&lt;class name of filter&gt;.param.&lt;param name&gt;=&lt;value&gt; For example: spark.ui.filters=com.test.filter1 spark.com.test.filter1.param.name1=foo spark.com.test.filter1.param.name2=bar</p>\n</dd>\n</dl>\n</details></dd>\n<dt class=\"field-odd\">worker (permissive dict, optional)</dt>\n<dd class=\"field-odd\"><details class=\"summary-default-value\">\n<summary>Default Value:</summary><div class=\"highlight-javascript notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"p\">{</span>\n    <span class=\"s2\">&quot;ui&quot;</span><span class=\"o\">:</span> <span class=\"p\">{}</span>\n<span class=\"p\">}</span>\n</pre></div>\n</div>\n</details><details class=\"summary-config-schema\">\n<summary>Config Schema:</summary><dl class=\"field-list\">\n<dt class=\"field-odd\">ui (permissive dict, optional)</dt>\n<dd class=\"field-odd\"><details class=\"summary-default-value\">\n<summary>Default Value:</summary><div class=\"highlight-javascript notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"p\">{}</span>\n</pre></div>\n</div>\n</details><details class=\"summary-config-schema\">\n<summary>Config Schema:</summary><dl class=\"field-list simple\">\n<dt class=\"field-odd\">retainedExecutors (dagster.StringSource, optional)</dt>\n<dd class=\"field-odd\"><p>Spark UI: How many finished executors the Spark UI and status APIs remember before garbage collecting.</p>\n</dd>\n<dt class=\"field-even\">retainedDrivers (dagster.StringSource, optional)</dt>\n<dd class=\"field-even\"><p>Spark UI: How many finished drivers the Spark UI and status APIs remember before garbage collecting.</p>\n</dd>\n</dl>\n</details></dd>\n</dl>\n</details></dd>\n<dt class=\"field-odd\">sql (permissive dict, optional)</dt>\n<dd class=\"field-odd\"><details class=\"summary-default-value\">\n<summary>Default Value:</summary><div class=\"highlight-javascript notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"p\">{</span>\n    <span class=\"s2\">&quot;ui&quot;</span><span class=\"o\">:</span> <span class=\"p\">{}</span>\n<span class=\"p\">}</span>\n</pre></div>\n</div>\n</details><details class=\"summary-config-schema\">\n<summary>Config Schema:</summary><dl class=\"field-list\">\n<dt class=\"field-odd\">ui (permissive dict, optional)</dt>\n<dd class=\"field-odd\"><details class=\"summary-default-value\">\n<summary>Default Value:</summary><div class=\"highlight-javascript notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"p\">{}</span>\n</pre></div>\n</div>\n</details><details class=\"summary-config-schema\">\n<summary>Config Schema:</summary><dl class=\"field-list simple\">\n<dt class=\"field-odd\">retainedExecutions (dagster.StringSource, optional)</dt>\n<dd class=\"field-odd\"><p>Spark UI: How many finished executions the Spark UI and status APIs remember before garbage collecting.</p>\n</dd>\n</dl>\n</details></dd>\n</dl>\n</details></dd>\n<dt class=\"field-even\">streaming (permissive dict, optional)</dt>\n<dd class=\"field-even\"><details class=\"summary-default-value\">\n<summary>Default Value:</summary><div class=\"highlight-javascript notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"p\">{</span>\n    <span class=\"s2\">&quot;ui&quot;</span><span class=\"o\">:</span> <span class=\"p\">{},</span>\n    <span class=\"s2\">&quot;backpressure&quot;</span><span class=\"o\">:</span> <span class=\"p\">{},</span>\n    <span class=\"s2\">&quot;receiver&quot;</span><span class=\"o\">:</span> <span class=\"p\">{</span>\n        <span class=\"s2\">&quot;writeAheadLog&quot;</span><span class=\"o\">:</span> <span class=\"p\">{}</span>\n    <span class=\"p\">},</span>\n    <span class=\"s2\">&quot;kafka&quot;</span><span class=\"o\">:</span> <span class=\"p\">{},</span>\n    <span class=\"s2\">&quot;driver&quot;</span><span class=\"o\">:</span> <span class=\"p\">{</span>\n        <span class=\"s2\">&quot;writeAheadLog&quot;</span><span class=\"o\">:</span> <span class=\"p\">{}</span>\n    <span class=\"p\">}</span>\n<span class=\"p\">}</span>\n</pre></div>\n</div>\n</details><details class=\"summary-config-schema\">\n<summary>Config Schema:</summary><dl class=\"field-list\">\n<dt class=\"field-odd\">ui (permissive dict, optional)</dt>\n<dd class=\"field-odd\"><details class=\"summary-default-value\">\n<summary>Default Value:</summary><div class=\"highlight-javascript notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"p\">{}</span>\n</pre></div>\n</div>\n</details><details class=\"summary-config-schema\">\n<summary>Config Schema:</summary><dl class=\"field-list simple\">\n<dt class=\"field-odd\">retainedBatches (dagster.StringSource, optional)</dt>\n<dd class=\"field-odd\"><p>Spark Streaming: How many batches the Spark Streaming UI and status APIs remember before garbage collecting.</p>\n</dd>\n</dl>\n</details></dd>\n<dt class=\"field-even\">backpressure (permissive dict, optional)</dt>\n<dd class=\"field-even\"><details class=\"summary-default-value\">\n<summary>Default Value:</summary><div class=\"highlight-javascript notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"p\">{}</span>\n</pre></div>\n</div>\n</details><details class=\"summary-config-schema\">\n<summary>Config Schema:</summary><dl class=\"field-list simple\">\n<dt class=\"field-odd\">enabled (dagster.StringSource, optional)</dt>\n<dd class=\"field-odd\"><p>Spark Streaming: Enables or disables Spark Streaming\u2019s internal backpressure mechanism (since 1.5). This enables the Spark Streaming to control the receiving rate based on the current batch scheduling delays and processing times so that the system receives only as fast as the system can process. Internally, this dynamically sets the maximum receiving rate of receivers. This rate is upper bounded by the values spark.streaming.receiver.maxRate and spark.streaming.kafka.maxRatePerPartition if they are set (see below).</p>\n</dd>\n<dt class=\"field-even\">initialRate (dagster.StringSource, optional)</dt>\n<dd class=\"field-even\"><p>Spark Streaming: This is the initial maximum receiving rate at which each receiver will receive data for the first batch when the backpressure mechanism is enabled.</p>\n</dd>\n</dl>\n</details></dd>\n<dt class=\"field-odd\">blockInterval (dagster.StringSource, optional)</dt>\n<dd class=\"field-odd\"><p>Spark Streaming: Interval at which data received by Spark Streaming receivers is chunked into blocks of data before storing them in Spark. Minimum recommended - 50 ms. See the performance tuning section in the Spark Streaming programing guide for more details.</p>\n</dd>\n<dt class=\"field-even\">receiver (permissive dict, optional)</dt>\n<dd class=\"field-even\"><details class=\"summary-default-value\">\n<summary>Default Value:</summary><div class=\"highlight-javascript notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"p\">{</span>\n    <span class=\"s2\">&quot;writeAheadLog&quot;</span><span class=\"o\">:</span> <span class=\"p\">{}</span>\n<span class=\"p\">}</span>\n</pre></div>\n</div>\n</details><details class=\"summary-config-schema\">\n<summary>Config Schema:</summary><dl class=\"field-list\">\n<dt class=\"field-odd\">maxRate (dagster.StringSource, optional)</dt>\n<dd class=\"field-odd\"><p>Spark Streaming: Maximum rate (number of records per second) at which each receiver will receive data. Effectively, each stream will consume at most this number of records per second. Setting this configuration to 0 or a negative number will put no limit on the rate. See the deployment guide in the Spark Streaming programing guide for mode details.</p>\n</dd>\n<dt class=\"field-even\">writeAheadLog (permissive dict, optional)</dt>\n<dd class=\"field-even\"><details class=\"summary-default-value\">\n<summary>Default Value:</summary><div class=\"highlight-javascript notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"p\">{}</span>\n</pre></div>\n</div>\n</details><details class=\"summary-config-schema\">\n<summary>Config Schema:</summary><dl class=\"field-list simple\">\n<dt class=\"field-odd\">enable (dagster.StringSource, optional)</dt>\n<dd class=\"field-odd\"><p>Spark Streaming: Enable write-ahead logs for receivers. All the input data received through receivers will be saved to write-ahead logs that will allow it to be recovered after driver failures. See the deployment guide in the Spark Streaming programing guide for more details.</p>\n</dd>\n<dt class=\"field-even\">closeFileAfterWrite (dagster.StringSource, optional)</dt>\n<dd class=\"field-even\"><p>Spark Streaming: Whether to close the file after writing a write-ahead log record on the receivers. Set this to \u2018true\u2019 when you want to use S3 (or any file system that does not support flushing) for the data WAL on the receivers.</p>\n</dd>\n</dl>\n</details></dd>\n</dl>\n</details></dd>\n<dt class=\"field-odd\">unpersist (dagster.StringSource, optional)</dt>\n<dd class=\"field-odd\"><p>Spark Streaming: Force RDDs generated and persisted by Spark Streaming to be automatically unpersisted from Spark\u2019s memory. The raw input data received by Spark Streaming is also automatically cleared. Setting this to false will allow the raw data and persisted RDDs to be accessible outside the streaming application as they will not be cleared automatically. But it comes at the cost of higher memory usage in Spark.</p>\n</dd>\n<dt class=\"field-even\">stopGracefullyOnShutdown (dagster.StringSource, optional)</dt>\n<dd class=\"field-even\"><p>Spark Streaming: If true, Spark shuts down the StreamingContext gracefully on JVM shutdown rather than immediately.</p>\n</dd>\n<dt class=\"field-odd\">kafka (permissive dict, optional)</dt>\n<dd class=\"field-odd\"><details class=\"summary-default-value\">\n<summary>Default Value:</summary><div class=\"highlight-javascript notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"p\">{}</span>\n</pre></div>\n</div>\n</details><details class=\"summary-config-schema\">\n<summary>Config Schema:</summary><dl class=\"field-list simple\">\n<dt class=\"field-odd\">maxRatePerPartition (dagster.StringSource, optional)</dt>\n<dd class=\"field-odd\"><p>Spark Streaming: Maximum rate (number of records per second) at which data will be read from each Kafka partition when using the new Kafka direct stream API. See the Kafka Integration guide for more details.</p>\n</dd>\n<dt class=\"field-even\">minRatePerPartition (dagster.StringSource, optional)</dt>\n<dd class=\"field-even\"><p>Spark Streaming: Minimum rate (number of records per second) at which data will be read from each Kafka partition when using the new Kafka direct stream API.</p>\n</dd>\n<dt class=\"field-odd\">maxRetries (dagster.StringSource, optional)</dt>\n<dd class=\"field-odd\"><p>Spark Streaming: Maximum number of consecutive retries the driver will make in order to find the latest offsets on the leader of each partition (a default value of 1 means that the driver will make a maximum of 2 attempts). Only applies to the new Kafka direct stream API.</p>\n</dd>\n</dl>\n</details></dd>\n<dt class=\"field-even\">driver (permissive dict, optional)</dt>\n<dd class=\"field-even\"><details class=\"summary-default-value\">\n<summary>Default Value:</summary><div class=\"highlight-javascript notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"p\">{</span>\n    <span class=\"s2\">&quot;writeAheadLog&quot;</span><span class=\"o\">:</span> <span class=\"p\">{}</span>\n<span class=\"p\">}</span>\n</pre></div>\n</div>\n</details><details class=\"summary-config-schema\">\n<summary>Config Schema:</summary><dl class=\"field-list\">\n<dt class=\"field-odd\">writeAheadLog (permissive dict, optional)</dt>\n<dd class=\"field-odd\"><details class=\"summary-default-value\">\n<summary>Default Value:</summary><div class=\"highlight-javascript notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"p\">{}</span>\n</pre></div>\n</div>\n</details><details class=\"summary-config-schema\">\n<summary>Config Schema:</summary><dl class=\"field-list simple\">\n<dt class=\"field-odd\">closeFileAfterWrite (dagster.StringSource, optional)</dt>\n<dd class=\"field-odd\"><p>Spark Streaming: Whether to close the file after writing a write-ahead log record on the driver. Set this to \u2018true\u2019 when you want to use S3 (or any file system that does not support flushing) for the metadata WAL on the driver.</p>\n</dd>\n</dl>\n</details></dd>\n</dl>\n</details></dd>\n</dl>\n</details></dd>\n<dt class=\"field-even\">broadcast (permissive dict, optional)</dt>\n<dd class=\"field-even\"><details class=\"summary-default-value\">\n<summary>Default Value:</summary><div class=\"highlight-javascript notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"p\">{}</span>\n</pre></div>\n</div>\n</details><details class=\"summary-config-schema\">\n<summary>Config Schema:</summary><dl class=\"field-list simple\">\n<dt class=\"field-odd\">compress (dagster.StringSource, optional)</dt>\n<dd class=\"field-odd\"><p>Compression and Serialization: Whether to compress broadcast variables before sending them. Generally a good idea. Compression will use spark.io.compression.codec.</p>\n</dd>\n<dt class=\"field-even\">blockSize (dagster.StringSource, optional)</dt>\n<dd class=\"field-even\"><p>Execution Behavior: Size of each piece of a block for TorrentBroadcastFactory, in KiB unless otherwise specified. Too large a value decreases parallelism during broadcast (makes it slower); however, if it is too small, BlockManager might take a performance hit.</p>\n</dd>\n<dt class=\"field-odd\">checksum (dagster.StringSource, optional)</dt>\n<dd class=\"field-odd\"><p>Execution Behavior: Whether to enable checksum for broadcast. If enabled, broadcasts will include a checksum, which can help detect corrupted blocks, at the cost of computing and sending a little more data. It\u2019s possible to disable it if the network has other mechanisms to guarantee data won\u2019t be corrupted during broadcast.</p>\n</dd>\n</dl>\n</details></dd>\n<dt class=\"field-even\">io (permissive dict, optional)</dt>\n<dd class=\"field-even\"><details class=\"summary-default-value\">\n<summary>Default Value:</summary><div class=\"highlight-javascript notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"p\">{</span>\n    <span class=\"s2\">&quot;compression&quot;</span><span class=\"o\">:</span> <span class=\"p\">{</span>\n        <span class=\"s2\">&quot;lz4&quot;</span><span class=\"o\">:</span> <span class=\"p\">{},</span>\n        <span class=\"s2\">&quot;snappy&quot;</span><span class=\"o\">:</span> <span class=\"p\">{},</span>\n        <span class=\"s2\">&quot;zstd&quot;</span><span class=\"o\">:</span> <span class=\"p\">{}</span>\n    <span class=\"p\">}</span>\n<span class=\"p\">}</span>\n</pre></div>\n</div>\n</details><details class=\"summary-config-schema\">\n<summary>Config Schema:</summary><dl class=\"field-list\">\n<dt class=\"field-odd\">compression (permissive dict, optional)</dt>\n<dd class=\"field-odd\"><details class=\"summary-default-value\">\n<summary>Default Value:</summary><div class=\"highlight-javascript notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"p\">{</span>\n    <span class=\"s2\">&quot;lz4&quot;</span><span class=\"o\">:</span> <span class=\"p\">{},</span>\n    <span class=\"s2\">&quot;snappy&quot;</span><span class=\"o\">:</span> <span class=\"p\">{},</span>\n    <span class=\"s2\">&quot;zstd&quot;</span><span class=\"o\">:</span> <span class=\"p\">{}</span>\n<span class=\"p\">}</span>\n</pre></div>\n</div>\n</details><details class=\"summary-config-schema\">\n<summary>Config Schema:</summary><dl class=\"field-list\">\n<dt class=\"field-odd\">codec (dagster.StringSource, optional)</dt>\n<dd class=\"field-odd\"><p>Compression and Serialization: The codec used to compress internal data such as RDD partitions, event log, broadcast variables and shuffle outputs. By default, Spark provides four codecs: lz4, lzf, snappy, and zstd. You can also use fully qualified class names to specify the codec, e.g. org.apache.spark.io.LZ4CompressionCodec, org.apache.spark.io.LZFCompressionCodec, org.apache.spark.io.SnappyCompressionCodec, and org.apache.spark.io.ZStdCompressionCodec.</p>\n</dd>\n<dt class=\"field-even\">lz4 (permissive dict, optional)</dt>\n<dd class=\"field-even\"><details class=\"summary-default-value\">\n<summary>Default Value:</summary><div class=\"highlight-javascript notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"p\">{}</span>\n</pre></div>\n</div>\n</details><details class=\"summary-config-schema\">\n<summary>Config Schema:</summary><dl class=\"field-list simple\">\n<dt class=\"field-odd\">blockSize (dagster.StringSource, optional)</dt>\n<dd class=\"field-odd\"><p>Compression and Serialization: Block size in bytes used in LZ4 compression, in the case when LZ4 compression codec is used. Lowering this block size will also lower shuffle memory usage when LZ4 is used.</p>\n</dd>\n</dl>\n</details></dd>\n<dt class=\"field-even\">snappy (permissive dict, optional)</dt>\n<dd class=\"field-even\"><details class=\"summary-default-value\">\n<summary>Default Value:</summary><div class=\"highlight-javascript notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"p\">{}</span>\n</pre></div>\n</div>\n</details><details class=\"summary-config-schema\">\n<summary>Config Schema:</summary><dl class=\"field-list simple\">\n<dt class=\"field-odd\">blockSize (dagster.StringSource, optional)</dt>\n<dd class=\"field-odd\"><p>Compression and Serialization: Block size in bytes used in Snappy compression, in the case when Snappy compression codec is used. Lowering this block size will also lower shuffle memory usage when Snappy is used.</p>\n</dd>\n</dl>\n</details></dd>\n<dt class=\"field-even\">zstd (permissive dict, optional)</dt>\n<dd class=\"field-even\"><details class=\"summary-default-value\">\n<summary>Default Value:</summary><div class=\"highlight-javascript notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"p\">{}</span>\n</pre></div>\n</div>\n</details><details class=\"summary-config-schema\">\n<summary>Config Schema:</summary><dl class=\"field-list simple\">\n<dt class=\"field-odd\">level (dagster.StringSource, optional)</dt>\n<dd class=\"field-odd\"><p>Compression and Serialization: Compression level for Zstd compression codec. Increasing the compression level will result in better compression at the expense of more CPU and memory.</p>\n</dd>\n<dt class=\"field-even\">bufferSize (dagster.StringSource, optional)</dt>\n<dd class=\"field-even\"><p>Compression and Serialization: Buffer size in bytes used in Zstd compression, in the case when Zstd compression codec is used. Lowering this size will lower the shuffle memory usage when Zstd is used, but it might increase the compression cost because of excessive JNI call overhead.</p>\n</dd>\n</dl>\n</details></dd>\n</dl>\n</details></dd>\n</dl>\n</details></dd>\n<dt class=\"field-odd\">kryo (permissive dict, optional)</dt>\n<dd class=\"field-odd\"><details class=\"summary-default-value\">\n<summary>Default Value:</summary><div class=\"highlight-javascript notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"p\">{}</span>\n</pre></div>\n</div>\n</details><details class=\"summary-config-schema\">\n<summary>Config Schema:</summary><dl class=\"field-list simple\">\n<dt class=\"field-odd\">classesToRegister (dagster.StringSource, optional)</dt>\n<dd class=\"field-odd\"><p>Compression and Serialization: If you use Kryo serialization, give a comma-separated list of custom class names to register with Kryo. See the tuning guide for more details.</p>\n</dd>\n<dt class=\"field-even\">referenceTracking (dagster.StringSource, optional)</dt>\n<dd class=\"field-even\"><p>Compression and Serialization: Whether to track references to the same object when serializing data with Kryo, which is necessary if your object graphs have loops and useful for efficiency if they contain multiple copies of the same object. Can be disabled to improve performance if you know this is not the case.</p>\n</dd>\n<dt class=\"field-odd\">registrationRequired (dagster.StringSource, optional)</dt>\n<dd class=\"field-odd\"><p>Compression and Serialization: Whether to require registration with Kryo. If set to \u2018true\u2019, Kryo will throw an exception if an unregistered class is serialized. If set to false (the default), Kryo will write unregistered class names along with each object. Writing class names can cause significant performance overhead, so enabling this option can enforce strictly that a user has not omitted classes from registration.</p>\n</dd>\n<dt class=\"field-even\">registrator (dagster.StringSource, optional)</dt>\n<dd class=\"field-even\"><p>Compression and Serialization: If you use Kryo serialization, give a comma-separated list of classes that register your custom classes with Kryo. This property is useful if you need to register your classes in a custom way, e.g. to specify a custom field serializer. Otherwise spark.kryo.classesToRegister is simpler. It should be set to classes that extend KryoRegistrator. See the tuning guide for more details.</p>\n</dd>\n<dt class=\"field-odd\">unsafe (dagster.StringSource, optional)</dt>\n<dd class=\"field-odd\"><p>Compression and Serialization: Whether to use unsafe based Kryo serializer. Can be substantially faster by using Unsafe Based IO.</p>\n</dd>\n</dl>\n</details></dd>\n<dt class=\"field-even\">kryoserializer (permissive dict, optional)</dt>\n<dd class=\"field-even\"><details class=\"summary-default-value\">\n<summary>Default Value:</summary><div class=\"highlight-javascript notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"p\">{</span>\n    <span class=\"s2\">&quot;buffer&quot;</span><span class=\"o\">:</span> <span class=\"p\">{}</span>\n<span class=\"p\">}</span>\n</pre></div>\n</div>\n</details><details class=\"summary-config-schema\">\n<summary>Config Schema:</summary><dl class=\"field-list\">\n<dt class=\"field-odd\">buffer (permissive dict, optional)</dt>\n<dd class=\"field-odd\"><details class=\"summary-default-value\">\n<summary>Default Value:</summary><div class=\"highlight-javascript notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"p\">{}</span>\n</pre></div>\n</div>\n</details><details class=\"summary-config-schema\">\n<summary>Config Schema:</summary><dl class=\"field-list simple\">\n<dt class=\"field-odd\">root (dagster.StringSource, optional)</dt>\n<dd class=\"field-odd\"><p>Compression and Serialization: Initial size of Kryo\u2019s serialization buffer, in KiB unless otherwise specified. Note that there will be one buffer per core on each worker. This buffer will grow up to spark.kryoserializer.buffer.max if needed.</p>\n</dd>\n<dt class=\"field-even\">max (dagster.StringSource, optional)</dt>\n<dd class=\"field-even\"><p>Compression and Serialization: Maximum allowable size of Kryo serialization buffer, in MiB unless otherwise specified. This must be larger than any object you attempt to serialize and must be less than 2048m. Increase this if you get a \u201cbuffer limit exceeded\u201d exception inside Kryo.</p>\n</dd>\n</dl>\n</details></dd>\n</dl>\n</details></dd>\n<dt class=\"field-odd\">rdd (permissive dict, optional)</dt>\n<dd class=\"field-odd\"><details class=\"summary-default-value\">\n<summary>Default Value:</summary><div class=\"highlight-javascript notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"p\">{}</span>\n</pre></div>\n</div>\n</details><details class=\"summary-config-schema\">\n<summary>Config Schema:</summary><dl class=\"field-list simple\">\n<dt class=\"field-odd\">compress (dagster.StringSource, optional)</dt>\n<dd class=\"field-odd\"><p>Compression and Serialization: Whether to compress serialized RDD partitions (e.g. for StorageLevel.MEMORY_ONLY_SER in Java and Scala or StorageLevel.MEMORY_ONLY in Python). Can save substantial space at the cost of some extra CPU time. Compression will use spark.io.compression.codec.</p>\n</dd>\n</dl>\n</details></dd>\n<dt class=\"field-even\">serializer (permissive dict, optional)</dt>\n<dd class=\"field-even\"><details class=\"summary-default-value\">\n<summary>Default Value:</summary><div class=\"highlight-javascript notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"p\">{}</span>\n</pre></div>\n</div>\n</details><details class=\"summary-config-schema\">\n<summary>Config Schema:</summary><dl class=\"field-list simple\">\n<dt class=\"field-odd\">root (dagster.StringSource, optional)</dt>\n<dd class=\"field-odd\"><p>Compression and Serialization: Class to use for serializing objects that will be sent over the network or need to be cached in serialized form. The default of Java serialization works with any Serializable Java object but is quite slow, so we recommend using org.apache.spark.serializer.KryoSerializer and configuring Kryo serialization when speed is necessary. Can be any subclass of org.apache.spark.Serializer.</p>\n</dd>\n<dt class=\"field-even\">objectStreamReset (dagster.StringSource, optional)</dt>\n<dd class=\"field-even\"><p>Compression and Serialization: When serializing using org.apache.spark.serializer.JavaSerializer, the serializer caches objects to prevent writing redundant data, however that stops garbage collection of those objects. By calling \u2018reset\u2019 you flush that info from the serializer, and allow old objects to be collected. To turn off this periodic reset set it to -1. By default it will reset the serializer every 100 objects.</p>\n</dd>\n</dl>\n</details></dd>\n<dt class=\"field-odd\">memory (permissive dict, optional)</dt>\n<dd class=\"field-odd\"><details class=\"summary-default-value\">\n<summary>Default Value:</summary><div class=\"highlight-javascript notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"p\">{</span>\n    <span class=\"s2\">&quot;offHeap&quot;</span><span class=\"o\">:</span> <span class=\"p\">{}</span>\n<span class=\"p\">}</span>\n</pre></div>\n</div>\n</details><details class=\"summary-config-schema\">\n<summary>Config Schema:</summary><dl class=\"field-list\">\n<dt class=\"field-odd\">fraction (Float, optional)</dt>\n<dd class=\"field-odd\"><p>Memory Management: Fraction of (heap space - 300MB) used for execution and storage. The lower this is, the more frequently spills and cached data eviction occur. The purpose of this config is to set aside memory for internal metadata, user data structures, and imprecise size estimation in the case of sparse, unusually large records. Leaving this at the default value is recommended. For more detail, including important information about correctly tuning JVM garbage collection when increasing this value, see this description.</p>\n</dd>\n<dt class=\"field-even\">storageFraction (Float, optional)</dt>\n<dd class=\"field-even\"><p>Memory Management: Amount of storage memory immune to eviction, expressed as a fraction of the size of the region set aside by spark.memory.fraction. The higher this is, the less working memory may be available to execution and tasks may spill to disk more often. Leaving this at the default value is recommended. For more detail, see this description.</p>\n</dd>\n<dt class=\"field-odd\">offHeap (permissive dict, optional)</dt>\n<dd class=\"field-odd\"><details class=\"summary-default-value\">\n<summary>Default Value:</summary><div class=\"highlight-javascript notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"p\">{}</span>\n</pre></div>\n</div>\n</details><details class=\"summary-config-schema\">\n<summary>Config Schema:</summary><dl class=\"field-list simple\">\n<dt class=\"field-odd\">enabled (Bool, optional)</dt>\n<dd class=\"field-odd\"><p>Memory Management: If true, Spark will attempt to use off-heap memory for certain operations. If off-heap memory use is enabled, then spark.memory.offHeap.size must be positive.</p>\n</dd>\n<dt class=\"field-even\">size (dagster.IntSource, optional)</dt>\n<dd class=\"field-even\"><p>Memory Management: The absolute amount of memory in bytes which can be used for off-heap allocation. This setting has no impact on heap memory usage, so if your executors\u2019 total memory consumption must fit within some hard limit then be sure to shrink your JVM heap size accordingly. This must be set to a positive value when spark.memory.offHeap.enabled=true.</p>\n</dd>\n</dl>\n</details></dd>\n<dt class=\"field-odd\">useLegacyMode (Bool, optional)</dt>\n<dd class=\"field-odd\"><p>Memory Management: Whether to enable the legacy memory management mode used in Spark 1.5 and before. The legacy mode rigidly partitions the heap space into fixed-size regions, potentially leading to excessive spilling if the application was not tuned. The following deprecated memory fraction configurations are not read unless this is enabled: spark.shuffle.memoryFraction spark.storage.memoryFraction spark.storage.unrollFraction</p>\n</dd>\n</dl>\n</details></dd>\n<dt class=\"field-even\">storage (permissive dict, optional)</dt>\n<dd class=\"field-even\"><details class=\"summary-default-value\">\n<summary>Default Value:</summary><div class=\"highlight-javascript notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"p\">{</span>\n    <span class=\"s2\">&quot;replication&quot;</span><span class=\"o\">:</span> <span class=\"p\">{}</span>\n<span class=\"p\">}</span>\n</pre></div>\n</div>\n</details><details class=\"summary-config-schema\">\n<summary>Config Schema:</summary><dl class=\"field-list\">\n<dt class=\"field-odd\">memoryFraction (Float, optional)</dt>\n<dd class=\"field-odd\"><p>Memory Management: (deprecated) This is read only if spark.memory.useLegacyMode is enabled. Fraction of Java heap to use for Spark\u2019s memory cache. This should not be larger than the \u201cold\u201d generation of objects in the JVM, which by default is given 0.6 of the heap, but you can increase it if you configure your own old generation size.</p>\n</dd>\n<dt class=\"field-even\">unrollFraction (Float, optional)</dt>\n<dd class=\"field-even\"><p>Memory Management: (deprecated) This is read only if spark.memory.useLegacyMode is enabled. Fraction of spark.storage.memoryFraction to use for unrolling blocks in memory. This is dynamically allocated by dropping existing blocks when there is not enough free storage space to unroll the new block in its entirety.</p>\n</dd>\n<dt class=\"field-odd\">replication (permissive dict, optional)</dt>\n<dd class=\"field-odd\"><details class=\"summary-default-value\">\n<summary>Default Value:</summary><div class=\"highlight-javascript notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"p\">{}</span>\n</pre></div>\n</div>\n</details><details class=\"summary-config-schema\">\n<summary>Config Schema:</summary><dl class=\"field-list simple\">\n<dt class=\"field-odd\">proactive (Bool, optional)</dt>\n<dd class=\"field-odd\"><p>Memory Management: Enables proactive block replication for RDD blocks. Cached RDD block replicas lost due to executor failures are replenished if there are any existing available replicas. This tries to get the replication level of the block to the initial number.</p>\n</dd>\n</dl>\n</details></dd>\n<dt class=\"field-even\">memoryMapThreshold (dagster.StringSource, optional)</dt>\n<dd class=\"field-even\"><p>Execution Behavior: Size in bytes of a block above which Spark memory maps when reading a block from disk. This prevents Spark from memory mapping very small blocks. In general, memory mapping has high overhead for blocks close to or below the page size of the operating system.</p>\n</dd>\n</dl>\n</details></dd>\n<dt class=\"field-odd\">cleaner (permissive dict, optional)</dt>\n<dd class=\"field-odd\"><details class=\"summary-default-value\">\n<summary>Default Value:</summary><div class=\"highlight-javascript notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"p\">{</span>\n    <span class=\"s2\">&quot;periodicGC&quot;</span><span class=\"o\">:</span> <span class=\"p\">{},</span>\n    <span class=\"s2\">&quot;referenceTracking&quot;</span><span class=\"o\">:</span> <span class=\"p\">{</span>\n        <span class=\"s2\">&quot;blocking&quot;</span><span class=\"o\">:</span> <span class=\"p\">{}</span>\n    <span class=\"p\">}</span>\n<span class=\"p\">}</span>\n</pre></div>\n</div>\n</details><details class=\"summary-config-schema\">\n<summary>Config Schema:</summary><dl class=\"field-list\">\n<dt class=\"field-odd\">periodicGC (permissive dict, optional)</dt>\n<dd class=\"field-odd\"><details class=\"summary-default-value\">\n<summary>Default Value:</summary><div class=\"highlight-javascript notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"p\">{}</span>\n</pre></div>\n</div>\n</details><details class=\"summary-config-schema\">\n<summary>Config Schema:</summary><dl class=\"field-list simple\">\n<dt class=\"field-odd\">interval (dagster.StringSource, optional)</dt>\n<dd class=\"field-odd\"><p>Memory Management: Controls how often to trigger a garbage collection. This context cleaner triggers cleanups only when weak references are garbage collected. In long-running applications with large driver JVMs, where there is little memory pressure on the driver, this may happen very occasionally or not at all. Not cleaning at all may lead to executors running out of disk space after a while.</p>\n</dd>\n</dl>\n</details></dd>\n<dt class=\"field-even\">referenceTracking (permissive dict, optional)</dt>\n<dd class=\"field-even\"><details class=\"summary-default-value\">\n<summary>Default Value:</summary><div class=\"highlight-javascript notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"p\">{</span>\n    <span class=\"s2\">&quot;blocking&quot;</span><span class=\"o\">:</span> <span class=\"p\">{}</span>\n<span class=\"p\">}</span>\n</pre></div>\n</div>\n</details><details class=\"summary-config-schema\">\n<summary>Config Schema:</summary><dl class=\"field-list\">\n<dt class=\"field-odd\">root (Bool, optional)</dt>\n<dd class=\"field-odd\"><p>Memory Management: Enables or disables context cleaning.</p>\n</dd>\n<dt class=\"field-even\">blocking (permissive dict, optional)</dt>\n<dd class=\"field-even\"><details class=\"summary-default-value\">\n<summary>Default Value:</summary><div class=\"highlight-javascript notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"p\">{}</span>\n</pre></div>\n</div>\n</details><details class=\"summary-config-schema\">\n<summary>Config Schema:</summary><dl class=\"field-list simple\">\n<dt class=\"field-odd\">root (Bool, optional)</dt>\n<dd class=\"field-odd\"><p>Memory Management: Controls whether the cleaning thread should block on cleanup tasks (other than shuffle, which is controlled by spark.cleaner.referenceTracking.blocking.shuffle Spark property).</p>\n</dd>\n<dt class=\"field-even\">shuffle (Bool, optional)</dt>\n<dd class=\"field-even\"><p>Memory Management: Controls whether the cleaning thread should block on shuffle cleanup tasks.</p>\n</dd>\n</dl>\n</details></dd>\n<dt class=\"field-odd\">cleanCheckpoints (Bool, optional)</dt>\n<dd class=\"field-odd\"><p>Memory Management: Controls whether to clean checkpoint files if the reference is out of scope.</p>\n</dd>\n</dl>\n</details></dd>\n</dl>\n</details></dd>\n<dt class=\"field-even\">default (permissive dict, optional)</dt>\n<dd class=\"field-even\"><details class=\"summary-default-value\">\n<summary>Default Value:</summary><div class=\"highlight-javascript notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"p\">{}</span>\n</pre></div>\n</div>\n</details><details class=\"summary-config-schema\">\n<summary>Config Schema:</summary><dl class=\"field-list simple\">\n<dt class=\"field-odd\">parallelism (dagster.IntSource, optional)</dt>\n<dd class=\"field-odd\"><p>Execution Behavior: Default number of partitions in RDDs returned by transformations like join, reduceByKey, and parallelize when not set by user.</p>\n</dd>\n</dl>\n</details></dd>\n<dt class=\"field-even\">hadoop (permissive dict, optional)</dt>\n<dd class=\"field-even\"><details class=\"summary-default-value\">\n<summary>Default Value:</summary><div class=\"highlight-javascript notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"p\">{</span>\n    <span class=\"s2\">&quot;mapreduce&quot;</span><span class=\"o\">:</span> <span class=\"p\">{</span>\n        <span class=\"s2\">&quot;fileoutputcommitter&quot;</span><span class=\"o\">:</span> <span class=\"p\">{</span>\n            <span class=\"s2\">&quot;algorithm&quot;</span><span class=\"o\">:</span> <span class=\"p\">{}</span>\n        <span class=\"p\">}</span>\n    <span class=\"p\">}</span>\n<span class=\"p\">}</span>\n</pre></div>\n</div>\n</details><details class=\"summary-config-schema\">\n<summary>Config Schema:</summary><dl class=\"field-list\">\n<dt class=\"field-odd\">cloneConf (Bool, optional)</dt>\n<dd class=\"field-odd\"><p>Execution Behavior: If set to true, clones a new Hadoop Configuration object for each task. This option should be enabled to work around Configuration thread-safety issues (see SPARK-2546 for more details). This is disabled by default in order to avoid unexpected performance regressions for jobs that are not affected by these issues.</p>\n</dd>\n<dt class=\"field-even\">validateOutputSpecs (Bool, optional)</dt>\n<dd class=\"field-even\"><p>Execution Behavior: If set to true, validates the output specification (e.g. checking if the output directory already exists) used in saveAsHadoopFile and other variants. This can be disabled to silence exceptions due to pre-existing output directories. We recommend that users do not disable this except if trying to achieve compatibility with previous versions of Spark. Simply use Hadoop\u2019s FileSystem API to delete output directories by hand. This setting is ignored for jobs generated through Spark Streaming\u2019s StreamingContext, since data may need to be rewritten to pre-existing output directories during checkpoint recovery.</p>\n</dd>\n<dt class=\"field-odd\">mapreduce (permissive dict, optional)</dt>\n<dd class=\"field-odd\"><details class=\"summary-default-value\">\n<summary>Default Value:</summary><div class=\"highlight-javascript notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"p\">{</span>\n    <span class=\"s2\">&quot;fileoutputcommitter&quot;</span><span class=\"o\">:</span> <span class=\"p\">{</span>\n        <span class=\"s2\">&quot;algorithm&quot;</span><span class=\"o\">:</span> <span class=\"p\">{}</span>\n    <span class=\"p\">}</span>\n<span class=\"p\">}</span>\n</pre></div>\n</div>\n</details><details class=\"summary-config-schema\">\n<summary>Config Schema:</summary><dl class=\"field-list\">\n<dt class=\"field-odd\">fileoutputcommitter (permissive dict, optional)</dt>\n<dd class=\"field-odd\"><details class=\"summary-default-value\">\n<summary>Default Value:</summary><div class=\"highlight-javascript notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"p\">{</span>\n    <span class=\"s2\">&quot;algorithm&quot;</span><span class=\"o\">:</span> <span class=\"p\">{}</span>\n<span class=\"p\">}</span>\n</pre></div>\n</div>\n</details><details class=\"summary-config-schema\">\n<summary>Config Schema:</summary><dl class=\"field-list\">\n<dt class=\"field-odd\">algorithm (permissive dict, optional)</dt>\n<dd class=\"field-odd\"><details class=\"summary-default-value\">\n<summary>Default Value:</summary><div class=\"highlight-javascript notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"p\">{}</span>\n</pre></div>\n</div>\n</details><details class=\"summary-config-schema\">\n<summary>Config Schema:</summary><dl class=\"field-list simple\">\n<dt class=\"field-odd\">version (dagster.IntSource, optional)</dt>\n<dd class=\"field-odd\"><p>Execution Behavior: The file output committer algorithm version, valid algorithm version number: 1 or 2. Version 2 may have better performance, but version 1 may handle failures better in certain situations, as per MAPREDUCE-4815.</p>\n</dd>\n</dl>\n</details></dd>\n</dl>\n</details></dd>\n</dl>\n</details></dd>\n</dl>\n</details></dd>\n<dt class=\"field-even\">rpc (permissive dict, optional)</dt>\n<dd class=\"field-even\"><details class=\"summary-default-value\">\n<summary>Default Value:</summary><div class=\"highlight-javascript notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"p\">{</span>\n    <span class=\"s2\">&quot;message&quot;</span><span class=\"o\">:</span> <span class=\"p\">{},</span>\n    <span class=\"s2\">&quot;retry&quot;</span><span class=\"o\">:</span> <span class=\"p\">{}</span>\n<span class=\"p\">}</span>\n</pre></div>\n</div>\n</details><details class=\"summary-config-schema\">\n<summary>Config Schema:</summary><dl class=\"field-list\">\n<dt class=\"field-odd\">message (permissive dict, optional)</dt>\n<dd class=\"field-odd\"><details class=\"summary-default-value\">\n<summary>Default Value:</summary><div class=\"highlight-javascript notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"p\">{}</span>\n</pre></div>\n</div>\n</details><details class=\"summary-config-schema\">\n<summary>Config Schema:</summary><dl class=\"field-list simple\">\n<dt class=\"field-odd\">maxSize (dagster.StringSource, optional)</dt>\n<dd class=\"field-odd\"><p>Networking: Maximum message size (in MB) to allow in \u201ccontrol plane\u201d communication; generally only applies to map output size information sent between executors and the driver. Increase this if you are running jobs with many thousands of map and reduce tasks and see messages about the RPC message size.</p>\n</dd>\n</dl>\n</details></dd>\n<dt class=\"field-even\">numRetries (dagster.StringSource, optional)</dt>\n<dd class=\"field-even\"><p>Networking: Number of times to retry before an RPC task gives up. An RPC task will run at most times of this number.</p>\n</dd>\n<dt class=\"field-odd\">retry (permissive dict, optional)</dt>\n<dd class=\"field-odd\"><details class=\"summary-default-value\">\n<summary>Default Value:</summary><div class=\"highlight-javascript notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"p\">{}</span>\n</pre></div>\n</div>\n</details><details class=\"summary-config-schema\">\n<summary>Config Schema:</summary><dl class=\"field-list simple\">\n<dt class=\"field-odd\">wait (dagster.StringSource, optional)</dt>\n<dd class=\"field-odd\"><p>Networking: Duration for an RPC ask operation to wait before retrying.</p>\n</dd>\n</dl>\n</details></dd>\n<dt class=\"field-even\">askTimeout (dagster.StringSource, optional)</dt>\n<dd class=\"field-even\"><p>Networking: Duration for an RPC ask operation to wait before timing out.</p>\n</dd>\n<dt class=\"field-odd\">lookupTimeout (dagster.StringSource, optional)</dt>\n<dd class=\"field-odd\"><p>Networking: Duration for an RPC remote endpoint lookup operation to wait before timing out.</p>\n</dd>\n</dl>\n</details></dd>\n<dt class=\"field-even\">blockManager (permissive dict, optional)</dt>\n<dd class=\"field-even\"><details class=\"summary-default-value\">\n<summary>Default Value:</summary><div class=\"highlight-javascript notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"p\">{}</span>\n</pre></div>\n</div>\n</details><details class=\"summary-config-schema\">\n<summary>Config Schema:</summary><dl class=\"field-list simple\">\n<dt class=\"field-odd\">port (dagster.StringSource, optional)</dt>\n<dd class=\"field-odd\"><p>Networking: Port for all block managers to listen on. These exist on both the driver and the executors.</p>\n</dd>\n</dl>\n</details></dd>\n<dt class=\"field-even\">network (permissive dict, optional)</dt>\n<dd class=\"field-even\"><details class=\"summary-default-value\">\n<summary>Default Value:</summary><div class=\"highlight-javascript notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"p\">{}</span>\n</pre></div>\n</div>\n</details><details class=\"summary-config-schema\">\n<summary>Config Schema:</summary><dl class=\"field-list simple\">\n<dt class=\"field-odd\">timeout (dagster.StringSource, optional)</dt>\n<dd class=\"field-odd\"><p>Networking: Default timeout for all network interactions. This config will be used in place of spark.core.connection.ack.wait.timeout, spark.storage.blockManagerSlaveTimeoutMs, spark.shuffle.io.connectionTimeout, spark.rpc.askTimeout or spark.rpc.lookupTimeout if they are not configured.</p>\n</dd>\n</dl>\n</details></dd>\n<dt class=\"field-even\">port (permissive dict, optional)</dt>\n<dd class=\"field-even\"><details class=\"summary-default-value\">\n<summary>Default Value:</summary><div class=\"highlight-javascript notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"p\">{}</span>\n</pre></div>\n</div>\n</details><details class=\"summary-config-schema\">\n<summary>Config Schema:</summary><dl class=\"field-list simple\">\n<dt class=\"field-odd\">maxRetries (dagster.StringSource, optional)</dt>\n<dd class=\"field-odd\"><p>Networking: Maximum number of retries when binding to a port before giving up. When a port is given a specific value (non 0), each subsequent retry will increment the port used in the previous attempt by 1 before retrying. This essentially allows it to try a range of ports from the start port specified to port + maxRetries.</p>\n</dd>\n</dl>\n</details></dd>\n<dt class=\"field-even\">core (permissive dict, optional)</dt>\n<dd class=\"field-even\"><details class=\"summary-default-value\">\n<summary>Default Value:</summary><div class=\"highlight-javascript notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"p\">{</span>\n    <span class=\"s2\">&quot;connection&quot;</span><span class=\"o\">:</span> <span class=\"p\">{</span>\n        <span class=\"s2\">&quot;ack&quot;</span><span class=\"o\">:</span> <span class=\"p\">{</span>\n            <span class=\"s2\">&quot;wait&quot;</span><span class=\"o\">:</span> <span class=\"p\">{}</span>\n        <span class=\"p\">}</span>\n    <span class=\"p\">}</span>\n<span class=\"p\">}</span>\n</pre></div>\n</div>\n</details><details class=\"summary-config-schema\">\n<summary>Config Schema:</summary><dl class=\"field-list\">\n<dt class=\"field-odd\">connection (permissive dict, optional)</dt>\n<dd class=\"field-odd\"><details class=\"summary-default-value\">\n<summary>Default Value:</summary><div class=\"highlight-javascript notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"p\">{</span>\n    <span class=\"s2\">&quot;ack&quot;</span><span class=\"o\">:</span> <span class=\"p\">{</span>\n        <span class=\"s2\">&quot;wait&quot;</span><span class=\"o\">:</span> <span class=\"p\">{}</span>\n    <span class=\"p\">}</span>\n<span class=\"p\">}</span>\n</pre></div>\n</div>\n</details><details class=\"summary-config-schema\">\n<summary>Config Schema:</summary><dl class=\"field-list\">\n<dt class=\"field-odd\">ack (permissive dict, optional)</dt>\n<dd class=\"field-odd\"><details class=\"summary-default-value\">\n<summary>Default Value:</summary><div class=\"highlight-javascript notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"p\">{</span>\n    <span class=\"s2\">&quot;wait&quot;</span><span class=\"o\">:</span> <span class=\"p\">{}</span>\n<span class=\"p\">}</span>\n</pre></div>\n</div>\n</details><details class=\"summary-config-schema\">\n<summary>Config Schema:</summary><dl class=\"field-list\">\n<dt class=\"field-odd\">wait (permissive dict, optional)</dt>\n<dd class=\"field-odd\"><details class=\"summary-default-value\">\n<summary>Default Value:</summary><div class=\"highlight-javascript notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"p\">{}</span>\n</pre></div>\n</div>\n</details><details class=\"summary-config-schema\">\n<summary>Config Schema:</summary><dl class=\"field-list simple\">\n<dt class=\"field-odd\">timeout (dagster.StringSource, optional)</dt>\n<dd class=\"field-odd\"><p>Networking: How long for the connection to wait for ack to occur before timing out and giving up. To avoid unwilling timeout caused by long pause like GC, you can set larger value.</p>\n</dd>\n</dl>\n</details></dd>\n</dl>\n</details></dd>\n</dl>\n</details></dd>\n</dl>\n</details></dd>\n<dt class=\"field-even\">cores (permissive dict, optional)</dt>\n<dd class=\"field-even\"><details class=\"summary-default-value\">\n<summary>Default Value:</summary><div class=\"highlight-javascript notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"p\">{}</span>\n</pre></div>\n</div>\n</details><details class=\"summary-config-schema\">\n<summary>Config Schema:</summary><dl class=\"field-list simple\">\n<dt class=\"field-odd\">max (dagster.StringSource, optional)</dt>\n<dd class=\"field-odd\"><p>Scheduling: When running on a standalone deploy cluster or a Mesos cluster in \u201ccoarse-grained\u201d sharing mode, the maximum amount of CPU cores to request for the application from across the cluster (not from each machine). If not set, the default will be spark.deploy.defaultCores on Spark\u2019s standalone cluster manager, or infinite (all available cores) on Mesos.</p>\n</dd>\n</dl>\n</details></dd>\n<dt class=\"field-even\">locality (permissive dict, optional)</dt>\n<dd class=\"field-even\"><details class=\"summary-default-value\">\n<summary>Default Value:</summary><div class=\"highlight-javascript notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"p\">{</span>\n    <span class=\"s2\">&quot;wait&quot;</span><span class=\"o\">:</span> <span class=\"p\">{}</span>\n<span class=\"p\">}</span>\n</pre></div>\n</div>\n</details><details class=\"summary-config-schema\">\n<summary>Config Schema:</summary><dl class=\"field-list\">\n<dt class=\"field-odd\">wait (permissive dict, optional)</dt>\n<dd class=\"field-odd\"><details class=\"summary-default-value\">\n<summary>Default Value:</summary><div class=\"highlight-javascript notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"p\">{}</span>\n</pre></div>\n</div>\n</details><details class=\"summary-config-schema\">\n<summary>Config Schema:</summary><dl class=\"field-list simple\">\n<dt class=\"field-odd\">root (dagster.StringSource, optional)</dt>\n<dd class=\"field-odd\"><p>Scheduling: How long to wait to launch a data-local task before giving up and launching it on a less-local node. The same wait will be used to step through multiple locality levels (process-local, node-local, rack-local and then any). It is also possible to customize the waiting time for each level by setting spark.locality.wait.node, etc. You should increase this setting if your tasks are long and see poor locality, but the default usually works well.</p>\n</dd>\n<dt class=\"field-even\">node (dagster.StringSource, optional)</dt>\n<dd class=\"field-even\"><p>Scheduling: Customize the locality wait for node locality. For example, you can set this to 0 to skip node locality and search immediately for rack locality (if your cluster has rack information).</p>\n</dd>\n<dt class=\"field-odd\">process (dagster.StringSource, optional)</dt>\n<dd class=\"field-odd\"><p>Scheduling: Customize the locality wait for process locality. This affects tasks that attempt to access cached data in a particular executor process.</p>\n</dd>\n<dt class=\"field-even\">rack (dagster.StringSource, optional)</dt>\n<dd class=\"field-even\"><p>Scheduling: Customize the locality wait for rack locality.</p>\n</dd>\n</dl>\n</details></dd>\n</dl>\n</details></dd>\n<dt class=\"field-odd\">scheduler (permissive dict, optional)</dt>\n<dd class=\"field-odd\"><details class=\"summary-default-value\">\n<summary>Default Value:</summary><div class=\"highlight-javascript notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"p\">{</span>\n    <span class=\"s2\">&quot;revive&quot;</span><span class=\"o\">:</span> <span class=\"p\">{},</span>\n    <span class=\"s2\">&quot;listenerbus&quot;</span><span class=\"o\">:</span> <span class=\"p\">{</span>\n        <span class=\"s2\">&quot;eventqueue&quot;</span><span class=\"o\">:</span> <span class=\"p\">{}</span>\n    <span class=\"p\">}</span>\n<span class=\"p\">}</span>\n</pre></div>\n</div>\n</details><details class=\"summary-config-schema\">\n<summary>Config Schema:</summary><dl class=\"field-list\">\n<dt class=\"field-odd\">maxRegisteredResourcesWaitingTime (dagster.StringSource, optional)</dt>\n<dd class=\"field-odd\"><p>Scheduling: Maximum amount of time to wait for resources to register before scheduling begins.</p>\n</dd>\n<dt class=\"field-even\">minRegisteredResourcesRatio (dagster.StringSource, optional)</dt>\n<dd class=\"field-even\"><p>Scheduling: The minimum ratio of registered resources (registered resources / total expected resources) (resources are executors in yarn mode and Kubernetes mode, CPU cores in standalone mode and Mesos coarse-grained mode [\u2018spark.cores.max\u2019 value is total expected resources for Mesos coarse-grained mode] ) to wait for before scheduling begins. Specified as a double between 0.0 and 1.0. Regardless of whether the minimum ratio of resources has been reached, the maximum amount of time it will wait before scheduling begins is controlled by config spark.scheduler.maxRegisteredResourcesWaitingTime.</p>\n</dd>\n<dt class=\"field-odd\">mode (dagster.StringSource, optional)</dt>\n<dd class=\"field-odd\"><p>Scheduling: The scheduling mode between jobs submitted to the same SparkContext. Can be set to FAIR to use fair sharing instead of queueing jobs one after another. Useful for multi-user services.</p>\n</dd>\n<dt class=\"field-even\">revive (permissive dict, optional)</dt>\n<dd class=\"field-even\"><details class=\"summary-default-value\">\n<summary>Default Value:</summary><div class=\"highlight-javascript notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"p\">{}</span>\n</pre></div>\n</div>\n</details><details class=\"summary-config-schema\">\n<summary>Config Schema:</summary><dl class=\"field-list simple\">\n<dt class=\"field-odd\">interval (dagster.StringSource, optional)</dt>\n<dd class=\"field-odd\"><p>Scheduling: The interval length for the scheduler to revive the worker resource offers to run tasks.</p>\n</dd>\n</dl>\n</details></dd>\n<dt class=\"field-even\">listenerbus (permissive dict, optional)</dt>\n<dd class=\"field-even\"><details class=\"summary-default-value\">\n<summary>Default Value:</summary><div class=\"highlight-javascript notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"p\">{</span>\n    <span class=\"s2\">&quot;eventqueue&quot;</span><span class=\"o\">:</span> <span class=\"p\">{}</span>\n<span class=\"p\">}</span>\n</pre></div>\n</div>\n</details><details class=\"summary-config-schema\">\n<summary>Config Schema:</summary><dl class=\"field-list\">\n<dt class=\"field-odd\">eventqueue (permissive dict, optional)</dt>\n<dd class=\"field-odd\"><details class=\"summary-default-value\">\n<summary>Default Value:</summary><div class=\"highlight-javascript notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"p\">{}</span>\n</pre></div>\n</div>\n</details><details class=\"summary-config-schema\">\n<summary>Config Schema:</summary><dl class=\"field-list simple\">\n<dt class=\"field-odd\">capacity (dagster.StringSource, optional)</dt>\n<dd class=\"field-odd\"><p>Scheduling: Capacity for event queue in Spark listener bus, must be greater than 0. Consider increasing value (e.g. 20000) if listener events are dropped. Increasing this value may result in the driver using more memory.</p>\n</dd>\n</dl>\n</details></dd>\n</dl>\n</details></dd>\n</dl>\n</details></dd>\n<dt class=\"field-even\">blacklist (permissive dict, optional)</dt>\n<dd class=\"field-even\"><details class=\"summary-default-value\">\n<summary>Default Value:</summary><div class=\"highlight-javascript notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"p\">{</span>\n    <span class=\"s2\">&quot;task&quot;</span><span class=\"o\">:</span> <span class=\"p\">{},</span>\n    <span class=\"s2\">&quot;stage&quot;</span><span class=\"o\">:</span> <span class=\"p\">{},</span>\n    <span class=\"s2\">&quot;application&quot;</span><span class=\"o\">:</span> <span class=\"p\">{</span>\n        <span class=\"s2\">&quot;fetchFailure&quot;</span><span class=\"o\">:</span> <span class=\"p\">{}</span>\n    <span class=\"p\">}</span>\n<span class=\"p\">}</span>\n</pre></div>\n</div>\n</details><details class=\"summary-config-schema\">\n<summary>Config Schema:</summary><dl class=\"field-list\">\n<dt class=\"field-odd\">enabled (dagster.StringSource, optional)</dt>\n<dd class=\"field-odd\"><p>Scheduling: If set to \u201ctrue\u201d, prevent Spark from scheduling tasks on executors that have been blacklisted due to too many task failures. The blacklisting algorithm can be further controlled by the other \u201cspark.blacklist\u201d configuration options.</p>\n</dd>\n<dt class=\"field-even\">timeout (dagster.StringSource, optional)</dt>\n<dd class=\"field-even\"><p>Scheduling: (Experimental) How long a node or executor is blacklisted for the entire application, before it is unconditionally removed from the blacklist to attempt running new tasks.</p>\n</dd>\n<dt class=\"field-odd\">task (permissive dict, optional)</dt>\n<dd class=\"field-odd\"><details class=\"summary-default-value\">\n<summary>Default Value:</summary><div class=\"highlight-javascript notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"p\">{}</span>\n</pre></div>\n</div>\n</details><details class=\"summary-config-schema\">\n<summary>Config Schema:</summary><dl class=\"field-list simple\">\n<dt class=\"field-odd\">maxTaskAttemptsPerExecutor (dagster.StringSource, optional)</dt>\n<dd class=\"field-odd\"><p>Scheduling: (Experimental) For a given task, how many times it can be retried on one executor before the executor is blacklisted for that task.</p>\n</dd>\n<dt class=\"field-even\">maxTaskAttemptsPerNode (dagster.StringSource, optional)</dt>\n<dd class=\"field-even\"><p>Scheduling: (Experimental) For a given task, how many times it can be retried on one node, before the entire node is blacklisted for that task.</p>\n</dd>\n</dl>\n</details></dd>\n<dt class=\"field-odd\">stage (permissive dict, optional)</dt>\n<dd class=\"field-odd\"><details class=\"summary-default-value\">\n<summary>Default Value:</summary><div class=\"highlight-javascript notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"p\">{}</span>\n</pre></div>\n</div>\n</details><details class=\"summary-config-schema\">\n<summary>Config Schema:</summary><dl class=\"field-list simple\">\n<dt class=\"field-odd\">maxFailedTasksPerExecutor (dagster.StringSource, optional)</dt>\n<dd class=\"field-odd\"><p>Scheduling: (Experimental) How many different tasks must fail on one executor, within one stage, before the executor is blacklisted for that stage.</p>\n</dd>\n<dt class=\"field-even\">maxFailedExecutorsPerNode (dagster.StringSource, optional)</dt>\n<dd class=\"field-even\"><p>Scheduling: (Experimental) How many different executors are marked as blacklisted for a given stage, before the entire node is marked as failed for the stage.</p>\n</dd>\n</dl>\n</details></dd>\n<dt class=\"field-odd\">application (permissive dict, optional)</dt>\n<dd class=\"field-odd\"><details class=\"summary-default-value\">\n<summary>Default Value:</summary><div class=\"highlight-javascript notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"p\">{</span>\n    <span class=\"s2\">&quot;fetchFailure&quot;</span><span class=\"o\">:</span> <span class=\"p\">{}</span>\n<span class=\"p\">}</span>\n</pre></div>\n</div>\n</details><details class=\"summary-config-schema\">\n<summary>Config Schema:</summary><dl class=\"field-list\">\n<dt class=\"field-odd\">maxFailedTasksPerExecutor (dagster.StringSource, optional)</dt>\n<dd class=\"field-odd\"><p>Scheduling: (Experimental) How many different tasks must fail on one executor, in successful task sets, before the executor is blacklisted for the entire application. Blacklisted executors will be automatically added back to the pool of available resources after the timeout specified by spark.blacklist.timeout. Note that with dynamic allocation, though, the executors may get marked as idle and be reclaimed by the cluster manager.</p>\n</dd>\n<dt class=\"field-even\">maxFailedExecutorsPerNode (dagster.StringSource, optional)</dt>\n<dd class=\"field-even\"><p>Scheduling: (Experimental) How many different executors must be blacklisted for the entire application, before the node is blacklisted for the entire application. Blacklisted nodes will be automatically added back to the pool of available resources after the timeout specified by spark.blacklist.timeout. Note that with dynamic allocation, though, the executors on the node may get marked as idle and be reclaimed by the cluster manager.</p>\n</dd>\n<dt class=\"field-odd\">fetchFailure (permissive dict, optional)</dt>\n<dd class=\"field-odd\"><details class=\"summary-default-value\">\n<summary>Default Value:</summary><div class=\"highlight-javascript notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"p\">{}</span>\n</pre></div>\n</div>\n</details><details class=\"summary-config-schema\">\n<summary>Config Schema:</summary><dl class=\"field-list simple\">\n<dt class=\"field-odd\">enabled (dagster.StringSource, optional)</dt>\n<dd class=\"field-odd\"><p>Scheduling: (Experimental) If set to \u201ctrue\u201d, Spark will blacklist the executor immediately when a fetch failure happens. If external shuffle service is enabled, then the whole node will be blacklisted.</p>\n</dd>\n</dl>\n</details></dd>\n</dl>\n</details></dd>\n<dt class=\"field-even\">killBlacklistedExecutors (dagster.StringSource, optional)</dt>\n<dd class=\"field-even\"><p>Scheduling: (Experimental) If set to \u201ctrue\u201d, allow Spark to automatically kill the executors when they are blacklisted on fetch failure or blacklisted for the entire application, as controlled by spark.blacklist.application.*. Note that, when an entire node is added to the blacklist, all of the executors on that node will be killed.</p>\n</dd>\n</dl>\n</details></dd>\n<dt class=\"field-odd\">speculation (permissive dict, optional)</dt>\n<dd class=\"field-odd\"><details class=\"summary-default-value\">\n<summary>Default Value:</summary><div class=\"highlight-javascript notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"p\">{}</span>\n</pre></div>\n</div>\n</details><details class=\"summary-config-schema\">\n<summary>Config Schema:</summary><dl class=\"field-list simple\">\n<dt class=\"field-odd\">root (dagster.StringSource, optional)</dt>\n<dd class=\"field-odd\"><p>Scheduling: If set to \u201ctrue\u201d, performs speculative execution of tasks. This means if one or more tasks are running slowly in a stage, they will be re-launched.</p>\n</dd>\n<dt class=\"field-even\">interval (dagster.StringSource, optional)</dt>\n<dd class=\"field-even\"><p>Scheduling: How often Spark will check for tasks to speculate.</p>\n</dd>\n<dt class=\"field-odd\">multiplier (dagster.StringSource, optional)</dt>\n<dd class=\"field-odd\"><p>Scheduling: How many times slower a task is than the median to be considered for speculation.</p>\n</dd>\n<dt class=\"field-even\">quantile (dagster.StringSource, optional)</dt>\n<dd class=\"field-even\"><p>Scheduling: Fraction of tasks which must be complete before speculation is enabled for a particular stage.</p>\n</dd>\n</dl>\n</details></dd>\n<dt class=\"field-odd\">task (permissive dict, optional)</dt>\n<dd class=\"field-odd\"><details class=\"summary-default-value\">\n<summary>Default Value:</summary><div class=\"highlight-javascript notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"p\">{</span>\n    <span class=\"s2\">&quot;reaper&quot;</span><span class=\"o\">:</span> <span class=\"p\">{}</span>\n<span class=\"p\">}</span>\n</pre></div>\n</div>\n</details><details class=\"summary-config-schema\">\n<summary>Config Schema:</summary><dl class=\"field-list\">\n<dt class=\"field-odd\">cpus (dagster.StringSource, optional)</dt>\n<dd class=\"field-odd\"><p>Scheduling: Number of cores to allocate for each task.</p>\n</dd>\n<dt class=\"field-even\">maxFailures (dagster.StringSource, optional)</dt>\n<dd class=\"field-even\"><p>Scheduling: Number of failures of any particular task before giving up on the job. The total number of failures spread across different tasks will not cause the job to fail; a particular task has to fail this number of attempts. Should be greater than or equal to 1. Number of allowed retries = this value - 1.</p>\n</dd>\n<dt class=\"field-odd\">reaper (permissive dict, optional)</dt>\n<dd class=\"field-odd\"><details class=\"summary-default-value\">\n<summary>Default Value:</summary><div class=\"highlight-javascript notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"p\">{}</span>\n</pre></div>\n</div>\n</details><details class=\"summary-config-schema\">\n<summary>Config Schema:</summary><dl class=\"field-list simple\">\n<dt class=\"field-odd\">enabled (dagster.StringSource, optional)</dt>\n<dd class=\"field-odd\"><p>Scheduling: Enables monitoring of killed / interrupted tasks. When set to true, any task which is killed will be monitored by the executor until that task actually finishes executing. See the other spark.task.reaper.* configurations for details on how to control the exact behavior of this monitoring. When set to false (the default), task killing will use an older code path which lacks such monitoring.</p>\n</dd>\n<dt class=\"field-even\">pollingInterval (dagster.StringSource, optional)</dt>\n<dd class=\"field-even\"><p>Scheduling: When spark.task.reaper.enabled = true, this setting controls the frequency at which executors will poll the status of killed tasks. If a killed task is still running when polled then a warning will be logged and, by default, a thread-dump of the task will be logged (this thread dump can be disabled via the spark.task.reaper.threadDump setting, which is documented below).</p>\n</dd>\n<dt class=\"field-odd\">threadDump (dagster.StringSource, optional)</dt>\n<dd class=\"field-odd\"><p>Scheduling: When spark.task.reaper.enabled = true, this setting controls whether task thread dumps are logged during periodic polling of killed tasks. Set this to false to disable collection of thread dumps.</p>\n</dd>\n<dt class=\"field-even\">killTimeout (dagster.StringSource, optional)</dt>\n<dd class=\"field-even\"><p>Scheduling: When spark.task.reaper.enabled = true, this setting specifies a timeout after which the executor JVM will kill itself if a killed task has not stopped running. The default value, -1, disables this mechanism and prevents the executor from self-destructing. The purpose of this setting is to act as a safety-net to prevent runaway noncancellable tasks from rendering an executor unusable.</p>\n</dd>\n</dl>\n</details></dd>\n</dl>\n</details></dd>\n<dt class=\"field-odd\">stage (permissive dict, optional)</dt>\n<dd class=\"field-odd\"><details class=\"summary-default-value\">\n<summary>Default Value:</summary><div class=\"highlight-javascript notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"p\">{}</span>\n</pre></div>\n</div>\n</details><details class=\"summary-config-schema\">\n<summary>Config Schema:</summary><dl class=\"field-list simple\">\n<dt class=\"field-odd\">maxConsecutiveAttempts (dagster.StringSource, optional)</dt>\n<dd class=\"field-odd\"><p>Scheduling: Number of consecutive stage attempts allowed before a stage is aborted.</p>\n</dd>\n</dl>\n</details></dd>\n<dt class=\"field-even\">dynamicAllocation (permissive dict, optional)</dt>\n<dd class=\"field-even\"><details class=\"summary-default-value\">\n<summary>Default Value:</summary><div class=\"highlight-javascript notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"p\">{}</span>\n</pre></div>\n</div>\n</details><details class=\"summary-config-schema\">\n<summary>Config Schema:</summary><dl class=\"field-list simple\">\n<dt class=\"field-odd\">enabled (dagster.StringSource, optional)</dt>\n<dd class=\"field-odd\"><p>Dynamic Allocation: Whether to use dynamic resource allocation, which scales the number of executors registered with this application up and down based on the workload. For more detail, see the description here. This requires spark.shuffle.service.enabled to be set. The following configurations are also relevant: spark.dynamicAllocation.minExecutors, spark.dynamicAllocation.maxExecutors, and spark.dynamicAllocation.initialExecutors spark.dynamicAllocation.executorAllocationRatio</p>\n</dd>\n<dt class=\"field-even\">executorIdleTimeout (dagster.StringSource, optional)</dt>\n<dd class=\"field-even\"><p>Dynamic Allocation: If dynamic allocation is enabled and an executor has been idle for more than this duration, the executor will be removed. For more detail, see this description.</p>\n</dd>\n<dt class=\"field-odd\">cachedExecutorIdleTimeout (dagster.StringSource, optional)</dt>\n<dd class=\"field-odd\"><p>Dynamic Allocation: If dynamic allocation is enabled and an executor which has cached data blocks has been idle for more than this duration, the executor will be removed. For more details, see this description.</p>\n</dd>\n<dt class=\"field-even\">initialExecutors (dagster.StringSource, optional)</dt>\n<dd class=\"field-even\"><p>Dynamic Allocation: Initial number of executors to run if dynamic allocation is enabled. If <cite>\u2013num-executors</cite> (or <cite>spark.executor.instances</cite>) is set and larger than this value, it will be used as the initial number of executors.</p>\n</dd>\n<dt class=\"field-odd\">maxExecutors (dagster.StringSource, optional)</dt>\n<dd class=\"field-odd\"><p>Dynamic Allocation: Upper bound for the number of executors if dynamic allocation is enabled.</p>\n</dd>\n<dt class=\"field-even\">minExecutors (dagster.StringSource, optional)</dt>\n<dd class=\"field-even\"><p>Dynamic Allocation: Lower bound for the number of executors if dynamic allocation is enabled.</p>\n</dd>\n<dt class=\"field-odd\">executorAllocationRatio (dagster.StringSource, optional)</dt>\n<dd class=\"field-odd\"><p>Dynamic Allocation: By default, the dynamic allocation will request enough executors to maximize the parallelism according to the number of tasks to process. While this minimizes the latency of the job, with small tasks this setting can waste a lot of resources due to executor allocation overhead, as some executor might not even do any work. This setting allows to set a ratio that will be used to reduce the number of executors w.r.t. full parallelism. Defaults to 1.0 to give maximum parallelism. 0.5 will divide the target number of executors by 2 The target number of executors computed by the dynamicAllocation can still be overridden by the spark.dynamicAllocation.minExecutors and spark.dynamicAllocation.maxExecutors settings</p>\n</dd>\n<dt class=\"field-even\">schedulerBacklogTimeout (dagster.StringSource, optional)</dt>\n<dd class=\"field-even\"><p>Dynamic Allocation: If dynamic allocation is enabled and there have been pending tasks backlogged for more than this duration, new executors will be requested. For more detail, see this description.</p>\n</dd>\n<dt class=\"field-odd\">sustainedSchedulerBacklogTimeout (dagster.StringSource, optional)</dt>\n<dd class=\"field-odd\"><p>Dynamic Allocation: Same as spark.dynamicAllocation.schedulerBacklogTimeout, but used only for subsequent executor requests. For more detail, see this description.</p>\n</dd>\n</dl>\n</details></dd>\n<dt class=\"field-even\">r (permissive dict, optional)</dt>\n<dd class=\"field-even\"><details class=\"summary-default-value\">\n<summary>Default Value:</summary><div class=\"highlight-javascript notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"p\">{</span>\n    <span class=\"s2\">&quot;driver&quot;</span><span class=\"o\">:</span> <span class=\"p\">{},</span>\n    <span class=\"s2\">&quot;shell&quot;</span><span class=\"o\">:</span> <span class=\"p\">{}</span>\n<span class=\"p\">}</span>\n</pre></div>\n</div>\n</details><details class=\"summary-config-schema\">\n<summary>Config Schema:</summary><dl class=\"field-list\">\n<dt class=\"field-odd\">numRBackendThreads (dagster.StringSource, optional)</dt>\n<dd class=\"field-odd\"><p>SparkR: Number of threads used by RBackend to handle RPC calls from SparkR package.</p>\n</dd>\n<dt class=\"field-even\">command (dagster.StringSource, optional)</dt>\n<dd class=\"field-even\"><p>SparkR: Executable for executing R scripts in cluster modes for both driver and workers.</p>\n</dd>\n<dt class=\"field-odd\">driver (permissive dict, optional)</dt>\n<dd class=\"field-odd\"><details class=\"summary-default-value\">\n<summary>Default Value:</summary><div class=\"highlight-javascript notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"p\">{}</span>\n</pre></div>\n</div>\n</details><details class=\"summary-config-schema\">\n<summary>Config Schema:</summary><dl class=\"field-list simple\">\n<dt class=\"field-odd\">command (dagster.StringSource, optional)</dt>\n<dd class=\"field-odd\"><p>SparkR: Executable for executing R scripts in client modes for driver. Ignored in cluster modes.</p>\n</dd>\n</dl>\n</details></dd>\n<dt class=\"field-even\">shell (permissive dict, optional)</dt>\n<dd class=\"field-even\"><details class=\"summary-default-value\">\n<summary>Default Value:</summary><div class=\"highlight-javascript notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"p\">{}</span>\n</pre></div>\n</div>\n</details><details class=\"summary-config-schema\">\n<summary>Config Schema:</summary><dl class=\"field-list simple\">\n<dt class=\"field-odd\">command (dagster.StringSource, optional)</dt>\n<dd class=\"field-odd\"><p>SparkR: Executable for executing sparkR shell in client modes for driver. Ignored in cluster modes. It is the same as environment variable SPARKR_DRIVER_R, but take precedence over it. spark.r.shell.command is used for sparkR shell while spark.r.driver.command is used for running R script.</p>\n</dd>\n</dl>\n</details></dd>\n<dt class=\"field-even\">backendConnectionTimeout (dagster.StringSource, optional)</dt>\n<dd class=\"field-even\"><p>SparkR: Connection timeout set by R process on its connection to RBackend in seconds.</p>\n</dd>\n<dt class=\"field-odd\">heartBeatInterval (dagster.StringSource, optional)</dt>\n<dd class=\"field-odd\"><p>SparkR: Interval for heartbeats sent from SparkR backend to R process to prevent connection timeout.</p>\n</dd>\n</dl>\n</details></dd>\n<dt class=\"field-even\">graphx (permissive dict, optional)</dt>\n<dd class=\"field-even\"><details class=\"summary-default-value\">\n<summary>Default Value:</summary><div class=\"highlight-javascript notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"p\">{</span>\n    <span class=\"s2\">&quot;pregel&quot;</span><span class=\"o\">:</span> <span class=\"p\">{}</span>\n<span class=\"p\">}</span>\n</pre></div>\n</div>\n</details><details class=\"summary-config-schema\">\n<summary>Config Schema:</summary><dl class=\"field-list\">\n<dt class=\"field-odd\">pregel (permissive dict, optional)</dt>\n<dd class=\"field-odd\"><details class=\"summary-default-value\">\n<summary>Default Value:</summary><div class=\"highlight-javascript notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"p\">{}</span>\n</pre></div>\n</div>\n</details><details class=\"summary-config-schema\">\n<summary>Config Schema:</summary><dl class=\"field-list simple\">\n<dt class=\"field-odd\">checkpointInterval (dagster.StringSource, optional)</dt>\n<dd class=\"field-odd\"><p>GraphX: Checkpoint interval for graph and message in Pregel. It used to avoid stackOverflowError due to long lineage chains after lots of iterations. The checkpoint is disabled by default.</p>\n</dd>\n</dl>\n</details></dd>\n</dl>\n</details></dd>\n<dt class=\"field-even\">deploy (permissive dict, optional)</dt>\n<dd class=\"field-even\"><details class=\"summary-default-value\">\n<summary>Default Value:</summary><div class=\"highlight-javascript notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"p\">{</span>\n    <span class=\"s2\">&quot;zookeeper&quot;</span><span class=\"o\">:</span> <span class=\"p\">{}</span>\n<span class=\"p\">}</span>\n</pre></div>\n</div>\n</details><details class=\"summary-config-schema\">\n<summary>Config Schema:</summary><dl class=\"field-list\">\n<dt class=\"field-odd\">recoveryMode (dagster.StringSource, optional)</dt>\n<dd class=\"field-odd\"><p>Deploy: The recovery mode setting to recover submitted Spark jobs with cluster mode when it failed and relaunches. This is only applicable for cluster mode when running with Standalone or Mesos.</p>\n</dd>\n<dt class=\"field-even\">zookeeper (permissive dict, optional)</dt>\n<dd class=\"field-even\"><details class=\"summary-default-value\">\n<summary>Default Value:</summary><div class=\"highlight-javascript notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"p\">{}</span>\n</pre></div>\n</div>\n</details><details class=\"summary-config-schema\">\n<summary>Config Schema:</summary><dl class=\"field-list simple\">\n<dt class=\"field-odd\">url (dagster.StringSource, optional)</dt>\n<dd class=\"field-odd\"><p>Deploy: When <cite>spark.deploy.recoveryMode</cite> is set to ZOOKEEPER, this configuration is used to set the zookeeper URL to connect to.</p>\n</dd>\n<dt class=\"field-even\">dir (dagster.StringSource, optional)</dt>\n<dd class=\"field-even\"><p>Deploy: When <cite>spark.deploy.recoveryMode</cite> is set to ZOOKEEPER, this configuration is used to set the zookeeper directory to store recovery state.</p>\n</dd>\n</dl>\n</details></dd>\n</dl>\n</details></dd>\n</dl>\n</details></dd>\n</dl>\n</details></dd>\n<dt class=\"field-odd\">cluster_id (dagster.StringSource)</dt>\n<dd class=\"field-odd\"><p>Name of the job flow (cluster) on which to execute.</p>\n</dd>\n<dt class=\"field-even\">region_name (dagster.StringSource)</dt>\n<dd class=\"field-even\"><p>The AWS region that the cluster is in.</p>\n</dd>\n<dt class=\"field-odd\">action_on_failure (String, optional)</dt>\n<dd class=\"field-odd\"><p>The EMR action to take when the cluster step fails: <a class=\"reference external\" href=\"https://docs.aws.amazon.com/emr/latest/APIReference/API_StepConfig.html\">https://docs.aws.amazon.com/emr/latest/APIReference/API_StepConfig.html</a></p>\n<p><strong>Default Value:</strong> \u2018CANCEL_AND_WAIT\u2019</p>\n</dd>\n<dt class=\"field-even\">staging_bucket (dagster.StringSource)</dt>\n<dd class=\"field-even\"><p>S3 bucket to use for passing files between the plan process and EMR process.</p>\n</dd>\n<dt class=\"field-odd\">staging_prefix (dagster.StringSource, optional)</dt>\n<dd class=\"field-odd\"><p>S3 key prefix inside the staging_bucket to use for files passed the plan process and EMR process</p>\n<p><strong>Default Value:</strong> \u2018emr_staging\u2019</p>\n</dd>\n<dt class=\"field-even\">wait_for_logs (Bool, optional)</dt>\n<dd class=\"field-even\"><p>If set, the system will wait for EMR logs to appear on S3. Note that logs are copied every 5 minutes, so enabling this will add several minutes to the job runtime.</p>\n<p><strong>Default Value:</strong> False</p>\n</dd>\n<dt class=\"field-odd\">local_job_package_path (dagster.StringSource, optional)</dt>\n<dd class=\"field-odd\"><p>Absolute path to the package that contains the job definition(s) whose steps will execute remotely on EMR. This is a path on the local fileystem of the process executing the job. The expectation is that this package will also be available on the python path of the launched process running the Spark step on EMR, either deployed on step launch via the deploy_local_job_package option, referenced on s3 via the s3_job_package_path option, or installed on the cluster via bootstrap actions.</p>\n</dd>\n<dt class=\"field-even\">local_pipeline_package_path (dagster.StringSource, optional)</dt>\n<dd class=\"field-even\"><p>(legacy) Absolute path to the package that contains the pipeline definition(s) whose steps will execute remotely on EMR. This is a path on the local fileystem of the process executing the pipeline. The expectation is that this package will also be available on the python path of the launched process running the Spark step on EMR, either deployed on step launch via the deploy_local_pipeline_package option, referenced on s3 via the s3_pipeline_package_path option, or installed on the cluster via bootstrap actions.</p>\n</dd>\n<dt class=\"field-odd\">deploy_local_job_package (Bool, optional)</dt>\n<dd class=\"field-odd\"><p>If set, before every step run, the launcher will zip up all the code in local_job_package_path, upload it to s3, and pass it to spark-submit\u2019s \u2013py-files option. This gives the remote process access to up-to-date user code. If not set, the assumption is that some other mechanism is used for distributing code to the EMR cluster. If this option is set to True, s3_job_package_path should not also be set.</p>\n<p><strong>Default Value:</strong> False</p>\n</dd>\n<dt class=\"field-even\">deploy_local_pipeline_package (Bool, optional)</dt>\n<dd class=\"field-even\"><p>(legacy) If set, before every step run, the launcher will zip up all the code in local_job_package_path, upload it to s3, and pass it to spark-submit\u2019s \u2013py-files option. This gives the remote process access to up-to-date user code. If not set, the assumption is that some other mechanism is used for distributing code to the EMR cluster. If this option is set to True, s3_job_package_path should not also be set.</p>\n<p><strong>Default Value:</strong> False</p>\n</dd>\n<dt class=\"field-odd\">s3_job_package_path (dagster.StringSource, optional)</dt>\n<dd class=\"field-odd\"><p>If set, this path will be passed to the \u2013py-files option of spark-submit. This should usually be a path to a zip file.  If this option is set, deploy_local_job_package should not be set to True.</p>\n</dd>\n<dt class=\"field-even\">s3_pipeline_package_path (dagster.StringSource, optional)</dt>\n<dd class=\"field-even\"><p>If set, this path will be passed to the \u2013py-files option of spark-submit. This should usually be a path to a zip file.  If this option is set, deploy_local_pipeline_package should not be set to True.</p>\n</dd>\n</dl>\n</details><ul class=\"simple\">\n<li><p><strong>spark_config</strong>:</p></li>\n<li><p><strong>cluster_id</strong>: Name of the job flow (cluster) on which to execute.</p></li>\n<li><p><strong>region_name</strong>: The AWS region that the cluster is in.</p></li>\n<li><p><strong>action_on_failure</strong>: The EMR action to take when the cluster step fails: <a class=\"reference external\" href=\"https://docs.aws.amazon.com/emr/latest/APIReference/API_StepConfig.html\">https://docs.aws.amazon.com/emr/latest/APIReference/API_StepConfig.html</a></p></li>\n<li><p><strong>staging_bucket</strong>: S3 bucket to use for passing files between the plan process and EMR process.</p></li>\n<li><p><strong>staging_prefix</strong>: S3 key prefix inside the staging_bucket to use for files passed the plan process and EMR process</p></li>\n<li><p><strong>wait_for_logs</strong>: If set, the system will wait for EMR logs to appear on S3. Note that logs are copied every 5 minutes, so enabling this will add several minutes to the job runtime.</p></li>\n<li><p><strong>local_job_package_path</strong>: Absolute path to the package that contains the job definition(s) whose steps will execute remotely on EMR. This is a path on the local fileystem of the process executing the job. The expectation is that this package will also be available on the python path of the launched process running the Spark step on EMR, either deployed on step launch via the deploy_local_job_package option, referenced on s3 via the s3_job_package_path option, or installed on the cluster via bootstrap actions.</p></li>\n<li><p><strong>local_pipeline_package_path</strong>: (legacy) Absolute path to the package that contains the pipeline definition(s) whose steps will execute remotely on EMR. This is a path on the local fileystem of the process executing the pipeline. The expectation is that this package will also be available on the python path of the launched process running the Spark step on EMR, either deployed on step launch via the deploy_local_pipeline_package option, referenced on s3 via the s3_pipeline_package_path option, or installed on the cluster via bootstrap actions.</p></li>\n<li><p><strong>deploy_local_job_package</strong>: If set, before every step run, the launcher will zip up all the code in local_job_package_path, upload it to s3, and pass it to spark-submit\u2019s \u2013py-files option. This gives the remote process access to up-to-date user code. If not set, the assumption is that some other mechanism is used for distributing code to the EMR cluster. If this option is set to True, s3_job_package_path should not also be set.</p></li>\n<li><p><strong>deploy_local_pipeline_package</strong>: (legacy) If set, before every step run, the launcher will zip up all the code in local_job_package_path, upload it to s3, and pass it to spark-submit\u2019s \u2013py-files option. This gives the remote process access to up-to-date user code. If not set, the assumption is that some other mechanism is used for distributing code to the EMR cluster. If this option is set to True, s3_job_package_path should not also be set.</p></li>\n<li><p><strong>s3_job_package_path</strong>: If set, this path will be passed to the \u2013py-files option of spark-submit. This should usually be a path to a zip file.  If this option is set, deploy_local_job_package should not be set to True.</p></li>\n<li><p><strong>s3_pipeline_package_path</strong>: If set, this path will be passed to the \u2013py-files option of spark-submit. This should usually be a path to a zip file.  If this option is set, deploy_local_pipeline_package should not be set to True.</p></li>\n</ul>\n</dd></dl>\n\n<dl class=\"py class\">\n<dt id=\"dagster_aws.emr.EmrJobRunner\">\n<em class=\"property\"><span class=\"pre\">class</span> </em><code class=\"sig-prename descclassname\"><span class=\"pre\">dagster_aws.emr.</span></code><code class=\"sig-name descname\"><span class=\"pre\">EmrJobRunner</span></code><span class=\"sig-paren\">(</span><em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">region</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">check_cluster_every</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">30</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">aws_access_key_id</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">None</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">aws_secret_access_key</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">None</span></span></em><span class=\"sig-paren\">)</span><a class=\"reference internal\" href=\"../../../../../_modules/dagster_aws/emr/emr#EmrJobRunner\"><span class=\"viewcode-link\"><span class=\"pre\">[source]</span></span></a><a class=\"headerlink\" href=\"#dagster_aws.emr.EmrJobRunner\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd></dd></dl>\n\n<dl class=\"py class\">\n<dt id=\"dagster_aws.emr.EmrError\">\n<em class=\"property\"><span class=\"pre\">class</span> </em><code class=\"sig-prename descclassname\"><span class=\"pre\">dagster_aws.emr.</span></code><code class=\"sig-name descname\"><span class=\"pre\">EmrError</span></code><a class=\"reference internal\" href=\"../../../../../_modules/dagster_aws/emr/emr#EmrError\"><span class=\"viewcode-link\"><span class=\"pre\">[source]</span></span></a><a class=\"headerlink\" href=\"#dagster_aws.emr.EmrError\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd></dd></dl>\n\n<dl class=\"py data\">\n<dt id=\"dagster_aws.emr.EmrClusterState\">\n<code class=\"sig-prename descclassname\"><span class=\"pre\">dagster_aws.emr.</span></code><code class=\"sig-name descname\"><span class=\"pre\">EmrClusterState</span></code><em class=\"property\"> <span class=\"pre\">=</span> <span class=\"pre\">&lt;enum</span> <span class=\"pre\">'EmrClusterState'&gt;</span></em><a class=\"reference internal\" href=\"../../../../../_modules/dagster_aws/emr/types#EmrClusterState\"><span class=\"viewcode-link\"><span class=\"pre\">[source]</span></span></a><a class=\"headerlink\" href=\"#dagster_aws.emr.EmrClusterState\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>An enumeration.</p>\n</dd></dl>\n\n<dl class=\"py data\">\n<dt id=\"dagster_aws.emr.EmrStepState\">\n<code class=\"sig-prename descclassname\"><span class=\"pre\">dagster_aws.emr.</span></code><code class=\"sig-name descname\"><span class=\"pre\">EmrStepState</span></code><em class=\"property\"> <span class=\"pre\">=</span> <span class=\"pre\">&lt;enum</span> <span class=\"pre\">'EmrStepState'&gt;</span></em><a class=\"reference internal\" href=\"../../../../../_modules/dagster_aws/emr/types#EmrStepState\"><span class=\"viewcode-link\"><span class=\"pre\">[source]</span></span></a><a class=\"headerlink\" href=\"#dagster_aws.emr.EmrStepState\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>An enumeration.</p>\n</dd></dl>\n\n</div>\n<div class=\"section\" id=\"cloudwatch\">\n<h2>CloudWatch<a class=\"headerlink\" href=\"#cloudwatch\" title=\"Permalink to this headline\">\u00b6</a></h2>\n<dl class=\"py data\">\n<dt id=\"dagster_aws.cloudwatch.cloudwatch_logger\">\n<code class=\"sig-prename descclassname\"><span class=\"pre\">dagster_aws.cloudwatch.</span></code><code class=\"sig-name descname\"><span class=\"pre\">cloudwatch_logger</span></code><em class=\"property\"> <span class=\"pre\">LoggerDefinition</span></em><a class=\"headerlink\" href=\"#dagster_aws.cloudwatch.cloudwatch_logger\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><div class=\"line-block\">\n<div class=\"line\"><br /></div>\n</div>\n<details class=\"summary-config-schema\">\n<summary>Config Schema:</summary><dl class=\"field-list simple\">\n<dt class=\"field-odd\">log_level (String, optional)</dt>\n<dd class=\"field-odd\"><p><strong>Default Value:</strong> \u2018INFO\u2019</p>\n</dd>\n<dt class=\"field-even\">name (String, optional)</dt>\n<dd class=\"field-even\"><p><strong>Default Value:</strong> \u2018dagster\u2019</p>\n</dd>\n<dt class=\"field-odd\">log_group_name (String)</dt>\n<dd class=\"field-odd\"><p>The name of the log group</p>\n</dd>\n<dt class=\"field-even\">log_stream_name (String)</dt>\n<dd class=\"field-even\"><p>The name of the log stream</p>\n</dd>\n<dt class=\"field-odd\">aws_region (dagster.StringSource, optional)</dt>\n<dd class=\"field-odd\"><p>Specifies a custom region for the S3 session. Default is chosen through the ordinary boto3 credential chain.</p>\n</dd>\n<dt class=\"field-even\">aws_secret_access_key (dagster.StringSource, optional)</dt>\n<dd class=\"field-even\"><p></p></dd>\n<dt class=\"field-odd\">aws_access_key_id (dagster.StringSource, optional)</dt>\n<dd class=\"field-odd\"><p></p></dd>\n</dl>\n</details><p>Core class for defining loggers.</p>\n<p>Loggers are job-scoped logging handlers, which will be automatically invoked whenever\ndagster messages are logged from within a job.</p>\n<dl class=\"field-list simple\">\n<dt class=\"field-odd\">Parameters</dt>\n<dd class=\"field-odd\"><ul class=\"simple\">\n<li><p><strong>logger_fn</strong> (<em>Callable</em><em>[</em><em>[</em><a class=\"reference internal\" href=\"../../loggers#dagster.InitLoggerContext\" title=\"dagster.InitLoggerContext\"><em>InitLoggerContext</em></a><em>]</em><em>, </em><a class=\"reference external\" href=\"https://docs.python.org/3/library/logging.html#logging.Logger\" title=\"(in Python v3.8)\"><em>logging.Logger</em></a><em>]</em>) \u2013 User-provided function to\ninstantiate the logger. This logger will be automatically invoked whenever the methods\non <code class=\"docutils literal notranslate\"><span class=\"pre\">context.log</span></code> are called from within job/pipeline compute logic.</p></li>\n<li><p><strong>config_schema</strong> (<em>Optional</em><em>[</em><a class=\"reference internal\" href=\"../../config#dagster.ConfigSchema\" title=\"dagster.ConfigSchema\"><em>ConfigSchema</em></a><em>]</em>) \u2013 The schema for the config. Configuration data available in\n<cite>init_context.logger_config</cite>. If not set, Dagster will accept any config provided.</p></li>\n<li><p><strong>description</strong> (<em>Optional</em><em>[</em><a class=\"reference external\" href=\"https://docs.python.org/3/library/stdtypes.html#str\" title=\"(in Python v3.8)\"><em>str</em></a><em>]</em>) \u2013 A human-readable description of this logger.</p></li>\n</ul>\n</dd>\n</dl>\n</dd></dl>\n\n</div>\n<div class=\"section\" id=\"secretsmanager\">\n<h2>SecretsManager<a class=\"headerlink\" href=\"#secretsmanager\" title=\"Permalink to this headline\">\u00b6</a></h2>\n<p>Resources which surface SecretsManager secrets for use in Dagster resources and jobs.</p>\n<dl class=\"py data\">\n<dt id=\"dagster_aws.secretsmanager.secretsmanager_resource\">\n<code class=\"sig-prename descclassname\"><span class=\"pre\">dagster_aws.secretsmanager.</span></code><code class=\"sig-name descname\"><span class=\"pre\">secretsmanager_resource</span></code><em class=\"property\"> <span class=\"pre\">ResourceDefinition</span></em><a class=\"reference internal\" href=\"../../../../../_modules/dagster_aws/secretsmanager/resources#secretsmanager_resource\"><span class=\"viewcode-link\"><span class=\"pre\">[source]</span></span></a><a class=\"headerlink\" href=\"#dagster_aws.secretsmanager.secretsmanager_resource\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><div class=\"line-block\">\n<div class=\"line\"><br /></div>\n</div>\n<details class=\"summary-config-schema\">\n<summary>Config Schema:</summary><dl class=\"field-list\">\n<dt class=\"field-odd\">region_name (String, optional)</dt>\n<dd class=\"field-odd\"><p>Specifies a custom region for the SecretsManager session</p>\n</dd>\n<dt class=\"field-even\">max_attempts (Int, optional)</dt>\n<dd class=\"field-even\"><p>This provides Boto3\u2019s retry handler with a value of maximum retry attempts, where the initial call counts toward the max_attempts value that you provide</p>\n<p><strong>Default Value:</strong> 5</p>\n</dd>\n<dt class=\"field-odd\">profile_name (String, optional)</dt>\n<dd class=\"field-odd\"><p>Specifies a profile to connect that session</p>\n</dd>\n</dl>\n</details><p>Resource that gives access to AWS SecretsManager.</p>\n<p>The underlying SecretsManager session is created by calling\n<code class=\"xref py py-func docutils literal notranslate\"><span class=\"pre\">boto3.session.Session(profile_name)</span></code>.\nThe returned resource object is a SecretsManager client, an instance of <cite>botocore.client.SecretsManager</cite>.</p>\n<p class=\"rubric\">Example</p>\n<div class=\"highlight-python notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"kn\">from</span> <span class=\"nn\">dagster</span> <span class=\"kn\">import</span> <span class=\"n\">build_op_context</span><span class=\"p\">,</span> <span class=\"n\">job</span><span class=\"p\">,</span> <span class=\"n\">op</span>\n<span class=\"kn\">from</span> <span class=\"nn\">dagster_aws.secretsmanager</span> <span class=\"kn\">import</span> <span class=\"n\">secretsmanager_resource</span>\n\n<span class=\"nd\">@op</span><span class=\"p\">(</span><span class=\"n\">required_resource_keys</span><span class=\"o\">=</span><span class=\"p\">{</span><span class=\"s1\">&#39;secretsmanager&#39;</span><span class=\"p\">})</span>\n<span class=\"k\">def</span> <span class=\"nf\">example_secretsmanager_op</span><span class=\"p\">(</span><span class=\"n\">context</span><span class=\"p\">):</span>\n    <span class=\"k\">return</span> <span class=\"n\">context</span><span class=\"o\">.</span><span class=\"n\">resources</span><span class=\"o\">.</span><span class=\"n\">secretsmanager</span><span class=\"o\">.</span><span class=\"n\">get_secret_value</span><span class=\"p\">(</span>\n        <span class=\"n\">SecretId</span><span class=\"o\">=</span><span class=\"s1\">&#39;arn:aws:secretsmanager:region:aws_account_id:secret:appauthexample-AbCdEf&#39;</span>\n    <span class=\"p\">)</span>\n\n<span class=\"nd\">@job</span><span class=\"p\">(</span><span class=\"n\">resource_defs</span><span class=\"o\">=</span><span class=\"p\">{</span><span class=\"s1\">&#39;secretsmanager&#39;</span><span class=\"p\">:</span> <span class=\"n\">secretsmanager_resource</span><span class=\"p\">})</span>\n<span class=\"k\">def</span> <span class=\"nf\">example_job</span><span class=\"p\">():</span>\n    <span class=\"n\">example_secretsmanager_op</span><span class=\"p\">()</span>\n\n<span class=\"n\">example_job</span><span class=\"o\">.</span><span class=\"n\">execute_in_process</span><span class=\"p\">(</span>\n    <span class=\"n\">run_config</span><span class=\"o\">=</span><span class=\"p\">{</span>\n        <span class=\"s1\">&#39;resources&#39;</span><span class=\"p\">:</span> <span class=\"p\">{</span>\n            <span class=\"s1\">&#39;secretsmanager&#39;</span><span class=\"p\">:</span> <span class=\"p\">{</span>\n                <span class=\"s1\">&#39;config&#39;</span><span class=\"p\">:</span> <span class=\"p\">{</span>\n                    <span class=\"s1\">&#39;region_name&#39;</span><span class=\"p\">:</span> <span class=\"s1\">&#39;us-west-1&#39;</span><span class=\"p\">,</span>\n                <span class=\"p\">}</span>\n            <span class=\"p\">}</span>\n        <span class=\"p\">}</span>\n    <span class=\"p\">}</span>\n<span class=\"p\">)</span>\n</pre></div>\n</div>\n<p>Note that your ops must also declare that they require this resource with\n<cite>required_resource_keys</cite>, or it will not be initialized for the execution of their compute\nfunctions.</p>\n<p>You may configure this resource as follows:</p>\n<div class=\"highlight-YAML notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"nt\">resources</span><span class=\"p\">:</span><span class=\"w\"></span>\n<span class=\"w\">  </span><span class=\"nt\">secretsmanager</span><span class=\"p\">:</span><span class=\"w\"></span>\n<span class=\"w\">    </span><span class=\"nt\">config</span><span class=\"p\">:</span><span class=\"w\"></span>\n<span class=\"w\">      </span><span class=\"nt\">region_name</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"s\">&quot;us-west-1&quot;</span><span class=\"w\"></span>\n<span class=\"w\">      </span><span class=\"c1\"># Optional[str]: Specifies a custom region for the SecretsManager session. Default is chosen</span><span class=\"w\"></span>\n<span class=\"w\">      </span><span class=\"c1\"># through the ordinary boto credential chain.</span><span class=\"w\"></span>\n<span class=\"w\">      </span><span class=\"nt\">profile_name</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"s\">&quot;dev&quot;</span><span class=\"w\"></span>\n<span class=\"w\">      </span><span class=\"c1\"># Optional[str]: Specifies a custom profile for SecretsManager session. Default is default</span><span class=\"w\"></span>\n<span class=\"w\">      </span><span class=\"c1\"># profile as specified in ~/.aws/credentials file</span><span class=\"w\"></span>\n</pre></div>\n</div>\n</dd></dl>\n\n<dl class=\"py data\">\n<dt id=\"dagster_aws.secretsmanager.secretsmanager_secrets_resource\">\n<code class=\"sig-prename descclassname\"><span class=\"pre\">dagster_aws.secretsmanager.</span></code><code class=\"sig-name descname\"><span class=\"pre\">secretsmanager_secrets_resource</span></code><em class=\"property\"> <span class=\"pre\">ResourceDefinition</span></em><a class=\"reference internal\" href=\"../../../../../_modules/dagster_aws/secretsmanager/resources#secretsmanager_secrets_resource\"><span class=\"viewcode-link\"><span class=\"pre\">[source]</span></span></a><a class=\"headerlink\" href=\"#dagster_aws.secretsmanager.secretsmanager_secrets_resource\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><div class=\"line-block\">\n<div class=\"line\"><br /></div>\n</div>\n<details class=\"summary-config-schema\">\n<summary>Config Schema:</summary><dl class=\"field-list\">\n<dt class=\"field-odd\">region_name (String, optional)</dt>\n<dd class=\"field-odd\"><p>Specifies a custom region for the SecretsManager session</p>\n</dd>\n<dt class=\"field-even\">max_attempts (Int, optional)</dt>\n<dd class=\"field-even\"><p>This provides Boto3\u2019s retry handler with a value of maximum retry attempts, where the initial call counts toward the max_attempts value that you provide</p>\n<p><strong>Default Value:</strong> 5</p>\n</dd>\n<dt class=\"field-odd\">profile_name (String, optional)</dt>\n<dd class=\"field-odd\"><p>Specifies a profile to connect that session</p>\n</dd>\n<dt class=\"field-even\">secrets (List[String], optional)</dt>\n<dd class=\"field-even\"><p>An array of AWS Secrets Manager secrets arns to fetch.</p>\n<p><strong>Default Value:</strong> []</p>\n</dd>\n<dt class=\"field-odd\">secrets_tag (Union[String, None], optional)</dt>\n<dd class=\"field-odd\"><p>AWS Secrets Manager secrets with this tag will be fetched and made available.</p>\n<p><strong>Default Value:</strong> None</p>\n</dd>\n<dt class=\"field-even\">add_to_environment (Bool, optional)</dt>\n<dd class=\"field-even\"><p>Whether to mount the secrets as environment variables.</p>\n<p><strong>Default Value:</strong> False</p>\n</dd>\n</dl>\n</details><p>Resource that provides a dict which maps selected SecretsManager secrets to\ntheir string values. Also optionally sets chosen secrets as environment variables.</p>\n<p class=\"rubric\">Example</p>\n<div class=\"highlight-python notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"kn\">import</span> <span class=\"nn\">os</span>\n<span class=\"kn\">from</span> <span class=\"nn\">dagster</span> <span class=\"kn\">import</span> <span class=\"n\">build_op_context</span><span class=\"p\">,</span> <span class=\"n\">job</span><span class=\"p\">,</span> <span class=\"n\">op</span>\n<span class=\"kn\">from</span> <span class=\"nn\">dagster_aws.secretsmanager</span> <span class=\"kn\">import</span> <span class=\"n\">secretsmanager_secrets_resource</span>\n\n<span class=\"nd\">@op</span><span class=\"p\">(</span><span class=\"n\">required_resource_keys</span><span class=\"o\">=</span><span class=\"p\">{</span><span class=\"s1\">&#39;secrets&#39;</span><span class=\"p\">})</span>\n<span class=\"k\">def</span> <span class=\"nf\">example_secretsmanager_secrets_op</span><span class=\"p\">(</span><span class=\"n\">context</span><span class=\"p\">):</span>\n    <span class=\"k\">return</span> <span class=\"n\">context</span><span class=\"o\">.</span><span class=\"n\">resources</span><span class=\"o\">.</span><span class=\"n\">secrets</span><span class=\"o\">.</span><span class=\"n\">get</span><span class=\"p\">(</span><span class=\"s2\">&quot;my-secret-name&quot;</span><span class=\"p\">)</span>\n\n<span class=\"nd\">@op</span><span class=\"p\">(</span><span class=\"n\">required_resource_keys</span><span class=\"o\">=</span><span class=\"p\">{</span><span class=\"s1\">&#39;secrets&#39;</span><span class=\"p\">})</span>\n<span class=\"k\">def</span> <span class=\"nf\">example_secretsmanager_secrets_op_2</span><span class=\"p\">(</span><span class=\"n\">context</span><span class=\"p\">):</span>\n    <span class=\"k\">return</span> <span class=\"n\">os</span><span class=\"o\">.</span><span class=\"n\">getenv</span><span class=\"p\">(</span><span class=\"s2\">&quot;my-other-secret-name&quot;</span><span class=\"p\">)</span>\n\n<span class=\"nd\">@job</span><span class=\"p\">(</span><span class=\"n\">resource_defs</span><span class=\"o\">=</span><span class=\"p\">{</span><span class=\"s1\">&#39;secrets&#39;</span><span class=\"p\">:</span> <span class=\"n\">secretsmanager_secrets_resource</span><span class=\"p\">})</span>\n<span class=\"k\">def</span> <span class=\"nf\">example_job</span><span class=\"p\">():</span>\n    <span class=\"n\">example_secretsmanager_secrets_op</span><span class=\"p\">()</span>\n    <span class=\"n\">example_secretsmanager_secrets_op_2</span><span class=\"p\">()</span>\n\n<span class=\"n\">example_job</span><span class=\"o\">.</span><span class=\"n\">execute_in_process</span><span class=\"p\">(</span>\n    <span class=\"n\">run_config</span><span class=\"o\">=</span><span class=\"p\">{</span>\n        <span class=\"s1\">&#39;resources&#39;</span><span class=\"p\">:</span> <span class=\"p\">{</span>\n            <span class=\"s1\">&#39;secrets&#39;</span><span class=\"p\">:</span> <span class=\"p\">{</span>\n                <span class=\"s1\">&#39;config&#39;</span><span class=\"p\">:</span> <span class=\"p\">{</span>\n                    <span class=\"s1\">&#39;region_name&#39;</span><span class=\"p\">:</span> <span class=\"s1\">&#39;us-west-1&#39;</span><span class=\"p\">,</span>\n                    <span class=\"s1\">&#39;secrets_tag&#39;</span><span class=\"p\">:</span> <span class=\"s1\">&#39;dagster&#39;</span><span class=\"p\">,</span>\n                    <span class=\"s1\">&#39;add_to_environment&#39;</span><span class=\"p\">:</span> <span class=\"kc\">True</span><span class=\"p\">,</span>\n                <span class=\"p\">}</span>\n            <span class=\"p\">}</span>\n        <span class=\"p\">}</span>\n    <span class=\"p\">}</span>\n<span class=\"p\">)</span>\n</pre></div>\n</div>\n<p>Note that your ops must also declare that they require this resource with\n<cite>required_resource_keys</cite>, or it will not be initialized for the execution of their compute\nfunctions.</p>\n<p>You may configure this resource as follows:</p>\n<div class=\"highlight-YAML notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"nt\">resources</span><span class=\"p\">:</span><span class=\"w\"></span>\n<span class=\"w\">  </span><span class=\"nt\">secretsmanager</span><span class=\"p\">:</span><span class=\"w\"></span>\n<span class=\"w\">    </span><span class=\"nt\">config</span><span class=\"p\">:</span><span class=\"w\"></span>\n<span class=\"w\">      </span><span class=\"nt\">region_name</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"s\">&quot;us-west-1&quot;</span><span class=\"w\"></span>\n<span class=\"w\">      </span><span class=\"c1\"># Optional[str]: Specifies a custom region for the SecretsManager session. Default is chosen</span><span class=\"w\"></span>\n<span class=\"w\">      </span><span class=\"c1\"># through the ordinary boto credential chain.</span><span class=\"w\"></span>\n<span class=\"w\">      </span><span class=\"nt\">profile_name</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"s\">&quot;dev&quot;</span><span class=\"w\"></span>\n<span class=\"w\">      </span><span class=\"c1\"># Optional[str]: Specifies a custom profile for SecretsManager session. Default is default</span><span class=\"w\"></span>\n<span class=\"w\">      </span><span class=\"c1\"># profile as specified in ~/.aws/credentials file</span><span class=\"w\"></span>\n<span class=\"w\">      </span><span class=\"nt\">secrets</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"p p-Indicator\">[</span><span class=\"s\">&quot;arn:aws:secretsmanager:region:aws_account_id:secret:appauthexample-AbCdEf&quot;</span><span class=\"p p-Indicator\">]</span><span class=\"w\"></span>\n<span class=\"w\">      </span><span class=\"c1\"># Optional[List[str]]: Specifies a list of secret ARNs to pull from SecretsManager.</span><span class=\"w\"></span>\n<span class=\"w\">      </span><span class=\"nt\">secrets_tag</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"s\">&quot;dagster&quot;</span><span class=\"w\"></span>\n<span class=\"w\">      </span><span class=\"c1\"># Optional[str]: Specifies a tag, all secrets which have the tag set will be pulled</span><span class=\"w\"></span>\n<span class=\"w\">      </span><span class=\"c1\"># from SecretsManager.</span><span class=\"w\"></span>\n<span class=\"w\">      </span><span class=\"nt\">add_to_environment</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"l l-Scalar l-Scalar-Plain\">true</span><span class=\"w\"></span>\n<span class=\"w\">      </span><span class=\"c1\"># Optional[bool]: Whether to set the selected secrets as environment variables. Defaults</span><span class=\"w\"></span>\n<span class=\"w\">      </span><span class=\"c1\"># to false.</span><span class=\"w\"></span>\n</pre></div>\n</div>\n</dd></dl>\n\n</div>\n</div>\n", "current_page_name": "sections/api/apidocs/libraries/dagster-aws", "customsidebar": null, "display_toc": true, "meta": null, "metatags": "", "next": {"link": "../dagster-azure/", "title": "Azure (dagster-azure)"}, "page_source_suffix": ".rst", "parents": [], "prev": {"link": "../dagster-airflow/", "title": "Airflow (dagster-airflow)"}, "rellinks": [["genindex", "General Index", "I", "index"], ["py-modindex", "Python Module Index", "", "modules"], ["sections/api/apidocs/libraries/dagster-azure", "Azure (dagster-azure)", "N", "next"], ["sections/api/apidocs/libraries/dagster-airflow", "Airflow (dagster-airflow)", "P", "previous"]], "sidebars": ["globaltoc.html", "searchbox.html"], "sourcename": "sections/api/apidocs/libraries/dagster-aws.rst.txt", "title": "AWS (dagster-aws)", "toc": "<ul>\n<li><a class=\"reference internal\" href=\"#\">AWS (dagster-aws)</a><ul>\n<li><a class=\"reference internal\" href=\"#s3\">S3</a></li>\n<li><a class=\"reference internal\" href=\"#ecs\">ECS</a></li>\n<li><a class=\"reference internal\" href=\"#redshift\">Redshift</a><ul>\n<li><a class=\"reference internal\" href=\"#testing\">Testing</a></li>\n</ul>\n</li>\n<li><a class=\"reference internal\" href=\"#emr\">EMR</a></li>\n<li><a class=\"reference internal\" href=\"#cloudwatch\">CloudWatch</a></li>\n<li><a class=\"reference internal\" href=\"#secretsmanager\">SecretsManager</a></li>\n</ul>\n</li>\n</ul>\n"}, "dagster-azure": {"alabaster_version": "0.7.12", "body": "<div class=\"section\" id=\"azure-dagster-azure\">\n<h1>Azure (dagster-azure)<a class=\"headerlink\" href=\"#azure-dagster-azure\" title=\"Permalink to this headline\">\u00b6</a></h1>\n<p>Utilities for using Azure Storage Accounts with Dagster. This is mostly aimed at Azure Data Lake\nStorage Gen 2 (ADLS2) but also contains some utilities for Azure Blob Storage.</p>\n<div class=\"line-block\">\n<div class=\"line\"><br /></div>\n</div>\n<p><strong>NOTE:</strong> This package is incompatible with <code class=\"docutils literal notranslate\"><span class=\"pre\">dagster-snowflake</span></code>! This is due to a version mismatch\nbetween the underlying <code class=\"docutils literal notranslate\"><span class=\"pre\">azure-storage-blob</span></code> package; <code class=\"docutils literal notranslate\"><span class=\"pre\">dagster-snowflake</span></code> has a transitive\ndependency on an old version, via <code class=\"docutils literal notranslate\"><span class=\"pre\">snowflake-connector-python</span></code>.</p>\n<dl class=\"py data\">\n<dt id=\"dagster_azure.adls2.adls2_resource\">\n<code class=\"sig-prename descclassname\"><span class=\"pre\">dagster_azure.adls2.</span></code><code class=\"sig-name descname\"><span class=\"pre\">adls2_resource</span></code><em class=\"property\"> <span class=\"pre\">ResourceDefinition</span></em><a class=\"reference internal\" href=\"../../../../../_modules/dagster_azure/adls2/resources#adls2_resource\"><span class=\"viewcode-link\"><span class=\"pre\">[source]</span></span></a><a class=\"headerlink\" href=\"#dagster_azure.adls2.adls2_resource\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><div class=\"line-block\">\n<div class=\"line\"><br /></div>\n</div>\n<details class=\"summary-config-schema\">\n<summary>Config Schema:</summary><dl class=\"field-list\">\n<dt class=\"field-odd\">storage_account (dagster.StringSource)</dt>\n<dd class=\"field-odd\"><p>The storage account name.</p>\n</dd>\n<dt class=\"field-even\">credential (selector)</dt>\n<dd class=\"field-even\"><p>The credentials with which to authenticate.</p>\n<details class=\"summary-config-schema\">\n<summary>Config Schema:</summary><dl class=\"field-list simple\">\n<dt class=\"field-odd\">sas (dagster.StringSource)</dt>\n<dd class=\"field-odd\"><p>SAS token for the account.</p>\n</dd>\n<dt class=\"field-even\">key (dagster.StringSource)</dt>\n<dd class=\"field-even\"><p>Shared Access Key for the account</p>\n</dd>\n</dl>\n</details></dd>\n</dl>\n</details><p>Resource that gives ops access to Azure Data Lake Storage Gen2.</p>\n<p>The underlying client is a <code class=\"xref py py-class docutils literal notranslate\"><span class=\"pre\">DataLakeServiceClient</span></code>.</p>\n<p>Attach this resource definition to a <a class=\"reference internal\" href=\"../../jobs#dagster.JobDefinition\" title=\"dagster.JobDefinition\"><code class=\"xref py py-class docutils literal notranslate\"><span class=\"pre\">JobDefinition</span></code></a> in order to make it\navailable to your ops.</p>\n<p class=\"rubric\">Example</p>\n<div class=\"highlight-python notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"kn\">from</span> <span class=\"nn\">dagster</span> <span class=\"kn\">import</span> <span class=\"n\">job</span><span class=\"p\">,</span> <span class=\"n\">op</span>\n<span class=\"kn\">from</span> <span class=\"nn\">dagster_azure.adls2</span> <span class=\"kn\">import</span> <span class=\"n\">adls2_resource</span>\n\n<span class=\"nd\">@op</span><span class=\"p\">(</span><span class=\"n\">required_resource_keys</span><span class=\"o\">=</span><span class=\"p\">{</span><span class=\"s1\">&#39;adls2&#39;</span><span class=\"p\">})</span>\n<span class=\"k\">def</span> <span class=\"nf\">example_adls2_op</span><span class=\"p\">(</span><span class=\"n\">context</span><span class=\"p\">):</span>\n    <span class=\"k\">return</span> <span class=\"nb\">list</span><span class=\"p\">(</span><span class=\"n\">context</span><span class=\"o\">.</span><span class=\"n\">resources</span><span class=\"o\">.</span><span class=\"n\">adls2</span><span class=\"o\">.</span><span class=\"n\">adls2_client</span><span class=\"o\">.</span><span class=\"n\">list_file_systems</span><span class=\"p\">())</span>\n\n<span class=\"nd\">@job</span><span class=\"p\">(</span><span class=\"n\">resource_defs</span><span class=\"o\">=</span><span class=\"p\">{</span><span class=\"s2\">&quot;adls2&quot;</span><span class=\"p\">:</span> <span class=\"n\">adls2_resource</span><span class=\"p\">})</span>\n<span class=\"k\">def</span> <span class=\"nf\">my_job</span><span class=\"p\">():</span>\n    <span class=\"n\">example_adls2_op</span><span class=\"p\">()</span>\n</pre></div>\n</div>\n<p>Note that your ops must also declare that they require this resource with\n<cite>required_resource_keys</cite>, or it will not be initialized for the execution of their compute\nfunctions.</p>\n<p>You may pass credentials to this resource using either a SAS token or a key, using\nenvironment variables if desired:</p>\n<div class=\"highlight-YAML notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"nt\">resources</span><span class=\"p\">:</span><span class=\"w\"></span>\n<span class=\"w\">  </span><span class=\"nt\">adls2</span><span class=\"p\">:</span><span class=\"w\"></span>\n<span class=\"w\">    </span><span class=\"nt\">config</span><span class=\"p\">:</span><span class=\"w\"></span>\n<span class=\"w\">      </span><span class=\"nt\">storage_account</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"l l-Scalar l-Scalar-Plain\">my_storage_account</span><span class=\"w\"></span>\n<span class=\"w\">      </span><span class=\"c1\"># str: The storage account name.</span><span class=\"w\"></span>\n<span class=\"w\">      </span><span class=\"nt\">credential</span><span class=\"p\">:</span><span class=\"w\"></span>\n<span class=\"w\">        </span><span class=\"nt\">sas</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"l l-Scalar l-Scalar-Plain\">my_sas_token</span><span class=\"w\"></span>\n<span class=\"w\">        </span><span class=\"c1\"># str: the SAS token for the account.</span><span class=\"w\"></span>\n<span class=\"w\">        </span><span class=\"nt\">key</span><span class=\"p\">:</span><span class=\"w\"></span>\n<span class=\"w\">          </span><span class=\"nt\">env</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"l l-Scalar l-Scalar-Plain\">AZURE_DATA_LAKE_STORAGE_KEY</span><span class=\"w\"></span>\n<span class=\"w\">        </span><span class=\"c1\"># str: The shared access key for the account.</span><span class=\"w\"></span>\n</pre></div>\n</div>\n</dd></dl>\n\n<dl class=\"py class\">\n<dt id=\"dagster_azure.adls2.FakeADLS2Resource\">\n<em class=\"property\"><span class=\"pre\">class</span> </em><code class=\"sig-prename descclassname\"><span class=\"pre\">dagster_azure.adls2.</span></code><code class=\"sig-name descname\"><span class=\"pre\">FakeADLS2Resource</span></code><span class=\"sig-paren\">(</span><em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">account_name</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">credential</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">'fake-creds'</span></span></em><span class=\"sig-paren\">)</span><a class=\"reference internal\" href=\"../../../../../_modules/dagster_azure/adls2/fake_adls2_resource#FakeADLS2Resource\"><span class=\"viewcode-link\"><span class=\"pre\">[source]</span></span></a><a class=\"headerlink\" href=\"#dagster_azure.adls2.FakeADLS2Resource\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Stateful mock of an ADLS2Resource for testing.</p>\n<p>Wraps a <code class=\"docutils literal notranslate\"><span class=\"pre\">mock.MagicMock</span></code>. Containers are implemented using an in-memory dict.</p>\n</dd></dl>\n\n<dl class=\"py class\">\n<dt id=\"dagster_azure.blob.AzureBlobComputeLogManager\">\n<em class=\"property\"><span class=\"pre\">class</span> </em><code class=\"sig-prename descclassname\"><span class=\"pre\">dagster_azure.blob.</span></code><code class=\"sig-name descname\"><span class=\"pre\">AzureBlobComputeLogManager</span></code><span class=\"sig-paren\">(</span><em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">storage_account</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">container</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">secret_key</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">local_dir</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">None</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">inst_data</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">None</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">prefix</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">'dagster'</span></span></em><span class=\"sig-paren\">)</span><a class=\"reference internal\" href=\"../../../../../_modules/dagster_azure/blob/compute_log_manager#AzureBlobComputeLogManager\"><span class=\"viewcode-link\"><span class=\"pre\">[source]</span></span></a><a class=\"headerlink\" href=\"#dagster_azure.blob.AzureBlobComputeLogManager\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Logs op compute function stdout and stderr to Azure Blob Storage.</p>\n<p>This is also compatible with Azure Data Lake Storage.</p>\n<p>Users should not instantiate this class directly. Instead, use a YAML block in <code class=\"docutils literal notranslate\"><span class=\"pre\">dagster.yaml</span></code>\nsuch as the following:</p>\n<div class=\"highlight-YAML notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"nt\">compute_logs</span><span class=\"p\">:</span><span class=\"w\"></span>\n<span class=\"w\">  </span><span class=\"nt\">module</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"l l-Scalar l-Scalar-Plain\">dagster_azure.blob.compute_log_manager</span><span class=\"w\"></span>\n<span class=\"w\">  </span><span class=\"nt\">class</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"l l-Scalar l-Scalar-Plain\">AzureBlobComputeLogManager</span><span class=\"w\"></span>\n<span class=\"w\">  </span><span class=\"nt\">config</span><span class=\"p\">:</span><span class=\"w\"></span>\n<span class=\"w\">    </span><span class=\"nt\">storage_account</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"l l-Scalar l-Scalar-Plain\">my-storage-account</span><span class=\"w\"></span>\n<span class=\"w\">    </span><span class=\"nt\">container</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"l l-Scalar l-Scalar-Plain\">my-container</span><span class=\"w\"></span>\n<span class=\"w\">    </span><span class=\"nt\">credential</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"l l-Scalar l-Scalar-Plain\">sas-token-or-secret-key</span><span class=\"w\"></span>\n<span class=\"w\">    </span><span class=\"nt\">prefix</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"s\">&quot;dagster-test-&quot;</span><span class=\"w\"></span>\n<span class=\"w\">    </span><span class=\"nt\">local_dir</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"s\">&quot;/tmp/cool&quot;</span><span class=\"w\"></span>\n</pre></div>\n</div>\n<dl class=\"field-list simple\">\n<dt class=\"field-odd\">Parameters</dt>\n<dd class=\"field-odd\"><ul class=\"simple\">\n<li><p><strong>storage_account</strong> (<a class=\"reference external\" href=\"https://docs.python.org/3/library/stdtypes.html#str\" title=\"(in Python v3.8)\"><em>str</em></a>) \u2013 The storage account name to which to log.</p></li>\n<li><p><strong>container</strong> (<a class=\"reference external\" href=\"https://docs.python.org/3/library/stdtypes.html#str\" title=\"(in Python v3.8)\"><em>str</em></a>) \u2013 The container (or ADLS2 filesystem) to which to log.</p></li>\n<li><p><strong>secret_key</strong> (<a class=\"reference external\" href=\"https://docs.python.org/3/library/stdtypes.html#str\" title=\"(in Python v3.8)\"><em>str</em></a>) \u2013 Secret key for the storage account. SAS tokens are not\nsupported because we need a secret key to generate a SAS token for a download URL.</p></li>\n<li><p><strong>local_dir</strong> (<em>Optional</em><em>[</em><a class=\"reference external\" href=\"https://docs.python.org/3/library/stdtypes.html#str\" title=\"(in Python v3.8)\"><em>str</em></a><em>]</em>) \u2013 Path to the local directory in which to stage logs. Default:\n<code class=\"docutils literal notranslate\"><span class=\"pre\">dagster.seven.get_system_temp_directory()</span></code>.</p></li>\n<li><p><strong>prefix</strong> (<em>Optional</em><em>[</em><a class=\"reference external\" href=\"https://docs.python.org/3/library/stdtypes.html#str\" title=\"(in Python v3.8)\"><em>str</em></a><em>]</em>) \u2013 Prefix for the log file keys.</p></li>\n<li><p><strong>inst_data</strong> (<em>Optional</em><em>[</em><a class=\"reference internal\" href=\"../../internals#dagster.serdes.ConfigurableClassData\" title=\"dagster.serdes.ConfigurableClassData\"><em>ConfigurableClassData</em></a><em>]</em>) \u2013 Serializable representation of the compute\nlog manager when newed up from config.</p></li>\n</ul>\n</dd>\n</dl>\n</dd></dl>\n\n<dl class=\"py data\">\n<dt id=\"dagster_azure.adls2.adls2_file_manager\">\n<code class=\"sig-prename descclassname\"><span class=\"pre\">dagster_azure.adls2.</span></code><code class=\"sig-name descname\"><span class=\"pre\">adls2_file_manager</span></code><em class=\"property\"> <span class=\"pre\">ResourceDefinition</span></em><a class=\"reference internal\" href=\"../../../../../_modules/dagster_azure/adls2/resources#adls2_file_manager\"><span class=\"viewcode-link\"><span class=\"pre\">[source]</span></span></a><a class=\"headerlink\" href=\"#dagster_azure.adls2.adls2_file_manager\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><div class=\"line-block\">\n<div class=\"line\"><br /></div>\n</div>\n<details class=\"summary-config-schema\">\n<summary>Config Schema:</summary><dl class=\"field-list\">\n<dt class=\"field-odd\">storage_account (dagster.StringSource)</dt>\n<dd class=\"field-odd\"><p>The storage account name.</p>\n</dd>\n<dt class=\"field-even\">credential (selector)</dt>\n<dd class=\"field-even\"><p>The credentials with which to authenticate.</p>\n<details class=\"summary-config-schema\">\n<summary>Config Schema:</summary><dl class=\"field-list simple\">\n<dt class=\"field-odd\">sas (dagster.StringSource)</dt>\n<dd class=\"field-odd\"><p>SAS token for the account.</p>\n</dd>\n<dt class=\"field-even\">key (dagster.StringSource)</dt>\n<dd class=\"field-even\"><p>Shared Access Key for the account</p>\n</dd>\n</dl>\n</details></dd>\n<dt class=\"field-odd\">adls2_file_system (dagster.StringSource)</dt>\n<dd class=\"field-odd\"><p>ADLS Gen2 file system name</p>\n</dd>\n<dt class=\"field-even\">adls2_prefix (dagster.StringSource, optional)</dt>\n<dd class=\"field-even\"><p><strong>Default Value:</strong> \u2018dagster\u2019</p>\n</dd>\n</dl>\n</details><p>FileManager that provides abstract access to ADLS2.</p>\n<p>Implements the <a class=\"reference internal\" href=\"../../internals#dagster.core.storage.file_manager.FileManager\" title=\"dagster.core.storage.file_manager.FileManager\"><code class=\"xref py py-class docutils literal notranslate\"><span class=\"pre\">FileManager</span></code></a> API.</p>\n</dd></dl>\n\n<dl class=\"py class\">\n<dt id=\"dagster_azure.adls2.ADLS2FileHandle\">\n<em class=\"property\"><span class=\"pre\">class</span> </em><code class=\"sig-prename descclassname\"><span class=\"pre\">dagster_azure.adls2.</span></code><code class=\"sig-name descname\"><span class=\"pre\">ADLS2FileHandle</span></code><span class=\"sig-paren\">(</span><em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">account</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">file_system</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">key</span></span></em><span class=\"sig-paren\">)</span><a class=\"reference internal\" href=\"../../../../../_modules/dagster_azure/adls2/file_manager#ADLS2FileHandle\"><span class=\"viewcode-link\"><span class=\"pre\">[source]</span></span></a><a class=\"headerlink\" href=\"#dagster_azure.adls2.ADLS2FileHandle\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>A reference to a file on ADLS2.</p>\n<dl class=\"py method\">\n<dt id=\"dagster_azure.adls2.ADLS2FileHandle.account\">\n<em class=\"property\"><span class=\"pre\">property</span> </em><code class=\"sig-name descname\"><span class=\"pre\">account</span></code><a class=\"headerlink\" href=\"#dagster_azure.adls2.ADLS2FileHandle.account\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>The name of the ADLS2 account.</p>\n<dl class=\"field-list simple\">\n<dt class=\"field-odd\">Type</dt>\n<dd class=\"field-odd\"><p><a class=\"reference external\" href=\"https://docs.python.org/3/library/stdtypes.html#str\" title=\"(in Python v3.8)\">str</a></p>\n</dd>\n</dl>\n</dd></dl>\n\n<dl class=\"py method\">\n<dt id=\"dagster_azure.adls2.ADLS2FileHandle.adls2_path\">\n<em class=\"property\"><span class=\"pre\">property</span> </em><code class=\"sig-name descname\"><span class=\"pre\">adls2_path</span></code><a class=\"headerlink\" href=\"#dagster_azure.adls2.ADLS2FileHandle.adls2_path\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>The file\u2019s ADLS2 URL.</p>\n<dl class=\"field-list simple\">\n<dt class=\"field-odd\">Type</dt>\n<dd class=\"field-odd\"><p><a class=\"reference external\" href=\"https://docs.python.org/3/library/stdtypes.html#str\" title=\"(in Python v3.8)\">str</a></p>\n</dd>\n</dl>\n</dd></dl>\n\n<dl class=\"py method\">\n<dt id=\"dagster_azure.adls2.ADLS2FileHandle.file_system\">\n<em class=\"property\"><span class=\"pre\">property</span> </em><code class=\"sig-name descname\"><span class=\"pre\">file_system</span></code><a class=\"headerlink\" href=\"#dagster_azure.adls2.ADLS2FileHandle.file_system\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>The name of the ADLS2 file system.</p>\n<dl class=\"field-list simple\">\n<dt class=\"field-odd\">Type</dt>\n<dd class=\"field-odd\"><p><a class=\"reference external\" href=\"https://docs.python.org/3/library/stdtypes.html#str\" title=\"(in Python v3.8)\">str</a></p>\n</dd>\n</dl>\n</dd></dl>\n\n<dl class=\"py method\">\n<dt id=\"dagster_azure.adls2.ADLS2FileHandle.key\">\n<em class=\"property\"><span class=\"pre\">property</span> </em><code class=\"sig-name descname\"><span class=\"pre\">key</span></code><a class=\"headerlink\" href=\"#dagster_azure.adls2.ADLS2FileHandle.key\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>The ADLS2 key.</p>\n<dl class=\"field-list simple\">\n<dt class=\"field-odd\">Type</dt>\n<dd class=\"field-odd\"><p><a class=\"reference external\" href=\"https://docs.python.org/3/library/stdtypes.html#str\" title=\"(in Python v3.8)\">str</a></p>\n</dd>\n</dl>\n</dd></dl>\n\n<dl class=\"py method\">\n<dt id=\"dagster_azure.adls2.ADLS2FileHandle.path_desc\">\n<em class=\"property\"><span class=\"pre\">property</span> </em><code class=\"sig-name descname\"><span class=\"pre\">path_desc</span></code><a class=\"headerlink\" href=\"#dagster_azure.adls2.ADLS2FileHandle.path_desc\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>The file\u2019s ADLS2 URL.</p>\n<dl class=\"field-list simple\">\n<dt class=\"field-odd\">Type</dt>\n<dd class=\"field-odd\"><p><a class=\"reference external\" href=\"https://docs.python.org/3/library/stdtypes.html#str\" title=\"(in Python v3.8)\">str</a></p>\n</dd>\n</dl>\n</dd></dl>\n\n</dd></dl>\n\n<dl class=\"py data\">\n<dt id=\"dagster_azure.adls2.adls2_pickle_io_manager\">\n<code class=\"sig-prename descclassname\"><span class=\"pre\">dagster_azure.adls2.</span></code><code class=\"sig-name descname\"><span class=\"pre\">adls2_pickle_io_manager</span></code><em class=\"property\"> <span class=\"pre\">IOManagerDefinition</span></em><a class=\"reference internal\" href=\"../../../../../_modules/dagster_azure/adls2/io_manager#adls2_pickle_io_manager\"><span class=\"viewcode-link\"><span class=\"pre\">[source]</span></span></a><a class=\"headerlink\" href=\"#dagster_azure.adls2.adls2_pickle_io_manager\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><div class=\"line-block\">\n<div class=\"line\"><br /></div>\n</div>\n<details class=\"summary-config-schema\">\n<summary>Config Schema:</summary><dl class=\"field-list simple\">\n<dt class=\"field-odd\">adls2_file_system (dagster.StringSource)</dt>\n<dd class=\"field-odd\"><p>ADLS Gen2 file system name</p>\n</dd>\n<dt class=\"field-even\">adls2_prefix (dagster.StringSource, optional)</dt>\n<dd class=\"field-even\"><p><strong>Default Value:</strong> \u2018dagster\u2019</p>\n</dd>\n</dl>\n</details><p>Persistent IO manager using Azure Data Lake Storage Gen2 for storage.</p>\n<p>Serializes objects via pickling. Suitable for objects storage for distributed executors, so long\nas each execution node has network connectivity and credentials for ADLS and the backing\ncontainer.</p>\n<p>Assigns each op output to a unique filepath containing run ID, step key, and output name.\nAssigns each asset to a single filesystem path, at \u201c&lt;base_dir&gt;/&lt;asset_key&gt;\u201d. If the asset key\nhas multiple components, the final component is used as the name of the file, and the preceding\ncomponents as parent directories under the base_dir.</p>\n<p>Subsequent materializations of an asset will overwrite previous materializations of that asset.\nWith a base directory of \u201c/my/base/path\u201d, an asset with key\n<cite>AssetKey([\u201cone\u201d, \u201ctwo\u201d, \u201cthree\u201d])</cite> would be stored in a file called \u201cthree\u201d in a directory\nwith path \u201c/my/base/path/one/two/\u201d.</p>\n<p>Attach this resource definition to your job in order to make it available all your ops:</p>\n<div class=\"highlight-python notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"nd\">@job</span><span class=\"p\">(</span><span class=\"n\">resource_defs</span><span class=\"o\">=</span><span class=\"p\">{</span>\n    <span class=\"s1\">&#39;io_manager&#39;</span><span class=\"p\">:</span> <span class=\"n\">adls2_pickle_io_manager</span><span class=\"p\">,</span>\n    <span class=\"s1\">&#39;adls2&#39;</span><span class=\"p\">:</span> <span class=\"n\">adls2_resource</span><span class=\"p\">,</span>\n    <span class=\"o\">...</span><span class=\"p\">,</span>\n<span class=\"p\">})</span>\n<span class=\"k\">def</span> <span class=\"nf\">my_job</span><span class=\"p\">():</span>\n    <span class=\"o\">...</span>\n</pre></div>\n</div>\n<p>You may configure this storage as follows:</p>\n<div class=\"highlight-YAML notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"nt\">resources</span><span class=\"p\">:</span><span class=\"w\"></span>\n<span class=\"w\">    </span><span class=\"nt\">io_manager</span><span class=\"p\">:</span><span class=\"w\"></span>\n<span class=\"w\">        </span><span class=\"nt\">config</span><span class=\"p\">:</span><span class=\"w\"></span>\n<span class=\"w\">            </span><span class=\"nt\">adls2_file_system</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"l l-Scalar l-Scalar-Plain\">my-cool-file-system</span><span class=\"w\"></span>\n<span class=\"w\">            </span><span class=\"nt\">adls2_prefix</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"l l-Scalar l-Scalar-Plain\">good/prefix-for-files-</span><span class=\"w\"></span>\n</pre></div>\n</div>\n</dd></dl>\n\n</div>\n", "current_page_name": "sections/api/apidocs/libraries/dagster-azure", "customsidebar": null, "display_toc": false, "meta": null, "metatags": "", "next": {"link": "../dagster-celery/", "title": "Celery (dagster-celery)"}, "page_source_suffix": ".rst", "parents": [], "prev": {"link": "../dagster-aws/", "title": "AWS (dagster-aws)"}, "rellinks": [["genindex", "General Index", "I", "index"], ["py-modindex", "Python Module Index", "", "modules"], ["sections/api/apidocs/libraries/dagster-celery", "Celery (dagster-celery)", "N", "next"], ["sections/api/apidocs/libraries/dagster-aws", "AWS (dagster-aws)", "P", "previous"]], "sidebars": ["globaltoc.html", "searchbox.html"], "sourcename": "sections/api/apidocs/libraries/dagster-azure.rst.txt", "title": "Azure (dagster-azure)", "toc": "<ul>\n<li><a class=\"reference internal\" href=\"#\">Azure (dagster-azure)</a></li>\n</ul>\n"}, "dagster-celery": {"alabaster_version": "0.7.12", "body": "<div class=\"section\" id=\"celery-dagster-celery\">\n<h1>Celery (dagster-celery)<a class=\"headerlink\" href=\"#celery-dagster-celery\" title=\"Permalink to this headline\">\u00b6</a></h1>\n<div class=\"section\" id=\"quickstart\">\n<h2>Quickstart<a class=\"headerlink\" href=\"#quickstart\" title=\"Permalink to this headline\">\u00b6</a></h2>\n<p>To get a local rabbitmq broker started and available via the default\n<code class=\"docutils literal notranslate\"><span class=\"pre\">pyamqp://guest&#64;localhost:5672</span></code>, in the <code class=\"docutils literal notranslate\"><span class=\"pre\">dagster/python_modules/libraries/dagster-celery/</span></code>\ndirectory run:</p>\n<div class=\"highlight-bash notranslate\"><div class=\"highlight\"><pre><span></span>docker-compose up\n</pre></div>\n</div>\n<p>To run a celery worker:</p>\n<div class=\"highlight-bash notranslate\"><div class=\"highlight\"><pre><span></span>celery -A dagster_celery.app worker -l info\n</pre></div>\n</div>\n<p>To start multiple workers in the background, run:</p>\n<div class=\"highlight-bash notranslate\"><div class=\"highlight\"><pre><span></span>celery multi start w2 -A dagster_celery.app -l info\n</pre></div>\n</div>\n<p>To execute a job using the celery-backed executor, you\u2019ll need to set the job\u2019s <code class=\"docutils literal notranslate\"><span class=\"pre\">executor_def</span></code> to\nthe celery_executor.</p>\n<div class=\"highlight-python notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"kn\">from</span> <span class=\"nn\">dagster</span> <span class=\"kn\">import</span> <span class=\"n\">job</span>\n<span class=\"kn\">from</span> <span class=\"nn\">dagster_celery</span> <span class=\"kn\">import</span> <span class=\"n\">celery_executor</span>\n\n<span class=\"nd\">@job</span><span class=\"p\">(</span><span class=\"n\">executor_def</span><span class=\"o\">=</span><span class=\"n\">celery_executor</span><span class=\"p\">)</span>\n<span class=\"k\">def</span> <span class=\"nf\">my_job</span><span class=\"p\">():</span>\n    <span class=\"k\">pass</span>\n</pre></div>\n</div>\n<div class=\"section\" id=\"monitoring-your-celery-tasks\">\n<h3>Monitoring your Celery tasks<a class=\"headerlink\" href=\"#monitoring-your-celery-tasks\" title=\"Permalink to this headline\">\u00b6</a></h3>\n<p>We advise using [Flower](<a class=\"reference external\" href=\"https://celery.readthedocs.io/en/latest/userguide/monitoring.html#flower-real-time-celery-web-monitor\">https://celery.readthedocs.io/en/latest/userguide/monitoring.html#flower-real-time-celery-web-monitor</a>):</p>\n<div class=\"highlight-bash notranslate\"><div class=\"highlight\"><pre><span></span>celery -A dagster_celery.app flower\n</pre></div>\n</div>\n</div>\n<div class=\"section\" id=\"customizing-the-celery-broker-backend-and-other-app-configuration\">\n<h3>Customizing the Celery broker, backend, and other app configuration<a class=\"headerlink\" href=\"#customizing-the-celery-broker-backend-and-other-app-configuration\" title=\"Permalink to this headline\">\u00b6</a></h3>\n<p>By default this will use <code class=\"docutils literal notranslate\"><span class=\"pre\">amqp://guest:**&#64;localhost:5672//</span></code> as the Celery broker URL and\n<code class=\"docutils literal notranslate\"><span class=\"pre\">rpc://</span></code> as the results backend. In production, you will want to change these values. Pending the\nintroduction of a dagster_celery CLI, that would entail writing a Python module <code class=\"docutils literal notranslate\"><span class=\"pre\">my_module</span></code> as\nfollows:</p>\n<div class=\"highlight-python notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"kn\">from</span> <span class=\"nn\">celery</span> <span class=\"kn\">import</span> <span class=\"n\">Celery</span>\n\n<span class=\"kn\">from</span> <span class=\"nn\">dagster_celery.tasks</span> <span class=\"kn\">import</span> <span class=\"n\">create_task</span>\n\n<span class=\"n\">app</span> <span class=\"o\">=</span> <span class=\"n\">Celery</span><span class=\"p\">(</span><span class=\"s1\">&#39;dagster&#39;</span><span class=\"p\">,</span> <span class=\"n\">broker_url</span><span class=\"o\">=</span><span class=\"s1\">&#39;some://custom@value&#39;</span><span class=\"p\">,</span> <span class=\"o\">...</span><span class=\"p\">)</span>\n\n<span class=\"n\">execute_plan</span> <span class=\"o\">=</span> <span class=\"n\">create_task</span><span class=\"p\">(</span><span class=\"n\">app</span><span class=\"p\">)</span>\n\n<span class=\"k\">if</span> <span class=\"vm\">__name__</span> <span class=\"o\">==</span> <span class=\"s1\">&#39;__main__&#39;</span><span class=\"p\">:</span>\n    <span class=\"n\">app</span><span class=\"o\">.</span><span class=\"n\">worker_main</span><span class=\"p\">()</span>\n</pre></div>\n</div>\n<p>You can then run the celery worker using:</p>\n<div class=\"highlight-bash notranslate\"><div class=\"highlight\"><pre><span></span>celery -A my_module worker --loglevel<span class=\"o\">=</span>info\n</pre></div>\n</div>\n<p>This customization mechanism is used to implement <cite>dagster_celery_k8s</cite> and <cite>dagster_celery_k8s</cite> which delegate the execution of steps to ephemeral kubernetes pods and docker containers, respectively.</p>\n</div>\n<div class=\"section\" id=\"celery-best-practices\">\n<h3>Celery best practices<a class=\"headerlink\" href=\"#celery-best-practices\" title=\"Permalink to this headline\">\u00b6</a></h3>\n<p>Celery is a rich and full-featured system. We\u2019ve found the following resources helpful:</p>\n<ul class=\"simple\">\n<li><p>Deni Bertovi\u0107\u2019s [Celery best practices](<a class=\"reference external\" href=\"https://denibertovic.com/posts/celery-best-practices/\">https://denibertovic.com/posts/celery-best-practices/</a>)</p></li>\n<li><p>Pawel Zadrozny\u2019s [series of articles](<a class=\"reference external\" href=\"https://pawelzny.com/python/celery/2017/08/14/celery-4-tasks-best-practices/\">https://pawelzny.com/python/celery/2017/08/14/celery-4-tasks-best-practices/</a>) on Celery best practices</p></li>\n<li><p>Balthazar Rouberol\u2019s [Celery best practices](<a class=\"reference external\" href=\"https://blog.balthazar-rouberol.com/celery-best-practices\">https://blog.balthazar-rouberol.com/celery-best-practices</a>)</p></li>\n</ul>\n</div>\n</div>\n<div class=\"section\" id=\"api\">\n<h2>API<a class=\"headerlink\" href=\"#api\" title=\"Permalink to this headline\">\u00b6</a></h2>\n<dl class=\"py data\">\n<dt id=\"dagster_celery.celery_executor\">\n<code class=\"sig-prename descclassname\"><span class=\"pre\">dagster_celery.</span></code><code class=\"sig-name descname\"><span class=\"pre\">celery_executor</span></code><em class=\"property\"> <span class=\"pre\">ExecutorDefinition</span></em><a class=\"reference internal\" href=\"../../../../../_modules/dagster_celery/executor#celery_executor\"><span class=\"viewcode-link\"><span class=\"pre\">[source]</span></span></a><a class=\"headerlink\" href=\"#dagster_celery.celery_executor\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><div class=\"line-block\">\n<div class=\"line\"><br /></div>\n</div>\n<details class=\"summary-config-schema\">\n<summary>Config Schema:</summary><dl class=\"field-list\">\n<dt class=\"field-odd\">broker (Union[dagster.StringSource, None], optional)</dt>\n<dd class=\"field-odd\"><p>The URL of the Celery broker. Default: \u2018pyamqp://guest&#64;{os.getenv(\u2018DAGSTER_CELERY_BROKER_HOST\u2019,\u2019localhost\u2019)}//\u2019.</p>\n</dd>\n<dt class=\"field-even\">backend (Union[dagster.StringSource, None], optional)</dt>\n<dd class=\"field-even\"><p>The URL of the Celery results backend. Default: \u2018rpc://\u2019.</p>\n<p><strong>Default Value:</strong> \u2018rpc://\u2019</p>\n</dd>\n<dt class=\"field-odd\">include (List[String], optional)</dt>\n<dd class=\"field-odd\"><p>List of modules every worker should import</p>\n</dd>\n<dt class=\"field-even\">config_source (Union[permissive dict, None], optional)</dt>\n<dd class=\"field-even\"><p>Additional settings for the Celery app.</p>\n</dd>\n<dt class=\"field-odd\">retries (selector, optional)</dt>\n<dd class=\"field-odd\"><details class=\"summary-default-value\">\n<summary>Default Value:</summary><div class=\"highlight-javascript notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"p\">{</span>\n    <span class=\"s2\">&quot;enabled&quot;</span><span class=\"o\">:</span> <span class=\"p\">{}</span>\n<span class=\"p\">}</span>\n</pre></div>\n</div>\n</details><details class=\"summary-config-schema\">\n<summary>Config Schema:</summary><dl class=\"field-list\">\n<dt class=\"field-odd\">enabled (strict dict, optional)</dt>\n<dd class=\"field-odd\"><details class=\"summary-default-value\">\n<summary>Default Value:</summary><div class=\"highlight-javascript notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"p\">{}</span>\n</pre></div>\n</div>\n</details></dd>\n<dt class=\"field-even\">disabled (strict dict, optional)</dt>\n<dd class=\"field-even\"><details class=\"summary-default-value\">\n<summary>Default Value:</summary><div class=\"highlight-javascript notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"p\">{}</span>\n</pre></div>\n</div>\n</details></dd>\n</dl>\n</details></dd>\n</dl>\n</details><p>Celery-based executor.</p>\n<p>The Celery executor exposes config settings for the underlying Celery app under\nthe <code class=\"docutils literal notranslate\"><span class=\"pre\">config_source</span></code> key. This config corresponds to the \u201cnew lowercase settings\u201d introduced\nin Celery version 4.0 and the object constructed from config will be passed to the\n<a class=\"reference external\" href=\"https://docs.celeryq.dev/en/stable/reference/celery.html#celery.Celery\" title=\"(in Celery v4.3)\"><code class=\"xref py py-class docutils literal notranslate\"><span class=\"pre\">celery.Celery</span></code></a> constructor as its <code class=\"docutils literal notranslate\"><span class=\"pre\">config_source</span></code> argument.\n(See <a class=\"reference external\" href=\"https://docs.celeryq.dev/en/stable/userguide/configuration.html\">https://docs.celeryq.dev/en/stable/userguide/configuration.html</a> for details.)</p>\n<p>The executor also exposes the <code class=\"docutils literal notranslate\"><span class=\"pre\">broker</span></code>, <cite>backend</cite>, and <code class=\"docutils literal notranslate\"><span class=\"pre\">include</span></code> arguments to the\n<a class=\"reference external\" href=\"https://docs.celeryq.dev/en/stable/reference/celery.html#celery.Celery\" title=\"(in Celery v4.3)\"><code class=\"xref py py-class docutils literal notranslate\"><span class=\"pre\">celery.Celery</span></code></a> constructor.</p>\n<p>In the most common case, you may want to modify the <code class=\"docutils literal notranslate\"><span class=\"pre\">broker</span></code> and <code class=\"docutils literal notranslate\"><span class=\"pre\">backend</span></code> (e.g., to use\nRedis instead of RabbitMQ). We expect that <code class=\"docutils literal notranslate\"><span class=\"pre\">config_source</span></code> will be less frequently\nmodified, but that when solid executions are especially fast or slow, or when there are\ndifferent requirements around idempotence or retry, it may make sense to execute jobs\nwith variations on these settings.</p>\n<p>To use the <cite>celery_executor</cite>, set it as the <cite>executor_def</cite> when defining a job:</p>\n<div class=\"highlight-python notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"kn\">from</span> <span class=\"nn\">dagster</span> <span class=\"kn\">import</span> <span class=\"n\">job</span>\n<span class=\"kn\">from</span> <span class=\"nn\">dagster_celery</span> <span class=\"kn\">import</span> <span class=\"n\">celery_executor</span>\n\n<span class=\"nd\">@job</span><span class=\"p\">(</span><span class=\"n\">executor_def</span><span class=\"o\">=</span><span class=\"n\">celery_executor</span><span class=\"p\">)</span>\n<span class=\"k\">def</span> <span class=\"nf\">celery_enabled_job</span><span class=\"p\">():</span>\n    <span class=\"k\">pass</span>\n</pre></div>\n</div>\n<p>Then you can configure the executor as follows:</p>\n<div class=\"highlight-YAML notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"nt\">execution</span><span class=\"p\">:</span><span class=\"w\"></span>\n<span class=\"w\">  </span><span class=\"nt\">config</span><span class=\"p\">:</span><span class=\"w\"></span>\n<span class=\"w\">    </span><span class=\"nt\">broker</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"s\">&#39;pyamqp://guest@localhost//&#39;</span><span class=\"w\">  </span><span class=\"c1\"># Optional[str]: The URL of the Celery broker</span><span class=\"w\"></span>\n<span class=\"w\">    </span><span class=\"nt\">backend</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"s\">&#39;rpc://&#39;</span><span class=\"w\"> </span><span class=\"c1\"># Optional[str]: The URL of the Celery results backend</span><span class=\"w\"></span>\n<span class=\"w\">    </span><span class=\"nt\">include</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"p p-Indicator\">[</span><span class=\"s\">&#39;my_module&#39;</span><span class=\"p p-Indicator\">]</span><span class=\"w\"> </span><span class=\"c1\"># Optional[List[str]]: Modules every worker should import</span><span class=\"w\"></span>\n<span class=\"w\">    </span><span class=\"nt\">config_source</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"c1\"># Dict[str, Any]: Any additional parameters to pass to the</span><span class=\"w\"></span>\n<span class=\"w\">        </span><span class=\"c1\">#...       # Celery workers. This dict will be passed as the `config_source`</span><span class=\"w\"></span>\n<span class=\"w\">        </span><span class=\"c1\">#...       # argument of celery.Celery().</span><span class=\"w\"></span>\n</pre></div>\n</div>\n<p>Note that the YAML you provide here must align with the configuration with which the Celery\nworkers on which you hope to run were started. If, for example, you point the executor at a\ndifferent broker than the one your workers are listening to, the workers will never be able to\npick up tasks for execution.</p>\n</dd></dl>\n\n</div>\n<div class=\"section\" id=\"cli\">\n<h2>CLI<a class=\"headerlink\" href=\"#cli\" title=\"Permalink to this headline\">\u00b6</a></h2>\n<p>The <code class=\"docutils literal notranslate\"><span class=\"pre\">dagster-celery</span></code> CLI lets you start, monitor, and terminate workers.</p>\n<div class=\"section\" id=\"dagster-celery-worker-start\">\n<h3>dagster-celery worker start<a class=\"headerlink\" href=\"#dagster-celery-worker-start\" title=\"Permalink to this headline\">\u00b6</a></h3>\n<p>Start a dagster celery worker.</p>\n<div class=\"highlight-shell notranslate\"><div class=\"highlight\"><pre><span></span>dagster-celery worker start <span class=\"o\">[</span>OPTIONS<span class=\"o\">]</span> <span class=\"o\">[</span>ADDITIONAL_ARGS<span class=\"o\">]</span>...\n</pre></div>\n</div>\n<p class=\"rubric\">Options</p>\n<dl class=\"std option\">\n<dt id=\"cmdoption-dagster-celery-worker-start-n\">\n<code class=\"sig-name descname\"><span class=\"pre\">-n</span></code><code class=\"sig-prename descclassname\"></code><code class=\"sig-prename descclassname\"><span class=\"pre\">,</span> </code><code class=\"sig-name descname\"><span class=\"pre\">--name</span></code><code class=\"sig-prename descclassname\"> <span class=\"pre\">&lt;name&gt;</span></code><a class=\"headerlink\" href=\"#cmdoption-dagster-celery-worker-start-n\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>The name of the worker. Defaults to a unique name prefixed with \u201cdagster-\u201d and ending with the hostname.</p>\n</dd></dl>\n\n<dl class=\"std option\">\n<dt id=\"cmdoption-dagster-celery-worker-start-y\">\n<code class=\"sig-name descname\"><span class=\"pre\">-y</span></code><code class=\"sig-prename descclassname\"></code><code class=\"sig-prename descclassname\"><span class=\"pre\">,</span> </code><code class=\"sig-name descname\"><span class=\"pre\">--config-yaml</span></code><code class=\"sig-prename descclassname\"> <span class=\"pre\">&lt;config_yaml&gt;</span></code><a class=\"headerlink\" href=\"#cmdoption-dagster-celery-worker-start-y\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Specify the path to a config YAML file with options for the worker. This is the same config block that you provide to dagster_celery.celery_executor when configuring a job for execution with Celery, with, e.g., the URL of the broker to use.</p>\n</dd></dl>\n\n<dl class=\"std option\">\n<dt id=\"cmdoption-dagster-celery-worker-start-q\">\n<code class=\"sig-name descname\"><span class=\"pre\">-q</span></code><code class=\"sig-prename descclassname\"></code><code class=\"sig-prename descclassname\"><span class=\"pre\">,</span> </code><code class=\"sig-name descname\"><span class=\"pre\">--queue</span></code><code class=\"sig-prename descclassname\"> <span class=\"pre\">&lt;queue&gt;</span></code><a class=\"headerlink\" href=\"#cmdoption-dagster-celery-worker-start-q\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Names of the queues on which this worker should listen for tasks.  Provide multiple -q arguments to specify multiple queues. Note that each celery worker may listen on no more than four queues.</p>\n</dd></dl>\n\n<dl class=\"std option\">\n<dt id=\"cmdoption-dagster-celery-worker-start-d\">\n<code class=\"sig-name descname\"><span class=\"pre\">-d</span></code><code class=\"sig-prename descclassname\"></code><code class=\"sig-prename descclassname\"><span class=\"pre\">,</span> </code><code class=\"sig-name descname\"><span class=\"pre\">--background</span></code><code class=\"sig-prename descclassname\"></code><a class=\"headerlink\" href=\"#cmdoption-dagster-celery-worker-start-d\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Set this flag to run the worker in the background.</p>\n</dd></dl>\n\n<dl class=\"std option\">\n<dt id=\"cmdoption-dagster-celery-worker-start-i\">\n<code class=\"sig-name descname\"><span class=\"pre\">-i</span></code><code class=\"sig-prename descclassname\"></code><code class=\"sig-prename descclassname\"><span class=\"pre\">,</span> </code><code class=\"sig-name descname\"><span class=\"pre\">--includes</span></code><code class=\"sig-prename descclassname\"> <span class=\"pre\">&lt;includes&gt;</span></code><a class=\"headerlink\" href=\"#cmdoption-dagster-celery-worker-start-i\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Python modules the worker should import. Provide multiple -i arguments to specify multiple modules.</p>\n</dd></dl>\n\n<dl class=\"std option\">\n<dt id=\"cmdoption-dagster-celery-worker-start-l\">\n<code class=\"sig-name descname\"><span class=\"pre\">-l</span></code><code class=\"sig-prename descclassname\"></code><code class=\"sig-prename descclassname\"><span class=\"pre\">,</span> </code><code class=\"sig-name descname\"><span class=\"pre\">--loglevel</span></code><code class=\"sig-prename descclassname\"> <span class=\"pre\">&lt;loglevel&gt;</span></code><a class=\"headerlink\" href=\"#cmdoption-dagster-celery-worker-start-l\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Log level for the worker.</p>\n</dd></dl>\n\n<dl class=\"std option\">\n<dt id=\"cmdoption-dagster-celery-worker-start-A\">\n<code class=\"sig-name descname\"><span class=\"pre\">-A</span></code><code class=\"sig-prename descclassname\"></code><code class=\"sig-prename descclassname\"><span class=\"pre\">,</span> </code><code class=\"sig-name descname\"><span class=\"pre\">--app</span></code><code class=\"sig-prename descclassname\"> <span class=\"pre\">&lt;app&gt;</span></code><a class=\"headerlink\" href=\"#cmdoption-dagster-celery-worker-start-A\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd></dd></dl>\n\n<p class=\"rubric\">Arguments</p>\n<dl class=\"std option\">\n<dt id=\"cmdoption-dagster-celery-worker-start-arg-ADDITIONAL_ARGS\">\n<code class=\"sig-name descname\"><span class=\"pre\">ADDITIONAL_ARGS</span></code><code class=\"sig-prename descclassname\"></code><a class=\"headerlink\" href=\"#cmdoption-dagster-celery-worker-start-arg-ADDITIONAL_ARGS\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Optional argument(s)</p>\n</dd></dl>\n\n</div>\n<div class=\"section\" id=\"dagster-celery-worker-list\">\n<h3>dagster-celery worker list<a class=\"headerlink\" href=\"#dagster-celery-worker-list\" title=\"Permalink to this headline\">\u00b6</a></h3>\n<p>List running dagster-celery workers. Note that we use the broker to contact the workers.</p>\n<div class=\"highlight-shell notranslate\"><div class=\"highlight\"><pre><span></span>dagster-celery worker list <span class=\"o\">[</span>OPTIONS<span class=\"o\">]</span>\n</pre></div>\n</div>\n<p class=\"rubric\">Options</p>\n<dl class=\"std option\">\n<dt id=\"cmdoption-dagster-celery-worker-list-y\">\n<code class=\"sig-name descname\"><span class=\"pre\">-y</span></code><code class=\"sig-prename descclassname\"></code><code class=\"sig-prename descclassname\"><span class=\"pre\">,</span> </code><code class=\"sig-name descname\"><span class=\"pre\">--config-yaml</span></code><code class=\"sig-prename descclassname\"> <span class=\"pre\">&lt;config_yaml&gt;</span></code><a class=\"headerlink\" href=\"#cmdoption-dagster-celery-worker-list-y\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Specify the path to a config YAML file with options for the workers you are trying to manage. This is the same config block that you provide to dagster_celery.celery_executor when configuring a job for execution with Celery, with, e.g., the URL of the broker to use. Without this config file, you will not be able to find your workers (since the CLI won\u2019t know how to reach the broker).</p>\n</dd></dl>\n\n</div>\n<div class=\"section\" id=\"dagster-celery-worker-terminate\">\n<h3>dagster-celery worker terminate<a class=\"headerlink\" href=\"#dagster-celery-worker-terminate\" title=\"Permalink to this headline\">\u00b6</a></h3>\n<p>Shut down dagster-celery workers. Note that we use the broker to send signals to the workers to terminate \u2013 if the broker is not running, this command is a no-op. Provide the argument NAME to terminate a specific worker by name.</p>\n<div class=\"highlight-shell notranslate\"><div class=\"highlight\"><pre><span></span>dagster-celery worker terminate <span class=\"o\">[</span>OPTIONS<span class=\"o\">]</span> <span class=\"o\">[</span>NAME<span class=\"o\">]</span>\n</pre></div>\n</div>\n<p class=\"rubric\">Options</p>\n<dl class=\"std option\">\n<dt id=\"cmdoption-dagster-celery-worker-terminate-a\">\n<code class=\"sig-name descname\"><span class=\"pre\">-a</span></code><code class=\"sig-prename descclassname\"></code><code class=\"sig-prename descclassname\"><span class=\"pre\">,</span> </code><code class=\"sig-name descname\"><span class=\"pre\">--all</span></code><code class=\"sig-prename descclassname\"></code><a class=\"headerlink\" href=\"#cmdoption-dagster-celery-worker-terminate-a\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Set this flag to terminate all running workers.</p>\n</dd></dl>\n\n<dl class=\"std option\">\n<dt id=\"cmdoption-dagster-celery-worker-terminate-y\">\n<code class=\"sig-name descname\"><span class=\"pre\">-y</span></code><code class=\"sig-prename descclassname\"></code><code class=\"sig-prename descclassname\"><span class=\"pre\">,</span> </code><code class=\"sig-name descname\"><span class=\"pre\">--config-yaml</span></code><code class=\"sig-prename descclassname\"> <span class=\"pre\">&lt;config_yaml&gt;</span></code><a class=\"headerlink\" href=\"#cmdoption-dagster-celery-worker-terminate-y\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Specify the path to a config YAML file with options for the workers you are trying to manage. This is the same config block that you provide to dagster_celery.celery_executor when configuring a job for execution with Celery, with, e.g., the URL of the broker to use. Without this config file, you will not be able to terminate your workers (since the CLI won\u2019t know how to reach the broker).</p>\n</dd></dl>\n\n<p class=\"rubric\">Arguments</p>\n<dl class=\"std option\">\n<dt id=\"cmdoption-dagster-celery-worker-terminate-arg-NAME\">\n<code class=\"sig-name descname\"><span class=\"pre\">NAME</span></code><code class=\"sig-prename descclassname\"></code><a class=\"headerlink\" href=\"#cmdoption-dagster-celery-worker-terminate-arg-NAME\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Optional argument</p>\n</dd></dl>\n\n</div>\n</div>\n</div>\n", "current_page_name": "sections/api/apidocs/libraries/dagster-celery", "customsidebar": null, "display_toc": true, "meta": null, "metatags": "", "next": {"link": "../dagster-celery-docker/", "title": "Orchestration on Celery + Docker"}, "page_source_suffix": ".rst", "parents": [], "prev": {"link": "../dagster-azure/", "title": "Azure (dagster-azure)"}, "rellinks": [["genindex", "General Index", "I", "index"], ["py-modindex", "Python Module Index", "", "modules"], ["sections/api/apidocs/libraries/dagster-celery-docker", "Orchestration on Celery + Docker", "N", "next"], ["sections/api/apidocs/libraries/dagster-azure", "Azure (dagster-azure)", "P", "previous"]], "sidebars": ["globaltoc.html", "searchbox.html"], "sourcename": "sections/api/apidocs/libraries/dagster-celery.rst.txt", "title": "Celery (dagster-celery)", "toc": "<ul>\n<li><a class=\"reference internal\" href=\"#\">Celery (dagster-celery)</a><ul>\n<li><a class=\"reference internal\" href=\"#quickstart\">Quickstart</a><ul>\n<li><a class=\"reference internal\" href=\"#monitoring-your-celery-tasks\">Monitoring your Celery tasks</a></li>\n<li><a class=\"reference internal\" href=\"#customizing-the-celery-broker-backend-and-other-app-configuration\">Customizing the Celery broker, backend, and other app configuration</a></li>\n<li><a class=\"reference internal\" href=\"#celery-best-practices\">Celery best practices</a></li>\n</ul>\n</li>\n<li><a class=\"reference internal\" href=\"#api\">API</a></li>\n<li><a class=\"reference internal\" href=\"#cli\">CLI</a><ul>\n<li><a class=\"reference internal\" href=\"#dagster-celery-worker-start\">dagster-celery worker start</a></li>\n<li><a class=\"reference internal\" href=\"#dagster-celery-worker-list\">dagster-celery worker list</a></li>\n<li><a class=\"reference internal\" href=\"#dagster-celery-worker-terminate\">dagster-celery worker terminate</a></li>\n</ul>\n</li>\n</ul>\n</li>\n</ul>\n"}, "dagster-celery-docker": {"alabaster_version": "0.7.12", "body": "<div class=\"section\" id=\"orchestration-on-celery-docker\">\n<h1>Orchestration on Celery + Docker<a class=\"headerlink\" href=\"#orchestration-on-celery-docker\" title=\"Permalink to this headline\">\u00b6</a></h1>\n</div>\n<div class=\"section\" id=\"apis\">\n<h1>APIs<a class=\"headerlink\" href=\"#apis\" title=\"Permalink to this headline\">\u00b6</a></h1>\n<dl class=\"py data\">\n<dt id=\"dagster_celery_docker.celery_docker_executor\">\n<code class=\"sig-prename descclassname\"><span class=\"pre\">dagster_celery_docker.</span></code><code class=\"sig-name descname\"><span class=\"pre\">celery_docker_executor</span></code><em class=\"property\"> <span class=\"pre\">ExecutorDefinition</span></em><a class=\"reference internal\" href=\"../../../../../_modules/dagster_celery_docker/executor#celery_docker_executor\"><span class=\"viewcode-link\"><span class=\"pre\">[source]</span></span></a><a class=\"headerlink\" href=\"#dagster_celery_docker.celery_docker_executor\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><div class=\"line-block\">\n<div class=\"line\"><br /></div>\n</div>\n<details class=\"summary-config-schema\">\n<summary>Config Schema:</summary><dl class=\"field-list\">\n<dt class=\"field-odd\">broker (Union[dagster.StringSource, None], optional)</dt>\n<dd class=\"field-odd\"><p>The URL of the Celery broker. Default: \u2018pyamqp://guest&#64;{os.getenv(\u2018DAGSTER_CELERY_BROKER_HOST\u2019,\u2019localhost\u2019)}//\u2019.</p>\n</dd>\n<dt class=\"field-even\">backend (Union[dagster.StringSource, None], optional)</dt>\n<dd class=\"field-even\"><p>The URL of the Celery results backend. Default: \u2018rpc://\u2019.</p>\n<p><strong>Default Value:</strong> \u2018rpc://\u2019</p>\n</dd>\n<dt class=\"field-odd\">include (List[String], optional)</dt>\n<dd class=\"field-odd\"><p>List of modules every worker should import</p>\n</dd>\n<dt class=\"field-even\">config_source (Union[permissive dict, None], optional)</dt>\n<dd class=\"field-even\"><p>Additional settings for the Celery app.</p>\n</dd>\n<dt class=\"field-odd\">retries (selector, optional)</dt>\n<dd class=\"field-odd\"><details class=\"summary-default-value\">\n<summary>Default Value:</summary><div class=\"highlight-javascript notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"p\">{</span>\n    <span class=\"s2\">&quot;enabled&quot;</span><span class=\"o\">:</span> <span class=\"p\">{}</span>\n<span class=\"p\">}</span>\n</pre></div>\n</div>\n</details><details class=\"summary-config-schema\">\n<summary>Config Schema:</summary><dl class=\"field-list\">\n<dt class=\"field-odd\">enabled (strict dict, optional)</dt>\n<dd class=\"field-odd\"><details class=\"summary-default-value\">\n<summary>Default Value:</summary><div class=\"highlight-javascript notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"p\">{}</span>\n</pre></div>\n</div>\n</details></dd>\n<dt class=\"field-even\">disabled (strict dict, optional)</dt>\n<dd class=\"field-even\"><details class=\"summary-default-value\">\n<summary>Default Value:</summary><div class=\"highlight-javascript notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"p\">{}</span>\n</pre></div>\n</div>\n</details></dd>\n</dl>\n</details></dd>\n<dt class=\"field-odd\">docker (strict dict)</dt>\n<dd class=\"field-odd\"><p>The configuration for interacting with docker in the celery worker.</p>\n<details class=\"summary-config-schema\">\n<summary>Config Schema:</summary><dl class=\"field-list\">\n<dt class=\"field-odd\">image (dagster.StringSource, optional)</dt>\n<dd class=\"field-odd\"><p>The docker image to be used for step execution.</p>\n</dd>\n<dt class=\"field-even\">registry (strict dict, optional)</dt>\n<dd class=\"field-even\"><p>Information for using a non local/public docker registry</p>\n<details class=\"summary-config-schema\">\n<summary>Config Schema:</summary><dl class=\"field-list simple\">\n<dt class=\"field-odd\">url (dagster.StringSource)</dt>\n<dd class=\"field-odd\"><p></p></dd>\n<dt class=\"field-even\">username (dagster.StringSource)</dt>\n<dd class=\"field-even\"><p></p></dd>\n<dt class=\"field-odd\">password (dagster.StringSource)</dt>\n<dd class=\"field-odd\"><p></p></dd>\n</dl>\n</details></dd>\n<dt class=\"field-even\">env_vars (List[String], optional)</dt>\n<dd class=\"field-even\"><p>The list of environment variables names to forward from the celery worker in to the docker container</p>\n</dd>\n<dt class=\"field-odd\">network (String, optional)</dt>\n<dd class=\"field-odd\"><p>Name of the network this container will be connected to at creation time</p>\n</dd>\n<dt class=\"field-even\">container_kwargs (permissive dict, optional)</dt>\n<dd class=\"field-even\"><p>Additional keyword args for the docker container</p>\n</dd>\n</dl>\n</details></dd>\n</dl>\n</details><p>Celery-based executor which launches tasks in docker containers.</p>\n<p>The Celery executor exposes config settings for the underlying Celery app under\nthe <code class=\"docutils literal notranslate\"><span class=\"pre\">config_source</span></code> key. This config corresponds to the \u201cnew lowercase settings\u201d introduced\nin Celery version 4.0 and the object constructed from config will be passed to the\n<a class=\"reference external\" href=\"https://docs.celeryq.dev/en/stable/reference/celery.html#celery.Celery\" title=\"(in Celery v4.3)\"><code class=\"xref py py-class docutils literal notranslate\"><span class=\"pre\">celery.Celery</span></code></a> constructor as its <code class=\"docutils literal notranslate\"><span class=\"pre\">config_source</span></code> argument.\n(See <a class=\"reference external\" href=\"https://docs.celeryq.dev/en/stable/userguide/configuration.html\">https://docs.celeryq.dev/en/stable/userguide/configuration.html</a> for details.)</p>\n<p>The executor also exposes the <code class=\"docutils literal notranslate\"><span class=\"pre\">broker</span></code>, <cite>backend</cite>, and <code class=\"docutils literal notranslate\"><span class=\"pre\">include</span></code> arguments to the\n<a class=\"reference external\" href=\"https://docs.celeryq.dev/en/stable/reference/celery.html#celery.Celery\" title=\"(in Celery v4.3)\"><code class=\"xref py py-class docutils literal notranslate\"><span class=\"pre\">celery.Celery</span></code></a> constructor.</p>\n<p>In the most common case, you may want to modify the <code class=\"docutils literal notranslate\"><span class=\"pre\">broker</span></code> and <code class=\"docutils literal notranslate\"><span class=\"pre\">backend</span></code> (e.g., to use\nRedis instead of RabbitMQ). We expect that <code class=\"docutils literal notranslate\"><span class=\"pre\">config_source</span></code> will be less frequently\nmodified, but that when op executions are especially fast or slow, or when there are\ndifferent requirements around idempotence or retry, it may make sense to execute jobs\nwith variations on these settings.</p>\n<p>To use the <cite>celery_docker_executor</cite>, set it as the <cite>executor_def</cite> when defining a job:</p>\n<div class=\"highlight-python notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"kn\">from</span> <span class=\"nn\">dagster</span> <span class=\"kn\">import</span> <span class=\"n\">job</span>\n<span class=\"kn\">from</span> <span class=\"nn\">dagster_celery_docker.executor</span> <span class=\"kn\">import</span> <span class=\"n\">celery_docker_executor</span>\n\n<span class=\"nd\">@job</span><span class=\"p\">(</span><span class=\"n\">executor_def</span><span class=\"o\">=</span><span class=\"n\">celery_docker_executor</span><span class=\"p\">)</span>\n<span class=\"k\">def</span> <span class=\"nf\">celery_enabled_job</span><span class=\"p\">():</span>\n    <span class=\"k\">pass</span>\n</pre></div>\n</div>\n<p>Then you can configure the executor as follows:</p>\n<div class=\"highlight-YAML notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"nt\">execution</span><span class=\"p\">:</span><span class=\"w\"></span>\n<span class=\"w\">  </span><span class=\"nt\">config</span><span class=\"p\">:</span><span class=\"w\"></span>\n<span class=\"w\">    </span><span class=\"nt\">docker</span><span class=\"p\">:</span><span class=\"w\"></span>\n<span class=\"w\">      </span><span class=\"nt\">image</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"s\">&#39;my_repo.com/image_name:latest&#39;</span><span class=\"w\"></span>\n<span class=\"w\">      </span><span class=\"nt\">registry</span><span class=\"p\">:</span><span class=\"w\"></span>\n<span class=\"w\">        </span><span class=\"nt\">url</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"s\">&#39;my_repo.com&#39;</span><span class=\"w\"></span>\n<span class=\"w\">        </span><span class=\"nt\">username</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"s\">&#39;my_user&#39;</span><span class=\"w\"></span>\n<span class=\"w\">        </span><span class=\"nt\">password</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"p p-Indicator\">{</span><span class=\"nt\">env</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"s\">&#39;DOCKER_PASSWORD&#39;</span><span class=\"p p-Indicator\">}</span><span class=\"w\"></span>\n<span class=\"w\">      </span><span class=\"nt\">env_vars</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"p p-Indicator\">[</span><span class=\"s\">&quot;DAGSTER_HOME&quot;</span><span class=\"p p-Indicator\">]</span><span class=\"w\"> </span><span class=\"c1\"># environment vars to pass from celery worker to docker</span><span class=\"w\"></span>\n<span class=\"w\">      </span><span class=\"nt\">container_kwargs</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"c1\"># keyword args to be passed to the container. example:</span><span class=\"w\"></span>\n<span class=\"w\">        </span><span class=\"nt\">volumes</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"p p-Indicator\">[</span><span class=\"s\">&#39;/home/user1/:/mnt/vol2&#39;</span><span class=\"p p-Indicator\">,</span><span class=\"s\">&#39;/var/www:/mnt/vol1&#39;</span><span class=\"p p-Indicator\">]</span><span class=\"w\"></span>\n\n<span class=\"w\">    </span><span class=\"nt\">broker</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"s\">&#39;pyamqp://guest@localhost//&#39;</span><span class=\"w\">  </span><span class=\"c1\"># Optional[str]: The URL of the Celery broker</span><span class=\"w\"></span>\n<span class=\"w\">    </span><span class=\"nt\">backend</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"s\">&#39;rpc://&#39;</span><span class=\"w\"> </span><span class=\"c1\"># Optional[str]: The URL of the Celery results backend</span><span class=\"w\"></span>\n<span class=\"w\">    </span><span class=\"nt\">include</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"p p-Indicator\">[</span><span class=\"s\">&#39;my_module&#39;</span><span class=\"p p-Indicator\">]</span><span class=\"w\"> </span><span class=\"c1\"># Optional[List[str]]: Modules every worker should import</span><span class=\"w\"></span>\n<span class=\"w\">    </span><span class=\"nt\">config_source</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"c1\"># Dict[str, Any]: Any additional parameters to pass to the</span><span class=\"w\"></span>\n<span class=\"w\">        </span><span class=\"c1\">#...       # Celery workers. This dict will be passed as the `config_source`</span><span class=\"w\"></span>\n<span class=\"w\">        </span><span class=\"c1\">#...       # argument of celery.Celery().</span><span class=\"w\"></span>\n</pre></div>\n</div>\n<p>Note that the YAML you provide here must align with the configuration with which the Celery\nworkers on which you hope to run were started. If, for example, you point the executor at a\ndifferent broker than the one your workers are listening to, the workers will never be able to\npick up tasks for execution.</p>\n<p>In deployments where the celery_docker_job_executor is used all appropriate celery and dagster_celery\ncommands must be invoked with the <cite>-A dagster_celery_docker.app</cite> argument.</p>\n</dd></dl>\n\n</div>\n", "current_page_name": "sections/api/apidocs/libraries/dagster-celery-docker", "customsidebar": null, "display_toc": true, "meta": null, "metatags": "", "next": {"link": "../dagster-celery-k8s/", "title": "Orchestration on Celery + Kubernetes"}, "page_source_suffix": ".rst", "parents": [], "prev": {"link": "../dagster-celery/", "title": "Celery (dagster-celery)"}, "rellinks": [["genindex", "General Index", "I", "index"], ["py-modindex", "Python Module Index", "", "modules"], ["sections/api/apidocs/libraries/dagster-celery-k8s", "Orchestration on Celery + Kubernetes", "N", "next"], ["sections/api/apidocs/libraries/dagster-celery", "Celery (dagster-celery)", "P", "previous"]], "sidebars": ["globaltoc.html", "searchbox.html"], "sourcename": "sections/api/apidocs/libraries/dagster-celery-docker.rst.txt", "title": "Orchestration on Celery + Docker", "toc": "<ul>\n<li><a class=\"reference internal\" href=\"#\">Orchestration on Celery + Docker</a></li>\n<li><a class=\"reference internal\" href=\"#apis\">APIs</a></li>\n</ul>\n"}, "dagster-celery-k8s": {"alabaster_version": "0.7.12", "body": "<div class=\"section\" id=\"orchestration-on-celery-kubernetes\">\n<h1>Orchestration on Celery + Kubernetes<a class=\"headerlink\" href=\"#orchestration-on-celery-kubernetes\" title=\"Permalink to this headline\">\u00b6</a></h1>\n</div>\n<div class=\"section\" id=\"apis\">\n<h1>APIs<a class=\"headerlink\" href=\"#apis\" title=\"Permalink to this headline\">\u00b6</a></h1>\n<dl class=\"py data\">\n<dt id=\"dagster_celery_k8s.CeleryK8sRunLauncher\">\n<code class=\"sig-prename descclassname\"><span class=\"pre\">dagster_celery_k8s.</span></code><code class=\"sig-name descname\"><span class=\"pre\">CeleryK8sRunLauncher</span></code><em class=\"property\"> <span class=\"pre\">RunLauncher</span></em><a class=\"reference internal\" href=\"../../../../../_modules/dagster_celery_k8s/launcher#CeleryK8sRunLauncher\"><span class=\"viewcode-link\"><span class=\"pre\">[source]</span></span></a><a class=\"headerlink\" href=\"#dagster_celery_k8s.CeleryK8sRunLauncher\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><div class=\"line-block\">\n<div class=\"line\"><br /></div>\n</div>\n<details class=\"summary-config-schema\">\n<summary>Config Schema:</summary><dl class=\"field-list\">\n<dt class=\"field-odd\">job_image (Union[dagster.StringSource, None], optional)</dt>\n<dd class=\"field-odd\"><p>Docker image to use for launched Jobs. If this field is empty, the image that was used to originally load the Dagster repository will be used. (Ex: \u201cmycompany.com/dagster-k8s-image:latest\u201d).</p>\n</dd>\n<dt class=\"field-even\">image_pull_policy (Union[dagster.StringSource, None], optional)</dt>\n<dd class=\"field-even\"><p>Image pull policy to set on launched Pods.</p>\n</dd>\n<dt class=\"field-odd\">image_pull_secrets (Union[List[strict dict], None], optional)</dt>\n<dd class=\"field-odd\"><p>Specifies that Kubernetes should get the credentials from the Secrets named in this list.</p>\n</dd>\n<dt class=\"field-even\">service_account_name (Union[dagster.StringSource, None], optional)</dt>\n<dd class=\"field-even\"><p>The name of the Kubernetes service account under which to run.</p>\n</dd>\n<dt class=\"field-odd\">env_config_maps (Union[List[dagster.StringSource], None], optional)</dt>\n<dd class=\"field-odd\"><p>A list of custom ConfigMapEnvSource names from which to draw environment variables (using <code class=\"docutils literal notranslate\"><span class=\"pre\">envFrom</span></code>) for the Job. Default: <code class=\"docutils literal notranslate\"><span class=\"pre\">[]</span></code>. See:https://kubernetes.io/docs/tasks/inject-data-application/define-environment-variable-container/#define-an-environment-variable-for-a-container</p>\n</dd>\n<dt class=\"field-even\">env_secrets (Union[List[dagster.StringSource], None], optional)</dt>\n<dd class=\"field-even\"><p>A list of custom Secret names from which to draw environment variables (using <code class=\"docutils literal notranslate\"><span class=\"pre\">envFrom</span></code>) for the Job. Default: <code class=\"docutils literal notranslate\"><span class=\"pre\">[]</span></code>. See:https://kubernetes.io/docs/tasks/inject-data-application/distribute-credentials-secure/#configure-all-key-value-pairs-in-a-secret-as-container-environment-variables</p>\n</dd>\n<dt class=\"field-odd\">env_vars (Union[List[String], None], optional)</dt>\n<dd class=\"field-odd\"><p>A list of environment variables to inject into the Job. Each can be of the form KEY=VALUE or just KEY (in which case the value will be pulled from the current process). Default: <code class=\"docutils literal notranslate\"><span class=\"pre\">[]</span></code>. See: <a class=\"reference external\" href=\"https://kubernetes.io/docs/tasks/inject-data-application/distribute-credentials-secure/#configure-all-key-value-pairs-in-a-secret-as-container-environment-variables\">https://kubernetes.io/docs/tasks/inject-data-application/distribute-credentials-secure/#configure-all-key-value-pairs-in-a-secret-as-container-environment-variables</a></p>\n</dd>\n<dt class=\"field-even\">volume_mounts (List[permissive dict], optional)</dt>\n<dd class=\"field-even\"><p>A list of volume mounts to include in the job\u2019s container. Default: <code class=\"docutils literal notranslate\"><span class=\"pre\">[]</span></code>. See: <a class=\"reference external\" href=\"https://v1-18.docs.kubernetes.io/docs/reference/generated/kubernetes-api/v1.18/#volumemount-v1-core\">https://v1-18.docs.kubernetes.io/docs/reference/generated/kubernetes-api/v1.18/#volumemount-v1-core</a></p>\n<p><strong>Default Value:</strong> []</p>\n</dd>\n<dt class=\"field-odd\">volumes (List[permissive dict], optional)</dt>\n<dd class=\"field-odd\"><p>A list of volumes to include in the Job\u2019s Pod. Default: <code class=\"docutils literal notranslate\"><span class=\"pre\">[]</span></code>. For the many possible volume source types that can be included, see: <a class=\"reference external\" href=\"https://v1-18.docs.kubernetes.io/docs/reference/generated/kubernetes-api/v1.18/#volume-v1-core\">https://v1-18.docs.kubernetes.io/docs/reference/generated/kubernetes-api/v1.18/#volume-v1-core</a></p>\n<p><strong>Default Value:</strong> []</p>\n</dd>\n<dt class=\"field-even\">labels (permissive dict, optional)</dt>\n<dd class=\"field-even\"><p>Labels to apply to all created pods. See: <a class=\"reference external\" href=\"https://kubernetes.io/docs/concepts/overview/working-with-objects/labels\">https://kubernetes.io/docs/concepts/overview/working-with-objects/labels</a></p>\n</dd>\n<dt class=\"field-odd\">resources (Union[strict dict, None], optional)</dt>\n<dd class=\"field-odd\"><p>Compute resource requirements for the container. See: <a class=\"reference external\" href=\"https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/\">https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/</a></p>\n</dd>\n<dt class=\"field-even\">instance_config_map (dagster.StringSource)</dt>\n<dd class=\"field-even\"><p>The <code class=\"docutils literal notranslate\"><span class=\"pre\">name</span></code> of an existing Volume to mount into the pod in order to provide a ConfigMap for the Dagster instance. This Volume should contain a <code class=\"docutils literal notranslate\"><span class=\"pre\">dagster.yaml</span></code> with appropriate values for run storage, event log storage, etc.</p>\n</dd>\n<dt class=\"field-odd\">postgres_password_secret (dagster.StringSource, optional)</dt>\n<dd class=\"field-odd\"><p>The name of the Kubernetes Secret where the postgres password can be retrieved. Will be mounted and supplied as an environment variable to the Job Pod.Secret must contain the key <code class=\"docutils literal notranslate\"><span class=\"pre\">&quot;postgresql-password&quot;</span></code> which will be exposed in the Job environment as the environment variable <code class=\"docutils literal notranslate\"><span class=\"pre\">DAGSTER_PG_PASSWORD</span></code>.</p>\n</dd>\n<dt class=\"field-even\">dagster_home (dagster.StringSource, optional)</dt>\n<dd class=\"field-even\"><p>The location of DAGSTER_HOME in the Job container; this is where the <code class=\"docutils literal notranslate\"><span class=\"pre\">dagster.yaml</span></code> file will be mounted from the instance ConfigMap specified here. Defaults to /opt/dagster/dagster_home.</p>\n<p><strong>Default Value:</strong> \u2018/opt/dagster/dagster_home\u2019</p>\n</dd>\n<dt class=\"field-odd\">load_incluster_config (Bool, optional)</dt>\n<dd class=\"field-odd\"><p>Set this value if you are running the launcher\nwithin a k8s cluster. If <code class=\"docutils literal notranslate\"><span class=\"pre\">True</span></code>, we assume the launcher is running within the target\ncluster and load config using <code class=\"docutils literal notranslate\"><span class=\"pre\">kubernetes.config.load_incluster_config</span></code>. Otherwise,\nwe will use the k8s config specified in <code class=\"docutils literal notranslate\"><span class=\"pre\">kubeconfig_file</span></code> (using\n<code class=\"docutils literal notranslate\"><span class=\"pre\">kubernetes.config.load_kube_config</span></code>) or fall back to the default kubeconfig.</p>\n<p><strong>Default Value:</strong> True</p>\n</dd>\n<dt class=\"field-even\">kubeconfig_file (Union[String, None], optional)</dt>\n<dd class=\"field-even\"><p>The kubeconfig file from which to load config. Defaults to using the default kubeconfig.</p>\n<p><strong>Default Value:</strong> None</p>\n</dd>\n<dt class=\"field-odd\">fail_pod_on_run_failure (Bool, optional)</dt>\n<dd class=\"field-odd\"><p>Whether the launched Kubernetes Jobs and Pods should fail if the Dagster run fails</p>\n</dd>\n<dt class=\"field-even\">broker (Union[dagster.StringSource, None], optional)</dt>\n<dd class=\"field-even\"><p>The URL of the Celery broker. Default: \u2018pyamqp://guest&#64;{os.getenv(\u2018DAGSTER_CELERY_BROKER_HOST\u2019,\u2019localhost\u2019)}//\u2019.</p>\n</dd>\n<dt class=\"field-odd\">backend (Union[dagster.StringSource, None], optional)</dt>\n<dd class=\"field-odd\"><p>The URL of the Celery results backend. Default: \u2018rpc://\u2019.</p>\n<p><strong>Default Value:</strong> \u2018rpc://\u2019</p>\n</dd>\n<dt class=\"field-even\">include (List[String], optional)</dt>\n<dd class=\"field-even\"><p>List of modules every worker should import</p>\n</dd>\n<dt class=\"field-odd\">config_source (Union[permissive dict, None], optional)</dt>\n<dd class=\"field-odd\"><p>Additional settings for the Celery app.</p>\n</dd>\n<dt class=\"field-even\">retries (selector, optional)</dt>\n<dd class=\"field-even\"><details class=\"summary-default-value\">\n<summary>Default Value:</summary><div class=\"highlight-javascript notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"p\">{</span>\n    <span class=\"s2\">&quot;enabled&quot;</span><span class=\"o\">:</span> <span class=\"p\">{}</span>\n<span class=\"p\">}</span>\n</pre></div>\n</div>\n</details><details class=\"summary-config-schema\">\n<summary>Config Schema:</summary><dl class=\"field-list\">\n<dt class=\"field-odd\">enabled (strict dict, optional)</dt>\n<dd class=\"field-odd\"><details class=\"summary-default-value\">\n<summary>Default Value:</summary><div class=\"highlight-javascript notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"p\">{}</span>\n</pre></div>\n</div>\n</details></dd>\n<dt class=\"field-even\">disabled (strict dict, optional)</dt>\n<dd class=\"field-even\"><details class=\"summary-default-value\">\n<summary>Default Value:</summary><div class=\"highlight-javascript notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"p\">{}</span>\n</pre></div>\n</div>\n</details></dd>\n</dl>\n</details></dd>\n</dl>\n</details><p>In contrast to the <code class=\"xref py py-class docutils literal notranslate\"><span class=\"pre\">K8sRunLauncher</span></code>, which launches dagster runs as single K8s\nJobs, this run launcher is intended for use in concert with\n<a class=\"reference internal\" href=\"#dagster_celery_k8s.celery_k8s_job_executor\" title=\"dagster_celery_k8s.celery_k8s_job_executor\"><code class=\"xref py py-func docutils literal notranslate\"><span class=\"pre\">dagster_celery_k8s.celery_k8s_job_executor()</span></code></a>.</p>\n<p>With this run launcher, execution is delegated to:</p>\n<blockquote>\n<div><ol class=\"arabic simple\">\n<li><p>A run worker Kubernetes Job, which traverses the dagster run execution plan and\nsubmits steps to Celery queues for execution;</p></li>\n<li><p>The step executions which are submitted to Celery queues are picked up by Celery workers,\nand each step execution spawns a step execution Kubernetes Job. See the implementation\ndefined in <code class=\"xref py py-func docutils literal notranslate\"><span class=\"pre\">dagster_celery_k8.executor.create_k8s_job_task()</span></code>.</p></li>\n</ol>\n</div></blockquote>\n<p>You can configure a Dagster instance to use this RunLauncher by adding a section to your\n<code class=\"docutils literal notranslate\"><span class=\"pre\">dagster.yaml</span></code> like the following:</p>\n<div class=\"highlight-yaml notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"nt\">run_launcher</span><span class=\"p\">:</span><span class=\"w\"></span>\n<span class=\"w\">  </span><span class=\"nt\">module</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"l l-Scalar l-Scalar-Plain\">dagster_k8s.launcher</span><span class=\"w\"></span>\n<span class=\"w\">  </span><span class=\"nt\">class</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"l l-Scalar l-Scalar-Plain\">CeleryK8sRunLauncher</span><span class=\"w\"></span>\n<span class=\"w\">  </span><span class=\"nt\">config</span><span class=\"p\">:</span><span class=\"w\"></span>\n<span class=\"w\">    </span><span class=\"nt\">instance_config_map</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"s\">&quot;dagster-k8s-instance-config-map&quot;</span><span class=\"w\"></span>\n<span class=\"w\">    </span><span class=\"nt\">dagster_home</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"s\">&quot;/some/path&quot;</span><span class=\"w\"></span>\n<span class=\"w\">    </span><span class=\"nt\">postgres_password_secret</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"s\">&quot;dagster-k8s-pg-password&quot;</span><span class=\"w\"></span>\n<span class=\"w\">    </span><span class=\"nt\">broker</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"s\">&quot;some_celery_broker_url&quot;</span><span class=\"w\"></span>\n<span class=\"w\">    </span><span class=\"nt\">backend</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"s\">&quot;some_celery_backend_url&quot;</span><span class=\"w\"></span>\n</pre></div>\n</div>\n</dd></dl>\n\n<dl class=\"py data\">\n<dt id=\"dagster_celery_k8s.celery_k8s_job_executor\">\n<code class=\"sig-prename descclassname\"><span class=\"pre\">dagster_celery_k8s.</span></code><code class=\"sig-name descname\"><span class=\"pre\">celery_k8s_job_executor</span></code><em class=\"property\"> <span class=\"pre\">ExecutorDefinition</span></em><a class=\"reference internal\" href=\"../../../../../_modules/dagster_celery_k8s/executor#celery_k8s_job_executor\"><span class=\"viewcode-link\"><span class=\"pre\">[source]</span></span></a><a class=\"headerlink\" href=\"#dagster_celery_k8s.celery_k8s_job_executor\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><div class=\"line-block\">\n<div class=\"line\"><br /></div>\n</div>\n<details class=\"summary-config-schema\">\n<summary>Config Schema:</summary><dl class=\"field-list\">\n<dt class=\"field-odd\">broker (Union[dagster.StringSource, None], optional)</dt>\n<dd class=\"field-odd\"><p>The URL of the Celery broker. Default: \u2018pyamqp://guest&#64;{os.getenv(\u2018DAGSTER_CELERY_BROKER_HOST\u2019,\u2019localhost\u2019)}//\u2019.</p>\n</dd>\n<dt class=\"field-even\">backend (Union[dagster.StringSource, None], optional)</dt>\n<dd class=\"field-even\"><p>The URL of the Celery results backend. Default: \u2018rpc://\u2019.</p>\n<p><strong>Default Value:</strong> \u2018rpc://\u2019</p>\n</dd>\n<dt class=\"field-odd\">include (List[String], optional)</dt>\n<dd class=\"field-odd\"><p>List of modules every worker should import</p>\n</dd>\n<dt class=\"field-even\">config_source (Union[permissive dict, None], optional)</dt>\n<dd class=\"field-even\"><p>Additional settings for the Celery app.</p>\n</dd>\n<dt class=\"field-odd\">retries (selector, optional)</dt>\n<dd class=\"field-odd\"><details class=\"summary-default-value\">\n<summary>Default Value:</summary><div class=\"highlight-javascript notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"p\">{</span>\n    <span class=\"s2\">&quot;enabled&quot;</span><span class=\"o\">:</span> <span class=\"p\">{}</span>\n<span class=\"p\">}</span>\n</pre></div>\n</div>\n</details><details class=\"summary-config-schema\">\n<summary>Config Schema:</summary><dl class=\"field-list\">\n<dt class=\"field-odd\">enabled (strict dict, optional)</dt>\n<dd class=\"field-odd\"><details class=\"summary-default-value\">\n<summary>Default Value:</summary><div class=\"highlight-javascript notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"p\">{}</span>\n</pre></div>\n</div>\n</details></dd>\n<dt class=\"field-even\">disabled (strict dict, optional)</dt>\n<dd class=\"field-even\"><details class=\"summary-default-value\">\n<summary>Default Value:</summary><div class=\"highlight-javascript notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"p\">{}</span>\n</pre></div>\n</div>\n</details></dd>\n</dl>\n</details></dd>\n<dt class=\"field-odd\">job_image (Union[dagster.StringSource, None], optional)</dt>\n<dd class=\"field-odd\"><p>Docker image to use for launched Jobs. If this field is empty, the image that was used to originally load the Dagster repository will be used. (Ex: \u201cmycompany.com/dagster-k8s-image:latest\u201d).</p>\n</dd>\n<dt class=\"field-even\">image_pull_policy (Union[dagster.StringSource, None], optional)</dt>\n<dd class=\"field-even\"><p>Image pull policy to set on launched Pods.</p>\n</dd>\n<dt class=\"field-odd\">image_pull_secrets (Union[List[strict dict], None], optional)</dt>\n<dd class=\"field-odd\"><p>Specifies that Kubernetes should get the credentials from the Secrets named in this list.</p>\n</dd>\n<dt class=\"field-even\">service_account_name (Union[dagster.StringSource, None], optional)</dt>\n<dd class=\"field-even\"><p>The name of the Kubernetes service account under which to run.</p>\n</dd>\n<dt class=\"field-odd\">env_config_maps (Union[List[dagster.StringSource], None], optional)</dt>\n<dd class=\"field-odd\"><p>A list of custom ConfigMapEnvSource names from which to draw environment variables (using <code class=\"docutils literal notranslate\"><span class=\"pre\">envFrom</span></code>) for the Job. Default: <code class=\"docutils literal notranslate\"><span class=\"pre\">[]</span></code>. See:https://kubernetes.io/docs/tasks/inject-data-application/define-environment-variable-container/#define-an-environment-variable-for-a-container</p>\n</dd>\n<dt class=\"field-even\">env_secrets (Union[List[dagster.StringSource], None], optional)</dt>\n<dd class=\"field-even\"><p>A list of custom Secret names from which to draw environment variables (using <code class=\"docutils literal notranslate\"><span class=\"pre\">envFrom</span></code>) for the Job. Default: <code class=\"docutils literal notranslate\"><span class=\"pre\">[]</span></code>. See:https://kubernetes.io/docs/tasks/inject-data-application/distribute-credentials-secure/#configure-all-key-value-pairs-in-a-secret-as-container-environment-variables</p>\n</dd>\n<dt class=\"field-odd\">env_vars (Union[List[String], None], optional)</dt>\n<dd class=\"field-odd\"><p>A list of environment variables to inject into the Job. Each can be of the form KEY=VALUE or just KEY (in which case the value will be pulled from the current process). Default: <code class=\"docutils literal notranslate\"><span class=\"pre\">[]</span></code>. See: <a class=\"reference external\" href=\"https://kubernetes.io/docs/tasks/inject-data-application/distribute-credentials-secure/#configure-all-key-value-pairs-in-a-secret-as-container-environment-variables\">https://kubernetes.io/docs/tasks/inject-data-application/distribute-credentials-secure/#configure-all-key-value-pairs-in-a-secret-as-container-environment-variables</a></p>\n</dd>\n<dt class=\"field-even\">volume_mounts (List[permissive dict], optional)</dt>\n<dd class=\"field-even\"><p>A list of volume mounts to include in the job\u2019s container. Default: <code class=\"docutils literal notranslate\"><span class=\"pre\">[]</span></code>. See: <a class=\"reference external\" href=\"https://v1-18.docs.kubernetes.io/docs/reference/generated/kubernetes-api/v1.18/#volumemount-v1-core\">https://v1-18.docs.kubernetes.io/docs/reference/generated/kubernetes-api/v1.18/#volumemount-v1-core</a></p>\n<p><strong>Default Value:</strong> []</p>\n</dd>\n<dt class=\"field-odd\">volumes (List[permissive dict], optional)</dt>\n<dd class=\"field-odd\"><p>A list of volumes to include in the Job\u2019s Pod. Default: <code class=\"docutils literal notranslate\"><span class=\"pre\">[]</span></code>. For the many possible volume source types that can be included, see: <a class=\"reference external\" href=\"https://v1-18.docs.kubernetes.io/docs/reference/generated/kubernetes-api/v1.18/#volume-v1-core\">https://v1-18.docs.kubernetes.io/docs/reference/generated/kubernetes-api/v1.18/#volume-v1-core</a></p>\n<p><strong>Default Value:</strong> []</p>\n</dd>\n<dt class=\"field-even\">labels (permissive dict, optional)</dt>\n<dd class=\"field-even\"><p>Labels to apply to all created pods. See: <a class=\"reference external\" href=\"https://kubernetes.io/docs/concepts/overview/working-with-objects/labels\">https://kubernetes.io/docs/concepts/overview/working-with-objects/labels</a></p>\n</dd>\n<dt class=\"field-odd\">resources (Union[strict dict, None], optional)</dt>\n<dd class=\"field-odd\"><p>Compute resource requirements for the container. See: <a class=\"reference external\" href=\"https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/\">https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/</a></p>\n</dd>\n<dt class=\"field-even\">load_incluster_config (Bool, optional)</dt>\n<dd class=\"field-even\"><p>Set this value if you are running the launcher within a k8s cluster. If\n<code class=\"docutils literal notranslate\"><span class=\"pre\">True</span></code>, we assume the launcher is running within the target cluster and load config\nusing <code class=\"docutils literal notranslate\"><span class=\"pre\">kubernetes.config.load_incluster_config</span></code>. Otherwise, we will use the k8s config\nspecified in <code class=\"docutils literal notranslate\"><span class=\"pre\">kubeconfig_file</span></code> (using <code class=\"docutils literal notranslate\"><span class=\"pre\">kubernetes.config.load_kube_config</span></code>) or fall\nback to the default kubeconfig. Default: <code class=\"docutils literal notranslate\"><span class=\"pre\">True</span></code>.</p>\n<p><strong>Default Value:</strong> True</p>\n</dd>\n<dt class=\"field-odd\">kubeconfig_file (Union[String, None], optional)</dt>\n<dd class=\"field-odd\"><p>Path to a kubeconfig file to use, if not using default kubeconfig.</p>\n</dd>\n<dt class=\"field-even\">job_namespace (dagster.StringSource, optional)</dt>\n<dd class=\"field-even\"><p>The namespace into which to launch new jobs. Note that any other Kubernetes resources the Job requires (such as the service account) must be present in this namespace. Default: <code class=\"docutils literal notranslate\"><span class=\"pre\">&quot;default&quot;</span></code></p>\n<p><strong>Default Value:</strong> \u2018default\u2019</p>\n</dd>\n<dt class=\"field-odd\">repo_location_name (dagster.StringSource, optional)</dt>\n<dd class=\"field-odd\"><p>The repository location name to use for execution.</p>\n<p><strong>Default Value:</strong> \u2018&lt;&lt;in_process&gt;&gt;\u2019</p>\n</dd>\n<dt class=\"field-even\">job_wait_timeout (Float, optional)</dt>\n<dd class=\"field-even\"><p>Wait this many seconds for a job to complete before marking the run as failed. Defaults to 86400.0 seconds.</p>\n<p><strong>Default Value:</strong> 86400.0</p>\n</dd>\n</dl>\n</details><p>Celery-based executor which launches tasks as Kubernetes Jobs.</p>\n<p>The Celery executor exposes config settings for the underlying Celery app under\nthe <code class=\"docutils literal notranslate\"><span class=\"pre\">config_source</span></code> key. This config corresponds to the \u201cnew lowercase settings\u201d introduced\nin Celery version 4.0 and the object constructed from config will be passed to the\n<a class=\"reference external\" href=\"https://docs.celeryq.dev/en/stable/reference/celery.html#celery.Celery\" title=\"(in Celery v4.3)\"><code class=\"xref py py-class docutils literal notranslate\"><span class=\"pre\">celery.Celery</span></code></a> constructor as its <code class=\"docutils literal notranslate\"><span class=\"pre\">config_source</span></code> argument.\n(See <a class=\"reference external\" href=\"https://docs.celeryq.dev/en/stable/userguide/configuration.html\">https://docs.celeryq.dev/en/stable/userguide/configuration.html</a> for details.)</p>\n<p>The executor also exposes the <code class=\"docutils literal notranslate\"><span class=\"pre\">broker</span></code>, <cite>backend</cite>, and <code class=\"docutils literal notranslate\"><span class=\"pre\">include</span></code> arguments to the\n<a class=\"reference external\" href=\"https://docs.celeryq.dev/en/stable/reference/celery.html#celery.Celery\" title=\"(in Celery v4.3)\"><code class=\"xref py py-class docutils literal notranslate\"><span class=\"pre\">celery.Celery</span></code></a> constructor.</p>\n<p>In the most common case, you may want to modify the <code class=\"docutils literal notranslate\"><span class=\"pre\">broker</span></code> and <code class=\"docutils literal notranslate\"><span class=\"pre\">backend</span></code> (e.g., to use\nRedis instead of RabbitMQ). We expect that <code class=\"docutils literal notranslate\"><span class=\"pre\">config_source</span></code> will be less frequently\nmodified, but that when op executions are especially fast or slow, or when there are\ndifferent requirements around idempotence or retry, it may make sense to execute dagster jobs\nwith variations on these settings.</p>\n<p>To use the <cite>celery_k8s_job_executor</cite>, set it as the <cite>executor_def</cite> when defining a job:</p>\n<div class=\"highlight-python notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"kn\">from</span> <span class=\"nn\">dagster_celery_k8s.executor</span> <span class=\"kn\">import</span> <span class=\"n\">celery_k8s_job_executor</span>\n\n<span class=\"kn\">from</span> <span class=\"nn\">dagster</span> <span class=\"kn\">import</span> <span class=\"n\">job</span>\n\n\n<span class=\"nd\">@job</span><span class=\"p\">(</span><span class=\"n\">executor_def</span><span class=\"o\">=</span><span class=\"n\">celery_k8s_job_executor</span><span class=\"p\">)</span>\n<span class=\"k\">def</span> <span class=\"nf\">celery_enabled_job</span><span class=\"p\">():</span>\n    <span class=\"k\">pass</span>\n</pre></div>\n</div>\n<p>Then you can configure the executor as follows:</p>\n<div class=\"highlight-YAML notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"nt\">execution</span><span class=\"p\">:</span><span class=\"w\"></span>\n<span class=\"w\">  </span><span class=\"nt\">config</span><span class=\"p\">:</span><span class=\"w\"></span>\n<span class=\"w\">    </span><span class=\"nt\">job_image</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"s\">&#39;my_repo.com/image_name:latest&#39;</span><span class=\"w\"></span>\n<span class=\"w\">    </span><span class=\"nt\">job_namespace</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"s\">&#39;some-namespace&#39;</span><span class=\"w\"></span>\n<span class=\"w\">    </span><span class=\"nt\">broker</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"s\">&#39;pyamqp://guest@localhost//&#39;</span><span class=\"w\">  </span><span class=\"c1\"># Optional[str]: The URL of the Celery broker</span><span class=\"w\"></span>\n<span class=\"w\">    </span><span class=\"nt\">backend</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"s\">&#39;rpc://&#39;</span><span class=\"w\"> </span><span class=\"c1\"># Optional[str]: The URL of the Celery results backend</span><span class=\"w\"></span>\n<span class=\"w\">    </span><span class=\"nt\">include</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"p p-Indicator\">[</span><span class=\"s\">&#39;my_module&#39;</span><span class=\"p p-Indicator\">]</span><span class=\"w\"> </span><span class=\"c1\"># Optional[List[str]]: Modules every worker should import</span><span class=\"w\"></span>\n<span class=\"w\">    </span><span class=\"nt\">config_source</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"c1\"># Dict[str, Any]: Any additional parameters to pass to the</span><span class=\"w\"></span>\n<span class=\"w\">        </span><span class=\"c1\">#...       # Celery workers. This dict will be passed as the `config_source`</span><span class=\"w\"></span>\n<span class=\"w\">        </span><span class=\"c1\">#...       # argument of celery.Celery().</span><span class=\"w\"></span>\n</pre></div>\n</div>\n<p>Note that the YAML you provide here must align with the configuration with which the Celery\nworkers on which you hope to run were started. If, for example, you point the executor at a\ndifferent broker than the one your workers are listening to, the workers will never be able to\npick up tasks for execution.</p>\n<p>In deployments where the celery_k8s_job_executor is used all appropriate celery and dagster_celery\ncommands must be invoked with the <cite>-A dagster_celery_k8s.app</cite> argument.</p>\n</dd></dl>\n\n</div>\n", "current_page_name": "sections/api/apidocs/libraries/dagster-celery-k8s", "customsidebar": null, "display_toc": true, "meta": null, "metatags": "", "next": {"link": "../dagster-dask/", "title": "Dask (dagster-dask)"}, "page_source_suffix": ".rst", "parents": [], "prev": {"link": "../dagster-celery-docker/", "title": "Orchestration on Celery + Docker"}, "rellinks": [["genindex", "General Index", "I", "index"], ["py-modindex", "Python Module Index", "", "modules"], ["sections/api/apidocs/libraries/dagster-dask", "Dask (dagster-dask)", "N", "next"], ["sections/api/apidocs/libraries/dagster-celery-docker", "Orchestration on Celery + Docker", "P", "previous"]], "sidebars": ["globaltoc.html", "searchbox.html"], "sourcename": "sections/api/apidocs/libraries/dagster-celery-k8s.rst.txt", "title": "Orchestration on Celery + Kubernetes", "toc": "<ul>\n<li><a class=\"reference internal\" href=\"#\">Orchestration on Celery + Kubernetes</a></li>\n<li><a class=\"reference internal\" href=\"#apis\">APIs</a></li>\n</ul>\n"}, "dagster-dask": {"alabaster_version": "0.7.12", "body": "<div class=\"section\" id=\"dask-dagster-dask\">\n<h1>Dask (dagster-dask)<a class=\"headerlink\" href=\"#dask-dagster-dask\" title=\"Permalink to this headline\">\u00b6</a></h1>\n<p>See also the <a class=\"reference external\" href=\"https://docs.dagster.io/deploying/dask/\">Dask deployment guide</a>.</p>\n<dl class=\"py data\">\n<dt id=\"dagster_dask.dask_executor\">\n<code class=\"sig-prename descclassname\"><span class=\"pre\">dagster_dask.</span></code><code class=\"sig-name descname\"><span class=\"pre\">dask_executor</span></code><em class=\"property\"> <span class=\"pre\">ExecutorDefinition</span></em><a class=\"reference internal\" href=\"../../../../../_modules/dagster_dask/executor#dask_executor\"><span class=\"viewcode-link\"><span class=\"pre\">[source]</span></span></a><a class=\"headerlink\" href=\"#dagster_dask.dask_executor\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><div class=\"line-block\">\n<div class=\"line\"><br /></div>\n</div>\n<details class=\"summary-config-schema\">\n<summary>Config Schema:</summary><dl class=\"field-list\">\n<dt class=\"field-odd\">cluster (selector)</dt>\n<dd class=\"field-odd\"><details class=\"summary-config-schema\">\n<summary>Config Schema:</summary><dl class=\"field-list\">\n<dt class=\"field-odd\">existing (strict dict)</dt>\n<dd class=\"field-odd\"><p>Connect to an existing scheduler.</p>\n<details class=\"summary-config-schema\">\n<summary>Config Schema:</summary><dl class=\"field-list simple\">\n<dt class=\"field-odd\">address (dagster.StringSource)</dt>\n<dd class=\"field-odd\"><p></p></dd>\n</dl>\n</details></dd>\n<dt class=\"field-even\">local (permissive dict, optional)</dt>\n<dd class=\"field-even\"><p>Local cluster configuration.</p>\n</dd>\n<dt class=\"field-odd\">yarn (permissive dict, optional)</dt>\n<dd class=\"field-odd\"><p>YARN cluster configuration.</p>\n</dd>\n<dt class=\"field-even\">ssh (permissive dict, optional)</dt>\n<dd class=\"field-even\"><p>SSH cluster configuration.</p>\n</dd>\n<dt class=\"field-odd\">pbs (permissive dict, optional)</dt>\n<dd class=\"field-odd\"><p>PBS cluster configuration.</p>\n</dd>\n<dt class=\"field-even\">moab (permissive dict, optional)</dt>\n<dd class=\"field-even\"><p>Moab cluster configuration.</p>\n</dd>\n<dt class=\"field-odd\">sge (permissive dict, optional)</dt>\n<dd class=\"field-odd\"><p>SGE cluster configuration.</p>\n</dd>\n<dt class=\"field-even\">lsf (permissive dict, optional)</dt>\n<dd class=\"field-even\"><p>LSF cluster configuration.</p>\n</dd>\n<dt class=\"field-odd\">slurm (permissive dict, optional)</dt>\n<dd class=\"field-odd\"><p>SLURM cluster configuration.</p>\n</dd>\n<dt class=\"field-even\">oar (permissive dict, optional)</dt>\n<dd class=\"field-even\"><p>OAR cluster configuration.</p>\n</dd>\n<dt class=\"field-odd\">kube (permissive dict, optional)</dt>\n<dd class=\"field-odd\"><p>Kubernetes cluster configuration.</p>\n</dd>\n</dl>\n</details></dd>\n</dl>\n</details><p>Dask-based executor.</p>\n<p>The \u2018cluster\u2019 can be one of the following:\n(\u2018existing\u2019, \u2018local\u2019, \u2018yarn\u2019, \u2018ssh\u2019, \u2018pbs\u2019, \u2018moab\u2019, \u2018sge\u2019, \u2018lsf\u2019, \u2018slurm\u2019, \u2018oar\u2019, \u2018kube\u2019).</p>\n<p>If the Dask executor is used without providing executor-specific config, a local Dask cluster\nwill be created (as when calling <a class=\"reference external\" href=\"https://distributed.dask.org/en/latest/api.html#distributed.Client\" title=\"(in Dask.distributed v2.8.1+13.g447b2c2a)\"><code class=\"xref py py-class docutils literal notranslate\"><span class=\"pre\">dask.distributed.Client()</span></code></a>\nwith <code class=\"xref py py-class docutils literal notranslate\"><span class=\"pre\">dask.distributed.LocalCluster()</span></code>).</p>\n<p>The Dask executor optionally takes the following config:</p>\n<div class=\"highlight-none notranslate\"><div class=\"highlight\"><pre><span></span>cluster:\n    {\n        local?: # takes distributed.LocalCluster parameters\n            {\n                timeout?: 5,  # Timeout duration for initial connection to the scheduler\n                n_workers?: 4  # Number of workers to start\n                threads_per_worker?: 1 # Number of threads per each worker\n            }\n    }\n</pre></div>\n</div>\n<p>To use the <cite>dask_executor</cite>, set it as the <cite>executor_def</cite> when defining a job:</p>\n<div class=\"highlight-python notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"kn\">from</span> <span class=\"nn\">dagster</span> <span class=\"kn\">import</span> <span class=\"n\">job</span>\n<span class=\"kn\">from</span> <span class=\"nn\">dagster_dask</span> <span class=\"kn\">import</span> <span class=\"n\">dask_executor</span>\n\n<span class=\"nd\">@job</span><span class=\"p\">(</span><span class=\"n\">executor_def</span><span class=\"o\">=</span><span class=\"n\">dask_executor</span><span class=\"p\">)</span>\n<span class=\"k\">def</span> <span class=\"nf\">dask_enabled_job</span><span class=\"p\">():</span>\n    <span class=\"k\">pass</span>\n</pre></div>\n</div>\n</dd></dl>\n\n</div>\n", "current_page_name": "sections/api/apidocs/libraries/dagster-dask", "customsidebar": null, "display_toc": false, "meta": null, "metatags": "", "next": {"link": "../dagster-databricks/", "title": "Databricks (dagster-databricks)"}, "page_source_suffix": ".rst", "parents": [], "prev": {"link": "../dagster-celery-k8s/", "title": "Orchestration on Celery + Kubernetes"}, "rellinks": [["genindex", "General Index", "I", "index"], ["py-modindex", "Python Module Index", "", "modules"], ["sections/api/apidocs/libraries/dagster-databricks", "Databricks (dagster-databricks)", "N", "next"], ["sections/api/apidocs/libraries/dagster-celery-k8s", "Orchestration on Celery + Kubernetes", "P", "previous"]], "sidebars": ["globaltoc.html", "searchbox.html"], "sourcename": "sections/api/apidocs/libraries/dagster-dask.rst.txt", "title": "Dask (dagster-dask)", "toc": "<ul>\n<li><a class=\"reference internal\" href=\"#\">Dask (dagster-dask)</a></li>\n</ul>\n"}, "dagster-databricks": {"alabaster_version": "0.7.12", "body": "<div class=\"section\" id=\"databricks-dagster-databricks\">\n<h1>Databricks (dagster-databricks)<a class=\"headerlink\" href=\"#databricks-dagster-databricks\" title=\"Permalink to this headline\">\u00b6</a></h1>\n<p>The <code class=\"docutils literal notranslate\"><span class=\"pre\">dagster_databricks</span></code> package provides two main pieces of functionality:</p>\n<ul class=\"simple\">\n<li><p>A resource, <code class=\"docutils literal notranslate\"><span class=\"pre\">databricks_pyspark_step_launcher</span></code>, which will execute a op within a Databricks\ncontext on a cluster, such that the <code class=\"docutils literal notranslate\"><span class=\"pre\">pyspark</span></code> resource uses the cluster\u2019s Spark instance.</p></li>\n<li><p>A function, <code class=\"docutils literal notranslate\"><span class=\"pre\">create_databricks_job_op</span></code>, which creates a op that submits an external\nconfigurable job to Databricks using the \u2018Run Now\u2019 API.</p></li>\n</ul>\n<p>Note that, for the <code class=\"docutils literal notranslate\"><span class=\"pre\">databricks_pyspark_step_launcher</span></code>, either S3 or Azure Data Lake Storage config\n<strong>must</strong> be specified for ops to succeed, and the credentials for this storage must also be\nstored as a Databricks Secret and stored in the resource config so that the Databricks cluster can\naccess storage.</p>\n</div>\n<div class=\"section\" id=\"apis\">\n<h1>APIs<a class=\"headerlink\" href=\"#apis\" title=\"Permalink to this headline\">\u00b6</a></h1>\n<dl class=\"py function\">\n<dt id=\"dagster_databricks.create_databricks_job_op\">\n<code class=\"sig-prename descclassname\"><span class=\"pre\">dagster_databricks.</span></code><code class=\"sig-name descname\"><span class=\"pre\">create_databricks_job_op</span></code><span class=\"sig-paren\">(</span><em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">name</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">'databricks_job'</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">num_inputs</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">1</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">description</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">None</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">required_resource_keys</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">frozenset({'databricks_client'})</span></span></em><span class=\"sig-paren\">)</span><a class=\"reference internal\" href=\"../../../../../_modules/dagster_databricks/solids#create_databricks_job_op\"><span class=\"viewcode-link\"><span class=\"pre\">[source]</span></span></a><a class=\"headerlink\" href=\"#dagster_databricks.create_databricks_job_op\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Creates an op that launches a databricks job (not to be confused with Dagster\u2019s job API).</p>\n<p>As config, the op accepts a blob of the form described in Databricks\u2019 job API:\n<a class=\"reference external\" href=\"https://docs.databricks.com/dev-tools/api/latest/jobs.html\">https://docs.databricks.com/dev-tools/api/latest/jobs.html</a>.</p>\n<dl class=\"field-list simple\">\n<dt class=\"field-odd\">Returns</dt>\n<dd class=\"field-odd\"><p>An op definition.</p>\n</dd>\n<dt class=\"field-even\">Return type</dt>\n<dd class=\"field-even\"><p><a class=\"reference internal\" href=\"../../ops#dagster.OpDefinition\" title=\"dagster.OpDefinition\">OpDefinition</a></p>\n</dd>\n</dl>\n<p class=\"rubric\">Example</p>\n<div class=\"highlight-python notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"kn\">from</span> <span class=\"nn\">dagster</span> <span class=\"kn\">import</span> <span class=\"n\">graph</span>\n<span class=\"kn\">from</span> <span class=\"nn\">dagster_databricks</span> <span class=\"kn\">import</span> <span class=\"n\">create_databricks_job_op</span><span class=\"p\">,</span> <span class=\"n\">databricks_client</span>\n\n<span class=\"n\">sparkpi</span> <span class=\"o\">=</span> <span class=\"n\">create_databricks_job_op</span><span class=\"p\">()</span><span class=\"o\">.</span><span class=\"n\">configured</span><span class=\"p\">(</span>\n    <span class=\"p\">{</span>\n        <span class=\"s2\">&quot;job&quot;</span><span class=\"p\">:</span> <span class=\"p\">{</span>\n            <span class=\"s2\">&quot;name&quot;</span><span class=\"p\">:</span> <span class=\"s2\">&quot;SparkPi Python job&quot;</span><span class=\"p\">,</span>\n            <span class=\"s2\">&quot;new_cluster&quot;</span><span class=\"p\">:</span> <span class=\"p\">{</span>\n                <span class=\"s2\">&quot;spark_version&quot;</span><span class=\"p\">:</span> <span class=\"s2\">&quot;7.3.x-scala2.12&quot;</span><span class=\"p\">,</span>\n                <span class=\"s2\">&quot;node_type_id&quot;</span><span class=\"p\">:</span> <span class=\"s2\">&quot;i3.xlarge&quot;</span><span class=\"p\">,</span>\n                <span class=\"s2\">&quot;num_workers&quot;</span><span class=\"p\">:</span> <span class=\"mi\">2</span><span class=\"p\">,</span>\n            <span class=\"p\">},</span>\n            <span class=\"s2\">&quot;spark_python_task&quot;</span><span class=\"p\">:</span> <span class=\"p\">{</span><span class=\"s2\">&quot;python_file&quot;</span><span class=\"p\">:</span> <span class=\"s2\">&quot;dbfs:/docs/pi.py&quot;</span><span class=\"p\">,</span> <span class=\"s2\">&quot;parameters&quot;</span><span class=\"p\">:</span> <span class=\"p\">[</span><span class=\"s2\">&quot;10&quot;</span><span class=\"p\">]},</span>\n        <span class=\"p\">}</span>\n    <span class=\"p\">},</span>\n    <span class=\"n\">name</span><span class=\"o\">=</span><span class=\"s2\">&quot;sparkpi&quot;</span><span class=\"p\">,</span>\n<span class=\"p\">)</span>\n\n<span class=\"nd\">@graph</span>\n<span class=\"k\">def</span> <span class=\"nf\">my_spark</span><span class=\"p\">():</span>\n    <span class=\"n\">sparkpi</span><span class=\"p\">()</span>\n\n<span class=\"n\">my_spark</span><span class=\"o\">.</span><span class=\"n\">to_job</span><span class=\"p\">(</span>\n    <span class=\"n\">resource_defs</span><span class=\"o\">=</span><span class=\"p\">{</span>\n        <span class=\"s2\">&quot;databricks_client&quot;</span><span class=\"p\">:</span> <span class=\"n\">databricks_client</span><span class=\"o\">.</span><span class=\"n\">configured</span><span class=\"p\">(</span>\n            <span class=\"p\">{</span><span class=\"s2\">&quot;host&quot;</span><span class=\"p\">:</span> <span class=\"s2\">&quot;my.workspace.url&quot;</span><span class=\"p\">,</span> <span class=\"s2\">&quot;token&quot;</span><span class=\"p\">:</span> <span class=\"s2\">&quot;my.access.token&quot;</span><span class=\"p\">}</span>\n        <span class=\"p\">)</span>\n    <span class=\"p\">}</span>\n<span class=\"p\">)</span>\n</pre></div>\n</div>\n</dd></dl>\n\n<dl class=\"py data\">\n<dt id=\"dagster_databricks.databricks_pyspark_step_launcher\">\n<code class=\"sig-prename descclassname\"><span class=\"pre\">dagster_databricks.</span></code><code class=\"sig-name descname\"><span class=\"pre\">databricks_pyspark_step_launcher</span></code><em class=\"property\"> <span class=\"pre\">ResourceDefinition</span></em><a class=\"reference internal\" href=\"../../../../../_modules/dagster_databricks/databricks_pyspark_step_launcher#databricks_pyspark_step_launcher\"><span class=\"viewcode-link\"><span class=\"pre\">[source]</span></span></a><a class=\"headerlink\" href=\"#dagster_databricks.databricks_pyspark_step_launcher\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><div class=\"line-block\">\n<div class=\"line\"><br /></div>\n</div>\n<details class=\"summary-config-schema\">\n<summary>Config Schema:</summary><dl class=\"field-list\">\n<dt class=\"field-odd\">run_config (strict dict)</dt>\n<dd class=\"field-odd\"><p>Databricks job run configuration</p>\n<details class=\"summary-config-schema\">\n<summary>Config Schema:</summary><dl class=\"field-list\">\n<dt class=\"field-odd\">cluster (selector)</dt>\n<dd class=\"field-odd\"><details class=\"summary-config-schema\">\n<summary>Config Schema:</summary><dl class=\"field-list\">\n<dt class=\"field-odd\">new (strict dict)</dt>\n<dd class=\"field-odd\"><details class=\"summary-config-schema\">\n<summary>Config Schema:</summary><dl class=\"field-list\">\n<dt class=\"field-odd\">size (selector)</dt>\n<dd class=\"field-odd\"><details class=\"summary-config-schema\">\n<summary>Config Schema:</summary><dl class=\"field-list\">\n<dt class=\"field-odd\">autoscale (strict dict)</dt>\n<dd class=\"field-odd\"><details class=\"summary-config-schema\">\n<summary>Config Schema:</summary><dl class=\"field-list simple\">\n<dt class=\"field-odd\">min_workers (Int)</dt>\n<dd class=\"field-odd\"><p>The minimum number of workers to which the cluster can scale down when underutilized. It is also the initial number of workers the cluster will have after creation.</p>\n</dd>\n<dt class=\"field-even\">max_workers (Int)</dt>\n<dd class=\"field-even\"><p>The maximum number of workers to which the cluster can scale up when overloaded. max_workers must be strictly greater than min_workers.</p>\n</dd>\n</dl>\n</details></dd>\n<dt class=\"field-odd\">num_workers (Int)</dt>\n<dd class=\"field-odd\"><p>If num_workers, number of worker nodes that this cluster should have. A cluster has one Spark Driver and num_workers Executors for a total of num_workers + 1 Spark nodes.</p>\n</dd>\n</dl>\n</details></dd>\n<dt class=\"field-even\">spark_version (String)</dt>\n<dd class=\"field-even\"><p>The Spark version of the cluster. A list of available Spark versions can be retrieved by using the Runtime versions API call. This field is required.</p>\n</dd>\n<dt class=\"field-odd\">spark_conf (permissive dict, optional)</dt>\n<dd class=\"field-odd\"><p>An object containing a set of optional, user-specified Spark configuration key-value pairs. You can also pass in a string of extra JVM options to the driver and the executors via spark.driver.extraJavaOptions and spark.executor.extraJavaOptions respectively. Example Spark confs: {\u201cspark.speculation\u201d: true, \u201cspark.streaming.ui.retainedBatches\u201d: 5} or {\u201cspark.driver.extraJavaOptions\u201d: \u201c-verbose:gc -XX:+PrintGCDetails\u201d}</p>\n</dd>\n<dt class=\"field-even\">nodes (selector)</dt>\n<dd class=\"field-even\"><p>The nodes used in the cluster. Either the node types or an instance pool can be specified.</p>\n<details class=\"summary-config-schema\">\n<summary>Config Schema:</summary><dl class=\"field-list\">\n<dt class=\"field-odd\">node_types (strict dict)</dt>\n<dd class=\"field-odd\"><details class=\"summary-config-schema\">\n<summary>Config Schema:</summary><dl class=\"field-list simple\">\n<dt class=\"field-odd\">node_type_id (String)</dt>\n<dd class=\"field-odd\"><p>This field encodes, through a single value, the resources available to each of the Spark nodes in this cluster. For example, the Spark nodes can be provisioned and optimized for memory or compute intensive workloads. A list of available node types can be retrieved by using the List node types API call. This field is required.</p>\n</dd>\n<dt class=\"field-even\">driver_node_type_id (String, optional)</dt>\n<dd class=\"field-even\"><p>The node type of the Spark driver. This field is optional; if unset, the driver node type is set as the same value as node_type_id defined above.</p>\n</dd>\n</dl>\n</details></dd>\n<dt class=\"field-odd\">instance_pool_id (String, optional)</dt>\n<dd class=\"field-odd\"><p>The optional ID of the instance pool to which the cluster belongs. Refer to the Instance Pools API for details.</p>\n</dd>\n</dl>\n</details></dd>\n<dt class=\"field-even\">ssh_public_keys (List[String], optional)</dt>\n<dd class=\"field-even\"><p>SSH public key contents that will be added to each Spark node in this cluster. The corresponding private keys can be used to login with the user name ubuntu on port 2200. Up to 10 keys can be specified.</p>\n</dd>\n<dt class=\"field-odd\">custom_tags (List[strict dict], optional)</dt>\n<dd class=\"field-odd\"><p>Additional tags for cluster resources. Databricks tags all cluster resources (e.g., AWS instances and EBS volumes) with these tags in addition to default_tags. Note: - Tags are not supported on legacy node types such as compute-optimized and memory-optimized - Databricks allows at most 45 custom tagsMore restrictions may apply if using Azure Databricks; refer to the official docs for further details.</p>\n</dd>\n<dt class=\"field-even\">cluster_log_conf (selector, optional)</dt>\n<dd class=\"field-even\"><p>Recommended! The configuration for delivering Spark logs to a long-term storage destination. Only one destination can be specified for one cluster. If the conf is given, the logs will be delivered to the destination every 5 mins. The destination of driver logs is &lt;destination&gt;/&lt;cluster-id&gt;/driver, while the destination of executor logs is &lt;destination&gt;/&lt;cluster-id&gt;/executor.</p>\n<details class=\"summary-config-schema\">\n<summary>Config Schema:</summary><dl class=\"field-list\">\n<dt class=\"field-odd\">dbfs (strict dict)</dt>\n<dd class=\"field-odd\"><p>DBFS storage information</p>\n<details class=\"summary-config-schema\">\n<summary>Config Schema:</summary><dl class=\"field-list simple\">\n<dt class=\"field-odd\">destination (String)</dt>\n<dd class=\"field-odd\"><p>DBFS destination, e.g. dbfs:/my/path</p>\n</dd>\n</dl>\n</details></dd>\n<dt class=\"field-even\">s3 (strict dict)</dt>\n<dd class=\"field-even\"><p>S3 storage information</p>\n<details class=\"summary-config-schema\">\n<summary>Config Schema:</summary><dl class=\"field-list simple\">\n<dt class=\"field-odd\">destination (String)</dt>\n<dd class=\"field-odd\"><p>S3 destination, e.g. s3://my-bucket/some-prefix. You must configure the cluster with an instance profile and the instance profile must have write access to the destination. You cannot use AWS keys.</p>\n</dd>\n<dt class=\"field-even\">region (String)</dt>\n<dd class=\"field-even\"><p>S3 region, e.g. us-west-2. Either region or endpoint must be set. If both are set, endpoint is used.</p>\n</dd>\n<dt class=\"field-odd\">endpoint (String)</dt>\n<dd class=\"field-odd\"><p>S3 endpoint, e.g. <a class=\"reference external\" href=\"https://s3-us-west-2.amazonaws.com\">https://s3-us-west-2.amazonaws.com</a>. Either region or endpoint must be set. If both are set, endpoint is used.</p>\n</dd>\n<dt class=\"field-even\">enable_encryption (Bool, optional)</dt>\n<dd class=\"field-even\"><p>(Optional) Enable server side encryption, false by default.</p>\n</dd>\n<dt class=\"field-odd\">encryption_type (String, optional)</dt>\n<dd class=\"field-odd\"><p>(Optional) The encryption type, it could be sse-s3 or sse-kms. It is used only when encryption is enabled and the default type is sse-s3.</p>\n</dd>\n<dt class=\"field-even\">kms_key (String, optional)</dt>\n<dd class=\"field-even\"><p>(Optional) KMS key used if encryption is enabled and encryption type is set to sse-kms.</p>\n</dd>\n<dt class=\"field-odd\">canned_acl (String, optional)</dt>\n<dd class=\"field-odd\"><p>(Optional) Set canned access control list, e.g. bucket-owner-full-control.If canned_acl is set, the cluster instance profile must have s3:PutObjectAcl permission on the destination bucket and prefix. The full list of possible canned ACLs can be found at https://docs.aws.amazon.com/AmazonS3/latest/dev/acl-overview.html#canned-acl. By default only the object owner gets full control. If you are using cross account role for writing data, you may want to set bucket-owner-full-control to make bucket owner able to read the logs.</p>\n</dd>\n</dl>\n</details></dd>\n</dl>\n</details></dd>\n<dt class=\"field-even\">init_scripts (List[selector], optional)</dt>\n<dd class=\"field-even\"><p>The configuration for storing init scripts. Any number of scripts can be specified. The scripts are executed sequentially in the order provided. If cluster_log_conf is specified, init script logs are sent to &lt;destination&gt;/&lt;cluster-id&gt;/init_scripts.</p>\n</dd>\n<dt class=\"field-odd\">spark_env_vars (permissive dict, optional)</dt>\n<dd class=\"field-odd\"><p>An object containing a set of optional, user-specified environment variable key-value pairs. Key-value pair of the form (X,Y) are exported as is (i.e., export X=\u201dY\u201d) while launching the driver and workers. To specify an additional set of SPARK_DAEMON_JAVA_OPTS, we recommend appending them to $SPARK_DAEMON_JAVA_OPTS as shown in the example below. This ensures that all default Databricks managed environmental variables are included as well. Example Spark environment variables: {\u201cSPARK_WORKER_MEMORY\u201d: \u201c28000m\u201d, \u201cSPARK_LOCAL_DIRS\u201d: \u201c/local_disk0\u201d} or {\u201cSPARK_DAEMON_JAVA_OPTS\u201d: \u201c$SPARK_DAEMON_JAVA_OPTS -Dspark.shuffle.service.enabled=true\u201d}</p>\n</dd>\n<dt class=\"field-even\">enable_elastic_disk (Bool, optional)</dt>\n<dd class=\"field-even\"><p>Autoscaling Local Storage: when enabled, this cluster dynamically acquires attitional disk space when its Spark workers are running low on disk space. This feature requires specific AWS permissions to function correctly - refer to <a class=\"reference external\" href=\"https://docs.databricks.com/clusters/configure.html#autoscaling-local-storage\">https://docs.databricks.com/clusters/configure.html#autoscaling-local-storage</a> for details.</p>\n</dd>\n</dl>\n</details></dd>\n<dt class=\"field-odd\">existing (String)</dt>\n<dd class=\"field-odd\"><p>The ID of an existing cluster that will be used for all runs of this job. When running jobs on an existing cluster, you may need to manually restart the cluster if it stops responding. Databricks suggests running jobs on new clusters for greater reliability.</p>\n</dd>\n</dl>\n</details></dd>\n<dt class=\"field-even\">run_name (String, optional)</dt>\n<dd class=\"field-even\"><p>An optional name for the run. The default value is Untitled</p>\n</dd>\n<dt class=\"field-odd\">libraries (List[selector], optional)</dt>\n<dd class=\"field-odd\"><p>An optional list of libraries to be installed on the cluster that will execute the job. By default dagster, dagster-databricks and dagster-pyspark libraries will be included.</p>\n</dd>\n<dt class=\"field-even\">timeout_seconds (Int, optional)</dt>\n<dd class=\"field-even\"><p>An optional timeout applied to each run of this job. The default behavior is to have no timeout.</p>\n</dd>\n<dt class=\"field-odd\">idempotency_token (String, optional)</dt>\n<dd class=\"field-odd\"><p>An optional token that can be used to guarantee the idempotency of job run requests.If an active run with the provided token already exists, the request will not create a new run, but will return the ID of the existing run instead. If you specify the idempotency token, upon failure you can retry until the request succeeds. Databricks guarantees that exactly one run will be launched with that idempotency token. This token should have at most 64 characters.</p>\n</dd>\n</dl>\n</details></dd>\n<dt class=\"field-even\">databricks_host (dagster.StringSource)</dt>\n<dd class=\"field-even\"><p>Databricks host, e.g. uksouth.azuredatabricks.com</p>\n</dd>\n<dt class=\"field-odd\">databricks_token (dagster.StringSource)</dt>\n<dd class=\"field-odd\"><p>Databricks access token</p>\n</dd>\n<dt class=\"field-even\">secrets_to_env_variables (List[strict dict], optional)</dt>\n<dd class=\"field-even\"><p>Databricks secrets to be exported as environment variables. Since runs will execute in the Databricks runtime environment, environment variables (such as those required for a <cite>StringSource</cite> config variable) will not be accessible to Dagster. These variables must be stored as Databricks secrets and specified here, which will ensure they are re-exported as environment variables accessible to Dagster upon execution.</p>\n</dd>\n<dt class=\"field-odd\">storage (selector, optional)</dt>\n<dd class=\"field-odd\"><p>Databricks storage configuration for either S3 or ADLS2. If access credentials for your Databricks storage are stored in Databricks secrets, this config indicates the secret scope and the secret keys used to access either S3 or ADLS2.</p>\n<details class=\"summary-config-schema\">\n<summary>Config Schema:</summary><dl class=\"field-list\">\n<dt class=\"field-odd\">s3 (strict dict)</dt>\n<dd class=\"field-odd\"><p>S3 storage secret configuration</p>\n<details class=\"summary-config-schema\">\n<summary>Config Schema:</summary><dl class=\"field-list simple\">\n<dt class=\"field-odd\">secret_scope (String)</dt>\n<dd class=\"field-odd\"><p>The Databricks secret scope containing the storage secrets.</p>\n</dd>\n<dt class=\"field-even\">access_key_key (String)</dt>\n<dd class=\"field-even\"><p>The key of a Databricks secret containing the S3 access key ID.</p>\n</dd>\n<dt class=\"field-odd\">secret_key_key (String)</dt>\n<dd class=\"field-odd\"><p>The key of a Databricks secret containing the S3 secret access key.</p>\n</dd>\n</dl>\n</details></dd>\n<dt class=\"field-even\">adls2 (strict dict)</dt>\n<dd class=\"field-even\"><p>ADLS2 storage secret configuration</p>\n<details class=\"summary-config-schema\">\n<summary>Config Schema:</summary><dl class=\"field-list simple\">\n<dt class=\"field-odd\">secret_scope (String)</dt>\n<dd class=\"field-odd\"><p>The Databricks secret scope containing the storage secrets.</p>\n</dd>\n<dt class=\"field-even\">storage_account_name (String)</dt>\n<dd class=\"field-even\"><p>The name of the storage account used to access data.</p>\n</dd>\n<dt class=\"field-odd\">storage_account_key_key (String)</dt>\n<dd class=\"field-odd\"><p>The key of a Databricks secret containing the storage account secret key.</p>\n</dd>\n</dl>\n</details></dd>\n</dl>\n</details></dd>\n<dt class=\"field-even\">local_pipeline_package_path (dagster.StringSource, optional)</dt>\n<dd class=\"field-even\"><p>Absolute path to the package that contains the pipeline definition(s) whose steps will execute remotely on Databricks. This is a path on the local fileystem of the process executing the pipeline. Before every step run, the launcher will zip up the code in this path, upload it to DBFS, and unzip it into the Python path of the remote Spark process. This gives the remote process access to up-to-date user code.</p>\n</dd>\n<dt class=\"field-odd\">local_dagster_job_package_path (dagster.StringSource, optional)</dt>\n<dd class=\"field-odd\"><p>Absolute path to the package that contains the dagster job definition(s) whose steps will execute remotely on Databricks. This is a path on the local fileystem of the process executing the dagster job. Before every step run, the launcher will zip up the code in this path, upload it to DBFS, and unzip it into the Python path of the remote Spark process. This gives the remote process access to up-to-date user code.</p>\n</dd>\n<dt class=\"field-even\">staging_prefix (dagster.StringSource, optional)</dt>\n<dd class=\"field-even\"><p>Directory in DBFS to use for uploaded job code. Must be absolute.</p>\n<p><strong>Default Value:</strong> \u2018/dagster_staging\u2019</p>\n</dd>\n<dt class=\"field-odd\">wait_for_logs (Bool, optional)</dt>\n<dd class=\"field-odd\"><p>If set, and if the specified cluster is configured to export logs, the system will wait after job completion for the logs to appear in the configured location. Note that logs are copied every 5 minutes, so enabling this will add several minutes to the job runtime. NOTE: this integration will export stdout/stderrfrom the remote Databricks process automatically, so this option is not generally necessary.</p>\n<p><strong>Default Value:</strong> False</p>\n</dd>\n<dt class=\"field-even\">max_completion_wait_time_seconds (dagster.IntSource, optional)</dt>\n<dd class=\"field-even\"><p>If the Databricks job run takes more than this many seconds, then consider it failed and terminate the step.</p>\n<p><strong>Default Value:</strong> 86400</p>\n</dd>\n<dt class=\"field-odd\">poll_interval_sec (Float, optional)</dt>\n<dd class=\"field-odd\"><p>How frequently Dagster will poll Databricks to determine the state of the job.</p>\n<p><strong>Default Value:</strong> 5.0</p>\n</dd>\n</dl>\n</details><p>Resource for running ops as a Databricks Job.</p>\n<p>When this resource is used, the op will be executed in Databricks using the \u2018Run Submit\u2019\nAPI. Pipeline code will be zipped up and copied to a directory in DBFS along with the op\u2019s\nexecution context.</p>\n<p>Use the \u2018run_config\u2019 configuration to specify the details of the Databricks cluster used, and\nthe \u2018storage\u2019 key to configure persistent storage on that cluster. Storage is accessed by\nsetting the credentials in the Spark context, as documented <a class=\"reference external\" href=\"https://docs.databricks.com/data/data-sources/aws/amazon-s3.html#alternative-1-set-aws-keys-in-the-spark-context\">here for S3</a> and <a class=\"reference external\" href=\"https://docs.microsoft.com/en-gb/azure/databricks/data/data-sources/azure/azure-datalake-gen2#--access-directly-using-the-storage-account-access-key\">here for ADLS</a>.</p>\n</dd></dl>\n\n<dl class=\"py class\">\n<dt id=\"dagster_databricks.DatabricksError\">\n<em class=\"property\"><span class=\"pre\">class</span> </em><code class=\"sig-prename descclassname\"><span class=\"pre\">dagster_databricks.</span></code><code class=\"sig-name descname\"><span class=\"pre\">DatabricksError</span></code><a class=\"reference internal\" href=\"../../../../../_modules/dagster_databricks/databricks#DatabricksError\"><span class=\"viewcode-link\"><span class=\"pre\">[source]</span></span></a><a class=\"headerlink\" href=\"#dagster_databricks.DatabricksError\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd></dd></dl>\n\n</div>\n<div class=\"section\" id=\"legacy-apis\">\n<h1>Legacy APIs<a class=\"headerlink\" href=\"#legacy-apis\" title=\"Permalink to this headline\">\u00b6</a></h1>\n<dl class=\"py function\">\n<dt id=\"dagster_databricks.create_databricks_job_solid\">\n<code class=\"sig-prename descclassname\"><span class=\"pre\">dagster_databricks.</span></code><code class=\"sig-name descname\"><span class=\"pre\">create_databricks_job_solid</span></code><span class=\"sig-paren\">(</span><em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">name</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">'databricks_job'</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">num_inputs</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">1</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">description</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">None</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">required_resource_keys</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">frozenset({'databricks_client'})</span></span></em><span class=\"sig-paren\">)</span><a class=\"reference internal\" href=\"../../../../../_modules/dagster_databricks/solids#create_databricks_job_solid\"><span class=\"viewcode-link\"><span class=\"pre\">[source]</span></span></a><a class=\"headerlink\" href=\"#dagster_databricks.create_databricks_job_solid\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Creates a solid that launches a databricks job.</p>\n<p>As config, the solid accepts a blob of the form described in Databricks\u2019 job API:\n<a class=\"reference external\" href=\"https://docs.databricks.com/dev-tools/api/latest/jobs.html\">https://docs.databricks.com/dev-tools/api/latest/jobs.html</a>.</p>\n<dl class=\"field-list simple\">\n<dt class=\"field-odd\">Returns</dt>\n<dd class=\"field-odd\"><p>A solid definition.</p>\n</dd>\n<dt class=\"field-even\">Return type</dt>\n<dd class=\"field-even\"><p><a class=\"reference internal\" href=\"../../solids#dagster.SolidDefinition\" title=\"dagster.SolidDefinition\">SolidDefinition</a></p>\n</dd>\n</dl>\n<p class=\"rubric\">Example</p>\n<div class=\"highlight-python notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"kn\">from</span> <span class=\"nn\">dagster</span> <span class=\"kn\">import</span> <span class=\"n\">ModeDefinition</span><span class=\"p\">,</span> <span class=\"n\">pipeline</span>\n<span class=\"kn\">from</span> <span class=\"nn\">dagster_databricks</span> <span class=\"kn\">import</span> <span class=\"n\">create_databricks_job_solid</span><span class=\"p\">,</span> <span class=\"n\">databricks_client</span>\n\n<span class=\"n\">sparkpi</span> <span class=\"o\">=</span> <span class=\"n\">create_databricks_job_solid</span><span class=\"p\">()</span><span class=\"o\">.</span><span class=\"n\">configured</span><span class=\"p\">(</span>\n    <span class=\"p\">{</span>\n        <span class=\"s2\">&quot;job&quot;</span><span class=\"p\">:</span> <span class=\"p\">{</span>\n            <span class=\"s2\">&quot;name&quot;</span><span class=\"p\">:</span> <span class=\"s2\">&quot;SparkPi Python job&quot;</span><span class=\"p\">,</span>\n            <span class=\"s2\">&quot;new_cluster&quot;</span><span class=\"p\">:</span> <span class=\"p\">{</span>\n                <span class=\"s2\">&quot;spark_version&quot;</span><span class=\"p\">:</span> <span class=\"s2\">&quot;7.3.x-scala2.12&quot;</span><span class=\"p\">,</span>\n                <span class=\"s2\">&quot;node_type_id&quot;</span><span class=\"p\">:</span> <span class=\"s2\">&quot;i3.xlarge&quot;</span><span class=\"p\">,</span>\n                <span class=\"s2\">&quot;num_workers&quot;</span><span class=\"p\">:</span> <span class=\"mi\">2</span><span class=\"p\">,</span>\n            <span class=\"p\">},</span>\n            <span class=\"s2\">&quot;spark_python_task&quot;</span><span class=\"p\">:</span> <span class=\"p\">{</span><span class=\"s2\">&quot;python_file&quot;</span><span class=\"p\">:</span> <span class=\"s2\">&quot;dbfs:/docs/pi.py&quot;</span><span class=\"p\">,</span> <span class=\"s2\">&quot;parameters&quot;</span><span class=\"p\">:</span> <span class=\"p\">[</span><span class=\"s2\">&quot;10&quot;</span><span class=\"p\">]},</span>\n        <span class=\"p\">}</span>\n    <span class=\"p\">},</span>\n    <span class=\"n\">name</span><span class=\"o\">=</span><span class=\"s2\">&quot;sparkspi&quot;</span><span class=\"p\">,</span>\n<span class=\"p\">)</span>\n\n\n<span class=\"nd\">@pipeline</span><span class=\"p\">(</span>\n    <span class=\"n\">mode_defs</span><span class=\"o\">=</span><span class=\"p\">[</span>\n        <span class=\"n\">ModeDefinition</span><span class=\"p\">(</span>\n            <span class=\"n\">resource_defs</span><span class=\"o\">=</span><span class=\"p\">{</span>\n                <span class=\"s2\">&quot;databricks_client&quot;</span><span class=\"p\">:</span> <span class=\"n\">databricks_client</span><span class=\"o\">.</span><span class=\"n\">configured</span><span class=\"p\">(</span>\n                    <span class=\"p\">{</span><span class=\"s2\">&quot;host&quot;</span><span class=\"p\">:</span> <span class=\"s2\">&quot;my.workspace.url&quot;</span><span class=\"p\">,</span> <span class=\"s2\">&quot;token&quot;</span><span class=\"p\">:</span> <span class=\"s2\">&quot;my.access.token&quot;</span><span class=\"p\">}</span>\n                <span class=\"p\">)</span>\n            <span class=\"p\">}</span>\n        <span class=\"p\">)</span>\n    <span class=\"p\">]</span>\n<span class=\"p\">)</span>\n<span class=\"k\">def</span> <span class=\"nf\">my_pipeline</span><span class=\"p\">():</span>\n    <span class=\"n\">sparkpi</span><span class=\"p\">()</span>\n</pre></div>\n</div>\n</dd></dl>\n\n</div>\n", "current_page_name": "sections/api/apidocs/libraries/dagster-databricks", "customsidebar": null, "display_toc": true, "meta": null, "metatags": "", "next": {"link": "../dagster-datadog/", "title": "Datadog (dagster-datadog)"}, "page_source_suffix": ".rst", "parents": [], "prev": {"link": "../dagster-dask/", "title": "Dask (dagster-dask)"}, "rellinks": [["genindex", "General Index", "I", "index"], ["py-modindex", "Python Module Index", "", "modules"], ["sections/api/apidocs/libraries/dagster-datadog", "Datadog (dagster-datadog)", "N", "next"], ["sections/api/apidocs/libraries/dagster-dask", "Dask (dagster-dask)", "P", "previous"]], "sidebars": ["globaltoc.html", "searchbox.html"], "sourcename": "sections/api/apidocs/libraries/dagster-databricks.rst.txt", "title": "Databricks (dagster-databricks)", "toc": "<ul>\n<li><a class=\"reference internal\" href=\"#\">Databricks (dagster-databricks)</a></li>\n<li><a class=\"reference internal\" href=\"#apis\">APIs</a></li>\n<li><a class=\"reference internal\" href=\"#legacy-apis\">Legacy APIs</a></li>\n</ul>\n"}, "dagster-datadog": {"alabaster_version": "0.7.12", "body": "<div class=\"section\" id=\"datadog-dagster-datadog\">\n<h1>Datadog (dagster-datadog)<a class=\"headerlink\" href=\"#datadog-dagster-datadog\" title=\"Permalink to this headline\">\u00b6</a></h1>\n<p>This library provides an integration with Datadog, to support publishing metrics to Datadog from\nwithin Dagster ops.</p>\n<div class=\"line-block\">\n<div class=\"line\"><br /></div>\n</div>\n<p>We use the Python <a class=\"reference external\" href=\"https://github.com/DataDog/datadogpy\">datadogpy</a> library. To use it, you\u2019ll\nfirst need to create a DataDog account and get both <a class=\"reference external\" href=\"https://docs.datadoghq.com/account_management/api-app-keys/\">API and Application keys</a>.</p>\n<div class=\"line-block\">\n<div class=\"line\"><br /></div>\n</div>\n<p>The integration uses <a class=\"reference external\" href=\"https://docs.datadoghq.com/developers/dogstatsd/\">DogStatsD</a>, so you\u2019ll need\nto ensure the datadog agent is running on the host you\u2019re sending metrics from.</p>\n<dl class=\"py data\">\n<dt id=\"dagster_datadog.datadog_resource\">\n<code class=\"sig-prename descclassname\"><span class=\"pre\">dagster_datadog.</span></code><code class=\"sig-name descname\"><span class=\"pre\">datadog_resource</span></code><em class=\"property\"> <span class=\"pre\">ResourceDefinition</span></em><a class=\"reference internal\" href=\"../../../../../_modules/dagster_datadog/resources#datadog_resource\"><span class=\"viewcode-link\"><span class=\"pre\">[source]</span></span></a><a class=\"headerlink\" href=\"#dagster_datadog.datadog_resource\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><div class=\"line-block\">\n<div class=\"line\"><br /></div>\n</div>\n<details class=\"summary-config-schema\">\n<summary>Config Schema:</summary><dl class=\"field-list simple\">\n<dt class=\"field-odd\">api_key (dagster.StringSource)</dt>\n<dd class=\"field-odd\"><p>Datadog API key</p>\n</dd>\n<dt class=\"field-even\">app_key (dagster.StringSource)</dt>\n<dd class=\"field-even\"><p>Datadog application key</p>\n</dd>\n</dl>\n</details><p>This resource is a thin wrapper over the\n<a class=\"reference external\" href=\"https://datadogpy.readthedocs.io/en/latest/\">dogstatsd library</a>.</p>\n<p>As such, we directly mirror the public API methods of DogStatsd here; you can refer to the\n<a class=\"reference external\" href=\"https://docs.datadoghq.com/developers/dogstatsd/\">DataDog documentation</a> for how to use this\nresource.</p>\n<p class=\"rubric\">Examples</p>\n<div class=\"highlight-python notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"nd\">@op</span><span class=\"p\">(</span><span class=\"n\">required_resource_keys</span><span class=\"o\">=</span><span class=\"p\">{</span><span class=\"s1\">&#39;datadog&#39;</span><span class=\"p\">})</span>\n<span class=\"k\">def</span> <span class=\"nf\">datadog_op</span><span class=\"p\">(</span><span class=\"n\">context</span><span class=\"p\">):</span>\n    <span class=\"n\">dd</span> <span class=\"o\">=</span> <span class=\"n\">context</span><span class=\"o\">.</span><span class=\"n\">resources</span><span class=\"o\">.</span><span class=\"n\">datadog</span>\n\n    <span class=\"n\">dd</span><span class=\"o\">.</span><span class=\"n\">event</span><span class=\"p\">(</span><span class=\"s1\">&#39;Man down!&#39;</span><span class=\"p\">,</span> <span class=\"s1\">&#39;This server needs assistance.&#39;</span><span class=\"p\">)</span>\n    <span class=\"n\">dd</span><span class=\"o\">.</span><span class=\"n\">gauge</span><span class=\"p\">(</span><span class=\"s1\">&#39;users.online&#39;</span><span class=\"p\">,</span> <span class=\"mi\">1001</span><span class=\"p\">,</span> <span class=\"n\">tags</span><span class=\"o\">=</span><span class=\"p\">[</span><span class=\"s2\">&quot;protocol:http&quot;</span><span class=\"p\">])</span>\n    <span class=\"n\">dd</span><span class=\"o\">.</span><span class=\"n\">increment</span><span class=\"p\">(</span><span class=\"s1\">&#39;page.views&#39;</span><span class=\"p\">)</span>\n    <span class=\"n\">dd</span><span class=\"o\">.</span><span class=\"n\">decrement</span><span class=\"p\">(</span><span class=\"s1\">&#39;page.views&#39;</span><span class=\"p\">)</span>\n    <span class=\"n\">dd</span><span class=\"o\">.</span><span class=\"n\">histogram</span><span class=\"p\">(</span><span class=\"s1\">&#39;album.photo.count&#39;</span><span class=\"p\">,</span> <span class=\"mi\">26</span><span class=\"p\">,</span> <span class=\"n\">tags</span><span class=\"o\">=</span><span class=\"p\">[</span><span class=\"s2\">&quot;gender:female&quot;</span><span class=\"p\">])</span>\n    <span class=\"n\">dd</span><span class=\"o\">.</span><span class=\"n\">distribution</span><span class=\"p\">(</span><span class=\"s1\">&#39;album.photo.count&#39;</span><span class=\"p\">,</span> <span class=\"mi\">26</span><span class=\"p\">,</span> <span class=\"n\">tags</span><span class=\"o\">=</span><span class=\"p\">[</span><span class=\"s2\">&quot;color:blue&quot;</span><span class=\"p\">])</span>\n    <span class=\"n\">dd</span><span class=\"o\">.</span><span class=\"n\">set</span><span class=\"p\">(</span><span class=\"s1\">&#39;visitors.uniques&#39;</span><span class=\"p\">,</span> <span class=\"mi\">999</span><span class=\"p\">,</span> <span class=\"n\">tags</span><span class=\"o\">=</span><span class=\"p\">[</span><span class=\"s2\">&quot;browser:ie&quot;</span><span class=\"p\">])</span>\n    <span class=\"n\">dd</span><span class=\"o\">.</span><span class=\"n\">service_check</span><span class=\"p\">(</span><span class=\"s1\">&#39;svc.check_name&#39;</span><span class=\"p\">,</span> <span class=\"n\">dd</span><span class=\"o\">.</span><span class=\"n\">WARNING</span><span class=\"p\">)</span>\n    <span class=\"n\">dd</span><span class=\"o\">.</span><span class=\"n\">timing</span><span class=\"p\">(</span><span class=\"s2\">&quot;query.response.time&quot;</span><span class=\"p\">,</span> <span class=\"mi\">1234</span><span class=\"p\">)</span>\n\n    <span class=\"c1\"># Use timed decorator</span>\n    <span class=\"nd\">@dd</span><span class=\"o\">.</span><span class=\"n\">timed</span><span class=\"p\">(</span><span class=\"s1\">&#39;run_fn&#39;</span><span class=\"p\">)</span>\n    <span class=\"k\">def</span> <span class=\"nf\">run_fn</span><span class=\"p\">():</span>\n        <span class=\"k\">pass</span>\n\n    <span class=\"n\">run_fn</span><span class=\"p\">()</span>\n\n<span class=\"nd\">@job</span><span class=\"p\">(</span><span class=\"n\">resource_defs</span><span class=\"o\">=</span><span class=\"p\">{</span><span class=\"s1\">&#39;datadog&#39;</span><span class=\"p\">:</span> <span class=\"n\">datadog_resource</span><span class=\"p\">})</span>\n<span class=\"k\">def</span> <span class=\"nf\">dd_job</span><span class=\"p\">():</span>\n    <span class=\"n\">datadog_op</span><span class=\"p\">()</span>\n\n<span class=\"n\">result</span> <span class=\"o\">=</span> <span class=\"n\">dd_job</span><span class=\"o\">.</span><span class=\"n\">execute_in_process</span><span class=\"p\">(</span>\n    <span class=\"n\">run_config</span><span class=\"o\">=</span><span class=\"p\">{</span><span class=\"s1\">&#39;resources&#39;</span><span class=\"p\">:</span> <span class=\"p\">{</span><span class=\"s1\">&#39;datadog&#39;</span><span class=\"p\">:</span> <span class=\"p\">{</span><span class=\"s1\">&#39;config&#39;</span><span class=\"p\">:</span> <span class=\"p\">{</span><span class=\"s1\">&#39;api_key&#39;</span><span class=\"p\">:</span> <span class=\"s1\">&#39;YOUR_KEY&#39;</span><span class=\"p\">,</span> <span class=\"s1\">&#39;app_key&#39;</span><span class=\"p\">:</span> <span class=\"s1\">&#39;YOUR_KEY&#39;</span><span class=\"p\">}}}}</span>\n<span class=\"p\">)</span>\n</pre></div>\n</div>\n</dd></dl>\n\n</div>\n", "current_page_name": "sections/api/apidocs/libraries/dagster-datadog", "customsidebar": null, "display_toc": false, "meta": null, "metatags": "", "next": {"link": "../dagster-dbt/", "title": "dbt (dagster-dbt)"}, "page_source_suffix": ".rst", "parents": [], "prev": {"link": "../dagster-databricks/", "title": "Databricks (dagster-databricks)"}, "rellinks": [["genindex", "General Index", "I", "index"], ["py-modindex", "Python Module Index", "", "modules"], ["sections/api/apidocs/libraries/dagster-dbt", "dbt (dagster-dbt)", "N", "next"], ["sections/api/apidocs/libraries/dagster-databricks", "Databricks (dagster-databricks)", "P", "previous"]], "sidebars": ["globaltoc.html", "searchbox.html"], "sourcename": "sections/api/apidocs/libraries/dagster-datadog.rst.txt", "title": "Datadog (dagster-datadog)", "toc": "<ul>\n<li><a class=\"reference internal\" href=\"#\">Datadog (dagster-datadog)</a></li>\n</ul>\n"}, "dagster-dbt": {"alabaster_version": "0.7.12", "body": "<div class=\"section\" id=\"dbt-dagster-dbt\">\n<h1>dbt (dagster-dbt)<a class=\"headerlink\" href=\"#dbt-dagster-dbt\" title=\"Permalink to this headline\">\u00b6</a></h1>\n<p>This library provides a Dagster integration with <a class=\"reference external\" href=\"https://getdbt.com/\">dbt</a> (data build tool), created by <a class=\"reference external\" href=\"https://www.getdbt.com/\">dbt Labs</a>.</p>\n<div class=\"section\" id=\"ops\">\n<h2>Ops<a class=\"headerlink\" href=\"#ops\" title=\"Permalink to this headline\">\u00b6</a></h2>\n<div class=\"section\" id=\"dbt-core-ops\">\n<h3>dbt Core Ops<a class=\"headerlink\" href=\"#dbt-core-ops\" title=\"Permalink to this headline\">\u00b6</a></h3>\n<p><code class=\"docutils literal notranslate\"><span class=\"pre\">dagster_dbt</span></code> provides a set of pre-built ops that work with either the CLI or RPC interfaces. For\nmore advanced use cases, we suggest building your own ops which directly interact with these resources.</p>\n<dl class=\"py data\">\n<dt id=\"dagster_dbt.dbt_run_op\">\n<code class=\"sig-prename descclassname\"><span class=\"pre\">dagster_dbt.</span></code><code class=\"sig-name descname\"><span class=\"pre\">dbt_run_op</span></code><em class=\"property\"> <span class=\"pre\">=</span> <span class=\"pre\">&lt;dagster.core.definitions.op_definition.OpDefinition</span> <span class=\"pre\">object&gt;</span></em><a class=\"reference internal\" href=\"../../../../../_modules/dagster_dbt/ops#dbt_run_op\"><span class=\"viewcode-link\"><span class=\"pre\">[source]</span></span></a><a class=\"headerlink\" href=\"#dagster_dbt.dbt_run_op\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><div class=\"line-block\">\n<div class=\"line\"><br /></div>\n</div>\n<details class=\"summary-config-schema\">\n<summary>Config Schema:</summary><dl class=\"field-list\">\n<dt class=\"field-odd\">yield_materializations (Bool, optional)</dt>\n<dd class=\"field-odd\"><p>If True, materializations corresponding to the results of the dbt operation will be yielded when the op executes. Default: True</p>\n<p><strong>Default Value:</strong> True</p>\n</dd>\n<dt class=\"field-even\">asset_key_prefix (List[String], optional)</dt>\n<dd class=\"field-even\"><p>If provided and yield_materializations is True, these components will be used to prefix the generated asset keys.</p>\n<p><strong>Default Value:</strong> [\u2018dbt\u2019]</p>\n</dd>\n</dl>\n</details><p>This op executes a <code class=\"docutils literal notranslate\"><span class=\"pre\">dbt</span> <span class=\"pre\">run</span></code> command. It requires the use of a dbt resource, which can be\nset to execute this command through the CLI (using the <a class=\"reference internal\" href=\"#dagster_dbt.dbt_cli_resource\" title=\"dagster_dbt.dbt_cli_resource\"><code class=\"xref py py-class docutils literal notranslate\"><span class=\"pre\">dbt_cli_resource</span></code></a>) or\nover RPC (using the <a class=\"reference internal\" href=\"#dagster_dbt.dbt_rpc_sync_resource\" title=\"dagster_dbt.dbt_rpc_sync_resource\"><code class=\"xref py py-class docutils literal notranslate\"><span class=\"pre\">dbt_rpc_sync_resource</span></code></a>).</p>\n<p>Examples:</p>\n<div class=\"highlight-python notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"kn\">from</span> <span class=\"nn\">dagster</span> <span class=\"kn\">import</span> <span class=\"n\">job</span>\n<span class=\"kn\">from</span> <span class=\"nn\">dagster_dbt</span> <span class=\"kn\">import</span> <span class=\"n\">dbt_run_op</span><span class=\"p\">,</span> <span class=\"n\">dbt_cli_resource</span><span class=\"p\">,</span> <span class=\"n\">dbt_rpc_sync_resource</span>\n\n<span class=\"nd\">@job</span><span class=\"p\">(</span><span class=\"n\">resource_defs</span><span class=\"o\">=</span><span class=\"p\">{</span><span class=\"s2\">&quot;dbt&quot;</span><span class=\"p\">:</span><span class=\"n\">dbt_cli_resource</span><span class=\"p\">})</span>\n<span class=\"k\">def</span> <span class=\"nf\">my_dbt_cli_job</span><span class=\"p\">():</span>\n    <span class=\"n\">dbt_run_op</span><span class=\"p\">()</span>\n\n<span class=\"nd\">@job</span><span class=\"p\">(</span><span class=\"n\">resource_defs</span><span class=\"o\">=</span><span class=\"p\">{</span><span class=\"s2\">&quot;dbt&quot;</span><span class=\"p\">:</span><span class=\"n\">dbt_rpc_sync_resource</span><span class=\"p\">})</span>\n<span class=\"k\">def</span> <span class=\"nf\">my_dbt_rpc_job</span><span class=\"p\">():</span>\n    <span class=\"n\">dbt_run_op</span><span class=\"p\">()</span>\n</pre></div>\n</div>\n</dd></dl>\n\n<dl class=\"py function\">\n<dt id=\"dagster_dbt.dbt_compile_op\">\n<code class=\"sig-prename descclassname\"><span class=\"pre\">dagster_dbt.</span></code><code class=\"sig-name descname\"><span class=\"pre\">dbt_compile_op</span></code><span class=\"sig-paren\">(</span><em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">context</span></span></em><span class=\"sig-paren\">)</span><a class=\"reference internal\" href=\"../../../../../_modules/dagster_dbt/ops#dbt_compile_op\"><span class=\"viewcode-link\"><span class=\"pre\">[source]</span></span></a><a class=\"headerlink\" href=\"#dagster_dbt.dbt_compile_op\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>This op executes a <code class=\"docutils literal notranslate\"><span class=\"pre\">dbt</span> <span class=\"pre\">compile</span></code> command. It requires the use of a dbt resource, which can be\nset to execute this command through the CLI (using the <a class=\"reference internal\" href=\"#dagster_dbt.dbt_cli_resource\" title=\"dagster_dbt.dbt_cli_resource\"><code class=\"xref py py-class docutils literal notranslate\"><span class=\"pre\">dbt_cli_resource</span></code></a>) or\nover RPC (using the <a class=\"reference internal\" href=\"#dagster_dbt.dbt_rpc_sync_resource\" title=\"dagster_dbt.dbt_rpc_sync_resource\"><code class=\"xref py py-class docutils literal notranslate\"><span class=\"pre\">dbt_rpc_sync_resource</span></code></a>).</p>\n<p>Examples:</p>\n<div class=\"highlight-python notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"kn\">from</span> <span class=\"nn\">dagster</span> <span class=\"kn\">import</span> <span class=\"n\">job</span>\n<span class=\"kn\">from</span> <span class=\"nn\">dagster_dbt</span> <span class=\"kn\">import</span> <span class=\"n\">dbt_compile_op</span><span class=\"p\">,</span> <span class=\"n\">dbt_cli_resource</span><span class=\"p\">,</span> <span class=\"n\">dbt_rpc_sync_resource</span>\n\n<span class=\"nd\">@job</span><span class=\"p\">(</span><span class=\"n\">resource_defs</span><span class=\"o\">=</span><span class=\"p\">{</span><span class=\"s2\">&quot;dbt&quot;</span><span class=\"p\">:</span><span class=\"n\">dbt_cli_resource</span><span class=\"p\">})</span>\n<span class=\"k\">def</span> <span class=\"nf\">my_dbt_cli_job</span><span class=\"p\">():</span>\n    <span class=\"n\">dbt_compile_op</span><span class=\"p\">()</span>\n\n<span class=\"nd\">@job</span><span class=\"p\">(</span><span class=\"n\">resource_defs</span><span class=\"o\">=</span><span class=\"p\">{</span><span class=\"s2\">&quot;dbt&quot;</span><span class=\"p\">:</span><span class=\"n\">dbt_rpc_sync_resource</span><span class=\"p\">})</span>\n<span class=\"k\">def</span> <span class=\"nf\">my_dbt_rpc_job</span><span class=\"p\">():</span>\n    <span class=\"n\">dbt_compile_op</span><span class=\"p\">()</span>\n</pre></div>\n</div>\n</dd></dl>\n\n<dl class=\"py function\">\n<dt id=\"dagster_dbt.dbt_ls_op\">\n<code class=\"sig-prename descclassname\"><span class=\"pre\">dagster_dbt.</span></code><code class=\"sig-name descname\"><span class=\"pre\">dbt_ls_op</span></code><span class=\"sig-paren\">(</span><em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">context</span></span></em><span class=\"sig-paren\">)</span><a class=\"reference internal\" href=\"../../../../../_modules/dagster_dbt/ops#dbt_ls_op\"><span class=\"viewcode-link\"><span class=\"pre\">[source]</span></span></a><a class=\"headerlink\" href=\"#dagster_dbt.dbt_ls_op\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>This op executes a <code class=\"docutils literal notranslate\"><span class=\"pre\">dbt</span> <span class=\"pre\">ls</span></code> command. It requires the use of a dbt resource, which can be\nset to execute this command through the CLI (using the <a class=\"reference internal\" href=\"#dagster_dbt.dbt_cli_resource\" title=\"dagster_dbt.dbt_cli_resource\"><code class=\"xref py py-class docutils literal notranslate\"><span class=\"pre\">dbt_cli_resource</span></code></a>) or\nover RPC (using the <a class=\"reference internal\" href=\"#dagster_dbt.dbt_rpc_sync_resource\" title=\"dagster_dbt.dbt_rpc_sync_resource\"><code class=\"xref py py-class docutils literal notranslate\"><span class=\"pre\">dbt_rpc_sync_resource</span></code></a>).</p>\n<p>Examples:</p>\n<div class=\"highlight-python notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"kn\">from</span> <span class=\"nn\">dagster</span> <span class=\"kn\">import</span> <span class=\"n\">job</span>\n<span class=\"kn\">from</span> <span class=\"nn\">dagster_dbt</span> <span class=\"kn\">import</span> <span class=\"n\">dbt_ls_op</span><span class=\"p\">,</span> <span class=\"n\">dbt_cli_resource</span><span class=\"p\">,</span> <span class=\"n\">dbt_rpc_sync_resource</span>\n\n<span class=\"nd\">@job</span><span class=\"p\">(</span><span class=\"n\">resource_defs</span><span class=\"o\">=</span><span class=\"p\">{</span><span class=\"s2\">&quot;dbt&quot;</span><span class=\"p\">:</span><span class=\"n\">dbt_cli_resource</span><span class=\"p\">})</span>\n<span class=\"k\">def</span> <span class=\"nf\">my_dbt_cli_job</span><span class=\"p\">():</span>\n    <span class=\"n\">dbt_ls_op</span><span class=\"p\">()</span>\n\n<span class=\"nd\">@job</span><span class=\"p\">(</span><span class=\"n\">resource_defs</span><span class=\"o\">=</span><span class=\"p\">{</span><span class=\"s2\">&quot;dbt&quot;</span><span class=\"p\">:</span><span class=\"n\">dbt_rpc_sync_resource</span><span class=\"p\">})</span>\n<span class=\"k\">def</span> <span class=\"nf\">my_dbt_rpc_job</span><span class=\"p\">():</span>\n    <span class=\"n\">dbt_ls_op</span><span class=\"p\">()</span>\n</pre></div>\n</div>\n</dd></dl>\n\n<dl class=\"py function\">\n<dt id=\"dagster_dbt.dbt_test_op\">\n<code class=\"sig-prename descclassname\"><span class=\"pre\">dagster_dbt.</span></code><code class=\"sig-name descname\"><span class=\"pre\">dbt_test_op</span></code><span class=\"sig-paren\">(</span><em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">context</span></span></em><span class=\"sig-paren\">)</span><a class=\"reference internal\" href=\"../../../../../_modules/dagster_dbt/ops#dbt_test_op\"><span class=\"viewcode-link\"><span class=\"pre\">[source]</span></span></a><a class=\"headerlink\" href=\"#dagster_dbt.dbt_test_op\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>This op executes a <code class=\"docutils literal notranslate\"><span class=\"pre\">dbt</span> <span class=\"pre\">test</span></code> command. It requires the use of a dbt resource, which can be\nset to execute this command through the CLI (using the <a class=\"reference internal\" href=\"#dagster_dbt.dbt_cli_resource\" title=\"dagster_dbt.dbt_cli_resource\"><code class=\"xref py py-class docutils literal notranslate\"><span class=\"pre\">dbt_cli_resource</span></code></a>) or\nover RPC (using the <a class=\"reference internal\" href=\"#dagster_dbt.dbt_rpc_sync_resource\" title=\"dagster_dbt.dbt_rpc_sync_resource\"><code class=\"xref py py-class docutils literal notranslate\"><span class=\"pre\">dbt_rpc_sync_resource</span></code></a>).</p>\n<p>Examples:</p>\n<div class=\"highlight-python notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"kn\">from</span> <span class=\"nn\">dagster</span> <span class=\"kn\">import</span> <span class=\"n\">job</span>\n<span class=\"kn\">from</span> <span class=\"nn\">dagster_dbt</span> <span class=\"kn\">import</span> <span class=\"n\">dbt_test_op</span><span class=\"p\">,</span> <span class=\"n\">dbt_cli_resource</span><span class=\"p\">,</span> <span class=\"n\">dbt_rpc_sync_resource</span>\n\n<span class=\"nd\">@job</span><span class=\"p\">(</span><span class=\"n\">resource_defs</span><span class=\"o\">=</span><span class=\"p\">{</span><span class=\"s2\">&quot;dbt&quot;</span><span class=\"p\">:</span><span class=\"n\">dbt_cli_resource</span><span class=\"p\">})</span>\n<span class=\"k\">def</span> <span class=\"nf\">my_dbt_cli_job</span><span class=\"p\">():</span>\n    <span class=\"n\">dbt_test_op</span><span class=\"p\">()</span>\n\n<span class=\"nd\">@job</span><span class=\"p\">(</span><span class=\"n\">resource_defs</span><span class=\"o\">=</span><span class=\"p\">{</span><span class=\"s2\">&quot;dbt&quot;</span><span class=\"p\">:</span><span class=\"n\">dbt_rpc_sync_resource</span><span class=\"p\">})</span>\n<span class=\"k\">def</span> <span class=\"nf\">my_dbt_rpc_job</span><span class=\"p\">():</span>\n    <span class=\"n\">dbt_test_op</span><span class=\"p\">()</span>\n</pre></div>\n</div>\n</dd></dl>\n\n<dl class=\"py function\">\n<dt id=\"dagster_dbt.dbt_snapshot_op\">\n<code class=\"sig-prename descclassname\"><span class=\"pre\">dagster_dbt.</span></code><code class=\"sig-name descname\"><span class=\"pre\">dbt_snapshot_op</span></code><span class=\"sig-paren\">(</span><em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">context</span></span></em><span class=\"sig-paren\">)</span><a class=\"reference internal\" href=\"../../../../../_modules/dagster_dbt/ops#dbt_snapshot_op\"><span class=\"viewcode-link\"><span class=\"pre\">[source]</span></span></a><a class=\"headerlink\" href=\"#dagster_dbt.dbt_snapshot_op\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>This op executes a <code class=\"docutils literal notranslate\"><span class=\"pre\">dbt</span> <span class=\"pre\">snapshot</span></code> command. It requires the use of a dbt resource, which can be\nset to execute this command through the CLI (using the <a class=\"reference internal\" href=\"#dagster_dbt.dbt_cli_resource\" title=\"dagster_dbt.dbt_cli_resource\"><code class=\"xref py py-class docutils literal notranslate\"><span class=\"pre\">dbt_cli_resource</span></code></a>) or\nover RPC (using the <a class=\"reference internal\" href=\"#dagster_dbt.dbt_rpc_sync_resource\" title=\"dagster_dbt.dbt_rpc_sync_resource\"><code class=\"xref py py-class docutils literal notranslate\"><span class=\"pre\">dbt_rpc_sync_resource</span></code></a>).</p>\n<p>Examples:</p>\n<div class=\"highlight-python notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"kn\">from</span> <span class=\"nn\">dagster</span> <span class=\"kn\">import</span> <span class=\"n\">job</span>\n<span class=\"kn\">from</span> <span class=\"nn\">dagster_dbt</span> <span class=\"kn\">import</span> <span class=\"n\">dbt_snapshot_op</span><span class=\"p\">,</span> <span class=\"n\">dbt_cli_resource</span><span class=\"p\">,</span> <span class=\"n\">dbt_rpc_sync_resource</span>\n\n<span class=\"nd\">@job</span><span class=\"p\">(</span><span class=\"n\">resource_defs</span><span class=\"o\">=</span><span class=\"p\">{</span><span class=\"s2\">&quot;dbt&quot;</span><span class=\"p\">:</span><span class=\"n\">dbt_cli_resource</span><span class=\"p\">})</span>\n<span class=\"k\">def</span> <span class=\"nf\">my_dbt_cli_job</span><span class=\"p\">():</span>\n    <span class=\"n\">dbt_snapshot_op</span><span class=\"p\">()</span>\n\n<span class=\"nd\">@job</span><span class=\"p\">(</span><span class=\"n\">resource_defs</span><span class=\"o\">=</span><span class=\"p\">{</span><span class=\"s2\">&quot;dbt&quot;</span><span class=\"p\">:</span><span class=\"n\">dbt_rpc_sync_resource</span><span class=\"p\">})</span>\n<span class=\"k\">def</span> <span class=\"nf\">my_dbt_rpc_job</span><span class=\"p\">():</span>\n    <span class=\"n\">dbt_snapshot_op</span><span class=\"p\">()</span>\n</pre></div>\n</div>\n</dd></dl>\n\n<dl class=\"py function\">\n<dt id=\"dagster_dbt.dbt_seed_op\">\n<code class=\"sig-prename descclassname\"><span class=\"pre\">dagster_dbt.</span></code><code class=\"sig-name descname\"><span class=\"pre\">dbt_seed_op</span></code><span class=\"sig-paren\">(</span><em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">context</span></span></em><span class=\"sig-paren\">)</span><a class=\"reference internal\" href=\"../../../../../_modules/dagster_dbt/ops#dbt_seed_op\"><span class=\"viewcode-link\"><span class=\"pre\">[source]</span></span></a><a class=\"headerlink\" href=\"#dagster_dbt.dbt_seed_op\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>This op executes a <code class=\"docutils literal notranslate\"><span class=\"pre\">dbt</span> <span class=\"pre\">seed</span></code> command. It requires the use of a dbt resource, which can be\nset to execute this command through the CLI (using the <a class=\"reference internal\" href=\"#dagster_dbt.dbt_cli_resource\" title=\"dagster_dbt.dbt_cli_resource\"><code class=\"xref py py-class docutils literal notranslate\"><span class=\"pre\">dbt_cli_resource</span></code></a>) or\nover RPC (using the <a class=\"reference internal\" href=\"#dagster_dbt.dbt_rpc_sync_resource\" title=\"dagster_dbt.dbt_rpc_sync_resource\"><code class=\"xref py py-class docutils literal notranslate\"><span class=\"pre\">dbt_rpc_sync_resource</span></code></a>).</p>\n<p>Examples:</p>\n<div class=\"highlight-python notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"kn\">from</span> <span class=\"nn\">dagster</span> <span class=\"kn\">import</span> <span class=\"n\">job</span>\n<span class=\"kn\">from</span> <span class=\"nn\">dagster_dbt</span> <span class=\"kn\">import</span> <span class=\"n\">dbt_seed_op</span><span class=\"p\">,</span> <span class=\"n\">dbt_cli_resource</span><span class=\"p\">,</span> <span class=\"n\">dbt_rpc_sync_resource</span>\n\n<span class=\"nd\">@job</span><span class=\"p\">(</span><span class=\"n\">resource_defs</span><span class=\"o\">=</span><span class=\"p\">{</span><span class=\"s2\">&quot;dbt&quot;</span><span class=\"p\">:</span><span class=\"n\">dbt_cli_resource</span><span class=\"p\">})</span>\n<span class=\"k\">def</span> <span class=\"nf\">my_dbt_cli_job</span><span class=\"p\">():</span>\n    <span class=\"n\">dbt_seed_op</span><span class=\"p\">()</span>\n\n<span class=\"nd\">@job</span><span class=\"p\">(</span><span class=\"n\">resource_defs</span><span class=\"o\">=</span><span class=\"p\">{</span><span class=\"s2\">&quot;dbt&quot;</span><span class=\"p\">:</span><span class=\"n\">dbt_rpc_sync_resource</span><span class=\"p\">})</span>\n<span class=\"k\">def</span> <span class=\"nf\">my_dbt_rpc_job</span><span class=\"p\">():</span>\n    <span class=\"n\">dbt_seed_op</span><span class=\"p\">()</span>\n</pre></div>\n</div>\n</dd></dl>\n\n<dl class=\"py function\">\n<dt id=\"dagster_dbt.dbt_docs_generate_op\">\n<code class=\"sig-prename descclassname\"><span class=\"pre\">dagster_dbt.</span></code><code class=\"sig-name descname\"><span class=\"pre\">dbt_docs_generate_op</span></code><span class=\"sig-paren\">(</span><em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">context</span></span></em><span class=\"sig-paren\">)</span><a class=\"reference internal\" href=\"../../../../../_modules/dagster_dbt/ops#dbt_docs_generate_op\"><span class=\"viewcode-link\"><span class=\"pre\">[source]</span></span></a><a class=\"headerlink\" href=\"#dagster_dbt.dbt_docs_generate_op\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>This op executes a <code class=\"docutils literal notranslate\"><span class=\"pre\">dbt</span> <span class=\"pre\">docs</span> <span class=\"pre\">generate</span></code> command. It requires the use of a dbt resource, which can be\nset to execute this command through the CLI (using the <a class=\"reference internal\" href=\"#dagster_dbt.dbt_cli_resource\" title=\"dagster_dbt.dbt_cli_resource\"><code class=\"xref py py-class docutils literal notranslate\"><span class=\"pre\">dbt_cli_resource</span></code></a>) or\nover RPC (using the <a class=\"reference internal\" href=\"#dagster_dbt.dbt_rpc_sync_resource\" title=\"dagster_dbt.dbt_rpc_sync_resource\"><code class=\"xref py py-class docutils literal notranslate\"><span class=\"pre\">dbt_rpc_sync_resource</span></code></a>).</p>\n<p>Examples:</p>\n<div class=\"highlight-python notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"kn\">from</span> <span class=\"nn\">dagster</span> <span class=\"kn\">import</span> <span class=\"n\">job</span>\n<span class=\"kn\">from</span> <span class=\"nn\">dagster_dbt</span> <span class=\"kn\">import</span> <span class=\"n\">dbt_docs_generate_op</span><span class=\"p\">,</span> <span class=\"n\">dbt_cli_resource</span><span class=\"p\">,</span> <span class=\"n\">dbt_rpc_sync_resource</span>\n\n<span class=\"nd\">@job</span><span class=\"p\">(</span><span class=\"n\">resource_defs</span><span class=\"o\">=</span><span class=\"p\">{</span><span class=\"s2\">&quot;dbt&quot;</span><span class=\"p\">:</span><span class=\"n\">dbt_cli_resource</span><span class=\"p\">})</span>\n<span class=\"k\">def</span> <span class=\"nf\">my_dbt_cli_job</span><span class=\"p\">():</span>\n    <span class=\"n\">dbt_docs_generate_op</span><span class=\"p\">()</span>\n\n<span class=\"nd\">@job</span><span class=\"p\">(</span><span class=\"n\">resource_defs</span><span class=\"o\">=</span><span class=\"p\">{</span><span class=\"s2\">&quot;dbt&quot;</span><span class=\"p\">:</span><span class=\"n\">dbt_rpc_sync_resource</span><span class=\"p\">})</span>\n<span class=\"k\">def</span> <span class=\"nf\">my_dbt_rpc_job</span><span class=\"p\">():</span>\n    <span class=\"n\">dbt_docs_generate_op</span><span class=\"p\">()</span>\n</pre></div>\n</div>\n</dd></dl>\n\n</div>\n<div class=\"section\" id=\"dbt-cloud-ops\">\n<h3>dbt Cloud Ops<a class=\"headerlink\" href=\"#dbt-cloud-ops\" title=\"Permalink to this headline\">\u00b6</a></h3>\n<dl class=\"py data\">\n<dt id=\"dagster_dbt.dbt_cloud_run_op\">\n<code class=\"sig-prename descclassname\"><span class=\"pre\">dagster_dbt.</span></code><code class=\"sig-name descname\"><span class=\"pre\">dbt_cloud_run_op</span></code><em class=\"property\"> <span class=\"pre\">=</span> <span class=\"pre\">&lt;dagster.core.definitions.op_definition.OpDefinition</span> <span class=\"pre\">object&gt;</span></em><a class=\"reference internal\" href=\"../../../../../_modules/dagster_dbt/cloud/ops#dbt_cloud_run_op\"><span class=\"viewcode-link\"><span class=\"pre\">[source]</span></span></a><a class=\"headerlink\" href=\"#dagster_dbt.dbt_cloud_run_op\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><div class=\"line-block\">\n<div class=\"line\"><br /></div>\n</div>\n<details class=\"summary-config-schema\">\n<summary>Config Schema:</summary><dl class=\"field-list\">\n<dt class=\"field-odd\">job_id (Int)</dt>\n<dd class=\"field-odd\"><p>The integer ID of the relevant dbt Cloud job. You can find this value by going to the details page of your job in the dbt Cloud UI. It will be the final number in the url, e.g.:     <a class=\"reference external\" href=\"https://cloud.getdbt.com/#/accounts\">https://cloud.getdbt.com/#/accounts</a>/{account_id}/projects/{project_id}/jobs/{job_id}/</p>\n</dd>\n<dt class=\"field-even\">poll_interval (Float, optional)</dt>\n<dd class=\"field-even\"><p>The time (in seconds) that will be waited between successive polls.</p>\n<p><strong>Default Value:</strong> 10</p>\n</dd>\n<dt class=\"field-odd\">poll_timeout (Union[Float, None], optional)</dt>\n<dd class=\"field-odd\"><p>The maximum time that will waited before this operation is timed out. By default, this will never time out.</p>\n<p><strong>Default Value:</strong> None</p>\n</dd>\n<dt class=\"field-even\">yield_materializations (Bool, optional)</dt>\n<dd class=\"field-even\"><p>If True, materializations corresponding to the results of the dbt operation will be yielded when the op executes.</p>\n<p><strong>Default Value:</strong> True</p>\n</dd>\n<dt class=\"field-odd\">asset_key_prefix (List[String], optional)</dt>\n<dd class=\"field-odd\"><p>If provided and yield_materializations is True, these components will be used to prefix the generated asset keys.</p>\n<p><strong>Default Value:</strong> [\u2018dbt\u2019]</p>\n</dd>\n</dl>\n</details><p>Initiates a run for a dbt Cloud job, then polls until the run completes. If the job\nfails or is otherwised stopped before succeeding, a <cite>dagster.Failure</cite> exception will be raised,\nand this op will fail.</p>\n<p>It requires the use of a \u2018dbt_cloud\u2019 resource, which is used to connect to the dbt Cloud API.</p>\n<p><strong>Config Options:</strong></p>\n<dl class=\"simple\">\n<dt>job_id (int)</dt><dd><p>The integer ID of the relevant dbt Cloud job. You can find this value by going to the details\npage of your job in the dbt Cloud UI. It will be the final number in the url, e.g.:\n<code class=\"docutils literal notranslate\"><span class=\"pre\">https://cloud.getdbt.com/#/accounts/{account_id}/projects/{project_id}/jobs/{job_id}/</span></code></p>\n</dd>\n<dt>poll_interval (float)</dt><dd><p>The time (in seconds) that will be waited between successive polls. Defaults to <code class=\"docutils literal notranslate\"><span class=\"pre\">10</span></code>.</p>\n</dd>\n<dt>poll_timeout (float)</dt><dd><p>The maximum time (in seconds) that will waited before this operation is timed out. By\ndefault, this will never time out.</p>\n</dd>\n<dt>yield_materializations (bool)</dt><dd><p>If True, materializations corresponding to the results of the dbt operation will be\nyielded when the solid executes. Defaults to <code class=\"docutils literal notranslate\"><span class=\"pre\">True</span></code>.</p>\n</dd>\n<dt>rasset_key_prefix (float)</dt><dd><p>If provided and yield_materializations is True, these components will be used to \u201d\nprefix the generated asset keys. Defaults to [\u201cdbt\u201d].</p>\n</dd>\n</dl>\n<p><strong>Examples:</strong></p>\n<div class=\"highlight-python notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"kn\">from</span> <span class=\"nn\">dagster</span> <span class=\"kn\">import</span> <span class=\"n\">job</span>\n<span class=\"kn\">from</span> <span class=\"nn\">dagster_dbt</span> <span class=\"kn\">import</span> <span class=\"n\">dbt_cloud_resource</span><span class=\"p\">,</span> <span class=\"n\">dbt_cloud_run_op</span>\n\n<span class=\"n\">my_dbt_cloud_resource</span> <span class=\"o\">=</span> <span class=\"n\">dbt_cloud_resource</span><span class=\"o\">.</span><span class=\"n\">configured</span><span class=\"p\">(</span>\n    <span class=\"p\">{</span><span class=\"s2\">&quot;auth_token&quot;</span><span class=\"p\">:</span> <span class=\"p\">{</span><span class=\"s2\">&quot;env&quot;</span><span class=\"p\">:</span> <span class=\"s2\">&quot;DBT_CLOUD_AUTH_TOKEN&quot;</span><span class=\"p\">},</span> <span class=\"s2\">&quot;account_id&quot;</span><span class=\"p\">:</span> <span class=\"mi\">77777</span><span class=\"p\">}</span>\n<span class=\"p\">)</span>\n<span class=\"n\">run_dbt_nightly_sync</span> <span class=\"o\">=</span> <span class=\"n\">dbt_cloud_run_op</span><span class=\"o\">.</span><span class=\"n\">configured</span><span class=\"p\">(</span>\n    <span class=\"p\">{</span><span class=\"s2\">&quot;job_id&quot;</span><span class=\"p\">:</span> <span class=\"mi\">54321</span><span class=\"p\">},</span> <span class=\"n\">name</span><span class=\"o\">=</span><span class=\"s2\">&quot;run_dbt_nightly_sync&quot;</span>\n<span class=\"p\">)</span>\n\n<span class=\"nd\">@job</span><span class=\"p\">(</span><span class=\"n\">resource_defs</span><span class=\"o\">=</span><span class=\"p\">{</span><span class=\"s2\">&quot;dbt_cloud&quot;</span><span class=\"p\">:</span> <span class=\"n\">my_dbt_cloud_resource</span><span class=\"p\">})</span>\n<span class=\"k\">def</span> <span class=\"nf\">dbt_cloud</span><span class=\"p\">():</span>\n    <span class=\"n\">run_dbt_nightly_sync</span><span class=\"p\">()</span>\n</pre></div>\n</div>\n</dd></dl>\n\n</div>\n</div>\n<div class=\"section\" id=\"resources\">\n<h2>Resources<a class=\"headerlink\" href=\"#resources\" title=\"Permalink to this headline\">\u00b6</a></h2>\n<div class=\"section\" id=\"cli-resources\">\n<h3>CLI Resources<a class=\"headerlink\" href=\"#cli-resources\" title=\"Permalink to this headline\">\u00b6</a></h3>\n<dl class=\"py class\">\n<dt id=\"dagster_dbt.DbtCliResource\">\n<em class=\"property\"><span class=\"pre\">class</span> </em><code class=\"sig-prename descclassname\"><span class=\"pre\">dagster_dbt.</span></code><code class=\"sig-name descname\"><span class=\"pre\">DbtCliResource</span></code><span class=\"sig-paren\">(</span><em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">executable</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">default_flags</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">warn_error</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">ignore_handled_error</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">target_path</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">logger</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">None</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">docs_url</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">None</span></span></em><span class=\"sig-paren\">)</span><a class=\"reference internal\" href=\"../../../../../_modules/dagster_dbt/cli/resources#DbtCliResource\"><span class=\"viewcode-link\"><span class=\"pre\">[source]</span></span></a><a class=\"headerlink\" href=\"#dagster_dbt.DbtCliResource\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>A resource that allows you to execute dbt cli commands. For the most up-to-date documentation on\nthe specific parameters available to you for each command, check out the dbt docs:</p>\n<p><a class=\"reference external\" href=\"https://docs.getdbt.com/reference/commands/run\">https://docs.getdbt.com/reference/commands/run</a></p>\n<p>To use this as a dagster resource, we recommend using\n<a class=\"reference internal\" href=\"#dagster_dbt.dbt_cli_resource\" title=\"dagster_dbt.dbt_cli_resource\"><code class=\"xref py py-func docutils literal notranslate\"><span class=\"pre\">dbt_cli_resource</span></code></a>.</p>\n<dl class=\"py method\">\n<dt id=\"dagster_dbt.DbtCliResource.build\">\n<code class=\"sig-name descname\"><span class=\"pre\">build</span></code><span class=\"sig-paren\">(</span><em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">select</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">None</span></span></em>, <em class=\"sig-param\"><span class=\"o\"><span class=\"pre\">**</span></span><span class=\"n\"><span class=\"pre\">kwargs</span></span></em><span class=\"sig-paren\">)</span><a class=\"reference internal\" href=\"../../../../../_modules/dagster_dbt/cli/resources#DbtCliResource.build\"><span class=\"viewcode-link\"><span class=\"pre\">[source]</span></span></a><a class=\"headerlink\" href=\"#dagster_dbt.DbtCliResource.build\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Run the <code class=\"docutils literal notranslate\"><span class=\"pre\">build</span></code> command on a dbt project. kwargs are passed in as additional parameters.</p>\n<dl class=\"field-list simple\">\n<dt class=\"field-odd\">Parameters</dt>\n<dd class=\"field-odd\"><p><strong>select</strong> (<em>List</em><em>[</em><a class=\"reference external\" href=\"https://docs.python.org/3/library/stdtypes.html#str\" title=\"(in Python v3.8)\"><em>str</em></a><em>]</em><em>, </em><em>optional</em>) \u2013 the models/resources to include in the run.</p>\n</dd>\n<dt class=\"field-even\">Returns</dt>\n<dd class=\"field-even\"><p><dl class=\"simple\">\n<dt>An instance of <a class=\"reference internal\" href=\"#dagster_dbt.DbtCliOutput\" title=\"dagster_dbt.DbtCliOutput\"><code class=\"xref py py-class docutils literal notranslate\"><span class=\"pre\">DbtCliOutput</span></code></a> containing</dt><dd><p>parsed log output as well as the contents of run_results.json (if applicable).</p>\n</dd>\n</dl>\n</p>\n</dd>\n<dt class=\"field-odd\">Return type</dt>\n<dd class=\"field-odd\"><p><a class=\"reference internal\" href=\"#dagster_dbt.DbtCliOutput\" title=\"dagster_dbt.DbtCliOutput\">DbtCliOutput</a></p>\n</dd>\n</dl>\n</dd></dl>\n\n<dl class=\"py method\">\n<dt id=\"dagster_dbt.DbtCliResource.cli\">\n<code class=\"sig-name descname\"><span class=\"pre\">cli</span></code><span class=\"sig-paren\">(</span><em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">command</span></span></em>, <em class=\"sig-param\"><span class=\"o\"><span class=\"pre\">**</span></span><span class=\"n\"><span class=\"pre\">kwargs</span></span></em><span class=\"sig-paren\">)</span><a class=\"reference internal\" href=\"../../../../../_modules/dagster_dbt/cli/resources#DbtCliResource.cli\"><span class=\"viewcode-link\"><span class=\"pre\">[source]</span></span></a><a class=\"headerlink\" href=\"#dagster_dbt.DbtCliResource.cli\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><dl class=\"simple\">\n<dt>Executes a dbt CLI command. Params passed in as keyword arguments will be merged with the</dt><dd><p>default flags that were configured on resource initialization (if any) overriding the\ndefault values if necessary.</p>\n</dd>\n</dl>\n<dl class=\"field-list simple\">\n<dt class=\"field-odd\">Parameters</dt>\n<dd class=\"field-odd\"><p><strong>command</strong> (<a class=\"reference external\" href=\"https://docs.python.org/3/library/stdtypes.html#str\" title=\"(in Python v3.8)\"><em>str</em></a>) \u2013 The command you wish to run (e.g. \u2018run\u2019, \u2018test\u2019, \u2018docs generate\u2019, etc.)</p>\n</dd>\n<dt class=\"field-even\">Returns</dt>\n<dd class=\"field-even\"><p><dl class=\"simple\">\n<dt>An instance of <a class=\"reference internal\" href=\"#dagster_dbt.DbtCliOutput\" title=\"dagster_dbt.DbtCliOutput\"><code class=\"xref py py-class docutils literal notranslate\"><span class=\"pre\">DbtCliOutput</span></code></a> containing</dt><dd><p>parsed log output as well as the contents of run_results.json (if applicable).</p>\n</dd>\n</dl>\n</p>\n</dd>\n<dt class=\"field-odd\">Return type</dt>\n<dd class=\"field-odd\"><p><a class=\"reference internal\" href=\"#dagster_dbt.DbtCliOutput\" title=\"dagster_dbt.DbtCliOutput\">DbtCliOutput</a></p>\n</dd>\n</dl>\n</dd></dl>\n\n<dl class=\"py method\">\n<dt id=\"dagster_dbt.DbtCliResource.compile\">\n<code class=\"sig-name descname\"><span class=\"pre\">compile</span></code><span class=\"sig-paren\">(</span><em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">models</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">None</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">exclude</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">None</span></span></em>, <em class=\"sig-param\"><span class=\"o\"><span class=\"pre\">**</span></span><span class=\"n\"><span class=\"pre\">kwargs</span></span></em><span class=\"sig-paren\">)</span><a class=\"reference internal\" href=\"../../../../../_modules/dagster_dbt/cli/resources#DbtCliResource.compile\"><span class=\"viewcode-link\"><span class=\"pre\">[source]</span></span></a><a class=\"headerlink\" href=\"#dagster_dbt.DbtCliResource.compile\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Run the <code class=\"docutils literal notranslate\"><span class=\"pre\">compile</span></code> command on a dbt project. kwargs are passed in as additional parameters.</p>\n<dl class=\"field-list simple\">\n<dt class=\"field-odd\">Parameters</dt>\n<dd class=\"field-odd\"><ul class=\"simple\">\n<li><p><strong>models</strong> (<em>List</em><em>[</em><a class=\"reference external\" href=\"https://docs.python.org/3/library/stdtypes.html#str\" title=\"(in Python v3.8)\"><em>str</em></a><em>]</em><em>, </em><em>optional</em>) \u2013 the models to include in compilation.</p></li>\n<li><p><strong>exclude</strong> (<em>List</em><em>[</em><a class=\"reference external\" href=\"https://docs.python.org/3/library/stdtypes.html#str\" title=\"(in Python v3.8)\"><em>str</em></a><em>]</em><em>)</em><em>, </em><em>optional</em>) \u2013 the models to exclude from compilation.</p></li>\n</ul>\n</dd>\n<dt class=\"field-even\">Returns</dt>\n<dd class=\"field-even\"><p><dl class=\"simple\">\n<dt>An instance of <a class=\"reference internal\" href=\"#dagster_dbt.DbtCliOutput\" title=\"dagster_dbt.DbtCliOutput\"><code class=\"xref py py-class docutils literal notranslate\"><span class=\"pre\">DbtCliOutput</span></code></a> containing</dt><dd><p>parsed log output as well as the contents of run_results.json (if applicable).</p>\n</dd>\n</dl>\n</p>\n</dd>\n<dt class=\"field-odd\">Return type</dt>\n<dd class=\"field-odd\"><p><a class=\"reference internal\" href=\"#dagster_dbt.DbtCliOutput\" title=\"dagster_dbt.DbtCliOutput\">DbtCliOutput</a></p>\n</dd>\n</dl>\n</dd></dl>\n\n<dl class=\"py method\">\n<dt id=\"dagster_dbt.DbtCliResource.default_flags\">\n<em class=\"property\"><span class=\"pre\">property</span> </em><code class=\"sig-name descname\"><span class=\"pre\">default_flags</span></code><a class=\"headerlink\" href=\"#dagster_dbt.DbtCliResource.default_flags\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>A set of params populated from resource config that are passed as flags to each dbt CLI command.</p>\n</dd></dl>\n\n<dl class=\"py method\">\n<dt id=\"dagster_dbt.DbtCliResource.freshness\">\n<code class=\"sig-name descname\"><span class=\"pre\">freshness</span></code><span class=\"sig-paren\">(</span><em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">select</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">None</span></span></em>, <em class=\"sig-param\"><span class=\"o\"><span class=\"pre\">**</span></span><span class=\"n\"><span class=\"pre\">kwargs</span></span></em><span class=\"sig-paren\">)</span><a class=\"reference internal\" href=\"../../../../../_modules/dagster_dbt/cli/resources#DbtCliResource.freshness\"><span class=\"viewcode-link\"><span class=\"pre\">[source]</span></span></a><a class=\"headerlink\" href=\"#dagster_dbt.DbtCliResource.freshness\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Run the <code class=\"docutils literal notranslate\"><span class=\"pre\">source</span> <span class=\"pre\">snapshot-freshness</span></code> command on a dbt project. kwargs are passed in as additional parameters.</p>\n<dl class=\"field-list simple\">\n<dt class=\"field-odd\">Parameters</dt>\n<dd class=\"field-odd\"><p><strong>select</strong> (<em>List</em><em>[</em><a class=\"reference external\" href=\"https://docs.python.org/3/library/stdtypes.html#str\" title=\"(in Python v3.8)\"><em>str</em></a><em>]</em><em>, </em><em>optional</em>) \u2013 the sources to include in the run.</p>\n</dd>\n<dt class=\"field-even\">Returns</dt>\n<dd class=\"field-even\"><p><dl class=\"simple\">\n<dt>An instance of <a class=\"reference internal\" href=\"#dagster_dbt.DbtCliOutput\" title=\"dagster_dbt.DbtCliOutput\"><code class=\"xref py py-class docutils literal notranslate\"><span class=\"pre\">DbtCliOutput</span></code></a> containing</dt><dd><p>parsed log output as well as the contents of run_results.json (if applicable).</p>\n</dd>\n</dl>\n</p>\n</dd>\n<dt class=\"field-odd\">Return type</dt>\n<dd class=\"field-odd\"><p><a class=\"reference internal\" href=\"#dagster_dbt.DbtCliOutput\" title=\"dagster_dbt.DbtCliOutput\">DbtCliOutput</a></p>\n</dd>\n</dl>\n</dd></dl>\n\n<dl class=\"py method\">\n<dt id=\"dagster_dbt.DbtCliResource.generate_docs\">\n<code class=\"sig-name descname\"><span class=\"pre\">generate_docs</span></code><span class=\"sig-paren\">(</span><em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">compile_project</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">False</span></span></em>, <em class=\"sig-param\"><span class=\"o\"><span class=\"pre\">**</span></span><span class=\"n\"><span class=\"pre\">kwargs</span></span></em><span class=\"sig-paren\">)</span><a class=\"reference internal\" href=\"../../../../../_modules/dagster_dbt/cli/resources#DbtCliResource.generate_docs\"><span class=\"viewcode-link\"><span class=\"pre\">[source]</span></span></a><a class=\"headerlink\" href=\"#dagster_dbt.DbtCliResource.generate_docs\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Run the <code class=\"docutils literal notranslate\"><span class=\"pre\">docs</span> <span class=\"pre\">generate</span></code> command on a dbt project. kwargs are passed in as additional parameters.</p>\n<dl class=\"field-list simple\">\n<dt class=\"field-odd\">Parameters</dt>\n<dd class=\"field-odd\"><p><strong>compile_project</strong> (<a class=\"reference external\" href=\"https://docs.python.org/3/library/functions.html#bool\" title=\"(in Python v3.8)\"><em>bool</em></a><em>, </em><em>optional</em>) \u2013 If true, compile the project before generating a catalog.</p>\n</dd>\n<dt class=\"field-even\">Returns</dt>\n<dd class=\"field-even\"><p><dl class=\"simple\">\n<dt>An instance of <a class=\"reference internal\" href=\"#dagster_dbt.DbtCliOutput\" title=\"dagster_dbt.DbtCliOutput\"><code class=\"xref py py-class docutils literal notranslate\"><span class=\"pre\">DbtCliOutput</span></code></a> containing</dt><dd><p>parsed log output as well as the contents of run_results.json (if applicable).</p>\n</dd>\n</dl>\n</p>\n</dd>\n<dt class=\"field-odd\">Return type</dt>\n<dd class=\"field-odd\"><p><a class=\"reference internal\" href=\"#dagster_dbt.DbtCliOutput\" title=\"dagster_dbt.DbtCliOutput\">DbtCliOutput</a></p>\n</dd>\n</dl>\n</dd></dl>\n\n<dl class=\"py method\">\n<dt id=\"dagster_dbt.DbtCliResource.get_manifest_json\">\n<code class=\"sig-name descname\"><span class=\"pre\">get_manifest_json</span></code><span class=\"sig-paren\">(</span><em class=\"sig-param\"><span class=\"o\"><span class=\"pre\">**</span></span><span class=\"n\"><span class=\"pre\">kwargs</span></span></em><span class=\"sig-paren\">)</span><a class=\"reference internal\" href=\"../../../../../_modules/dagster_dbt/cli/resources#DbtCliResource.get_manifest_json\"><span class=\"viewcode-link\"><span class=\"pre\">[source]</span></span></a><a class=\"headerlink\" href=\"#dagster_dbt.DbtCliResource.get_manifest_json\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Get a parsed version of the manifest.json file for the relevant dbt project.</p>\n<dl class=\"field-list simple\">\n<dt class=\"field-odd\">Returns</dt>\n<dd class=\"field-odd\"><p><dl class=\"simple\">\n<dt>dictionary containing the parsed contents of the manifest json file</dt><dd><p>for this dbt project.</p>\n</dd>\n</dl>\n</p>\n</dd>\n<dt class=\"field-even\">Return type</dt>\n<dd class=\"field-even\"><p>Dict[<a class=\"reference external\" href=\"https://docs.python.org/3/library/stdtypes.html#str\" title=\"(in Python v3.8)\">str</a>, Any]</p>\n</dd>\n</dl>\n</dd></dl>\n\n<dl class=\"py method\">\n<dt id=\"dagster_dbt.DbtCliResource.get_run_results_json\">\n<code class=\"sig-name descname\"><span class=\"pre\">get_run_results_json</span></code><span class=\"sig-paren\">(</span><em class=\"sig-param\"><span class=\"o\"><span class=\"pre\">**</span></span><span class=\"n\"><span class=\"pre\">kwargs</span></span></em><span class=\"sig-paren\">)</span><a class=\"reference internal\" href=\"../../../../../_modules/dagster_dbt/cli/resources#DbtCliResource.get_run_results_json\"><span class=\"viewcode-link\"><span class=\"pre\">[source]</span></span></a><a class=\"headerlink\" href=\"#dagster_dbt.DbtCliResource.get_run_results_json\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Get a parsed version of the run_results.json file for the relevant dbt project.</p>\n<dl class=\"field-list simple\">\n<dt class=\"field-odd\">Returns</dt>\n<dd class=\"field-odd\"><p><dl class=\"simple\">\n<dt>dictionary containing the parsed contents of the manifest json file</dt><dd><p>for this dbt project.</p>\n</dd>\n</dl>\n</p>\n</dd>\n<dt class=\"field-even\">Return type</dt>\n<dd class=\"field-even\"><p>Dict[<a class=\"reference external\" href=\"https://docs.python.org/3/library/stdtypes.html#str\" title=\"(in Python v3.8)\">str</a>, Any]</p>\n</dd>\n</dl>\n</dd></dl>\n\n<dl class=\"py method\">\n<dt id=\"dagster_dbt.DbtCliResource.ls\">\n<code class=\"sig-name descname\"><span class=\"pre\">ls</span></code><span class=\"sig-paren\">(</span><em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">select</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">None</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">models</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">None</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">exclude</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">None</span></span></em>, <em class=\"sig-param\"><span class=\"o\"><span class=\"pre\">**</span></span><span class=\"n\"><span class=\"pre\">kwargs</span></span></em><span class=\"sig-paren\">)</span><a class=\"reference internal\" href=\"../../../../../_modules/dagster_dbt/cli/resources#DbtCliResource.ls\"><span class=\"viewcode-link\"><span class=\"pre\">[source]</span></span></a><a class=\"headerlink\" href=\"#dagster_dbt.DbtCliResource.ls\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Run the <code class=\"docutils literal notranslate\"><span class=\"pre\">ls</span></code> command on a dbt project. kwargs are passed in as additional parameters.</p>\n<dl class=\"field-list simple\">\n<dt class=\"field-odd\">Parameters</dt>\n<dd class=\"field-odd\"><ul class=\"simple\">\n<li><p><strong>select</strong> (<em>List</em><em>[</em><a class=\"reference external\" href=\"https://docs.python.org/3/library/stdtypes.html#str\" title=\"(in Python v3.8)\"><em>str</em></a><em>]</em><em>, </em><em>optional</em>) \u2013 the resources to include in the output.</p></li>\n<li><p><strong>models</strong> (<em>List</em><em>[</em><a class=\"reference external\" href=\"https://docs.python.org/3/library/stdtypes.html#str\" title=\"(in Python v3.8)\"><em>str</em></a><em>]</em><em>, </em><em>optional</em>) \u2013 the models to include in the output.</p></li>\n<li><p><strong>exclude</strong> (<em>List</em><em>[</em><a class=\"reference external\" href=\"https://docs.python.org/3/library/stdtypes.html#str\" title=\"(in Python v3.8)\"><em>str</em></a><em>]</em><em>, </em><em>optional</em>) \u2013 the resources to exclude from the output.</p></li>\n</ul>\n</dd>\n<dt class=\"field-even\">Returns</dt>\n<dd class=\"field-even\"><p><dl class=\"simple\">\n<dt>An instance of <a class=\"reference internal\" href=\"#dagster_dbt.DbtCliOutput\" title=\"dagster_dbt.DbtCliOutput\"><code class=\"xref py py-class docutils literal notranslate\"><span class=\"pre\">DbtCliOutput</span></code></a> containing</dt><dd><p>parsed log output as well as the contents of run_results.json (if applicable).</p>\n</dd>\n</dl>\n</p>\n</dd>\n<dt class=\"field-odd\">Return type</dt>\n<dd class=\"field-odd\"><p><a class=\"reference internal\" href=\"#dagster_dbt.DbtCliOutput\" title=\"dagster_dbt.DbtCliOutput\">DbtCliOutput</a></p>\n</dd>\n</dl>\n</dd></dl>\n\n<dl class=\"py method\">\n<dt id=\"dagster_dbt.DbtCliResource.remove_run_results_json\">\n<code class=\"sig-name descname\"><span class=\"pre\">remove_run_results_json</span></code><span class=\"sig-paren\">(</span><em class=\"sig-param\"><span class=\"o\"><span class=\"pre\">**</span></span><span class=\"n\"><span class=\"pre\">kwargs</span></span></em><span class=\"sig-paren\">)</span><a class=\"reference internal\" href=\"../../../../../_modules/dagster_dbt/cli/resources#DbtCliResource.remove_run_results_json\"><span class=\"viewcode-link\"><span class=\"pre\">[source]</span></span></a><a class=\"headerlink\" href=\"#dagster_dbt.DbtCliResource.remove_run_results_json\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Remove the run_results.json file from previous runs (if it exists).</p>\n</dd></dl>\n\n<dl class=\"py method\">\n<dt id=\"dagster_dbt.DbtCliResource.run\">\n<code class=\"sig-name descname\"><span class=\"pre\">run</span></code><span class=\"sig-paren\">(</span><em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">models</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">None</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">exclude</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">None</span></span></em>, <em class=\"sig-param\"><span class=\"o\"><span class=\"pre\">**</span></span><span class=\"n\"><span class=\"pre\">kwargs</span></span></em><span class=\"sig-paren\">)</span><a class=\"reference internal\" href=\"../../../../../_modules/dagster_dbt/cli/resources#DbtCliResource.run\"><span class=\"viewcode-link\"><span class=\"pre\">[source]</span></span></a><a class=\"headerlink\" href=\"#dagster_dbt.DbtCliResource.run\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Run the <code class=\"docutils literal notranslate\"><span class=\"pre\">run</span></code> command on a dbt project. kwargs are passed in as additional parameters.</p>\n<dl class=\"field-list simple\">\n<dt class=\"field-odd\">Parameters</dt>\n<dd class=\"field-odd\"><ul class=\"simple\">\n<li><p><strong>models</strong> (<em>List</em><em>[</em><a class=\"reference external\" href=\"https://docs.python.org/3/library/stdtypes.html#str\" title=\"(in Python v3.8)\"><em>str</em></a><em>]</em><em>, </em><em>optional</em>) \u2013 the models to include in compilation.</p></li>\n<li><p><strong>exclude</strong> (<em>List</em><em>[</em><a class=\"reference external\" href=\"https://docs.python.org/3/library/stdtypes.html#str\" title=\"(in Python v3.8)\"><em>str</em></a><em>]</em><em>)</em><em>, </em><em>optional</em>) \u2013 the models to exclude from compilation.</p></li>\n</ul>\n</dd>\n<dt class=\"field-even\">Returns</dt>\n<dd class=\"field-even\"><p><dl class=\"simple\">\n<dt>An instance of <a class=\"reference internal\" href=\"#dagster_dbt.DbtCliOutput\" title=\"dagster_dbt.DbtCliOutput\"><code class=\"xref py py-class docutils literal notranslate\"><span class=\"pre\">DbtCliOutput</span></code></a> containing</dt><dd><p>parsed log output as well as the contents of run_results.json (if applicable).</p>\n</dd>\n</dl>\n</p>\n</dd>\n<dt class=\"field-odd\">Return type</dt>\n<dd class=\"field-odd\"><p><a class=\"reference internal\" href=\"#dagster_dbt.DbtCliOutput\" title=\"dagster_dbt.DbtCliOutput\">DbtCliOutput</a></p>\n</dd>\n</dl>\n</dd></dl>\n\n<dl class=\"py method\">\n<dt id=\"dagster_dbt.DbtCliResource.run_operation\">\n<code class=\"sig-name descname\"><span class=\"pre\">run_operation</span></code><span class=\"sig-paren\">(</span><em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">macro</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">args</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">None</span></span></em>, <em class=\"sig-param\"><span class=\"o\"><span class=\"pre\">**</span></span><span class=\"n\"><span class=\"pre\">kwargs</span></span></em><span class=\"sig-paren\">)</span><a class=\"reference internal\" href=\"../../../../../_modules/dagster_dbt/cli/resources#DbtCliResource.run_operation\"><span class=\"viewcode-link\"><span class=\"pre\">[source]</span></span></a><a class=\"headerlink\" href=\"#dagster_dbt.DbtCliResource.run_operation\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Run the <code class=\"docutils literal notranslate\"><span class=\"pre\">run-operation</span></code> command on a dbt project. kwargs are passed in as additional parameters.</p>\n<dl class=\"field-list simple\">\n<dt class=\"field-odd\">Parameters</dt>\n<dd class=\"field-odd\"><ul class=\"simple\">\n<li><p><strong>macro</strong> (<a class=\"reference external\" href=\"https://docs.python.org/3/library/stdtypes.html#str\" title=\"(in Python v3.8)\"><em>str</em></a>) \u2013 the dbt macro to invoke.</p></li>\n<li><p><strong>args</strong> (<em>Dict</em><em>[</em><a class=\"reference external\" href=\"https://docs.python.org/3/library/stdtypes.html#str\" title=\"(in Python v3.8)\"><em>str</em></a><em>, </em><em>Any</em><em>]</em><em>, </em><em>optional</em>) \u2013 the keyword arguments to be supplied to the macro.</p></li>\n</ul>\n</dd>\n<dt class=\"field-even\">Returns</dt>\n<dd class=\"field-even\"><p><dl class=\"simple\">\n<dt>An instance of <a class=\"reference internal\" href=\"#dagster_dbt.DbtCliOutput\" title=\"dagster_dbt.DbtCliOutput\"><code class=\"xref py py-class docutils literal notranslate\"><span class=\"pre\">DbtCliOutput</span></code></a> containing</dt><dd><p>parsed log output as well as the contents of run_results.json (if applicable).</p>\n</dd>\n</dl>\n</p>\n</dd>\n<dt class=\"field-odd\">Return type</dt>\n<dd class=\"field-odd\"><p><a class=\"reference internal\" href=\"#dagster_dbt.DbtCliOutput\" title=\"dagster_dbt.DbtCliOutput\">DbtCliOutput</a></p>\n</dd>\n</dl>\n</dd></dl>\n\n<dl class=\"py method\">\n<dt id=\"dagster_dbt.DbtCliResource.seed\">\n<code class=\"sig-name descname\"><span class=\"pre\">seed</span></code><span class=\"sig-paren\">(</span><em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">show</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">False</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">select</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">None</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">exclude</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">None</span></span></em>, <em class=\"sig-param\"><span class=\"o\"><span class=\"pre\">**</span></span><span class=\"n\"><span class=\"pre\">kwargs</span></span></em><span class=\"sig-paren\">)</span><a class=\"reference internal\" href=\"../../../../../_modules/dagster_dbt/cli/resources#DbtCliResource.seed\"><span class=\"viewcode-link\"><span class=\"pre\">[source]</span></span></a><a class=\"headerlink\" href=\"#dagster_dbt.DbtCliResource.seed\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Run the <code class=\"docutils literal notranslate\"><span class=\"pre\">seed</span></code> command on a dbt project. kwargs are passed in as additional parameters.</p>\n<dl class=\"field-list simple\">\n<dt class=\"field-odd\">Parameters</dt>\n<dd class=\"field-odd\"><ul class=\"simple\">\n<li><p><strong>show</strong> (<a class=\"reference external\" href=\"https://docs.python.org/3/library/functions.html#bool\" title=\"(in Python v3.8)\"><em>bool</em></a><em>, </em><em>optional</em>) \u2013 If <code class=\"docutils literal notranslate\"><span class=\"pre\">True</span></code>, then show a sample of the seeded data in the\nresponse. Defaults to <code class=\"docutils literal notranslate\"><span class=\"pre\">False</span></code>.</p></li>\n<li><p><strong>select</strong> (<em>List</em><em>[</em><a class=\"reference external\" href=\"https://docs.python.org/3/library/stdtypes.html#str\" title=\"(in Python v3.8)\"><em>str</em></a><em>]</em><em>, </em><em>optional</em>) \u2013 the snapshots to include in the run.</p></li>\n<li><p><strong>exclude</strong> (<em>List</em><em>[</em><a class=\"reference external\" href=\"https://docs.python.org/3/library/stdtypes.html#str\" title=\"(in Python v3.8)\"><em>str</em></a><em>]</em><em>, </em><em>optional</em>) \u2013 the snapshots to exclude from the run.</p></li>\n</ul>\n</dd>\n<dt class=\"field-even\">Returns</dt>\n<dd class=\"field-even\"><p><dl class=\"simple\">\n<dt>An instance of <a class=\"reference internal\" href=\"#dagster_dbt.DbtCliOutput\" title=\"dagster_dbt.DbtCliOutput\"><code class=\"xref py py-class docutils literal notranslate\"><span class=\"pre\">DbtCliOutput</span></code></a> containing</dt><dd><p>parsed log output as well as the contents of run_results.json (if applicable).</p>\n</dd>\n</dl>\n</p>\n</dd>\n<dt class=\"field-odd\">Return type</dt>\n<dd class=\"field-odd\"><p><a class=\"reference internal\" href=\"#dagster_dbt.DbtCliOutput\" title=\"dagster_dbt.DbtCliOutput\">DbtCliOutput</a></p>\n</dd>\n</dl>\n</dd></dl>\n\n<dl class=\"py method\">\n<dt id=\"dagster_dbt.DbtCliResource.snapshot\">\n<code class=\"sig-name descname\"><span class=\"pre\">snapshot</span></code><span class=\"sig-paren\">(</span><em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">select</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">None</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">exclude</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">None</span></span></em>, <em class=\"sig-param\"><span class=\"o\"><span class=\"pre\">**</span></span><span class=\"n\"><span class=\"pre\">kwargs</span></span></em><span class=\"sig-paren\">)</span><a class=\"reference internal\" href=\"../../../../../_modules/dagster_dbt/cli/resources#DbtCliResource.snapshot\"><span class=\"viewcode-link\"><span class=\"pre\">[source]</span></span></a><a class=\"headerlink\" href=\"#dagster_dbt.DbtCliResource.snapshot\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Run the <code class=\"docutils literal notranslate\"><span class=\"pre\">snapshot</span></code> command on a dbt project. kwargs are passed in as additional parameters.</p>\n<dl class=\"field-list simple\">\n<dt class=\"field-odd\">Parameters</dt>\n<dd class=\"field-odd\"><ul class=\"simple\">\n<li><p><strong>select</strong> (<em>List</em><em>[</em><a class=\"reference external\" href=\"https://docs.python.org/3/library/stdtypes.html#str\" title=\"(in Python v3.8)\"><em>str</em></a><em>]</em><em>, </em><em>optional</em>) \u2013 the snapshots to include in the run.</p></li>\n<li><p><strong>exclude</strong> (<em>List</em><em>[</em><a class=\"reference external\" href=\"https://docs.python.org/3/library/stdtypes.html#str\" title=\"(in Python v3.8)\"><em>str</em></a><em>]</em><em>, </em><em>optional</em>) \u2013 the snapshots to exclude from the run.</p></li>\n</ul>\n</dd>\n<dt class=\"field-even\">Returns</dt>\n<dd class=\"field-even\"><p><dl class=\"simple\">\n<dt>An instance of <a class=\"reference internal\" href=\"#dagster_dbt.DbtCliOutput\" title=\"dagster_dbt.DbtCliOutput\"><code class=\"xref py py-class docutils literal notranslate\"><span class=\"pre\">DbtCliOutput</span></code></a> containing</dt><dd><p>parsed log output as well as the contents of run_results.json (if applicable).</p>\n</dd>\n</dl>\n</p>\n</dd>\n<dt class=\"field-odd\">Return type</dt>\n<dd class=\"field-odd\"><p><a class=\"reference internal\" href=\"#dagster_dbt.DbtCliOutput\" title=\"dagster_dbt.DbtCliOutput\">DbtCliOutput</a></p>\n</dd>\n</dl>\n</dd></dl>\n\n<dl class=\"py method\">\n<dt id=\"dagster_dbt.DbtCliResource.strict_flags\">\n<em class=\"property\"><span class=\"pre\">property</span> </em><code class=\"sig-name descname\"><span class=\"pre\">strict_flags</span></code><a class=\"headerlink\" href=\"#dagster_dbt.DbtCliResource.strict_flags\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>A set of flags that should not be auto-populated from the default flags unless they are\narguments to the associated function.</p>\n</dd></dl>\n\n<dl class=\"py method\">\n<dt id=\"dagster_dbt.DbtCliResource.test\">\n<code class=\"sig-name descname\"><span class=\"pre\">test</span></code><span class=\"sig-paren\">(</span><em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">models</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">None</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">exclude</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">None</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">data</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">True</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">schema</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">True</span></span></em>, <em class=\"sig-param\"><span class=\"o\"><span class=\"pre\">**</span></span><span class=\"n\"><span class=\"pre\">kwargs</span></span></em><span class=\"sig-paren\">)</span><a class=\"reference internal\" href=\"../../../../../_modules/dagster_dbt/cli/resources#DbtCliResource.test\"><span class=\"viewcode-link\"><span class=\"pre\">[source]</span></span></a><a class=\"headerlink\" href=\"#dagster_dbt.DbtCliResource.test\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Run the <code class=\"docutils literal notranslate\"><span class=\"pre\">test</span></code> command on a dbt project. kwargs are passed in as additional parameters.</p>\n<dl class=\"field-list simple\">\n<dt class=\"field-odd\">Parameters</dt>\n<dd class=\"field-odd\"><ul class=\"simple\">\n<li><p><strong>models</strong> (<em>List</em><em>[</em><a class=\"reference external\" href=\"https://docs.python.org/3/library/stdtypes.html#str\" title=\"(in Python v3.8)\"><em>str</em></a><em>]</em><em>, </em><em>optional</em>) \u2013 the models to include in testing.</p></li>\n<li><p><strong>exclude</strong> (<em>List</em><em>[</em><a class=\"reference external\" href=\"https://docs.python.org/3/library/stdtypes.html#str\" title=\"(in Python v3.8)\"><em>str</em></a><em>]</em><em>, </em><em>optional</em>) \u2013 the models to exclude from testing.</p></li>\n<li><p><strong>data</strong> (<a class=\"reference external\" href=\"https://docs.python.org/3/library/functions.html#bool\" title=\"(in Python v3.8)\"><em>bool</em></a><em>, </em><em>optional</em>) \u2013 If <code class=\"docutils literal notranslate\"><span class=\"pre\">True</span></code> (default), then run data tests.</p></li>\n<li><p><strong>schema</strong> (<a class=\"reference external\" href=\"https://docs.python.org/3/library/functions.html#bool\" title=\"(in Python v3.8)\"><em>bool</em></a><em>, </em><em>optional</em>) \u2013 If <code class=\"docutils literal notranslate\"><span class=\"pre\">True</span></code> (default), then run schema tests.</p></li>\n</ul>\n</dd>\n<dt class=\"field-even\">Returns</dt>\n<dd class=\"field-even\"><p><dl class=\"simple\">\n<dt>An instance of <a class=\"reference internal\" href=\"#dagster_dbt.DbtCliOutput\" title=\"dagster_dbt.DbtCliOutput\"><code class=\"xref py py-class docutils literal notranslate\"><span class=\"pre\">DbtCliOutput</span></code></a> containing</dt><dd><p>parsed log output as well as the contents of run_results.json (if applicable).</p>\n</dd>\n</dl>\n</p>\n</dd>\n<dt class=\"field-odd\">Return type</dt>\n<dd class=\"field-odd\"><p><a class=\"reference internal\" href=\"#dagster_dbt.DbtCliOutput\" title=\"dagster_dbt.DbtCliOutput\">DbtCliOutput</a></p>\n</dd>\n</dl>\n</dd></dl>\n\n</dd></dl>\n\n<dl class=\"py class\">\n<dt id=\"dagster_dbt.DbtCliOutput\">\n<em class=\"property\"><span class=\"pre\">class</span> </em><code class=\"sig-prename descclassname\"><span class=\"pre\">dagster_dbt.</span></code><code class=\"sig-name descname\"><span class=\"pre\">DbtCliOutput</span></code><span class=\"sig-paren\">(</span><em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">command</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">return_code</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">raw_output</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">logs</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">result</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">docs_url</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">None</span></span></em><span class=\"sig-paren\">)</span><a class=\"reference internal\" href=\"../../../../../_modules/dagster_dbt/cli/types#DbtCliOutput\"><span class=\"viewcode-link\"><span class=\"pre\">[source]</span></span></a><a class=\"headerlink\" href=\"#dagster_dbt.DbtCliOutput\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>The results of executing a dbt command, along with additional metadata about the dbt CLI\nprocess that was run.</p>\n<p>Note that users should not construct instances of this class directly. This class is intended\nto be constructed from the JSON output of dbt commands.</p>\n<dl class=\"py attribute\">\n<dt id=\"dagster_dbt.DbtCliOutput.command\">\n<code class=\"sig-name descname\"><span class=\"pre\">command</span></code><a class=\"headerlink\" href=\"#dagster_dbt.DbtCliOutput.command\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>The full shell command that was executed.</p>\n<dl class=\"field-list simple\">\n<dt class=\"field-odd\">Type</dt>\n<dd class=\"field-odd\"><p><a class=\"reference external\" href=\"https://docs.python.org/3/library/stdtypes.html#str\" title=\"(in Python v3.8)\">str</a></p>\n</dd>\n</dl>\n</dd></dl>\n\n<dl class=\"py attribute\">\n<dt id=\"dagster_dbt.DbtCliOutput.return_code\">\n<code class=\"sig-name descname\"><span class=\"pre\">return_code</span></code><a class=\"headerlink\" href=\"#dagster_dbt.DbtCliOutput.return_code\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>The return code of the dbt CLI process.</p>\n<dl class=\"field-list simple\">\n<dt class=\"field-odd\">Type</dt>\n<dd class=\"field-odd\"><p><a class=\"reference external\" href=\"https://docs.python.org/3/library/functions.html#int\" title=\"(in Python v3.8)\">int</a></p>\n</dd>\n</dl>\n</dd></dl>\n\n<dl class=\"py attribute\">\n<dt id=\"dagster_dbt.DbtCliOutput.raw_output\">\n<code class=\"sig-name descname\"><span class=\"pre\">raw_output</span></code><a class=\"headerlink\" href=\"#dagster_dbt.DbtCliOutput.raw_output\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>The raw output (<code class=\"docutils literal notranslate\"><span class=\"pre\">stdout</span></code>) of the dbt CLI process.</p>\n<dl class=\"field-list simple\">\n<dt class=\"field-odd\">Type</dt>\n<dd class=\"field-odd\"><p><a class=\"reference external\" href=\"https://docs.python.org/3/library/stdtypes.html#str\" title=\"(in Python v3.8)\">str</a></p>\n</dd>\n</dl>\n</dd></dl>\n\n<dl class=\"py attribute\">\n<dt id=\"dagster_dbt.DbtCliOutput.logs\">\n<code class=\"sig-name descname\"><span class=\"pre\">logs</span></code><a class=\"headerlink\" href=\"#dagster_dbt.DbtCliOutput.logs\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>List of parsed JSON logs produced by the dbt command.</p>\n<dl class=\"field-list simple\">\n<dt class=\"field-odd\">Type</dt>\n<dd class=\"field-odd\"><p>List[Dict[<a class=\"reference external\" href=\"https://docs.python.org/3/library/stdtypes.html#str\" title=\"(in Python v3.8)\">str</a>, Any]]</p>\n</dd>\n</dl>\n</dd></dl>\n\n<dl class=\"py attribute\">\n<dt id=\"dagster_dbt.DbtCliOutput.result\">\n<code class=\"sig-name descname\"><span class=\"pre\">result</span></code><a class=\"headerlink\" href=\"#dagster_dbt.DbtCliOutput.result\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Dictionary containing dbt-reported result information\ncontained in run_results.json.  Some dbt commands do not produce results, and will\ntherefore have result = None.</p>\n<dl class=\"field-list simple\">\n<dt class=\"field-odd\">Type</dt>\n<dd class=\"field-odd\"><p>Optional[Dict[<a class=\"reference external\" href=\"https://docs.python.org/3/library/stdtypes.html#str\" title=\"(in Python v3.8)\">str</a>, Any]]</p>\n</dd>\n</dl>\n</dd></dl>\n\n<dl class=\"py attribute\">\n<dt id=\"dagster_dbt.DbtCliOutput.docs_url\">\n<code class=\"sig-name descname\"><span class=\"pre\">docs_url</span></code><a class=\"headerlink\" href=\"#dagster_dbt.DbtCliOutput.docs_url\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Hostname where dbt docs are being served for this project.</p>\n<dl class=\"field-list simple\">\n<dt class=\"field-odd\">Type</dt>\n<dd class=\"field-odd\"><p>Optional[<a class=\"reference external\" href=\"https://docs.python.org/3/library/stdtypes.html#str\" title=\"(in Python v3.8)\">str</a>]</p>\n</dd>\n</dl>\n</dd></dl>\n\n</dd></dl>\n\n<dl class=\"py data\">\n<dt id=\"dagster_dbt.dbt_cli_resource\">\n<code class=\"sig-prename descclassname\"><span class=\"pre\">dagster_dbt.</span></code><code class=\"sig-name descname\"><span class=\"pre\">dbt_cli_resource</span></code><em class=\"property\"> <span class=\"pre\">ResourceDefinition</span></em><a class=\"reference internal\" href=\"../../../../../_modules/dagster_dbt/cli/resources#dbt_cli_resource\"><span class=\"viewcode-link\"><span class=\"pre\">[source]</span></span></a><a class=\"headerlink\" href=\"#dagster_dbt.dbt_cli_resource\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><div class=\"line-block\">\n<div class=\"line\"><br /></div>\n</div>\n<details class=\"summary-config-schema\">\n<summary>Config Schema:</summary><dl class=\"field-list\">\n<dt class=\"field-odd\">project_dir (dagster.StringSource, optional)</dt>\n<dd class=\"field-odd\"><p>Which directory to look in for the dbt_project.yml file. Default is the current working directory and its parents.</p>\n<p><strong>Default Value:</strong> \u2018.\u2019</p>\n</dd>\n<dt class=\"field-even\">profiles_dir (dagster.StringSource, optional)</dt>\n<dd class=\"field-even\"><p>Which directory to look in for the profiles.yml file. Default = $DBT_PROFILES_DIR or $HOME/.dbt</p>\n</dd>\n<dt class=\"field-odd\">profile (dagster.StringSource, optional)</dt>\n<dd class=\"field-odd\"><p>Which profile to load. Overrides setting in dbt_project.yml.</p>\n</dd>\n<dt class=\"field-even\">target (dagster.StringSource, optional)</dt>\n<dd class=\"field-even\"><p>Which target to load for the given profile.</p>\n</dd>\n<dt class=\"field-odd\">vars (permissive dict, optional)</dt>\n<dd class=\"field-odd\"><p>Supply variables to the project. This argument overrides variables defined in your dbt_project.yml file. This argument should be a dictionary, eg. {\u2018my_variable\u2019: \u2018my_value\u2019}</p>\n</dd>\n<dt class=\"field-even\">bypass_cache (Bool, optional)</dt>\n<dd class=\"field-even\"><p>If set, bypass the adapter-level cache of database state</p>\n<p><strong>Default Value:</strong> False</p>\n</dd>\n<dt class=\"field-odd\">warn_error (Bool, optional)</dt>\n<dd class=\"field-odd\"><p>If dbt would normally warn, instead raise an exception. Examples include \u2013models that selects nothing, deprecations, configurations with no associated models, invalid test configurations, and missing sources/refs in tests.</p>\n<p><strong>Default Value:</strong> False</p>\n</dd>\n<dt class=\"field-even\">dbt_executable (dagster.StringSource, optional)</dt>\n<dd class=\"field-even\"><p>Path to the dbt executable. Default is dbt</p>\n<p><strong>Default Value:</strong> \u2018dbt\u2019</p>\n</dd>\n<dt class=\"field-odd\">ignore_handled_error (Bool, optional)</dt>\n<dd class=\"field-odd\"><p>When True, will not raise an exception when the dbt CLI returns error code 1. Default is False.</p>\n<p><strong>Default Value:</strong> False</p>\n</dd>\n<dt class=\"field-even\">target_path (dagster.StringSource, optional)</dt>\n<dd class=\"field-even\"><p>The directory path for target if different from the default <cite>target-path</cite> in your dbt project configuration file.</p>\n<p><strong>Default Value:</strong> \u2018target\u2019</p>\n</dd>\n<dt class=\"field-odd\">docs_url (dagster.StringSource, optional)</dt>\n<dd class=\"field-odd\"><p>The url for where dbt docs are being served for this project.</p>\n</dd>\n</dl>\n</details><p>This resource defines a dbt CLI interface.</p>\n<p>To configure this resource, we recommend using the <a class=\"reference external\" href=\"https://docs.dagster.io/concepts/configuration/configured\">configured</a> method.</p>\n<p>Examples:</p>\n<div class=\"highlight-python notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"n\">custom_dbt_cli_resource</span> <span class=\"o\">=</span> <span class=\"n\">dbt_cli_resource</span><span class=\"o\">.</span><span class=\"n\">configured</span><span class=\"p\">({</span><span class=\"s2\">&quot;project-dir&quot;</span><span class=\"p\">:</span> <span class=\"s2\">&quot;path/to/my/dbt_project&quot;</span><span class=\"p\">})</span>\n\n<span class=\"nd\">@pipeline</span><span class=\"p\">(</span><span class=\"n\">mode_defs</span><span class=\"o\">=</span><span class=\"p\">[</span><span class=\"n\">ModeDefinition</span><span class=\"p\">(</span><span class=\"n\">resource_defs</span><span class=\"o\">=</span><span class=\"p\">{</span><span class=\"s2\">&quot;dbt&quot;</span><span class=\"p\">:</span> <span class=\"n\">custom_dbt_cli_resource</span><span class=\"p\">})])</span>\n<span class=\"k\">def</span> <span class=\"nf\">dbt_cli_pipeline</span><span class=\"p\">():</span>\n    <span class=\"c1\"># Run solids with `required_resource_keys={&quot;dbt&quot;, ...}`.</span>\n</pre></div>\n</div>\n<p>You may configure this resource as follows:</p>\n<div class=\"highlight-YAML notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"nt\">resources</span><span class=\"p\">:</span><span class=\"w\"></span>\n<span class=\"w\">  </span><span class=\"nt\">dbt_cli_resource</span><span class=\"p\">:</span><span class=\"w\"></span>\n<span class=\"w\">    </span><span class=\"nt\">config</span><span class=\"p\">:</span><span class=\"w\"></span>\n<span class=\"w\">      </span><span class=\"nt\">project_dir</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"s\">&quot;.&quot;</span><span class=\"w\"></span>\n<span class=\"w\">      </span><span class=\"c1\"># Optional[str]: Which directory to look in for the dbt_project.yml file. Default is</span><span class=\"w\"></span>\n<span class=\"w\">      </span><span class=\"c1\"># the current working directory and its parents.</span><span class=\"w\"></span>\n<span class=\"w\">      </span><span class=\"nt\">profiles_dir</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"l l-Scalar l-Scalar-Plain\">$DBT_PROFILES_DIR or $HOME/.dbt</span><span class=\"w\"></span>\n<span class=\"w\">      </span><span class=\"c1\"># Optional[str]: Which directory to look in for the profiles.yml file.</span><span class=\"w\"></span>\n<span class=\"w\">      </span><span class=\"nt\">profile</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"s\">&quot;&quot;</span><span class=\"w\"></span>\n<span class=\"w\">      </span><span class=\"c1\"># Optional[str]: Which profile to load. Overrides setting in dbt_project.yml.</span><span class=\"w\"></span>\n<span class=\"w\">      </span><span class=\"nt\">target</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"s\">&quot;&quot;</span><span class=\"w\"></span>\n<span class=\"w\">      </span><span class=\"c1\"># Optional[str]: Which target to load for the given profile.</span><span class=\"w\"></span>\n<span class=\"w\">      </span><span class=\"nt\">vars</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"p p-Indicator\">{}</span><span class=\"w\"></span>\n<span class=\"w\">      </span><span class=\"c1\"># Optional[Permissive]: Supply variables to the project. This argument overrides</span><span class=\"w\"></span>\n<span class=\"w\">      </span><span class=\"c1\"># variables defined in your dbt_project.yml file. This argument should be a</span><span class=\"w\"></span>\n<span class=\"w\">      </span><span class=\"c1\"># dictionary, eg. &quot;{&#39;my_variable&#39;: &#39;my_value&#39;}&quot;</span><span class=\"w\"></span>\n<span class=\"w\">      </span><span class=\"nt\">bypass_cache</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"l l-Scalar l-Scalar-Plain\">False</span><span class=\"w\"></span>\n<span class=\"w\">      </span><span class=\"c1\"># Optional[bool]: If set, bypass the adapter-level cache of database state.</span><span class=\"w\"></span>\n</pre></div>\n</div>\n</dd></dl>\n\n</div>\n<div class=\"section\" id=\"rpc-resources\">\n<h3>RPC Resources<a class=\"headerlink\" href=\"#rpc-resources\" title=\"Permalink to this headline\">\u00b6</a></h3>\n<dl class=\"py class\">\n<dt id=\"dagster_dbt.DbtRpcResource\">\n<em class=\"property\"><span class=\"pre\">class</span> </em><code class=\"sig-prename descclassname\"><span class=\"pre\">dagster_dbt.</span></code><code class=\"sig-name descname\"><span class=\"pre\">DbtRpcResource</span></code><span class=\"sig-paren\">(</span><em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">host</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">'0.0.0.0'</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">port</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">8580</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">jsonrpc_version</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">'2.0'</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">logger</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">None</span></span></em>, <em class=\"sig-param\"><span class=\"o\"><span class=\"pre\">**</span></span><span class=\"n\"><span class=\"pre\">_</span></span></em><span class=\"sig-paren\">)</span><a class=\"reference internal\" href=\"../../../../../_modules/dagster_dbt/rpc/resources#DbtRpcResource\"><span class=\"viewcode-link\"><span class=\"pre\">[source]</span></span></a><a class=\"headerlink\" href=\"#dagster_dbt.DbtRpcResource\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>A client for a dbt RPC server.</p>\n<p>To use this as a dagster resource, we recommend using\n<a class=\"reference internal\" href=\"#dagster_dbt.dbt_rpc_resource\" title=\"dagster_dbt.dbt_rpc_resource\"><code class=\"xref py py-func docutils literal notranslate\"><span class=\"pre\">dbt_rpc_resource</span></code></a>.</p>\n<dl class=\"py method\">\n<dt id=\"dagster_dbt.DbtRpcResource.build\">\n<code class=\"sig-name descname\"><span class=\"pre\">build</span></code><span class=\"sig-paren\">(</span><em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">select</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">None</span></span></em>, <em class=\"sig-param\"><span class=\"o\"><span class=\"pre\">**</span></span><span class=\"n\"><span class=\"pre\">kwargs</span></span></em><span class=\"sig-paren\">)</span><a class=\"reference internal\" href=\"../../../../../_modules/dagster_dbt/rpc/resources#DbtRpcResource.build\"><span class=\"viewcode-link\"><span class=\"pre\">[source]</span></span></a><a class=\"headerlink\" href=\"#dagster_dbt.DbtRpcResource.build\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Run the <code class=\"docutils literal notranslate\"><span class=\"pre\">build</span></code> command on a dbt project. kwargs are passed in as additional parameters.</p>\n<dl class=\"field-list simple\">\n<dt class=\"field-odd\">Parameters</dt>\n<dd class=\"field-odd\"><p><strong>select</strong> (<em>List</em><em>[</em><a class=\"reference external\" href=\"https://docs.python.org/3/library/stdtypes.html#str\" title=\"(in Python v3.8)\"><em>str</em></a><em>]</em><em>, </em><em>optional</em>) \u2013 the models/resources to include in the run.</p>\n</dd>\n<dt class=\"field-even\">Returns</dt>\n<dd class=\"field-even\"><p>object containing parsed output from dbt</p>\n</dd>\n<dt class=\"field-odd\">Return type</dt>\n<dd class=\"field-odd\"><p><a class=\"reference internal\" href=\"#dagster_dbt.DbtOutput\" title=\"dagster_dbt.DbtOutput\">DbtOutput</a></p>\n</dd>\n</dl>\n</dd></dl>\n\n<dl class=\"py method\">\n<dt id=\"dagster_dbt.DbtRpcResource.cli\">\n<code class=\"sig-name descname\"><span class=\"pre\">cli</span></code><span class=\"sig-paren\">(</span><em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">command</span></span></em>, <em class=\"sig-param\"><span class=\"o\"><span class=\"pre\">**</span></span><span class=\"n\"><span class=\"pre\">kwargs</span></span></em><span class=\"sig-paren\">)</span><a class=\"reference internal\" href=\"../../../../../_modules/dagster_dbt/rpc/resources#DbtRpcResource.cli\"><span class=\"viewcode-link\"><span class=\"pre\">[source]</span></span></a><a class=\"headerlink\" href=\"#dagster_dbt.DbtRpcResource.cli\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Sends a request with CLI syntax to the dbt RPC server, and returns the response.\nFor more details, see the dbt docs for <a class=\"reference external\" href=\"https://docs.getdbt.com/reference/commands/rpc/#running-a-task-with-cli-syntax\">running CLI commands via RPC</a>.</p>\n<dl class=\"field-list simple\">\n<dt class=\"field-odd\">Parameters</dt>\n<dd class=\"field-odd\"><p><strong>cli</strong> (<a class=\"reference external\" href=\"https://docs.python.org/3/library/stdtypes.html#str\" title=\"(in Python v3.8)\"><em>str</em></a>) \u2013 a dbt command in CLI syntax.</p>\n</dd>\n<dt class=\"field-even\">Returns</dt>\n<dd class=\"field-even\"><p>the HTTP response from the dbt RPC server.</p>\n</dd>\n<dt class=\"field-odd\">Return type</dt>\n<dd class=\"field-odd\"><p>Response</p>\n</dd>\n</dl>\n</dd></dl>\n\n<dl class=\"py method\">\n<dt id=\"dagster_dbt.DbtRpcResource.compile\">\n<code class=\"sig-name descname\"><span class=\"pre\">compile</span></code><span class=\"sig-paren\">(</span><em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">models</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">None</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">exclude</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">None</span></span></em>, <em class=\"sig-param\"><span class=\"o\"><span class=\"pre\">**</span></span><span class=\"n\"><span class=\"pre\">kwargs</span></span></em><span class=\"sig-paren\">)</span><a class=\"reference internal\" href=\"../../../../../_modules/dagster_dbt/rpc/resources#DbtRpcResource.compile\"><span class=\"viewcode-link\"><span class=\"pre\">[source]</span></span></a><a class=\"headerlink\" href=\"#dagster_dbt.DbtRpcResource.compile\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Sends a request with the method <code class=\"docutils literal notranslate\"><span class=\"pre\">compile</span></code> to the dbt RPC server, and returns the\nresponse. For more details, see the dbt docs for <a class=\"reference external\" href=\"https://docs.getdbt.com/reference/commands/rpc/#compile-a-project\">compiling projects via RPC</a>.</p>\n<dl class=\"field-list simple\">\n<dt class=\"field-odd\">Parameters</dt>\n<dd class=\"field-odd\"><ul class=\"simple\">\n<li><p><strong>models</strong> (<em>List</em><em>[</em><a class=\"reference external\" href=\"https://docs.python.org/3/library/stdtypes.html#str\" title=\"(in Python v3.8)\"><em>str</em></a><em>]</em><em>, </em><em>optional</em>) \u2013 the models to include in compilation.</p></li>\n<li><p><strong>exclude</strong> (<em>List</em><em>[</em><a class=\"reference external\" href=\"https://docs.python.org/3/library/stdtypes.html#str\" title=\"(in Python v3.8)\"><em>str</em></a><em>]</em><em>)</em><em>, </em><em>optional</em>) \u2013 the models to exclude from compilation.</p></li>\n</ul>\n</dd>\n<dt class=\"field-even\">Returns</dt>\n<dd class=\"field-even\"><p>the HTTP response from the dbt RPC server.</p>\n</dd>\n<dt class=\"field-odd\">Return type</dt>\n<dd class=\"field-odd\"><p>Response</p>\n</dd>\n</dl>\n</dd></dl>\n\n<dl class=\"py method\">\n<dt id=\"dagster_dbt.DbtRpcResource.compile_sql\">\n<code class=\"sig-name descname\"><span class=\"pre\">compile_sql</span></code><span class=\"sig-paren\">(</span><em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">sql</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">name</span></span></em><span class=\"sig-paren\">)</span><a class=\"reference internal\" href=\"../../../../../_modules/dagster_dbt/rpc/resources#DbtRpcResource.compile_sql\"><span class=\"viewcode-link\"><span class=\"pre\">[source]</span></span></a><a class=\"headerlink\" href=\"#dagster_dbt.DbtRpcResource.compile_sql\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Sends a request with the method <code class=\"docutils literal notranslate\"><span class=\"pre\">compile_sql</span></code> to the dbt RPC server, and returns the\nresponse. For more details, see the dbt docs for <a class=\"reference external\" href=\"https://docs.getdbt.com/reference/commands/rpc#compiling-a-query\">compiling SQL via RPC</a>.</p>\n<dl class=\"field-list simple\">\n<dt class=\"field-odd\">Parameters</dt>\n<dd class=\"field-odd\"><ul class=\"simple\">\n<li><p><strong>sql</strong> (<a class=\"reference external\" href=\"https://docs.python.org/3/library/stdtypes.html#str\" title=\"(in Python v3.8)\"><em>str</em></a>) \u2013 the SQL to compile in base-64 encoding.</p></li>\n<li><p><strong>name</strong> (<a class=\"reference external\" href=\"https://docs.python.org/3/library/stdtypes.html#str\" title=\"(in Python v3.8)\"><em>str</em></a>) \u2013 a name for the compiled SQL.</p></li>\n</ul>\n</dd>\n<dt class=\"field-even\">Returns</dt>\n<dd class=\"field-even\"><p>the HTTP response from the dbt RPC server.</p>\n</dd>\n<dt class=\"field-odd\">Return type</dt>\n<dd class=\"field-odd\"><p>Response</p>\n</dd>\n</dl>\n</dd></dl>\n\n<dl class=\"py method\">\n<dt id=\"dagster_dbt.DbtRpcResource.generate_docs\">\n<code class=\"sig-name descname\"><span class=\"pre\">generate_docs</span></code><span class=\"sig-paren\">(</span><em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">compile_project</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">False</span></span></em>, <em class=\"sig-param\"><span class=\"o\"><span class=\"pre\">**</span></span><span class=\"n\"><span class=\"pre\">kwargs</span></span></em><span class=\"sig-paren\">)</span><a class=\"reference internal\" href=\"../../../../../_modules/dagster_dbt/rpc/resources#DbtRpcResource.generate_docs\"><span class=\"viewcode-link\"><span class=\"pre\">[source]</span></span></a><a class=\"headerlink\" href=\"#dagster_dbt.DbtRpcResource.generate_docs\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Sends a request with the method <code class=\"docutils literal notranslate\"><span class=\"pre\">docs.generate</span></code> to the dbt RPC server, and returns the\nresponse. For more details, see the dbt docs for the RPC method <a class=\"reference external\" href=\"https://docs.getdbt.com/reference/commands/rpc/#generate-docs\">docs.generate</a>.</p>\n<dl class=\"field-list simple\">\n<dt class=\"field-odd\">Parameters</dt>\n<dd class=\"field-odd\"><p><strong>compile_project</strong> (<a class=\"reference external\" href=\"https://docs.python.org/3/library/functions.html#bool\" title=\"(in Python v3.8)\"><em>bool</em></a><em>, </em><em>optional</em>) \u2013 If true, compile the project before generating a catalog.</p>\n</dd>\n</dl>\n</dd></dl>\n\n<dl class=\"py method\">\n<dt id=\"dagster_dbt.DbtRpcResource.get_manifest_json\">\n<code class=\"sig-name descname\"><span class=\"pre\">get_manifest_json</span></code><span class=\"sig-paren\">(</span><em class=\"sig-param\"><span class=\"o\"><span class=\"pre\">**</span></span><span class=\"n\"><span class=\"pre\">kwargs</span></span></em><span class=\"sig-paren\">)</span><a class=\"reference internal\" href=\"../../../../../_modules/dagster_dbt/rpc/resources#DbtRpcResource.get_manifest_json\"><span class=\"viewcode-link\"><span class=\"pre\">[source]</span></span></a><a class=\"headerlink\" href=\"#dagster_dbt.DbtRpcResource.get_manifest_json\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Get a parsed version of the manifest.json file for the relevant dbt project.</p>\n<dl class=\"field-list simple\">\n<dt class=\"field-odd\">Returns</dt>\n<dd class=\"field-odd\"><p><dl class=\"simple\">\n<dt>dictionary containing the parsed contents of the manifest json file</dt><dd><p>for this dbt project.</p>\n</dd>\n</dl>\n</p>\n</dd>\n<dt class=\"field-even\">Return type</dt>\n<dd class=\"field-even\"><p>Dict[<a class=\"reference external\" href=\"https://docs.python.org/3/library/stdtypes.html#str\" title=\"(in Python v3.8)\">str</a>, Any]</p>\n</dd>\n</dl>\n</dd></dl>\n\n<dl class=\"py method\">\n<dt id=\"dagster_dbt.DbtRpcResource.get_run_results_json\">\n<code class=\"sig-name descname\"><span class=\"pre\">get_run_results_json</span></code><span class=\"sig-paren\">(</span><em class=\"sig-param\"><span class=\"o\"><span class=\"pre\">**</span></span><span class=\"n\"><span class=\"pre\">kwargs</span></span></em><span class=\"sig-paren\">)</span><a class=\"reference internal\" href=\"../../../../../_modules/dagster_dbt/rpc/resources#DbtRpcResource.get_run_results_json\"><span class=\"viewcode-link\"><span class=\"pre\">[source]</span></span></a><a class=\"headerlink\" href=\"#dagster_dbt.DbtRpcResource.get_run_results_json\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Get a parsed version of the run_results.json file for the relevant dbt project.</p>\n<dl class=\"field-list simple\">\n<dt class=\"field-odd\">Returns</dt>\n<dd class=\"field-odd\"><p><dl class=\"simple\">\n<dt>dictionary containing the parsed contents of the run_results json file</dt><dd><p>for this dbt project.</p>\n</dd>\n</dl>\n</p>\n</dd>\n<dt class=\"field-even\">Return type</dt>\n<dd class=\"field-even\"><p>Dict[<a class=\"reference external\" href=\"https://docs.python.org/3/library/stdtypes.html#str\" title=\"(in Python v3.8)\">str</a>, Any]</p>\n</dd>\n</dl>\n</dd></dl>\n\n<dl class=\"py method\">\n<dt id=\"dagster_dbt.DbtRpcResource.host\">\n<em class=\"property\"><span class=\"pre\">property</span> </em><code class=\"sig-name descname\"><span class=\"pre\">host</span></code><a class=\"headerlink\" href=\"#dagster_dbt.DbtRpcResource.host\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>The IP address of the host of the dbt RPC server.</p>\n<dl class=\"field-list simple\">\n<dt class=\"field-odd\">Type</dt>\n<dd class=\"field-odd\"><p><a class=\"reference external\" href=\"https://docs.python.org/3/library/stdtypes.html#str\" title=\"(in Python v3.8)\">str</a></p>\n</dd>\n</dl>\n</dd></dl>\n\n<dl class=\"py method\">\n<dt id=\"dagster_dbt.DbtRpcResource.jsonrpc_version\">\n<em class=\"property\"><span class=\"pre\">property</span> </em><code class=\"sig-name descname\"><span class=\"pre\">jsonrpc_version</span></code><a class=\"headerlink\" href=\"#dagster_dbt.DbtRpcResource.jsonrpc_version\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>The JSON-RPC version to send in RPC requests.</p>\n<dl class=\"field-list simple\">\n<dt class=\"field-odd\">Type</dt>\n<dd class=\"field-odd\"><p><a class=\"reference external\" href=\"https://docs.python.org/3/library/stdtypes.html#str\" title=\"(in Python v3.8)\">str</a></p>\n</dd>\n</dl>\n</dd></dl>\n\n<dl class=\"py method\">\n<dt id=\"dagster_dbt.DbtRpcResource.kill\">\n<code class=\"sig-name descname\"><span class=\"pre\">kill</span></code><span class=\"sig-paren\">(</span><em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">task_id</span></span></em><span class=\"sig-paren\">)</span><a class=\"reference internal\" href=\"../../../../../_modules/dagster_dbt/rpc/resources#DbtRpcResource.kill\"><span class=\"viewcode-link\"><span class=\"pre\">[source]</span></span></a><a class=\"headerlink\" href=\"#dagster_dbt.DbtRpcResource.kill\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Sends a request with the method <code class=\"docutils literal notranslate\"><span class=\"pre\">kill</span></code> to the dbt RPC server, and returns the response.\nFor more details, see the dbt docs for the RPC method <a class=\"reference external\" href=\"https://docs.getdbt.com/reference/commands/rpc/#kill\">kill</a>.</p>\n<dl class=\"field-list simple\">\n<dt class=\"field-odd\">Parameters</dt>\n<dd class=\"field-odd\"><p><strong>task_id</strong> (<a class=\"reference external\" href=\"https://docs.python.org/3/library/stdtypes.html#str\" title=\"(in Python v3.8)\"><em>str</em></a>) \u2013 the ID of the task to terminate.</p>\n</dd>\n<dt class=\"field-even\">Returns</dt>\n<dd class=\"field-even\"><p>the HTTP response from the dbt RPC server.</p>\n</dd>\n<dt class=\"field-odd\">Return type</dt>\n<dd class=\"field-odd\"><p>Response</p>\n</dd>\n</dl>\n</dd></dl>\n\n<dl class=\"py method\">\n<dt id=\"dagster_dbt.DbtRpcResource.logger\">\n<em class=\"property\"><span class=\"pre\">property</span> </em><code class=\"sig-name descname\"><span class=\"pre\">logger</span></code><a class=\"headerlink\" href=\"#dagster_dbt.DbtRpcResource.logger\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>A property for injecting a logger dependency.</p>\n<dl class=\"field-list simple\">\n<dt class=\"field-odd\">Type</dt>\n<dd class=\"field-odd\"><p><a class=\"reference external\" href=\"https://docs.python.org/3/library/logging.html#logging.Logger\" title=\"(in Python v3.8)\">logging.Logger</a></p>\n</dd>\n</dl>\n</dd></dl>\n\n<dl class=\"py method\">\n<dt id=\"dagster_dbt.DbtRpcResource.ls\">\n<code class=\"sig-name descname\"><span class=\"pre\">ls</span></code><span class=\"sig-paren\">(</span><em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">select</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">None</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">models</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">None</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">exclude</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">None</span></span></em>, <em class=\"sig-param\"><span class=\"o\"><span class=\"pre\">**</span></span><span class=\"n\"><span class=\"pre\">kwargs</span></span></em><span class=\"sig-paren\">)</span><a class=\"reference internal\" href=\"../../../../../_modules/dagster_dbt/rpc/resources#DbtRpcResource.ls\"><span class=\"viewcode-link\"><span class=\"pre\">[source]</span></span></a><a class=\"headerlink\" href=\"#dagster_dbt.DbtRpcResource.ls\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Sends a request with the method <code class=\"docutils literal notranslate\"><span class=\"pre\">list</span></code> to the dbt RPC server, and returns the\nresponse. For more details, see the dbt docs for <a class=\"reference external\" href=\"https://docs.getdbt.com/reference/commands/rpc/#list\">list</a>.</p>\n<dl class=\"field-list simple\">\n<dt class=\"field-odd\">Parameters</dt>\n<dd class=\"field-odd\"><ul class=\"simple\">\n<li><p><strong>select</strong> (<em>List</em><em>[</em><a class=\"reference external\" href=\"https://docs.python.org/3/library/stdtypes.html#str\" title=\"(in Python v3.8)\"><em>str</em></a><em>]</em><em>, </em><em>optional</em>) \u2013 the resources to include in the output.</p></li>\n<li><p><strong>models</strong> (<em>List</em><em>[</em><a class=\"reference external\" href=\"https://docs.python.org/3/library/stdtypes.html#str\" title=\"(in Python v3.8)\"><em>str</em></a><em>]</em><em>, </em><em>optional</em>) \u2013 the models to include in the output.</p></li>\n<li><p><strong>exclude</strong> (<em>List</em><em>[</em><a class=\"reference external\" href=\"https://docs.python.org/3/library/stdtypes.html#str\" title=\"(in Python v3.8)\"><em>str</em></a><em>]</em><em>)</em><em>, </em><em>optional</em>) \u2013 the resources to exclude from compilation.</p></li>\n</ul>\n</dd>\n<dt class=\"field-even\">Returns</dt>\n<dd class=\"field-even\"><p>the HTTP response from the dbt RPC server.</p>\n</dd>\n<dt class=\"field-odd\">Return type</dt>\n<dd class=\"field-odd\"><p>Response</p>\n</dd>\n</dl>\n</dd></dl>\n\n<dl class=\"py method\">\n<dt id=\"dagster_dbt.DbtRpcResource.poll\">\n<code class=\"sig-name descname\"><span class=\"pre\">poll</span></code><span class=\"sig-paren\">(</span><em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">request_token</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">logs</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">False</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">logs_start</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">0</span></span></em><span class=\"sig-paren\">)</span><a class=\"reference internal\" href=\"../../../../../_modules/dagster_dbt/rpc/resources#DbtRpcResource.poll\"><span class=\"viewcode-link\"><span class=\"pre\">[source]</span></span></a><a class=\"headerlink\" href=\"#dagster_dbt.DbtRpcResource.poll\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Sends a request with the method <code class=\"docutils literal notranslate\"><span class=\"pre\">poll</span></code> to the dbt RPC server, and returns the response.\nFor more details, see the dbt docs for the RPC method <a class=\"reference external\" href=\"https://docs.getdbt.com/reference/commands/rpc/#poll\">poll</a>.</p>\n<dl class=\"field-list simple\">\n<dt class=\"field-odd\">Parameters</dt>\n<dd class=\"field-odd\"><ul class=\"simple\">\n<li><p><strong>request_token</strong> (<a class=\"reference external\" href=\"https://docs.python.org/3/library/stdtypes.html#str\" title=\"(in Python v3.8)\"><em>str</em></a>) \u2013 the token to poll responses for.</p></li>\n<li><p><strong>logs</strong> (<a class=\"reference external\" href=\"https://docs.python.org/3/library/functions.html#bool\" title=\"(in Python v3.8)\"><em>bool</em></a>) \u2013 Whether logs should be returned in the response. Defaults to <code class=\"docutils literal notranslate\"><span class=\"pre\">False</span></code>.</p></li>\n<li><p><strong>logs_start</strong> (<a class=\"reference external\" href=\"https://docs.python.org/3/library/functions.html#int\" title=\"(in Python v3.8)\"><em>int</em></a>) \u2013 The zero-indexed log line to fetch logs from. Defaults to <code class=\"docutils literal notranslate\"><span class=\"pre\">0</span></code>.</p></li>\n</ul>\n</dd>\n<dt class=\"field-even\">Returns</dt>\n<dd class=\"field-even\"><p>the HTTP response from the dbt RPC server.</p>\n</dd>\n<dt class=\"field-odd\">Return type</dt>\n<dd class=\"field-odd\"><p>Response</p>\n</dd>\n</dl>\n</dd></dl>\n\n<dl class=\"py method\">\n<dt id=\"dagster_dbt.DbtRpcResource.port\">\n<em class=\"property\"><span class=\"pre\">property</span> </em><code class=\"sig-name descname\"><span class=\"pre\">port</span></code><a class=\"headerlink\" href=\"#dagster_dbt.DbtRpcResource.port\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>The port of the dbt RPC server.</p>\n<dl class=\"field-list simple\">\n<dt class=\"field-odd\">Type</dt>\n<dd class=\"field-odd\"><p><a class=\"reference external\" href=\"https://docs.python.org/3/library/functions.html#int\" title=\"(in Python v3.8)\">int</a></p>\n</dd>\n</dl>\n</dd></dl>\n\n<dl class=\"py method\">\n<dt id=\"dagster_dbt.DbtRpcResource.ps\">\n<code class=\"sig-name descname\"><span class=\"pre\">ps</span></code><span class=\"sig-paren\">(</span><em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">completed</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">False</span></span></em><span class=\"sig-paren\">)</span><a class=\"reference internal\" href=\"../../../../../_modules/dagster_dbt/rpc/resources#DbtRpcResource.ps\"><span class=\"viewcode-link\"><span class=\"pre\">[source]</span></span></a><a class=\"headerlink\" href=\"#dagster_dbt.DbtRpcResource.ps\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Sends a request with the method <code class=\"docutils literal notranslate\"><span class=\"pre\">ps</span></code> to the dbt RPC server, and returns the response.\nFor more details, see the dbt docs for the RPC method <a class=\"reference external\" href=\"https://docs.getdbt.com/reference/commands/rpc/#ps\">ps</a>.</p>\n<dl class=\"field-list simple\">\n<dt class=\"field-odd\">Parameters</dt>\n<dd class=\"field-odd\"><p><strong>compelted</strong> (<a class=\"reference external\" href=\"https://docs.python.org/3/library/functions.html#bool\" title=\"(in Python v3.8)\"><em>bool</em></a>) \u2013 If <code class=\"docutils literal notranslate\"><span class=\"pre\">True</span></code>, then also return completed tasks. Defaults to <code class=\"docutils literal notranslate\"><span class=\"pre\">False</span></code>.</p>\n</dd>\n<dt class=\"field-even\">Returns</dt>\n<dd class=\"field-even\"><p>the HTTP response from the dbt RPC server.</p>\n</dd>\n<dt class=\"field-odd\">Return type</dt>\n<dd class=\"field-odd\"><p>Response</p>\n</dd>\n</dl>\n</dd></dl>\n\n<dl class=\"py method\">\n<dt id=\"dagster_dbt.DbtRpcResource.run\">\n<code class=\"sig-name descname\"><span class=\"pre\">run</span></code><span class=\"sig-paren\">(</span><em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">models</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">None</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">exclude</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">None</span></span></em>, <em class=\"sig-param\"><span class=\"o\"><span class=\"pre\">**</span></span><span class=\"n\"><span class=\"pre\">kwargs</span></span></em><span class=\"sig-paren\">)</span><a class=\"reference internal\" href=\"../../../../../_modules/dagster_dbt/rpc/resources#DbtRpcResource.run\"><span class=\"viewcode-link\"><span class=\"pre\">[source]</span></span></a><a class=\"headerlink\" href=\"#dagster_dbt.DbtRpcResource.run\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Sends a request with the method <code class=\"docutils literal notranslate\"><span class=\"pre\">run</span></code> to the dbt RPC server, and returns the response.\nFor more details, see the dbt docs for the RPC method <a class=\"reference external\" href=\"https://docs.getdbt.com/reference/commands/rpc/#run-models\">run</a>.</p>\n<dl class=\"field-list simple\">\n<dt class=\"field-odd\">Parameters</dt>\n<dd class=\"field-odd\"><ul class=\"simple\">\n<li><p><strong>models</strong> (<em>List</em><em>[</em><a class=\"reference external\" href=\"https://docs.python.org/3/library/stdtypes.html#str\" title=\"(in Python v3.8)\"><em>str</em></a><em>]</em><em>, </em><em>optional</em>) \u2013 the models to include in the run.</p></li>\n<li><p><strong>exclude</strong> (<em>List</em><em>[</em><a class=\"reference external\" href=\"https://docs.python.org/3/library/stdtypes.html#str\" title=\"(in Python v3.8)\"><em>str</em></a><em>]</em><em>)</em><em>, </em><em>optional</em>) \u2013 the models to exclude from the run.</p></li>\n</ul>\n</dd>\n<dt class=\"field-even\">Returns</dt>\n<dd class=\"field-even\"><p>the HTTP response from the dbt RPC server.</p>\n</dd>\n<dt class=\"field-odd\">Return type</dt>\n<dd class=\"field-odd\"><p>Response</p>\n</dd>\n</dl>\n</dd></dl>\n\n<dl class=\"py method\">\n<dt id=\"dagster_dbt.DbtRpcResource.run_operation\">\n<code class=\"sig-name descname\"><span class=\"pre\">run_operation</span></code><span class=\"sig-paren\">(</span><em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">macro</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">args</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">None</span></span></em>, <em class=\"sig-param\"><span class=\"o\"><span class=\"pre\">**</span></span><span class=\"n\"><span class=\"pre\">kwargs</span></span></em><span class=\"sig-paren\">)</span><a class=\"reference internal\" href=\"../../../../../_modules/dagster_dbt/rpc/resources#DbtRpcResource.run_operation\"><span class=\"viewcode-link\"><span class=\"pre\">[source]</span></span></a><a class=\"headerlink\" href=\"#dagster_dbt.DbtRpcResource.run_operation\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Sends a request with the method <code class=\"docutils literal notranslate\"><span class=\"pre\">run-operation</span></code> to the dbt RPC server, and returns the\nresponse. For more details, see the dbt docs for the command <a class=\"reference external\" href=\"https://docs.getdbt.com/reference/commands/run-operation\">run-operation</a>.</p>\n<dl class=\"field-list simple\">\n<dt class=\"field-odd\">Parameters</dt>\n<dd class=\"field-odd\"><ul class=\"simple\">\n<li><p><strong>macro</strong> (<a class=\"reference external\" href=\"https://docs.python.org/3/library/stdtypes.html#str\" title=\"(in Python v3.8)\"><em>str</em></a>) \u2013 the dbt macro to invoke.</p></li>\n<li><p><strong>args</strong> (<em>Dict</em><em>[</em><a class=\"reference external\" href=\"https://docs.python.org/3/library/stdtypes.html#str\" title=\"(in Python v3.8)\"><em>str</em></a><em>, </em><em>Any</em><em>]</em><em>, </em><em>optional</em>) \u2013 the keyword arguments to be supplied to the macro.</p></li>\n</ul>\n</dd>\n<dt class=\"field-even\">Returns</dt>\n<dd class=\"field-even\"><p>the HTTP response from the dbt RPC server.</p>\n</dd>\n<dt class=\"field-odd\">Return type</dt>\n<dd class=\"field-odd\"><p>Response</p>\n</dd>\n</dl>\n</dd></dl>\n\n<dl class=\"py method\">\n<dt id=\"dagster_dbt.DbtRpcResource.run_sql\">\n<code class=\"sig-name descname\"><span class=\"pre\">run_sql</span></code><span class=\"sig-paren\">(</span><em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">sql</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">name</span></span></em><span class=\"sig-paren\">)</span><a class=\"reference internal\" href=\"../../../../../_modules/dagster_dbt/rpc/resources#DbtRpcResource.run_sql\"><span class=\"viewcode-link\"><span class=\"pre\">[source]</span></span></a><a class=\"headerlink\" href=\"#dagster_dbt.DbtRpcResource.run_sql\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Sends a request with the method <code class=\"docutils literal notranslate\"><span class=\"pre\">run_sql</span></code> to the dbt RPC server, and returns the\nresponse. For more details, see the dbt docs for <a class=\"reference external\" href=\"https://docs.getdbt.com/reference/commands/rpc#executing-a-query\">running SQL via RPC</a>.</p>\n<dl class=\"field-list simple\">\n<dt class=\"field-odd\">Parameters</dt>\n<dd class=\"field-odd\"><ul class=\"simple\">\n<li><p><strong>sql</strong> (<a class=\"reference external\" href=\"https://docs.python.org/3/library/stdtypes.html#str\" title=\"(in Python v3.8)\"><em>str</em></a>) \u2013 the SQL to run in base-64 encoding.</p></li>\n<li><p><strong>name</strong> (<a class=\"reference external\" href=\"https://docs.python.org/3/library/stdtypes.html#str\" title=\"(in Python v3.8)\"><em>str</em></a>) \u2013 a name for the compiled SQL.</p></li>\n</ul>\n</dd>\n<dt class=\"field-even\">Returns</dt>\n<dd class=\"field-even\"><p>the HTTP response from the dbt RPC server.</p>\n</dd>\n<dt class=\"field-odd\">Return type</dt>\n<dd class=\"field-odd\"><p>Response</p>\n</dd>\n</dl>\n</dd></dl>\n\n<dl class=\"py method\">\n<dt id=\"dagster_dbt.DbtRpcResource.seed\">\n<code class=\"sig-name descname\"><span class=\"pre\">seed</span></code><span class=\"sig-paren\">(</span><em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">show</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">False</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">select</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">None</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">exclude</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">None</span></span></em>, <em class=\"sig-param\"><span class=\"o\"><span class=\"pre\">**</span></span><span class=\"n\"><span class=\"pre\">kwargs</span></span></em><span class=\"sig-paren\">)</span><a class=\"reference internal\" href=\"../../../../../_modules/dagster_dbt/rpc/resources#DbtRpcResource.seed\"><span class=\"viewcode-link\"><span class=\"pre\">[source]</span></span></a><a class=\"headerlink\" href=\"#dagster_dbt.DbtRpcResource.seed\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Sends a request with the method <code class=\"docutils literal notranslate\"><span class=\"pre\">seed</span></code> to the dbt RPC server, and returns the response.\nFor more details, see the dbt docs for the RPC method <a class=\"reference external\" href=\"https://docs.getdbt.com/reference/commands/rpc/#run-seed\">seed</a>.</p>\n<dl class=\"field-list simple\">\n<dt class=\"field-odd\">Parameters</dt>\n<dd class=\"field-odd\"><ul class=\"simple\">\n<li><p><strong>show</strong> (<a class=\"reference external\" href=\"https://docs.python.org/3/library/functions.html#bool\" title=\"(in Python v3.8)\"><em>bool</em></a><em>, </em><em>optional</em>) \u2013 If <code class=\"docutils literal notranslate\"><span class=\"pre\">True</span></code>, then show a sample of the seeded data in the\nresponse. Defaults to <code class=\"docutils literal notranslate\"><span class=\"pre\">False</span></code>.</p></li>\n<li><p><strong>select</strong> (<em>List</em><em>[</em><a class=\"reference external\" href=\"https://docs.python.org/3/library/stdtypes.html#str\" title=\"(in Python v3.8)\"><em>str</em></a><em>]</em><em>, </em><em>optional</em>) \u2013 the snapshots to include in the run.</p></li>\n<li><p><strong>exclude</strong> (<em>List</em><em>[</em><a class=\"reference external\" href=\"https://docs.python.org/3/library/stdtypes.html#str\" title=\"(in Python v3.8)\"><em>str</em></a><em>]</em><em>, </em><em>optional</em>) \u2013 the snapshots to exclude from the run.</p></li>\n</ul>\n</dd>\n<dt class=\"field-even\">Returns</dt>\n<dd class=\"field-even\"><p>the HTTP response from the dbt RPC server.</p>\n</dd>\n<dt class=\"field-odd\">Return type</dt>\n<dd class=\"field-odd\"><p>Response</p>\n</dd>\n</dl>\n</dd></dl>\n\n<dl class=\"py method\">\n<dt id=\"dagster_dbt.DbtRpcResource.snapshot\">\n<code class=\"sig-name descname\"><span class=\"pre\">snapshot</span></code><span class=\"sig-paren\">(</span><em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">select</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">None</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">exclude</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">None</span></span></em>, <em class=\"sig-param\"><span class=\"o\"><span class=\"pre\">**</span></span><span class=\"n\"><span class=\"pre\">kwargs</span></span></em><span class=\"sig-paren\">)</span><a class=\"reference internal\" href=\"../../../../../_modules/dagster_dbt/rpc/resources#DbtRpcResource.snapshot\"><span class=\"viewcode-link\"><span class=\"pre\">[source]</span></span></a><a class=\"headerlink\" href=\"#dagster_dbt.DbtRpcResource.snapshot\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Sends a request with the method <code class=\"docutils literal notranslate\"><span class=\"pre\">snapshot</span></code> to the dbt RPC server, and returns the\nresponse. For more details, see the dbt docs for the command <a class=\"reference external\" href=\"https://docs.getdbt.com/reference/commands/snapshot\">snapshot</a>.</p>\n<dl class=\"field-list simple\">\n<dt class=\"field-odd\">Parameters</dt>\n<dd class=\"field-odd\"><ul class=\"simple\">\n<li><p><strong>select</strong> (<em>List</em><em>[</em><a class=\"reference external\" href=\"https://docs.python.org/3/library/stdtypes.html#str\" title=\"(in Python v3.8)\"><em>str</em></a><em>]</em><em>, </em><em>optional</em>) \u2013 the snapshots to include in the run.</p></li>\n<li><p><strong>exclude</strong> (<em>List</em><em>[</em><a class=\"reference external\" href=\"https://docs.python.org/3/library/stdtypes.html#str\" title=\"(in Python v3.8)\"><em>str</em></a><em>]</em><em>, </em><em>optional</em>) \u2013 the snapshots to exclude from the run.</p></li>\n</ul>\n</dd>\n<dt class=\"field-even\">Returns</dt>\n<dd class=\"field-even\"><p>the HTTP response from the dbt RPC server.</p>\n</dd>\n<dt class=\"field-odd\">Return type</dt>\n<dd class=\"field-odd\"><p>Response</p>\n</dd>\n</dl>\n</dd></dl>\n\n<dl class=\"py method\">\n<dt id=\"dagster_dbt.DbtRpcResource.snapshot_freshness\">\n<code class=\"sig-name descname\"><span class=\"pre\">snapshot_freshness</span></code><span class=\"sig-paren\">(</span><em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">select</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">None</span></span></em>, <em class=\"sig-param\"><span class=\"o\"><span class=\"pre\">**</span></span><span class=\"n\"><span class=\"pre\">kwargs</span></span></em><span class=\"sig-paren\">)</span><a class=\"reference internal\" href=\"../../../../../_modules/dagster_dbt/rpc/resources#DbtRpcResource.snapshot_freshness\"><span class=\"viewcode-link\"><span class=\"pre\">[source]</span></span></a><a class=\"headerlink\" href=\"#dagster_dbt.DbtRpcResource.snapshot_freshness\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Sends a request with the method <code class=\"docutils literal notranslate\"><span class=\"pre\">snapshot-freshness</span></code> to the dbt RPC server, and returns\nthe response. For more details, see the dbt docs for the command <a class=\"reference external\" href=\"https://docs.getdbt.com/reference/commands/source#dbt-source-snapshot-freshness\">source snapshot-freshness</a>.</p>\n<dl class=\"field-list simple\">\n<dt class=\"field-odd\">Parameters</dt>\n<dd class=\"field-odd\"><p><strong>select</strong> (<em>List</em><em>[</em><a class=\"reference external\" href=\"https://docs.python.org/3/library/stdtypes.html#str\" title=\"(in Python v3.8)\"><em>str</em></a><em>]</em><em>, </em><em>optional</em>) \u2013 the models to include in calculating snapshot freshness.</p>\n</dd>\n<dt class=\"field-even\">Returns</dt>\n<dd class=\"field-even\"><p>the HTTP response from the dbt RPC server.</p>\n</dd>\n<dt class=\"field-odd\">Return type</dt>\n<dd class=\"field-odd\"><p>Response</p>\n</dd>\n</dl>\n</dd></dl>\n\n<dl class=\"py method\">\n<dt id=\"dagster_dbt.DbtRpcResource.status\">\n<code class=\"sig-name descname\"><span class=\"pre\">status</span></code><span class=\"sig-paren\">(</span><span class=\"sig-paren\">)</span><a class=\"reference internal\" href=\"../../../../../_modules/dagster_dbt/rpc/resources#DbtRpcResource.status\"><span class=\"viewcode-link\"><span class=\"pre\">[source]</span></span></a><a class=\"headerlink\" href=\"#dagster_dbt.DbtRpcResource.status\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Sends a request with the method <code class=\"docutils literal notranslate\"><span class=\"pre\">status</span></code> to the dbt RPC server, and returns the\nresponse. For more details, see the dbt docs for the RPC method <a class=\"reference external\" href=\"https://docs.getdbt.com/reference/commands/rpc/#status\">status</a>.</p>\n<dl class=\"field-list simple\">\n<dt class=\"field-odd\">Returns</dt>\n<dd class=\"field-odd\"><p>the HTTP response from the dbt RPC server.</p>\n</dd>\n<dt class=\"field-even\">Return type</dt>\n<dd class=\"field-even\"><p>Response</p>\n</dd>\n</dl>\n</dd></dl>\n\n<dl class=\"py method\">\n<dt id=\"dagster_dbt.DbtRpcResource.test\">\n<code class=\"sig-name descname\"><span class=\"pre\">test</span></code><span class=\"sig-paren\">(</span><em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">models</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">None</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">exclude</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">None</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">data</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">True</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">schema</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">True</span></span></em>, <em class=\"sig-param\"><span class=\"o\"><span class=\"pre\">**</span></span><span class=\"n\"><span class=\"pre\">kwargs</span></span></em><span class=\"sig-paren\">)</span><a class=\"reference internal\" href=\"../../../../../_modules/dagster_dbt/rpc/resources#DbtRpcResource.test\"><span class=\"viewcode-link\"><span class=\"pre\">[source]</span></span></a><a class=\"headerlink\" href=\"#dagster_dbt.DbtRpcResource.test\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Sends a request with the method <code class=\"docutils literal notranslate\"><span class=\"pre\">test</span></code> to the dbt RPC server, and returns the response.\nFor more details, see the dbt docs for the RPC method <a class=\"reference external\" href=\"https://docs.getdbt.com/reference/commands/rpc/#run-test\">test</a>.</p>\n<dl class=\"field-list simple\">\n<dt class=\"field-odd\">Parameters</dt>\n<dd class=\"field-odd\"><ul class=\"simple\">\n<li><p><strong>models</strong> (<em>List</em><em>[</em><a class=\"reference external\" href=\"https://docs.python.org/3/library/stdtypes.html#str\" title=\"(in Python v3.8)\"><em>str</em></a><em>]</em><em>, </em><em>optional</em>) \u2013 the models to include in testing.</p></li>\n<li><p><strong>exclude</strong> (<em>List</em><em>[</em><a class=\"reference external\" href=\"https://docs.python.org/3/library/stdtypes.html#str\" title=\"(in Python v3.8)\"><em>str</em></a><em>]</em><em>, </em><em>optional</em>) \u2013 the models to exclude from testing.</p></li>\n<li><p><strong>data</strong> (<a class=\"reference external\" href=\"https://docs.python.org/3/library/functions.html#bool\" title=\"(in Python v3.8)\"><em>bool</em></a><em>, </em><em>optional</em>) \u2013 If <code class=\"docutils literal notranslate\"><span class=\"pre\">True</span></code> (default), then run data tests.</p></li>\n<li><p><strong>schema</strong> (<a class=\"reference external\" href=\"https://docs.python.org/3/library/functions.html#bool\" title=\"(in Python v3.8)\"><em>bool</em></a><em>, </em><em>optional</em>) \u2013 If <code class=\"docutils literal notranslate\"><span class=\"pre\">True</span></code> (default), then run schema tests.</p></li>\n</ul>\n</dd>\n<dt class=\"field-even\">Returns</dt>\n<dd class=\"field-even\"><p>the HTTP response from the dbt RPC server.</p>\n</dd>\n<dt class=\"field-odd\">Return type</dt>\n<dd class=\"field-odd\"><p>Response</p>\n</dd>\n</dl>\n</dd></dl>\n\n<dl class=\"py method\">\n<dt id=\"dagster_dbt.DbtRpcResource.url\">\n<em class=\"property\"><span class=\"pre\">property</span> </em><code class=\"sig-name descname\"><span class=\"pre\">url</span></code><a class=\"headerlink\" href=\"#dagster_dbt.DbtRpcResource.url\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>The URL for sending dbt RPC requests.</p>\n<dl class=\"field-list simple\">\n<dt class=\"field-odd\">Type</dt>\n<dd class=\"field-odd\"><p><a class=\"reference external\" href=\"https://docs.python.org/3/library/stdtypes.html#str\" title=\"(in Python v3.8)\">str</a></p>\n</dd>\n</dl>\n</dd></dl>\n\n</dd></dl>\n\n<dl class=\"py class\">\n<dt id=\"dagster_dbt.DbtRpcSyncResource\">\n<em class=\"property\"><span class=\"pre\">class</span> </em><code class=\"sig-prename descclassname\"><span class=\"pre\">dagster_dbt.</span></code><code class=\"sig-name descname\"><span class=\"pre\">DbtRpcSyncResource</span></code><span class=\"sig-paren\">(</span><em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">host</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">'0.0.0.0'</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">port</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">8580</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">jsonrpc_version</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">'2.0'</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">logger</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">None</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">poll_interval</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">1</span></span></em>, <em class=\"sig-param\"><span class=\"o\"><span class=\"pre\">**</span></span><span class=\"n\"><span class=\"pre\">_</span></span></em><span class=\"sig-paren\">)</span><a class=\"reference internal\" href=\"../../../../../_modules/dagster_dbt/rpc/resources#DbtRpcSyncResource\"><span class=\"viewcode-link\"><span class=\"pre\">[source]</span></span></a><a class=\"headerlink\" href=\"#dagster_dbt.DbtRpcSyncResource\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd></dd></dl>\n\n<dl class=\"py class\">\n<dt id=\"dagster_dbt.DbtRpcOutput\">\n<em class=\"property\"><span class=\"pre\">class</span> </em><code class=\"sig-prename descclassname\"><span class=\"pre\">dagster_dbt.</span></code><code class=\"sig-name descname\"><span class=\"pre\">DbtRpcOutput</span></code><span class=\"sig-paren\">(</span><em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">response</span></span></em><span class=\"sig-paren\">)</span><a class=\"reference internal\" href=\"../../../../../_modules/dagster_dbt/rpc/types#DbtRpcOutput\"><span class=\"viewcode-link\"><span class=\"pre\">[source]</span></span></a><a class=\"headerlink\" href=\"#dagster_dbt.DbtRpcOutput\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>The output from executing a dbt command via the dbt RPC server.</p>\n<dl class=\"py attribute\">\n<dt id=\"dagster_dbt.DbtRpcOutput.result\">\n<code class=\"sig-name descname\"><span class=\"pre\">result</span></code><a class=\"headerlink\" href=\"#dagster_dbt.DbtRpcOutput.result\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>The parsed contents of the \u201cresult\u201d field of the JSON response from\nthe rpc server (if any).</p>\n<dl class=\"field-list simple\">\n<dt class=\"field-odd\">Type</dt>\n<dd class=\"field-odd\"><p>Dict[<a class=\"reference external\" href=\"https://docs.python.org/3/library/stdtypes.html#str\" title=\"(in Python v3.8)\">str</a>, Any]</p>\n</dd>\n</dl>\n</dd></dl>\n\n<dl class=\"py attribute\">\n<dt id=\"dagster_dbt.DbtRpcOutput.response_dict\">\n<code class=\"sig-name descname\"><span class=\"pre\">response_dict</span></code><a class=\"headerlink\" href=\"#dagster_dbt.DbtRpcOutput.response_dict\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>The entire contents of the JSON response from the rpc server.</p>\n<dl class=\"field-list simple\">\n<dt class=\"field-odd\">Type</dt>\n<dd class=\"field-odd\"><p>Dict[<a class=\"reference external\" href=\"https://docs.python.org/3/library/stdtypes.html#str\" title=\"(in Python v3.8)\">str</a>, Any]</p>\n</dd>\n</dl>\n</dd></dl>\n\n<dl class=\"py attribute\">\n<dt id=\"dagster_dbt.DbtRpcOutput.response\">\n<code class=\"sig-name descname\"><span class=\"pre\">response</span></code><a class=\"headerlink\" href=\"#dagster_dbt.DbtRpcOutput.response\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>The original Response from which this output was generated.</p>\n<dl class=\"field-list simple\">\n<dt class=\"field-odd\">Type</dt>\n<dd class=\"field-odd\"><p>requests.Response</p>\n</dd>\n</dl>\n</dd></dl>\n\n</dd></dl>\n\n<dl class=\"py data\">\n<dt id=\"dagster_dbt.local_dbt_rpc_resource\">\n<code class=\"sig-prename descclassname\"><span class=\"pre\">dagster_dbt.</span></code><code class=\"sig-name descname\"><span class=\"pre\">local_dbt_rpc_resource</span></code><em class=\"property\"> <span class=\"pre\">ResourceDefinition</span></em><a class=\"headerlink\" href=\"#dagster_dbt.local_dbt_rpc_resource\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>This resource defines a dbt RPC client for an RPC server running\non 0.0.0.0:8580.</p>\n</dd></dl>\n\n<dl class=\"py data\">\n<dt id=\"dagster_dbt.dbt_rpc_resource\">\n<code class=\"sig-prename descclassname\"><span class=\"pre\">dagster_dbt.</span></code><code class=\"sig-name descname\"><span class=\"pre\">dbt_rpc_resource</span></code><em class=\"property\"> <span class=\"pre\">ResourceDefinition</span></em><a class=\"reference internal\" href=\"../../../../../_modules/dagster_dbt/rpc/resources#dbt_rpc_resource\"><span class=\"viewcode-link\"><span class=\"pre\">[source]</span></span></a><a class=\"headerlink\" href=\"#dagster_dbt.dbt_rpc_resource\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><div class=\"line-block\">\n<div class=\"line\"><br /></div>\n</div>\n<details class=\"summary-config-schema\">\n<summary>Config Schema:</summary><dl class=\"field-list simple\">\n<dt class=\"field-odd\">host (dagster.StringSource)</dt>\n<dd class=\"field-odd\"><p></p></dd>\n<dt class=\"field-even\">port (dagster.IntSource, optional)</dt>\n<dd class=\"field-even\"><p><strong>Default Value:</strong> 8580</p>\n</dd>\n</dl>\n</details><p>This resource defines a dbt RPC client.</p>\n<p>To configure this resource, we recommend using the <a class=\"reference external\" href=\"https://docs.dagster.io/concepts/configuration/configured\">configured</a> method.</p>\n<p>Examples:</p>\n<p>Examples:</p>\n<div class=\"highlight-python notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"kn\">from</span> <span class=\"nn\">dagster_dbt</span> <span class=\"kn\">import</span> <span class=\"n\">dbt_rpc_resource</span>\n\n<span class=\"n\">custom_dbt_rpc_resource</span> <span class=\"o\">=</span> <span class=\"n\">dbt_rpc_resource</span><span class=\"o\">.</span><span class=\"n\">configured</span><span class=\"p\">({</span><span class=\"s2\">&quot;host&quot;</span><span class=\"p\">:</span> <span class=\"s2\">&quot;80.80.80.80&quot;</span><span class=\"p\">,</span><span class=\"s2\">&quot;port&quot;</span><span class=\"p\">:</span> <span class=\"mi\">8080</span><span class=\"p\">,})</span>\n\n<span class=\"nd\">@job</span><span class=\"p\">(</span><span class=\"n\">resource_defs</span><span class=\"o\">=</span><span class=\"p\">{</span><span class=\"s2\">&quot;dbt_rpc&quot;</span><span class=\"p\">:</span> <span class=\"n\">custom_dbt_rpc_sync_resource</span><span class=\"p\">})</span>\n<span class=\"k\">def</span> <span class=\"nf\">dbt_rpc_job</span><span class=\"p\">():</span>\n    <span class=\"c1\"># Run ops with `required_resource_keys={&quot;dbt_rpc&quot;, ...}`.</span>\n</pre></div>\n</div>\n</dd></dl>\n\n<dl class=\"py data\">\n<dt id=\"dagster_dbt.dbt_rpc_sync_resource\">\n<code class=\"sig-prename descclassname\"><span class=\"pre\">dagster_dbt.</span></code><code class=\"sig-name descname\"><span class=\"pre\">dbt_rpc_sync_resource</span></code><em class=\"property\"> <span class=\"pre\">ResourceDefinition</span></em><a class=\"reference internal\" href=\"../../../../../_modules/dagster_dbt/rpc/resources#dbt_rpc_sync_resource\"><span class=\"viewcode-link\"><span class=\"pre\">[source]</span></span></a><a class=\"headerlink\" href=\"#dagster_dbt.dbt_rpc_sync_resource\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><div class=\"line-block\">\n<div class=\"line\"><br /></div>\n</div>\n<details class=\"summary-config-schema\">\n<summary>Config Schema:</summary><dl class=\"field-list simple\">\n<dt class=\"field-odd\">host (dagster.StringSource)</dt>\n<dd class=\"field-odd\"><p></p></dd>\n<dt class=\"field-even\">port (dagster.IntSource, optional)</dt>\n<dd class=\"field-even\"><p><strong>Default Value:</strong> 8580</p>\n</dd>\n<dt class=\"field-odd\">poll_interval (dagster.IntSource, optional)</dt>\n<dd class=\"field-odd\"><p><strong>Default Value:</strong> 1</p>\n</dd>\n</dl>\n</details><p>This resource defines a synchronous dbt RPC client, which sends requests to a dbt RPC server,\nand waits for the request to complete before returning.</p>\n<p>To configure this resource, we recommend using the <a class=\"reference external\" href=\"https://docs.dagster.io/concepts/configuration/configured\">configured</a> method.</p>\n<p>Examples:</p>\n<div class=\"highlight-python notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"kn\">from</span> <span class=\"nn\">dagster_dbt</span> <span class=\"kn\">import</span> <span class=\"n\">dbt_rpc_sync_resource</span>\n\n<span class=\"n\">custom_sync_dbt_rpc_resource</span> <span class=\"o\">=</span> <span class=\"n\">dbt_rpc_sync_resource</span><span class=\"o\">.</span><span class=\"n\">configured</span><span class=\"p\">({</span><span class=\"s2\">&quot;host&quot;</span><span class=\"p\">:</span> <span class=\"s2\">&quot;80.80.80.80&quot;</span><span class=\"p\">,</span><span class=\"s2\">&quot;port&quot;</span><span class=\"p\">:</span> <span class=\"mi\">8080</span><span class=\"p\">,})</span>\n\n<span class=\"nd\">@job</span><span class=\"p\">(</span><span class=\"n\">resource_defs</span><span class=\"o\">=</span><span class=\"p\">{</span><span class=\"s2\">&quot;dbt_rpc&quot;</span><span class=\"p\">:</span> <span class=\"n\">custom_dbt_rpc_sync_resource</span><span class=\"p\">})</span>\n<span class=\"k\">def</span> <span class=\"nf\">dbt_rpc_sync_job</span><span class=\"p\">():</span>\n    <span class=\"c1\"># Run ops with `required_resource_keys={&quot;dbt_rpc&quot;, ...}`.</span>\n</pre></div>\n</div>\n</dd></dl>\n\n</div>\n<div class=\"section\" id=\"dbt-cloud-resources\">\n<h3>dbt Cloud Resources<a class=\"headerlink\" href=\"#dbt-cloud-resources\" title=\"Permalink to this headline\">\u00b6</a></h3>\n<dl class=\"py class\">\n<dt id=\"dagster_dbt.DbtCloudResourceV2\">\n<em class=\"property\"><span class=\"pre\">class</span> </em><code class=\"sig-prename descclassname\"><span class=\"pre\">dagster_dbt.</span></code><code class=\"sig-name descname\"><span class=\"pre\">DbtCloudResourceV2</span></code><span class=\"sig-paren\">(</span><em class=\"sig-param\"><span class=\"pre\">auth_token</span></em>, <em class=\"sig-param\"><span class=\"pre\">account_id</span></em>, <em class=\"sig-param\"><span class=\"pre\">disable_schedule_on_trigger=True</span></em>, <em class=\"sig-param\"><span class=\"pre\">request_max_retries=3</span></em>, <em class=\"sig-param\"><span class=\"pre\">request_retry_delay=0.25</span></em>, <em class=\"sig-param\"><span class=\"pre\">dbt_cloud_host='https://cloud.getdbt.com/'</span></em>, <em class=\"sig-param\"><span class=\"pre\">log=&lt;Logger</span> <span class=\"pre\">dagster.builtin</span> <span class=\"pre\">(DEBUG)&gt;</span></em>, <em class=\"sig-param\"><span class=\"pre\">log_requests=False</span></em><span class=\"sig-paren\">)</span><a class=\"reference internal\" href=\"../../../../../_modules/dagster_dbt/cloud/resources#DbtCloudResourceV2\"><span class=\"viewcode-link\"><span class=\"pre\">[source]</span></span></a><a class=\"headerlink\" href=\"#dagster_dbt.DbtCloudResourceV2\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>This class exposes methods on top of the dbt Cloud REST API v2.</p>\n<p>For a complete set of documentation on the dbt Cloud Administrative REST API, including expected\nresponse JSON schemae, see the <a class=\"reference external\" href=\"https://docs.getdbt.com/dbt-cloud/api-v2\">dbt Cloud API Docs</a>.</p>\n<dl class=\"py method\">\n<dt id=\"dagster_dbt.DbtCloudResourceV2.cancel_run\">\n<code class=\"sig-name descname\"><span class=\"pre\">cancel_run</span></code><span class=\"sig-paren\">(</span><em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">run_id</span></span></em><span class=\"sig-paren\">)</span><a class=\"reference internal\" href=\"../../../../../_modules/dagster_dbt/cloud/resources#DbtCloudResourceV2.cancel_run\"><span class=\"viewcode-link\"><span class=\"pre\">[source]</span></span></a><a class=\"headerlink\" href=\"#dagster_dbt.DbtCloudResourceV2.cancel_run\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Cancels a dbt Cloud run.</p>\n<dl class=\"field-list simple\">\n<dt class=\"field-odd\">Parameters</dt>\n<dd class=\"field-odd\"><p><strong>run_id</strong> (<a class=\"reference external\" href=\"https://docs.python.org/3/library/functions.html#int\" title=\"(in Python v3.8)\"><em>int</em></a>) \u2013 The ID of the relevant dbt Cloud run. You can find this value by going to\nthe details page of your run in the dbt Cloud UI. It will be the final number in the\nurl, e.g.: <code class=\"docutils literal notranslate\"><span class=\"pre\">https://cloud.getdbt.com/#/accounts/{account_id}/projects/{project_id}/runs/{run_id}/</span></code></p>\n</dd>\n<dt class=\"field-even\">Returns</dt>\n<dd class=\"field-even\"><p><dl class=\"simple\">\n<dt>A dictionary containing the parsed contents of the dbt Cloud run details.</dt><dd><p>See: <a class=\"reference external\" href=\"https://docs.getdbt.com/dbt-cloud/api-v2#operation/getRunById\">https://docs.getdbt.com/dbt-cloud/api-v2#operation/getRunById</a> for schema.</p>\n</dd>\n</dl>\n</p>\n</dd>\n<dt class=\"field-odd\">Return type</dt>\n<dd class=\"field-odd\"><p>Dict[<a class=\"reference external\" href=\"https://docs.python.org/3/library/stdtypes.html#str\" title=\"(in Python v3.8)\">str</a>, Any]</p>\n</dd>\n</dl>\n</dd></dl>\n\n<dl class=\"py method\">\n<dt id=\"dagster_dbt.DbtCloudResourceV2.get_job\">\n<code class=\"sig-name descname\"><span class=\"pre\">get_job</span></code><span class=\"sig-paren\">(</span><em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">job_id</span></span></em><span class=\"sig-paren\">)</span><a class=\"reference internal\" href=\"../../../../../_modules/dagster_dbt/cloud/resources#DbtCloudResourceV2.get_job\"><span class=\"viewcode-link\"><span class=\"pre\">[source]</span></span></a><a class=\"headerlink\" href=\"#dagster_dbt.DbtCloudResourceV2.get_job\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Gets details about a given dbt job from the dbt Cloud API.</p>\n<dl class=\"field-list simple\">\n<dt class=\"field-odd\">Parameters</dt>\n<dd class=\"field-odd\"><p><strong>job_id</strong> (<a class=\"reference external\" href=\"https://docs.python.org/3/library/functions.html#int\" title=\"(in Python v3.8)\"><em>int</em></a>) \u2013 The ID of the relevant dbt Cloud job. You can find this value by going to\nthe details page of your job in the dbt Cloud UI. It will be the final number in the\nurl, e.g.: <code class=\"docutils literal notranslate\"><span class=\"pre\">https://cloud.getdbt.com/#/accounts/{account_id}/projects/{project_id}/jobs/{job_id}/</span></code></p>\n</dd>\n<dt class=\"field-even\">Returns</dt>\n<dd class=\"field-even\"><p>Parsed json data from the response to this request</p>\n</dd>\n<dt class=\"field-odd\">Return type</dt>\n<dd class=\"field-odd\"><p>Dict[<a class=\"reference external\" href=\"https://docs.python.org/3/library/stdtypes.html#str\" title=\"(in Python v3.8)\">str</a>, Any]</p>\n</dd>\n</dl>\n</dd></dl>\n\n<dl class=\"py method\">\n<dt id=\"dagster_dbt.DbtCloudResourceV2.get_manifest\">\n<code class=\"sig-name descname\"><span class=\"pre\">get_manifest</span></code><span class=\"sig-paren\">(</span><em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">run_id</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">step</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">None</span></span></em><span class=\"sig-paren\">)</span><a class=\"reference internal\" href=\"../../../../../_modules/dagster_dbt/cloud/resources#DbtCloudResourceV2.get_manifest\"><span class=\"viewcode-link\"><span class=\"pre\">[source]</span></span></a><a class=\"headerlink\" href=\"#dagster_dbt.DbtCloudResourceV2.get_manifest\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>The parsed contents of a manifest.json file created by a completed run.</p>\n<dl class=\"field-list simple\">\n<dt class=\"field-odd\">Parameters</dt>\n<dd class=\"field-odd\"><ul class=\"simple\">\n<li><p><strong>run_id</strong> (<a class=\"reference external\" href=\"https://docs.python.org/3/library/functions.html#int\" title=\"(in Python v3.8)\"><em>int</em></a>) \u2013 The ID of the relevant dbt Cloud run. You can find this value by going to\nthe details page of your run in the dbt Cloud UI. It will be the final number in the\nurl, e.g.: <code class=\"docutils literal notranslate\"><span class=\"pre\">https://cloud.getdbt.com/#/accounts/{account_id}/projects/{project_id}/runs/{run_id}/</span></code></p></li>\n<li><p><strong>step</strong> (<a class=\"reference external\" href=\"https://docs.python.org/3/library/functions.html#int\" title=\"(in Python v3.8)\"><em>int</em></a>) \u2013 The index of the step in the run to query for artifacts. The first step in\nthe run has the index 1. If the step parameter is omitted, then this endpoint will\nreturn the artifacts compiled for the last step in the run.</p></li>\n</ul>\n</dd>\n<dt class=\"field-even\">Returns</dt>\n<dd class=\"field-even\"><p>Parsed contents of the manifest.json file</p>\n</dd>\n<dt class=\"field-odd\">Return type</dt>\n<dd class=\"field-odd\"><p>Dict[<a class=\"reference external\" href=\"https://docs.python.org/3/library/stdtypes.html#str\" title=\"(in Python v3.8)\">str</a>, Any]</p>\n</dd>\n</dl>\n</dd></dl>\n\n<dl class=\"py method\">\n<dt id=\"dagster_dbt.DbtCloudResourceV2.get_run\">\n<code class=\"sig-name descname\"><span class=\"pre\">get_run</span></code><span class=\"sig-paren\">(</span><em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">run_id</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">include_related</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">None</span></span></em><span class=\"sig-paren\">)</span><a class=\"reference internal\" href=\"../../../../../_modules/dagster_dbt/cloud/resources#DbtCloudResourceV2.get_run\"><span class=\"viewcode-link\"><span class=\"pre\">[source]</span></span></a><a class=\"headerlink\" href=\"#dagster_dbt.DbtCloudResourceV2.get_run\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Gets details about a specific job run.</p>\n<dl class=\"field-list simple\">\n<dt class=\"field-odd\">Parameters</dt>\n<dd class=\"field-odd\"><ul class=\"simple\">\n<li><p><strong>run_id</strong> (<a class=\"reference external\" href=\"https://docs.python.org/3/library/functions.html#int\" title=\"(in Python v3.8)\"><em>int</em></a>) \u2013 The ID of the relevant dbt Cloud run. You can find this value by going to\nthe details page of your run in the dbt Cloud UI. It will be the final number in the\nurl, e.g.: <code class=\"docutils literal notranslate\"><span class=\"pre\">https://cloud.getdbt.com/#/accounts/{account_id}/projects/{project_id}/runs/{run_id}/</span></code></p></li>\n<li><p><strong>include_related</strong> (<em>List</em><em>[</em><a class=\"reference external\" href=\"https://docs.python.org/3/library/stdtypes.html#str\" title=\"(in Python v3.8)\"><em>str</em></a><em>]</em>) \u2013 List of related fields to pull with the run. Valid values\nare \u201ctrigger\u201d, \u201cjob\u201d, and \u201cdebug_logs\u201d.</p></li>\n</ul>\n</dd>\n<dt class=\"field-even\">Returns</dt>\n<dd class=\"field-even\"><p><dl class=\"simple\">\n<dt>A dictionary containing the parsed contents of the dbt Cloud run details.</dt><dd><p>See: <a class=\"reference external\" href=\"https://docs.getdbt.com/dbt-cloud/api-v2#operation/getRunById\">https://docs.getdbt.com/dbt-cloud/api-v2#operation/getRunById</a> for schema.</p>\n</dd>\n</dl>\n</p>\n</dd>\n<dt class=\"field-odd\">Return type</dt>\n<dd class=\"field-odd\"><p>Dict[<a class=\"reference external\" href=\"https://docs.python.org/3/library/stdtypes.html#str\" title=\"(in Python v3.8)\">str</a>, Any]</p>\n</dd>\n</dl>\n</dd></dl>\n\n<dl class=\"py method\">\n<dt id=\"dagster_dbt.DbtCloudResourceV2.get_run_artifact\">\n<code class=\"sig-name descname\"><span class=\"pre\">get_run_artifact</span></code><span class=\"sig-paren\">(</span><em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">run_id</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">path</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">step</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">None</span></span></em><span class=\"sig-paren\">)</span><a class=\"reference internal\" href=\"../../../../../_modules/dagster_dbt/cloud/resources#DbtCloudResourceV2.get_run_artifact\"><span class=\"viewcode-link\"><span class=\"pre\">[source]</span></span></a><a class=\"headerlink\" href=\"#dagster_dbt.DbtCloudResourceV2.get_run_artifact\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>The string contents of a run artifact from a dbt Cloud run.</p>\n<dl class=\"field-list simple\">\n<dt class=\"field-odd\">Parameters</dt>\n<dd class=\"field-odd\"><ul class=\"simple\">\n<li><p><strong>run_id</strong> (<a class=\"reference external\" href=\"https://docs.python.org/3/library/functions.html#int\" title=\"(in Python v3.8)\"><em>int</em></a>) \u2013 The ID of the relevant dbt Cloud run. You can find this value by going to\nthe details page of your run in the dbt Cloud UI. It will be the final number in the\nurl, e.g.: <code class=\"docutils literal notranslate\"><span class=\"pre\">https://cloud.getdbt.com/#/accounts/{account_id}/projects/{project_id}/runs/{run_id}/</span></code></p></li>\n<li><p><strong>path</strong> (<a class=\"reference external\" href=\"https://docs.python.org/3/library/stdtypes.html#str\" title=\"(in Python v3.8)\"><em>str</em></a>) \u2013 The path to this run artifact (e.g. \u2018run/my_new_project/models/example/my_first_dbt_model.sql\u2019)</p></li>\n<li><p><strong>step</strong> (<a class=\"reference external\" href=\"https://docs.python.org/3/library/functions.html#int\" title=\"(in Python v3.8)\"><em>int</em></a>) \u2013 The index of the step in the run to query for artifacts. The first step in\nthe run has the index 1. If the step parameter is omitted, then this endpoint will\nreturn the artifacts compiled for the last step in the run.</p></li>\n</ul>\n</dd>\n<dt class=\"field-even\">Returns</dt>\n<dd class=\"field-even\"><p>List of the names of the available run artifacts</p>\n</dd>\n<dt class=\"field-odd\">Return type</dt>\n<dd class=\"field-odd\"><p>List[<a class=\"reference external\" href=\"https://docs.python.org/3/library/stdtypes.html#str\" title=\"(in Python v3.8)\">str</a>]</p>\n</dd>\n</dl>\n</dd></dl>\n\n<dl class=\"py method\">\n<dt id=\"dagster_dbt.DbtCloudResourceV2.get_run_results\">\n<code class=\"sig-name descname\"><span class=\"pre\">get_run_results</span></code><span class=\"sig-paren\">(</span><em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">run_id</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">step</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">None</span></span></em><span class=\"sig-paren\">)</span><a class=\"reference internal\" href=\"../../../../../_modules/dagster_dbt/cloud/resources#DbtCloudResourceV2.get_run_results\"><span class=\"viewcode-link\"><span class=\"pre\">[source]</span></span></a><a class=\"headerlink\" href=\"#dagster_dbt.DbtCloudResourceV2.get_run_results\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>The parsed contents of a run_results.json file created by a completed run.</p>\n<dl class=\"field-list simple\">\n<dt class=\"field-odd\">Parameters</dt>\n<dd class=\"field-odd\"><ul class=\"simple\">\n<li><p><strong>run_id</strong> (<a class=\"reference external\" href=\"https://docs.python.org/3/library/functions.html#int\" title=\"(in Python v3.8)\"><em>int</em></a>) \u2013 The ID of the relevant dbt Cloud run. You can find this value by going to\nthe details page of your run in the dbt Cloud UI. It will be the final number in the\nurl, e.g.: <code class=\"docutils literal notranslate\"><span class=\"pre\">https://cloud.getdbt.com/#/accounts/{account_id}/projects/{project_id}/runs/{run_id}/</span></code></p></li>\n<li><p><strong>step</strong> (<a class=\"reference external\" href=\"https://docs.python.org/3/library/functions.html#int\" title=\"(in Python v3.8)\"><em>int</em></a>) \u2013 The index of the step in the run to query for artifacts. The first step in\nthe run has the index 1. If the step parameter is omitted, then this endpoint will\nreturn the artifacts compiled for the last step in the run.</p></li>\n</ul>\n</dd>\n<dt class=\"field-even\">Returns</dt>\n<dd class=\"field-even\"><p>Parsed contents of the run_results.json file</p>\n</dd>\n<dt class=\"field-odd\">Return type</dt>\n<dd class=\"field-odd\"><p>Dict[<a class=\"reference external\" href=\"https://docs.python.org/3/library/stdtypes.html#str\" title=\"(in Python v3.8)\">str</a>, Any]</p>\n</dd>\n</dl>\n</dd></dl>\n\n<dl class=\"py method\">\n<dt id=\"dagster_dbt.DbtCloudResourceV2.get_run_steps\">\n<code class=\"sig-name descname\"><span class=\"pre\">get_run_steps</span></code><span class=\"sig-paren\">(</span><em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">run_id</span></span></em><span class=\"sig-paren\">)</span><a class=\"reference internal\" href=\"../../../../../_modules/dagster_dbt/cloud/resources#DbtCloudResourceV2.get_run_steps\"><span class=\"viewcode-link\"><span class=\"pre\">[source]</span></span></a><a class=\"headerlink\" href=\"#dagster_dbt.DbtCloudResourceV2.get_run_steps\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Gets the steps of an initialized dbt Cloud run.</p>\n<dl class=\"field-list simple\">\n<dt class=\"field-odd\">Parameters</dt>\n<dd class=\"field-odd\"><p><strong>run_id</strong> (<a class=\"reference external\" href=\"https://docs.python.org/3/library/functions.html#int\" title=\"(in Python v3.8)\"><em>int</em></a>) \u2013 The ID of the relevant dbt Cloud run. You can find this value by going to\nthe details page of your run in the dbt Cloud UI. It will be the final number in the\nurl, e.g.: <code class=\"docutils literal notranslate\"><span class=\"pre\">https://cloud.getdbt.com/#/accounts/{account_id}/projects/{project_id}/runs/{run_id}/</span></code></p>\n</dd>\n<dt class=\"field-even\">Returns</dt>\n<dd class=\"field-even\"><p>List of commands for each step of the run.</p>\n</dd>\n<dt class=\"field-odd\">Return type</dt>\n<dd class=\"field-odd\"><p>List[<a class=\"reference external\" href=\"https://docs.python.org/3/library/stdtypes.html#str\" title=\"(in Python v3.8)\">str</a>, Any]</p>\n</dd>\n</dl>\n</dd></dl>\n\n<dl class=\"py method\">\n<dt id=\"dagster_dbt.DbtCloudResourceV2.get_runs\">\n<code class=\"sig-name descname\"><span class=\"pre\">get_runs</span></code><span class=\"sig-paren\">(</span><em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">include_related</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">None</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">job_id</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">None</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">order_by</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">'-id'</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">offset</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">0</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">limit</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">100</span></span></em><span class=\"sig-paren\">)</span><a class=\"reference internal\" href=\"../../../../../_modules/dagster_dbt/cloud/resources#DbtCloudResourceV2.get_runs\"><span class=\"viewcode-link\"><span class=\"pre\">[source]</span></span></a><a class=\"headerlink\" href=\"#dagster_dbt.DbtCloudResourceV2.get_runs\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Returns a list of runs from dbt Cloud. This can be optionally filtered to a specific job\nusing the job_definition_id. It supports pagination using offset and limit as well and\ncan be configured to load a variety of related information about the runs.</p>\n<dl class=\"field-list simple\">\n<dt class=\"field-odd\">Parameters</dt>\n<dd class=\"field-odd\"><ul class=\"simple\">\n<li><p><strong>include_related</strong> (<em>Optional</em><em>[</em><em>List</em><em>[</em><a class=\"reference external\" href=\"https://docs.python.org/3/library/stdtypes.html#str\" title=\"(in Python v3.8)\"><em>str</em></a><em>]</em><em>]</em>) \u2013 A list of resources to include in the response\nfrom dbt Cloud. This is technically a required field according to the API, but it\ncan be passed with an empty list where it will only load the default run\ninformation. Valid values are \u201ctrigger\u201d, \u201cjob\u201d, \u201crepository\u201d, and \u201cenvironment\u201d.</p></li>\n<li><p><strong>job_definition_id</strong> (<em>Optional</em><em>[</em><a class=\"reference external\" href=\"https://docs.python.org/3/library/functions.html#int\" title=\"(in Python v3.8)\"><em>int</em></a><em>]</em>) \u2013 This method can be optionally filtered to only\nload runs for a specific job id if it is included here. If omitted it will pull\nruns for every job.</p></li>\n<li><p><strong>order_by</strong> (<em>Optional</em><em>[</em><a class=\"reference external\" href=\"https://docs.python.org/3/library/stdtypes.html#str\" title=\"(in Python v3.8)\"><em>str</em></a><em>]</em>) \u2013 An identifier designated by dbt Cloud in which to sort the\nresults before returning them. Useful when combined with offset and limit to load\nruns for a job. Defaults to \u201c-id\u201d where \u201c-\u201d designates reverse order and \u201cid\u201d is\nthe key to filter on.</p></li>\n<li><p><strong>offset</strong> (<a class=\"reference external\" href=\"https://docs.python.org/3/library/functions.html#int\" title=\"(in Python v3.8)\"><em>int</em></a>) \u2013 An offset to apply when listing runs. Can be used to paginate results\nwhen combined with order_by and limit. Defaults to 0.</p></li>\n<li><p><strong>limit</strong> (<a class=\"reference external\" href=\"https://docs.python.org/3/library/functions.html#int\" title=\"(in Python v3.8)\"><em>int</em></a>) \u2013 Limits the amount of rows returned by the API. Defaults to 100.</p></li>\n</ul>\n</dd>\n<dt class=\"field-even\">Returns</dt>\n<dd class=\"field-even\"><p><dl class=\"simple\">\n<dt>A list of dictionaries containing the runs and any included</dt><dd><p>related information.</p>\n</dd>\n</dl>\n</p>\n</dd>\n<dt class=\"field-odd\">Return type</dt>\n<dd class=\"field-odd\"><p>List[Dict[<a class=\"reference external\" href=\"https://docs.python.org/3/library/stdtypes.html#str\" title=\"(in Python v3.8)\">str</a>, Any]]</p>\n</dd>\n</dl>\n</dd></dl>\n\n<dl class=\"py method\">\n<dt id=\"dagster_dbt.DbtCloudResourceV2.list_run_artifacts\">\n<code class=\"sig-name descname\"><span class=\"pre\">list_run_artifacts</span></code><span class=\"sig-paren\">(</span><em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">run_id</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">step</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">None</span></span></em><span class=\"sig-paren\">)</span><a class=\"reference internal\" href=\"../../../../../_modules/dagster_dbt/cloud/resources#DbtCloudResourceV2.list_run_artifacts\"><span class=\"viewcode-link\"><span class=\"pre\">[source]</span></span></a><a class=\"headerlink\" href=\"#dagster_dbt.DbtCloudResourceV2.list_run_artifacts\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Lists the paths of the available run artifacts from a completed dbt Cloud run.</p>\n<dl class=\"field-list simple\">\n<dt class=\"field-odd\">Parameters</dt>\n<dd class=\"field-odd\"><ul class=\"simple\">\n<li><p><strong>run_id</strong> (<a class=\"reference external\" href=\"https://docs.python.org/3/library/functions.html#int\" title=\"(in Python v3.8)\"><em>int</em></a>) \u2013 The ID of the relevant dbt Cloud run. You can find this value by going to\nthe details page of your run in the dbt Cloud UI. It will be the final number in the\nurl, e.g.: <code class=\"docutils literal notranslate\"><span class=\"pre\">https://cloud.getdbt.com/#/accounts/{account_id}/projects/{project_id}/runs/{run_id}/</span></code></p></li>\n<li><p><strong>step</strong> (<a class=\"reference external\" href=\"https://docs.python.org/3/library/functions.html#int\" title=\"(in Python v3.8)\"><em>int</em></a>) \u2013 The index of the step in the run to query for artifacts. The first step in\nthe run has the index 1. If the step parameter is omitted, then this endpoint will\nreturn the artifacts compiled for the last step in the run</p></li>\n</ul>\n</dd>\n<dt class=\"field-even\">Returns</dt>\n<dd class=\"field-even\"><p>List of the paths of the available run artifacts</p>\n</dd>\n<dt class=\"field-odd\">Return type</dt>\n<dd class=\"field-odd\"><p>List[<a class=\"reference external\" href=\"https://docs.python.org/3/library/stdtypes.html#str\" title=\"(in Python v3.8)\">str</a>]</p>\n</dd>\n</dl>\n</dd></dl>\n\n<dl class=\"py method\">\n<dt id=\"dagster_dbt.DbtCloudResourceV2.make_request\">\n<code class=\"sig-name descname\"><span class=\"pre\">make_request</span></code><span class=\"sig-paren\">(</span><em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">method</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">endpoint</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">data</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">None</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">return_text</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">False</span></span></em><span class=\"sig-paren\">)</span><a class=\"reference internal\" href=\"../../../../../_modules/dagster_dbt/cloud/resources#DbtCloudResourceV2.make_request\"><span class=\"viewcode-link\"><span class=\"pre\">[source]</span></span></a><a class=\"headerlink\" href=\"#dagster_dbt.DbtCloudResourceV2.make_request\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Creates and sends a request to the desired dbt Cloud API endpoint.</p>\n<dl class=\"field-list simple\">\n<dt class=\"field-odd\">Parameters</dt>\n<dd class=\"field-odd\"><ul class=\"simple\">\n<li><p><strong>method</strong> (<a class=\"reference external\" href=\"https://docs.python.org/3/library/stdtypes.html#str\" title=\"(in Python v3.8)\"><em>str</em></a>) \u2013 The http method to use for this request (e.g. \u201cPOST\u201d, \u201cGET\u201d, \u201cPATCH\u201d).</p></li>\n<li><p><strong>endpoint</strong> (<a class=\"reference external\" href=\"https://docs.python.org/3/library/stdtypes.html#str\" title=\"(in Python v3.8)\"><em>str</em></a>) \u2013 The dbt Cloud API endpoint to send this request to.</p></li>\n<li><p><strong>data</strong> (<em>Optional</em><em>[</em><a class=\"reference external\" href=\"https://docs.python.org/3/library/stdtypes.html#str\" title=\"(in Python v3.8)\"><em>str</em></a><em>]</em>) \u2013 JSON-formatted data string to be included in the request.</p></li>\n<li><p><strong>return_text</strong> (<a class=\"reference external\" href=\"https://docs.python.org/3/library/functions.html#bool\" title=\"(in Python v3.8)\"><em>bool</em></a>) \u2013 Override default behavior and return unparsed {\u201ctext\u201d: response.text}\nblob instead of json.</p></li>\n</ul>\n</dd>\n<dt class=\"field-even\">Returns</dt>\n<dd class=\"field-even\"><p>Parsed json data from the response to this request</p>\n</dd>\n<dt class=\"field-odd\">Return type</dt>\n<dd class=\"field-odd\"><p>Dict[<a class=\"reference external\" href=\"https://docs.python.org/3/library/stdtypes.html#str\" title=\"(in Python v3.8)\">str</a>, Any]</p>\n</dd>\n</dl>\n</dd></dl>\n\n<dl class=\"py method\">\n<dt id=\"dagster_dbt.DbtCloudResourceV2.poll_run\">\n<code class=\"sig-name descname\"><span class=\"pre\">poll_run</span></code><span class=\"sig-paren\">(</span><em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">run_id</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">poll_interval</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">10</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">poll_timeout</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">None</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">href</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">None</span></span></em><span class=\"sig-paren\">)</span><a class=\"reference internal\" href=\"../../../../../_modules/dagster_dbt/cloud/resources#DbtCloudResourceV2.poll_run\"><span class=\"viewcode-link\"><span class=\"pre\">[source]</span></span></a><a class=\"headerlink\" href=\"#dagster_dbt.DbtCloudResourceV2.poll_run\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Polls a dbt Cloud job run until it completes. Will raise a <cite>dagster.Failure</cite> exception if the\nrun does not complete successfully.</p>\n<dl class=\"field-list simple\">\n<dt class=\"field-odd\">Parameters</dt>\n<dd class=\"field-odd\"><ul class=\"simple\">\n<li><p><strong>run_id</strong> (<a class=\"reference external\" href=\"https://docs.python.org/3/library/functions.html#int\" title=\"(in Python v3.8)\"><em>int</em></a>) \u2013 The ID of the relevant dbt Cloud run. You can find this value by going to\nthe details page of your run in the dbt Cloud UI. It will be the final number in the\nurl, e.g.: <code class=\"docutils literal notranslate\"><span class=\"pre\">https://cloud.getdbt.com/#/accounts/{account_id}/projects/{project_id}/runs/{run_id}/</span></code></p></li>\n<li><p><strong>poll_interval</strong> (<a class=\"reference external\" href=\"https://docs.python.org/3/library/functions.html#float\" title=\"(in Python v3.8)\"><em>float</em></a>) \u2013 The time (in seconds) that should be waited between successive\npolls of the dbt Cloud API.</p></li>\n<li><p><strong>poll_timeout</strong> (<a class=\"reference external\" href=\"https://docs.python.org/3/library/functions.html#float\" title=\"(in Python v3.8)\"><em>float</em></a>) \u2013 The maximum time (in seconds) that should be waited for this run\nto complete. If this threshold is exceeded, the run will be cancelled and an\nexception will be thrown. By default, this will poll forver.</p></li>\n<li><p><strong>href</strong> (<a class=\"reference external\" href=\"https://docs.python.org/3/library/stdtypes.html#str\" title=\"(in Python v3.8)\"><em>str</em></a>) \u2013 For internal use, generally should not be set manually.</p></li>\n</ul>\n</dd>\n<dt class=\"field-even\">Returns</dt>\n<dd class=\"field-even\"><p><dl class=\"simple\">\n<dt>A dictionary containing the parsed contents of the dbt Cloud run details.</dt><dd><p>See: <a class=\"reference external\" href=\"https://docs.getdbt.com/dbt-cloud/api-v2#operation/getRunById\">https://docs.getdbt.com/dbt-cloud/api-v2#operation/getRunById</a> for schema.</p>\n</dd>\n</dl>\n</p>\n</dd>\n<dt class=\"field-odd\">Return type</dt>\n<dd class=\"field-odd\"><p>Dict[<a class=\"reference external\" href=\"https://docs.python.org/3/library/stdtypes.html#str\" title=\"(in Python v3.8)\">str</a>, Any]</p>\n</dd>\n</dl>\n</dd></dl>\n\n<dl class=\"py method\">\n<dt id=\"dagster_dbt.DbtCloudResourceV2.run_job\">\n<code class=\"sig-name descname\"><span class=\"pre\">run_job</span></code><span class=\"sig-paren\">(</span><em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">job_id</span></span></em>, <em class=\"sig-param\"><span class=\"o\"><span class=\"pre\">**</span></span><span class=\"n\"><span class=\"pre\">kwargs</span></span></em><span class=\"sig-paren\">)</span><a class=\"reference internal\" href=\"../../../../../_modules/dagster_dbt/cloud/resources#DbtCloudResourceV2.run_job\"><span class=\"viewcode-link\"><span class=\"pre\">[source]</span></span></a><a class=\"headerlink\" href=\"#dagster_dbt.DbtCloudResourceV2.run_job\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Initializes a run for a job. Overrides for specific properties can be set by passing in\nvalues to the kwargs. A full list of overridable properties can be found here:\n<a class=\"reference external\" href=\"https://docs.getdbt.com/dbt-cloud/api-v2#operation/triggerRun\">https://docs.getdbt.com/dbt-cloud/api-v2#operation/triggerRun</a></p>\n<dl class=\"field-list simple\">\n<dt class=\"field-odd\">Parameters</dt>\n<dd class=\"field-odd\"><ul class=\"simple\">\n<li><p><strong>job_id</strong> (<a class=\"reference external\" href=\"https://docs.python.org/3/library/functions.html#int\" title=\"(in Python v3.8)\"><em>int</em></a>) \u2013 The ID of the relevant dbt Cloud job. You can find this value by going to\nthe details page of your job in the dbt Cloud UI. It will be the final number in the\nurl, e.g.: <code class=\"docutils literal notranslate\"><span class=\"pre\">https://cloud.getdbt.com/#/accounts/{account_id}/projects/{project_id}/jobs/{job_id}/</span></code></p></li>\n<li><p><strong>kwargs</strong> \u2013 Passed in as the properties to be overridden.</p></li>\n</ul>\n</dd>\n<dt class=\"field-even\">Returns</dt>\n<dd class=\"field-even\"><p>Parsed json data from the response to this request</p>\n</dd>\n<dt class=\"field-odd\">Return type</dt>\n<dd class=\"field-odd\"><p>Dict[<a class=\"reference external\" href=\"https://docs.python.org/3/library/stdtypes.html#str\" title=\"(in Python v3.8)\">str</a>, Any]</p>\n</dd>\n</dl>\n</dd></dl>\n\n<dl class=\"py method\">\n<dt id=\"dagster_dbt.DbtCloudResourceV2.run_job_and_poll\">\n<code class=\"sig-name descname\"><span class=\"pre\">run_job_and_poll</span></code><span class=\"sig-paren\">(</span><em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">job_id</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">poll_interval</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">10</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">poll_timeout</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">None</span></span></em><span class=\"sig-paren\">)</span><a class=\"reference internal\" href=\"../../../../../_modules/dagster_dbt/cloud/resources#DbtCloudResourceV2.run_job_and_poll\"><span class=\"viewcode-link\"><span class=\"pre\">[source]</span></span></a><a class=\"headerlink\" href=\"#dagster_dbt.DbtCloudResourceV2.run_job_and_poll\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Runs a dbt Cloud job and polls until it completes. Will raise a <cite>dagster.Failure</cite> exception\nif the run does not complete successfully.</p>\n<dl class=\"field-list simple\">\n<dt class=\"field-odd\">Parameters</dt>\n<dd class=\"field-odd\"><ul class=\"simple\">\n<li><p><strong>job_id</strong> (<a class=\"reference external\" href=\"https://docs.python.org/3/library/functions.html#int\" title=\"(in Python v3.8)\"><em>int</em></a>) \u2013 The ID of the relevant dbt Cloud job. You can find this value by going to\nthe details page of your job in the dbt Cloud UI. It will be the final number in the\nurl, e.g.: <code class=\"docutils literal notranslate\"><span class=\"pre\">https://cloud.getdbt.com/#/accounts/{account_id}/projects/{project_id}/jobs/{job_id}/</span></code></p></li>\n<li><p><strong>poll_interval</strong> (<a class=\"reference external\" href=\"https://docs.python.org/3/library/functions.html#float\" title=\"(in Python v3.8)\"><em>float</em></a>) \u2013 The time (in seconds) that should be waited between successive\npolls of the dbt Cloud API.</p></li>\n<li><p><strong>poll_timeout</strong> (<a class=\"reference external\" href=\"https://docs.python.org/3/library/functions.html#float\" title=\"(in Python v3.8)\"><em>float</em></a>) \u2013 The maximum time (in seconds) that should be waited for this run\nto complete. If this threshold is exceeded, the run will be cancelled and an\nexception will be thrown. By default, this will poll forver.</p></li>\n</ul>\n</dd>\n<dt class=\"field-even\">Returns</dt>\n<dd class=\"field-even\"><p><dl class=\"simple\">\n<dt>Class containing details about the specific job run and the</dt><dd><p>parsed run results.</p>\n</dd>\n</dl>\n</p>\n</dd>\n<dt class=\"field-odd\">Return type</dt>\n<dd class=\"field-odd\"><p><code class=\"xref py py-class docutils literal notranslate\"><span class=\"pre\">DbtCloudOutput</span></code></p>\n</dd>\n</dl>\n</dd></dl>\n\n<dl class=\"py method\">\n<dt id=\"dagster_dbt.DbtCloudResourceV2.update_job\">\n<code class=\"sig-name descname\"><span class=\"pre\">update_job</span></code><span class=\"sig-paren\">(</span><em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">job_id</span></span></em>, <em class=\"sig-param\"><span class=\"o\"><span class=\"pre\">**</span></span><span class=\"n\"><span class=\"pre\">kwargs</span></span></em><span class=\"sig-paren\">)</span><a class=\"reference internal\" href=\"../../../../../_modules/dagster_dbt/cloud/resources#DbtCloudResourceV2.update_job\"><span class=\"viewcode-link\"><span class=\"pre\">[source]</span></span></a><a class=\"headerlink\" href=\"#dagster_dbt.DbtCloudResourceV2.update_job\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Updates specific properties of a dbt job. Documentation on the full set of potential\nparameters can be found here: <a class=\"reference external\" href=\"https://docs.getdbt.com/dbt-cloud/api-v2#operation/updateJobById\">https://docs.getdbt.com/dbt-cloud/api-v2#operation/updateJobById</a></p>\n<dl class=\"field-list simple\">\n<dt class=\"field-odd\">Parameters</dt>\n<dd class=\"field-odd\"><ul class=\"simple\">\n<li><p><strong>job_id</strong> (<a class=\"reference external\" href=\"https://docs.python.org/3/library/functions.html#int\" title=\"(in Python v3.8)\"><em>int</em></a>) \u2013 The ID of the relevant dbt Cloud job. You can find this value by going to\nthe details page of your job in the dbt Cloud UI. It will be the final number in the\nurl, e.g.: <code class=\"docutils literal notranslate\"><span class=\"pre\">https://cloud.getdbt.com/#/accounts/{account_id}/projects/{project_id}/jobs/{job_id}/</span></code></p></li>\n<li><p><strong>kwargs</strong> \u2013 Passed in as the properties to be changed.</p></li>\n</ul>\n</dd>\n<dt class=\"field-even\">Returns</dt>\n<dd class=\"field-even\"><p>Parsed json data from the response to this request</p>\n</dd>\n<dt class=\"field-odd\">Return type</dt>\n<dd class=\"field-odd\"><p>Dict[<a class=\"reference external\" href=\"https://docs.python.org/3/library/stdtypes.html#str\" title=\"(in Python v3.8)\">str</a>, Any]</p>\n</dd>\n</dl>\n<p>Examples:</p>\n<div class=\"highlight-python notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"c1\"># disable schedule for job with id=12345</span>\n<span class=\"n\">my_dbt_cloud_resource</span><span class=\"o\">.</span><span class=\"n\">update_job</span><span class=\"p\">(</span><span class=\"mi\">12345</span><span class=\"p\">,</span> <span class=\"n\">triggers</span><span class=\"o\">=</span><span class=\"p\">{</span><span class=\"s2\">&quot;schedule&quot;</span><span class=\"p\">:</span> <span class=\"kc\">False</span><span class=\"p\">})</span>\n</pre></div>\n</div>\n</dd></dl>\n\n</dd></dl>\n\n<dl class=\"py data\">\n<dt id=\"dagster_dbt.dbt_cloud_resource\">\n<code class=\"sig-prename descclassname\"><span class=\"pre\">dagster_dbt.</span></code><code class=\"sig-name descname\"><span class=\"pre\">dbt_cloud_resource</span></code><em class=\"property\"> <span class=\"pre\">ResourceDefinition</span></em><a class=\"reference internal\" href=\"../../../../../_modules/dagster_dbt/cloud/resources#dbt_cloud_resource\"><span class=\"viewcode-link\"><span class=\"pre\">[source]</span></span></a><a class=\"headerlink\" href=\"#dagster_dbt.dbt_cloud_resource\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><div class=\"line-block\">\n<div class=\"line\"><br /></div>\n</div>\n<details class=\"summary-config-schema\">\n<summary>Config Schema:</summary><dl class=\"field-list\">\n<dt class=\"field-odd\">auth_token (dagster.StringSource)</dt>\n<dd class=\"field-odd\"><p>dbt Cloud API Token. User tokens can be found in the [dbt Cloud UI](<a class=\"reference external\" href=\"https://cloud.getdbt.com/#/profile/api/\">https://cloud.getdbt.com/#/profile/api/</a>), or see the [dbt Cloud Docs](<a class=\"reference external\" href=\"https://docs.getdbt.com/docs/dbt-cloud/dbt-cloud-api/service-tokens\">https://docs.getdbt.com/docs/dbt-cloud/dbt-cloud-api/service-tokens</a>) for instructions on creating a Service Account token.</p>\n</dd>\n<dt class=\"field-even\">account_id (Int)</dt>\n<dd class=\"field-even\"><p>dbt Cloud Account ID. This value can be found in the url of a variety of views in the dbt Cloud UI, e.g. <a class=\"reference external\" href=\"https://cloud.getdbt.com/#/accounts\">https://cloud.getdbt.com/#/accounts</a>/{account_id}/settings/.</p>\n</dd>\n<dt class=\"field-odd\">disable_schedule_on_trigger (Bool, optional)</dt>\n<dd class=\"field-odd\"><p>Specifies if you would like any job that is triggered using this resource to automatically disable its schedule.</p>\n<p><strong>Default Value:</strong> True</p>\n</dd>\n<dt class=\"field-even\">request_max_retries (Int, optional)</dt>\n<dd class=\"field-even\"><p>The maximum number of times requests to the dbt Cloud API should be retried before failing.</p>\n<p><strong>Default Value:</strong> 3</p>\n</dd>\n<dt class=\"field-odd\">request_retry_delay (Float, optional)</dt>\n<dd class=\"field-odd\"><p>Time (in seconds) to wait between each request retry.</p>\n<p><strong>Default Value:</strong> 0.25</p>\n</dd>\n<dt class=\"field-even\">dbt_cloud_host (dagster.StringSource, optional)</dt>\n<dd class=\"field-even\"><p>The hostname where dbt cloud is being hosted (e.g. <a class=\"reference external\" href=\"https://my_org.cloud.getdbt.com/\">https://my_org.cloud.getdbt.com/</a>).</p>\n<p><strong>Default Value:</strong> \u2018<a class=\"reference external\" href=\"https://cloud.getdbt.com/\">https://cloud.getdbt.com/</a>\u2019</p>\n</dd>\n</dl>\n</details><p>This resource allows users to programatically interface with the dbt Cloud Administrative REST\nAPI (v2) to launch jobs and monitor their progress. This currently implements only a subset of\nthe functionality exposed by the API.</p>\n<p>For a complete set of documentation on the dbt Cloud Administrative REST API, including expected\nresponse JSON schemae, see the <a class=\"reference external\" href=\"https://docs.getdbt.com/dbt-cloud/api-v2\">dbt Cloud API Docs</a>.</p>\n<p>To configure this resource, we recommend using the <a class=\"reference external\" href=\"https://docs.dagster.io/concepts/configuration/configured\">configured</a> method.</p>\n<p><strong>Examples:</strong></p>\n<div class=\"highlight-python notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"kn\">from</span> <span class=\"nn\">dagster</span> <span class=\"kn\">import</span> <span class=\"n\">job</span>\n<span class=\"kn\">from</span> <span class=\"nn\">dagster_dbt</span> <span class=\"kn\">import</span> <span class=\"n\">dbt_cloud_resource</span>\n\n<span class=\"n\">my_dbt_cloud_resource</span> <span class=\"o\">=</span> <span class=\"n\">dbt_cloud_resource</span><span class=\"o\">.</span><span class=\"n\">configured</span><span class=\"p\">(</span>\n    <span class=\"p\">{</span>\n        <span class=\"s2\">&quot;auth_token&quot;</span><span class=\"p\">:</span> <span class=\"p\">{</span><span class=\"s2\">&quot;env&quot;</span><span class=\"p\">:</span> <span class=\"s2\">&quot;DBT_CLOUD_AUTH_TOKEN&quot;</span><span class=\"p\">},</span>\n        <span class=\"s2\">&quot;account_id&quot;</span><span class=\"p\">:</span> <span class=\"mi\">30000</span><span class=\"p\">,</span>\n    <span class=\"p\">}</span>\n<span class=\"p\">)</span>\n\n<span class=\"nd\">@job</span><span class=\"p\">(</span><span class=\"n\">resource_defs</span><span class=\"o\">=</span><span class=\"p\">{</span><span class=\"s2\">&quot;dbt_cloud&quot;</span><span class=\"p\">:</span><span class=\"n\">my_dbt_cloud_resource</span><span class=\"p\">})</span>\n<span class=\"k\">def</span> <span class=\"nf\">my_dbt_cloud_job</span><span class=\"p\">():</span>\n    <span class=\"o\">...</span>\n</pre></div>\n</div>\n</dd></dl>\n\n</div>\n</div>\n<div class=\"section\" id=\"assets\">\n<h2>Assets<a class=\"headerlink\" href=\"#assets\" title=\"Permalink to this headline\">\u00b6</a></h2>\n<dl class=\"py function\">\n<dt id=\"dagster_dbt.load_assets_from_dbt_project\">\n<code class=\"sig-prename descclassname\"><span class=\"pre\">dagster_dbt.</span></code><code class=\"sig-name descname\"><span class=\"pre\">load_assets_from_dbt_project</span></code><span class=\"sig-paren\">(</span><em class=\"sig-param\"><span class=\"pre\">project_dir</span></em>, <em class=\"sig-param\"><span class=\"pre\">profiles_dir=None</span></em>, <em class=\"sig-param\"><span class=\"pre\">target_dir=None</span></em>, <em class=\"sig-param\"><span class=\"pre\">select=None</span></em>, <em class=\"sig-param\"><span class=\"pre\">key_prefix=None</span></em>, <em class=\"sig-param\"><span class=\"pre\">source_key_prefix=None</span></em>, <em class=\"sig-param\"><span class=\"pre\">runtime_metadata_fn=None</span></em>, <em class=\"sig-param\"><span class=\"pre\">io_manager_key=None</span></em>, <em class=\"sig-param\"><span class=\"pre\">node_info_to_asset_key=&lt;function</span> <span class=\"pre\">_get_node_asset_key&gt;</span></em>, <em class=\"sig-param\"><span class=\"pre\">use_build_command=False</span></em><span class=\"sig-paren\">)</span><a class=\"reference internal\" href=\"../../../../../_modules/dagster_dbt/asset_defs#load_assets_from_dbt_project\"><span class=\"viewcode-link\"><span class=\"pre\">[source]</span></span></a><a class=\"headerlink\" href=\"#dagster_dbt.load_assets_from_dbt_project\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Loads a set of DBT models from a DBT project into Dagster assets.</p>\n<p>Creates one Dagster asset for each dbt model. All assets will be re-materialized using a single\n<cite>dbt run</cite> command.</p>\n<dl class=\"field-list simple\">\n<dt class=\"field-odd\">Parameters</dt>\n<dd class=\"field-odd\"><ul class=\"simple\">\n<li><p><strong>project_dir</strong> (<em>Optional</em><em>[</em><a class=\"reference external\" href=\"https://docs.python.org/3/library/stdtypes.html#str\" title=\"(in Python v3.8)\"><em>str</em></a><em>]</em>) \u2013 The directory containing the DBT project to load.</p></li>\n<li><p><strong>profiles_dir</strong> (<em>Optional</em><em>[</em><a class=\"reference external\" href=\"https://docs.python.org/3/library/stdtypes.html#str\" title=\"(in Python v3.8)\"><em>str</em></a><em>]</em>) \u2013 The profiles directory to use for loading the DBT project.\nDefaults to a directory called \u201cconfig\u201d inside the project_dir.</p></li>\n<li><p><strong>target_dir</strong> (<em>Optional</em><em>[</em><a class=\"reference external\" href=\"https://docs.python.org/3/library/stdtypes.html#str\" title=\"(in Python v3.8)\"><em>str</em></a><em>]</em>) \u2013 The target directory where DBT will place compiled artifacts.\nDefaults to \u201ctarget\u201d underneath the project_dir.</p></li>\n<li><p><strong>select</strong> (<em>Optional</em><em>[</em><a class=\"reference external\" href=\"https://docs.python.org/3/library/stdtypes.html#str\" title=\"(in Python v3.8)\"><em>str</em></a><em>]</em>) \u2013 A DBT selection string for the models in a project that you want\nto include. Defaults to \u201c*\u201d.</p></li>\n<li><p><strong>key_prefix</strong> (<em>Optional</em><em>[</em><em>Union</em><em>[</em><a class=\"reference external\" href=\"https://docs.python.org/3/library/stdtypes.html#str\" title=\"(in Python v3.8)\"><em>str</em></a><em>, </em><em>List</em><em>[</em><a class=\"reference external\" href=\"https://docs.python.org/3/library/stdtypes.html#str\" title=\"(in Python v3.8)\"><em>str</em></a><em>]</em><em>]</em><em>]</em>) \u2013 A prefix to apply to all models in the dbt\nproject. Does not apply to sources.</p></li>\n<li><p><strong>source_key_prefix</strong> (<em>Optional</em><em>[</em><em>Union</em><em>[</em><a class=\"reference external\" href=\"https://docs.python.org/3/library/stdtypes.html#str\" title=\"(in Python v3.8)\"><em>str</em></a><em>, </em><em>List</em><em>[</em><a class=\"reference external\" href=\"https://docs.python.org/3/library/stdtypes.html#str\" title=\"(in Python v3.8)\"><em>str</em></a><em>]</em><em>]</em><em>]</em>) \u2013 A prefix to apply to all sources in the\ndbt project. Does not apply to models.</p></li>\n<li><p><strong>runtime_metadata_fn</strong> \u2013 (Optional[Callable[[SolidExecutionContext, Mapping[str, Any]], Mapping[str, Any]]]):\nA function that will be run after any of the assets are materialized and returns\nmetadata entries for the asset, to be displayed in the asset catalog for that run.</p></li>\n<li><p><strong>io_manager_key</strong> (<em>Optional</em><em>[</em><a class=\"reference external\" href=\"https://docs.python.org/3/library/stdtypes.html#str\" title=\"(in Python v3.8)\"><em>str</em></a><em>]</em>) \u2013 The IO manager key that will be set on each of the returned\nassets. When other ops are downstream of the loaded assets, the IOManager specified\nhere determines how the inputs to those ops are loaded. Defaults to \u201cio_manager\u201d.</p></li>\n<li><p><strong>node_info_to_asset_key</strong> \u2013 (Mapping[str, Any] -&gt; AssetKey): A function that takes a dictionary\nof dbt node info and returns the AssetKey that you want to represent that node. By\ndefault, the asset key will simply be the name of the dbt model.</p></li>\n<li><p><strong>use_build_command</strong> \u2013 (bool): Flag indicating if you want to use <cite>dbt build</cite> as the core computation\nfor this asset, rather than <cite>dbt run</cite>.</p></li>\n</ul>\n</dd>\n</dl>\n</dd></dl>\n\n<dl class=\"py function\">\n<dt id=\"dagster_dbt.load_assets_from_dbt_manifest\">\n<code class=\"sig-prename descclassname\"><span class=\"pre\">dagster_dbt.</span></code><code class=\"sig-name descname\"><span class=\"pre\">load_assets_from_dbt_manifest</span></code><span class=\"sig-paren\">(</span><em class=\"sig-param\"><span class=\"pre\">manifest_json</span></em>, <em class=\"sig-param\"><span class=\"pre\">key_prefix=None</span></em>, <em class=\"sig-param\"><span class=\"pre\">source_key_prefix=None</span></em>, <em class=\"sig-param\"><span class=\"pre\">runtime_metadata_fn=None</span></em>, <em class=\"sig-param\"><span class=\"pre\">io_manager_key=None</span></em>, <em class=\"sig-param\"><span class=\"pre\">selected_unique_ids=None</span></em>, <em class=\"sig-param\"><span class=\"pre\">select=None</span></em>, <em class=\"sig-param\"><span class=\"pre\">node_info_to_asset_key=&lt;function</span> <span class=\"pre\">_get_node_asset_key&gt;</span></em>, <em class=\"sig-param\"><span class=\"pre\">use_build_command=False</span></em><span class=\"sig-paren\">)</span><a class=\"reference internal\" href=\"../../../../../_modules/dagster_dbt/asset_defs#load_assets_from_dbt_manifest\"><span class=\"viewcode-link\"><span class=\"pre\">[source]</span></span></a><a class=\"headerlink\" href=\"#dagster_dbt.load_assets_from_dbt_manifest\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Loads a set of dbt models, described in a manifest.json, into Dagster assets.</p>\n<p>Creates one Dagster asset for each dbt model. All assets will be re-materialized using a single\n<cite>dbt run</cite> command.</p>\n<dl class=\"field-list simple\">\n<dt class=\"field-odd\">Parameters</dt>\n<dd class=\"field-odd\"><ul class=\"simple\">\n<li><p><strong>manifest_json</strong> (<em>Optional</em><em>[</em><em>Mapping</em><em>[</em><a class=\"reference external\" href=\"https://docs.python.org/3/library/stdtypes.html#str\" title=\"(in Python v3.8)\"><em>str</em></a><em>, </em><em>Any</em><em>]</em><em>]</em>) \u2013 The contents of a DBT manifest.json, which contains\na set of models to load into assets.</p></li>\n<li><p><strong>key_prefix</strong> (<em>Optional</em><em>[</em><em>Union</em><em>[</em><a class=\"reference external\" href=\"https://docs.python.org/3/library/stdtypes.html#str\" title=\"(in Python v3.8)\"><em>str</em></a><em>, </em><em>List</em><em>[</em><a class=\"reference external\" href=\"https://docs.python.org/3/library/stdtypes.html#str\" title=\"(in Python v3.8)\"><em>str</em></a><em>]</em><em>]</em><em>]</em>) \u2013 A prefix to apply to all models in the dbt\nproject. Does not apply to sources.</p></li>\n<li><p><strong>source_key_prefix</strong> (<em>Optional</em><em>[</em><em>Union</em><em>[</em><a class=\"reference external\" href=\"https://docs.python.org/3/library/stdtypes.html#str\" title=\"(in Python v3.8)\"><em>str</em></a><em>, </em><em>List</em><em>[</em><a class=\"reference external\" href=\"https://docs.python.org/3/library/stdtypes.html#str\" title=\"(in Python v3.8)\"><em>str</em></a><em>]</em><em>]</em><em>]</em>) \u2013 A prefix to apply to all sources in the\ndbt project. Does not apply to models.</p></li>\n<li><p><strong>runtime_metadata_fn</strong> \u2013 (Optional[Callable[[SolidExecutionContext, Mapping[str, Any]], Mapping[str, Any]]]):\nA function that will be run after any of the assets are materialized and returns\nmetadata entries for the asset, to be displayed in the asset catalog for that run.</p></li>\n<li><p><strong>io_manager_key</strong> (<em>Optional</em><em>[</em><a class=\"reference external\" href=\"https://docs.python.org/3/library/stdtypes.html#str\" title=\"(in Python v3.8)\"><em>str</em></a><em>]</em>) \u2013 The IO manager key that will be set on each of the returned\nassets. When other ops are downstream of the loaded assets, the IOManager specified\nhere determines how the inputs to those ops are loaded. Defaults to \u201cio_manager\u201d.</p></li>\n<li><p><strong>selected_unique_ids</strong> (<em>Optional</em><em>[</em><em>Set</em><em>[</em><a class=\"reference external\" href=\"https://docs.python.org/3/library/stdtypes.html#str\" title=\"(in Python v3.8)\"><em>str</em></a><em>]</em><em>]</em>) \u2013 The set of dbt unique_ids that you want to load\nas assets.</p></li>\n<li><p><strong>node_info_to_asset_key</strong> \u2013 (Mapping[str, Any] -&gt; AssetKey): A function that takes a dictionary\nof dbt node info and returns the AssetKey that you want to represent that node. By\ndefault, the asset key will simply be the name of the dbt model.</p></li>\n<li><p><strong>use_build_command</strong> \u2013 (bool): Flag indicating if you want to use <cite>dbt build</cite> as the core computation\nfor this asset, rather than <cite>dbt run</cite>.</p></li>\n</ul>\n</dd>\n</dl>\n</dd></dl>\n\n</div>\n<div class=\"section\" id=\"types\">\n<h2>Types<a class=\"headerlink\" href=\"#types\" title=\"Permalink to this headline\">\u00b6</a></h2>\n<dl class=\"py class\">\n<dt id=\"dagster_dbt.DbtOutput\">\n<em class=\"property\"><span class=\"pre\">class</span> </em><code class=\"sig-prename descclassname\"><span class=\"pre\">dagster_dbt.</span></code><code class=\"sig-name descname\"><span class=\"pre\">DbtOutput</span></code><span class=\"sig-paren\">(</span><em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">result</span></span></em><span class=\"sig-paren\">)</span><a class=\"reference internal\" href=\"../../../../../_modules/dagster_dbt/types#DbtOutput\"><span class=\"viewcode-link\"><span class=\"pre\">[source]</span></span></a><a class=\"headerlink\" href=\"#dagster_dbt.DbtOutput\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Base class for both DbtCliOutput and DbtRPCOutput. Contains a single field, <cite>result</cite>, which\nrepresents the dbt-formatted result of the command that was run (if any).</p>\n<p>Used internally, should not be instantiated directly by the user.</p>\n</dd></dl>\n\n<dl class=\"py class\">\n<dt id=\"dagster_dbt.DbtResource\">\n<em class=\"property\"><span class=\"pre\">class</span> </em><code class=\"sig-prename descclassname\"><span class=\"pre\">dagster_dbt.</span></code><code class=\"sig-name descname\"><span class=\"pre\">DbtResource</span></code><span class=\"sig-paren\">(</span><em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">logger</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">None</span></span></em><span class=\"sig-paren\">)</span><a class=\"reference internal\" href=\"../../../../../_modules/dagster_dbt/dbt_resource#DbtResource\"><span class=\"viewcode-link\"><span class=\"pre\">[source]</span></span></a><a class=\"headerlink\" href=\"#dagster_dbt.DbtResource\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Base class for a resource allowing users to interface with dbt</p>\n<dl class=\"py method\">\n<dt id=\"dagster_dbt.DbtResource.build\">\n<em class=\"property\"><span class=\"pre\">abstract</span> </em><code class=\"sig-name descname\"><span class=\"pre\">build</span></code><span class=\"sig-paren\">(</span><em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">select</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">None</span></span></em>, <em class=\"sig-param\"><span class=\"o\"><span class=\"pre\">**</span></span><span class=\"n\"><span class=\"pre\">kwargs</span></span></em><span class=\"sig-paren\">)</span><a class=\"reference internal\" href=\"../../../../../_modules/dagster_dbt/dbt_resource#DbtResource.build\"><span class=\"viewcode-link\"><span class=\"pre\">[source]</span></span></a><a class=\"headerlink\" href=\"#dagster_dbt.DbtResource.build\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Run the <code class=\"docutils literal notranslate\"><span class=\"pre\">build</span></code> command on a dbt project. kwargs are passed in as additional parameters.</p>\n<dl class=\"field-list simple\">\n<dt class=\"field-odd\">Parameters</dt>\n<dd class=\"field-odd\"><p><strong>select</strong> (<em>List</em><em>[</em><a class=\"reference external\" href=\"https://docs.python.org/3/library/stdtypes.html#str\" title=\"(in Python v3.8)\"><em>str</em></a><em>]</em><em>, </em><em>optional</em>) \u2013 the models/resources to include in the run.</p>\n</dd>\n<dt class=\"field-even\">Returns</dt>\n<dd class=\"field-even\"><p>object containing parsed output from dbt</p>\n</dd>\n<dt class=\"field-odd\">Return type</dt>\n<dd class=\"field-odd\"><p><a class=\"reference internal\" href=\"#dagster_dbt.DbtOutput\" title=\"dagster_dbt.DbtOutput\">DbtOutput</a></p>\n</dd>\n</dl>\n</dd></dl>\n\n<dl class=\"py method\">\n<dt id=\"dagster_dbt.DbtResource.compile\">\n<em class=\"property\"><span class=\"pre\">abstract</span> </em><code class=\"sig-name descname\"><span class=\"pre\">compile</span></code><span class=\"sig-paren\">(</span><em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">models</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">None</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">exclude</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">None</span></span></em>, <em class=\"sig-param\"><span class=\"o\"><span class=\"pre\">**</span></span><span class=\"n\"><span class=\"pre\">kwargs</span></span></em><span class=\"sig-paren\">)</span><a class=\"reference internal\" href=\"../../../../../_modules/dagster_dbt/dbt_resource#DbtResource.compile\"><span class=\"viewcode-link\"><span class=\"pre\">[source]</span></span></a><a class=\"headerlink\" href=\"#dagster_dbt.DbtResource.compile\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Run the <code class=\"docutils literal notranslate\"><span class=\"pre\">compile</span></code> command on a dbt project. kwargs are passed in as additional parameters.</p>\n<dl class=\"field-list simple\">\n<dt class=\"field-odd\">Parameters</dt>\n<dd class=\"field-odd\"><ul class=\"simple\">\n<li><p><strong>models</strong> (<em>List</em><em>[</em><a class=\"reference external\" href=\"https://docs.python.org/3/library/stdtypes.html#str\" title=\"(in Python v3.8)\"><em>str</em></a><em>]</em><em>, </em><em>optional</em>) \u2013 the models to include in compilation.</p></li>\n<li><p><strong>exclude</strong> (<em>List</em><em>[</em><a class=\"reference external\" href=\"https://docs.python.org/3/library/stdtypes.html#str\" title=\"(in Python v3.8)\"><em>str</em></a><em>]</em><em>)</em><em>, </em><em>optional</em>) \u2013 the models to exclude from compilation.</p></li>\n</ul>\n</dd>\n<dt class=\"field-even\">Returns</dt>\n<dd class=\"field-even\"><p>object containing parsed output from dbt</p>\n</dd>\n<dt class=\"field-odd\">Return type</dt>\n<dd class=\"field-odd\"><p><a class=\"reference internal\" href=\"#dagster_dbt.DbtOutput\" title=\"dagster_dbt.DbtOutput\">DbtOutput</a></p>\n</dd>\n</dl>\n</dd></dl>\n\n<dl class=\"py method\">\n<dt id=\"dagster_dbt.DbtResource.generate_docs\">\n<em class=\"property\"><span class=\"pre\">abstract</span> </em><code class=\"sig-name descname\"><span class=\"pre\">generate_docs</span></code><span class=\"sig-paren\">(</span><em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">compile_project</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">False</span></span></em>, <em class=\"sig-param\"><span class=\"o\"><span class=\"pre\">**</span></span><span class=\"n\"><span class=\"pre\">kwargs</span></span></em><span class=\"sig-paren\">)</span><a class=\"reference internal\" href=\"../../../../../_modules/dagster_dbt/dbt_resource#DbtResource.generate_docs\"><span class=\"viewcode-link\"><span class=\"pre\">[source]</span></span></a><a class=\"headerlink\" href=\"#dagster_dbt.DbtResource.generate_docs\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Run the <code class=\"docutils literal notranslate\"><span class=\"pre\">docs</span> <span class=\"pre\">generate</span></code> command on a dbt project. kwargs are passed in as additional parameters.</p>\n<dl class=\"field-list simple\">\n<dt class=\"field-odd\">Parameters</dt>\n<dd class=\"field-odd\"><p><strong>compile_project</strong> (<a class=\"reference external\" href=\"https://docs.python.org/3/library/functions.html#bool\" title=\"(in Python v3.8)\"><em>bool</em></a><em>, </em><em>optional</em>) \u2013 If true, compile the project before generating a catalog.</p>\n</dd>\n<dt class=\"field-even\">Returns</dt>\n<dd class=\"field-even\"><p>object containing parsed output from dbt</p>\n</dd>\n<dt class=\"field-odd\">Return type</dt>\n<dd class=\"field-odd\"><p><a class=\"reference internal\" href=\"#dagster_dbt.DbtOutput\" title=\"dagster_dbt.DbtOutput\">DbtOutput</a></p>\n</dd>\n</dl>\n</dd></dl>\n\n<dl class=\"py method\">\n<dt id=\"dagster_dbt.DbtResource.get_manifest_json\">\n<em class=\"property\"><span class=\"pre\">abstract</span> </em><code class=\"sig-name descname\"><span class=\"pre\">get_manifest_json</span></code><span class=\"sig-paren\">(</span><em class=\"sig-param\"><span class=\"o\"><span class=\"pre\">**</span></span><span class=\"n\"><span class=\"pre\">kwargs</span></span></em><span class=\"sig-paren\">)</span><a class=\"reference internal\" href=\"../../../../../_modules/dagster_dbt/dbt_resource#DbtResource.get_manifest_json\"><span class=\"viewcode-link\"><span class=\"pre\">[source]</span></span></a><a class=\"headerlink\" href=\"#dagster_dbt.DbtResource.get_manifest_json\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Get a parsed version of the manifest.json file for the relevant dbt project.</p>\n<dl class=\"field-list simple\">\n<dt class=\"field-odd\">Returns</dt>\n<dd class=\"field-odd\"><p><dl class=\"simple\">\n<dt>dictionary containing the parsed contents of the manifest json file</dt><dd><p>for this dbt project.</p>\n</dd>\n</dl>\n</p>\n</dd>\n<dt class=\"field-even\">Return type</dt>\n<dd class=\"field-even\"><p>Dict[<a class=\"reference external\" href=\"https://docs.python.org/3/library/stdtypes.html#str\" title=\"(in Python v3.8)\">str</a>, Any]</p>\n</dd>\n</dl>\n</dd></dl>\n\n<dl class=\"py method\">\n<dt id=\"dagster_dbt.DbtResource.get_run_results_json\">\n<em class=\"property\"><span class=\"pre\">abstract</span> </em><code class=\"sig-name descname\"><span class=\"pre\">get_run_results_json</span></code><span class=\"sig-paren\">(</span><em class=\"sig-param\"><span class=\"o\"><span class=\"pre\">**</span></span><span class=\"n\"><span class=\"pre\">kwargs</span></span></em><span class=\"sig-paren\">)</span><a class=\"reference internal\" href=\"../../../../../_modules/dagster_dbt/dbt_resource#DbtResource.get_run_results_json\"><span class=\"viewcode-link\"><span class=\"pre\">[source]</span></span></a><a class=\"headerlink\" href=\"#dagster_dbt.DbtResource.get_run_results_json\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Get a parsed version of the run_results.json file for the relevant dbt project.</p>\n<dl class=\"field-list simple\">\n<dt class=\"field-odd\">Returns</dt>\n<dd class=\"field-odd\"><p><dl class=\"simple\">\n<dt>dictionary containing the parsed contents of the run_results json file</dt><dd><p>for this dbt project.</p>\n</dd>\n</dl>\n</p>\n</dd>\n<dt class=\"field-even\">Return type</dt>\n<dd class=\"field-even\"><p>Dict[<a class=\"reference external\" href=\"https://docs.python.org/3/library/stdtypes.html#str\" title=\"(in Python v3.8)\">str</a>, Any]</p>\n</dd>\n</dl>\n</dd></dl>\n\n<dl class=\"py method\">\n<dt id=\"dagster_dbt.DbtResource.logger\">\n<em class=\"property\"><span class=\"pre\">property</span> </em><code class=\"sig-name descname\"><span class=\"pre\">logger</span></code><a class=\"headerlink\" href=\"#dagster_dbt.DbtResource.logger\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>A property for injecting a logger dependency.</p>\n<dl class=\"field-list simple\">\n<dt class=\"field-odd\">Type</dt>\n<dd class=\"field-odd\"><p><a class=\"reference external\" href=\"https://docs.python.org/3/library/logging.html#logging.Logger\" title=\"(in Python v3.8)\">logging.Logger</a></p>\n</dd>\n</dl>\n</dd></dl>\n\n<dl class=\"py method\">\n<dt id=\"dagster_dbt.DbtResource.ls\">\n<em class=\"property\"><span class=\"pre\">abstract</span> </em><code class=\"sig-name descname\"><span class=\"pre\">ls</span></code><span class=\"sig-paren\">(</span><em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">select</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">None</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">models</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">None</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">exclude</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">None</span></span></em>, <em class=\"sig-param\"><span class=\"o\"><span class=\"pre\">**</span></span><span class=\"n\"><span class=\"pre\">kwargs</span></span></em><span class=\"sig-paren\">)</span><a class=\"reference internal\" href=\"../../../../../_modules/dagster_dbt/dbt_resource#DbtResource.ls\"><span class=\"viewcode-link\"><span class=\"pre\">[source]</span></span></a><a class=\"headerlink\" href=\"#dagster_dbt.DbtResource.ls\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Run the <code class=\"docutils literal notranslate\"><span class=\"pre\">ls</span></code> command on a dbt project. kwargs are passed in as additional parameters.</p>\n<dl class=\"field-list simple\">\n<dt class=\"field-odd\">Parameters</dt>\n<dd class=\"field-odd\"><ul class=\"simple\">\n<li><p><strong>select</strong> (<em>List</em><em>[</em><a class=\"reference external\" href=\"https://docs.python.org/3/library/stdtypes.html#str\" title=\"(in Python v3.8)\"><em>str</em></a><em>]</em><em>, </em><em>optional</em>) \u2013 the resources to include in the output.</p></li>\n<li><p><strong>models</strong> (<em>List</em><em>[</em><a class=\"reference external\" href=\"https://docs.python.org/3/library/stdtypes.html#str\" title=\"(in Python v3.8)\"><em>str</em></a><em>]</em><em>, </em><em>optional</em>) \u2013 the models to include in the output.</p></li>\n<li><p><strong>exclude</strong> (<em>List</em><em>[</em><a class=\"reference external\" href=\"https://docs.python.org/3/library/stdtypes.html#str\" title=\"(in Python v3.8)\"><em>str</em></a><em>]</em><em>, </em><em>optional</em>) \u2013 the resources to exclude from the output.</p></li>\n</ul>\n</dd>\n<dt class=\"field-even\">Returns</dt>\n<dd class=\"field-even\"><p>object containing parsed output from dbt</p>\n</dd>\n<dt class=\"field-odd\">Return type</dt>\n<dd class=\"field-odd\"><p><a class=\"reference internal\" href=\"#dagster_dbt.DbtOutput\" title=\"dagster_dbt.DbtOutput\">DbtOutput</a></p>\n</dd>\n</dl>\n</dd></dl>\n\n<dl class=\"py method\">\n<dt id=\"dagster_dbt.DbtResource.run\">\n<em class=\"property\"><span class=\"pre\">abstract</span> </em><code class=\"sig-name descname\"><span class=\"pre\">run</span></code><span class=\"sig-paren\">(</span><em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">models</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">None</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">exclude</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">None</span></span></em>, <em class=\"sig-param\"><span class=\"o\"><span class=\"pre\">**</span></span><span class=\"n\"><span class=\"pre\">kwargs</span></span></em><span class=\"sig-paren\">)</span><a class=\"reference internal\" href=\"../../../../../_modules/dagster_dbt/dbt_resource#DbtResource.run\"><span class=\"viewcode-link\"><span class=\"pre\">[source]</span></span></a><a class=\"headerlink\" href=\"#dagster_dbt.DbtResource.run\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Run the <code class=\"docutils literal notranslate\"><span class=\"pre\">run</span></code> command on a dbt project. kwargs are passed in as additional parameters.</p>\n<dl class=\"field-list simple\">\n<dt class=\"field-odd\">Parameters</dt>\n<dd class=\"field-odd\"><ul class=\"simple\">\n<li><p><strong>models</strong> (<em>List</em><em>[</em><a class=\"reference external\" href=\"https://docs.python.org/3/library/stdtypes.html#str\" title=\"(in Python v3.8)\"><em>str</em></a><em>]</em><em>, </em><em>optional</em>) \u2013 the models to include in the run.</p></li>\n<li><p><strong>exclude</strong> (<em>List</em><em>[</em><a class=\"reference external\" href=\"https://docs.python.org/3/library/stdtypes.html#str\" title=\"(in Python v3.8)\"><em>str</em></a><em>]</em><em>)</em><em>, </em><em>optional</em>) \u2013 the models to exclude from the run.</p></li>\n</ul>\n</dd>\n<dt class=\"field-even\">Returns</dt>\n<dd class=\"field-even\"><p>object containing parsed output from dbt</p>\n</dd>\n<dt class=\"field-odd\">Return type</dt>\n<dd class=\"field-odd\"><p><a class=\"reference internal\" href=\"#dagster_dbt.DbtOutput\" title=\"dagster_dbt.DbtOutput\">DbtOutput</a></p>\n</dd>\n</dl>\n</dd></dl>\n\n<dl class=\"py method\">\n<dt id=\"dagster_dbt.DbtResource.run_operation\">\n<em class=\"property\"><span class=\"pre\">abstract</span> </em><code class=\"sig-name descname\"><span class=\"pre\">run_operation</span></code><span class=\"sig-paren\">(</span><em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">macro</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">args</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">None</span></span></em>, <em class=\"sig-param\"><span class=\"o\"><span class=\"pre\">**</span></span><span class=\"n\"><span class=\"pre\">kwargs</span></span></em><span class=\"sig-paren\">)</span><a class=\"reference internal\" href=\"../../../../../_modules/dagster_dbt/dbt_resource#DbtResource.run_operation\"><span class=\"viewcode-link\"><span class=\"pre\">[source]</span></span></a><a class=\"headerlink\" href=\"#dagster_dbt.DbtResource.run_operation\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Run the <code class=\"docutils literal notranslate\"><span class=\"pre\">run-operation</span></code> command on a dbt project. kwargs are passed in as additional parameters.</p>\n<dl class=\"field-list simple\">\n<dt class=\"field-odd\">Parameters</dt>\n<dd class=\"field-odd\"><ul class=\"simple\">\n<li><p><strong>macro</strong> (<a class=\"reference external\" href=\"https://docs.python.org/3/library/stdtypes.html#str\" title=\"(in Python v3.8)\"><em>str</em></a>) \u2013 the dbt macro to invoke.</p></li>\n<li><p><strong>args</strong> (<em>Dict</em><em>[</em><a class=\"reference external\" href=\"https://docs.python.org/3/library/stdtypes.html#str\" title=\"(in Python v3.8)\"><em>str</em></a><em>, </em><em>Any</em><em>]</em><em>, </em><em>optional</em>) \u2013 the keyword arguments to be supplied to the macro.</p></li>\n</ul>\n</dd>\n<dt class=\"field-even\">Returns</dt>\n<dd class=\"field-even\"><p>object containing parsed output from dbt</p>\n</dd>\n<dt class=\"field-odd\">Return type</dt>\n<dd class=\"field-odd\"><p><a class=\"reference internal\" href=\"#dagster_dbt.DbtOutput\" title=\"dagster_dbt.DbtOutput\">DbtOutput</a></p>\n</dd>\n</dl>\n</dd></dl>\n\n<dl class=\"py method\">\n<dt id=\"dagster_dbt.DbtResource.seed\">\n<em class=\"property\"><span class=\"pre\">abstract</span> </em><code class=\"sig-name descname\"><span class=\"pre\">seed</span></code><span class=\"sig-paren\">(</span><em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">show</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">False</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">select</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">None</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">exclude</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">None</span></span></em>, <em class=\"sig-param\"><span class=\"o\"><span class=\"pre\">**</span></span><span class=\"n\"><span class=\"pre\">kwargs</span></span></em><span class=\"sig-paren\">)</span><a class=\"reference internal\" href=\"../../../../../_modules/dagster_dbt/dbt_resource#DbtResource.seed\"><span class=\"viewcode-link\"><span class=\"pre\">[source]</span></span></a><a class=\"headerlink\" href=\"#dagster_dbt.DbtResource.seed\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Run the <code class=\"docutils literal notranslate\"><span class=\"pre\">seed</span></code> command on a dbt project. kwargs are passed in as additional parameters.</p>\n<dl class=\"field-list simple\">\n<dt class=\"field-odd\">Parameters</dt>\n<dd class=\"field-odd\"><ul class=\"simple\">\n<li><p><strong>show</strong> (<a class=\"reference external\" href=\"https://docs.python.org/3/library/functions.html#bool\" title=\"(in Python v3.8)\"><em>bool</em></a><em>, </em><em>optional</em>) \u2013 If <code class=\"docutils literal notranslate\"><span class=\"pre\">True</span></code>, then show a sample of the seeded data in the\nresponse. Defaults to <code class=\"docutils literal notranslate\"><span class=\"pre\">False</span></code>.</p></li>\n<li><p><strong>select</strong> (<em>List</em><em>[</em><a class=\"reference external\" href=\"https://docs.python.org/3/library/stdtypes.html#str\" title=\"(in Python v3.8)\"><em>str</em></a><em>]</em><em>, </em><em>optional</em>) \u2013 the snapshots to include in the run.</p></li>\n<li><p><strong>exclude</strong> (<em>List</em><em>[</em><a class=\"reference external\" href=\"https://docs.python.org/3/library/stdtypes.html#str\" title=\"(in Python v3.8)\"><em>str</em></a><em>]</em><em>, </em><em>optional</em>) \u2013 the snapshots to exclude from the run.</p></li>\n</ul>\n</dd>\n<dt class=\"field-even\">Returns</dt>\n<dd class=\"field-even\"><p>object containing parsed output from dbt</p>\n</dd>\n<dt class=\"field-odd\">Return type</dt>\n<dd class=\"field-odd\"><p><a class=\"reference internal\" href=\"#dagster_dbt.DbtOutput\" title=\"dagster_dbt.DbtOutput\">DbtOutput</a></p>\n</dd>\n</dl>\n</dd></dl>\n\n<dl class=\"py method\">\n<dt id=\"dagster_dbt.DbtResource.snapshot\">\n<em class=\"property\"><span class=\"pre\">abstract</span> </em><code class=\"sig-name descname\"><span class=\"pre\">snapshot</span></code><span class=\"sig-paren\">(</span><em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">select</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">None</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">exclude</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">None</span></span></em>, <em class=\"sig-param\"><span class=\"o\"><span class=\"pre\">**</span></span><span class=\"n\"><span class=\"pre\">kwargs</span></span></em><span class=\"sig-paren\">)</span><a class=\"reference internal\" href=\"../../../../../_modules/dagster_dbt/dbt_resource#DbtResource.snapshot\"><span class=\"viewcode-link\"><span class=\"pre\">[source]</span></span></a><a class=\"headerlink\" href=\"#dagster_dbt.DbtResource.snapshot\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Run the <code class=\"docutils literal notranslate\"><span class=\"pre\">snapshot</span></code> command on a dbt project. kwargs are passed in as additional parameters.</p>\n<dl class=\"field-list simple\">\n<dt class=\"field-odd\">Parameters</dt>\n<dd class=\"field-odd\"><ul class=\"simple\">\n<li><p><strong>select</strong> (<em>List</em><em>[</em><a class=\"reference external\" href=\"https://docs.python.org/3/library/stdtypes.html#str\" title=\"(in Python v3.8)\"><em>str</em></a><em>]</em><em>, </em><em>optional</em>) \u2013 the snapshots to include in the run.</p></li>\n<li><p><strong>exclude</strong> (<em>List</em><em>[</em><a class=\"reference external\" href=\"https://docs.python.org/3/library/stdtypes.html#str\" title=\"(in Python v3.8)\"><em>str</em></a><em>]</em><em>, </em><em>optional</em>) \u2013 the snapshots to exclude from the run.</p></li>\n</ul>\n</dd>\n<dt class=\"field-even\">Returns</dt>\n<dd class=\"field-even\"><p>object containing parsed output from dbt</p>\n</dd>\n<dt class=\"field-odd\">Return type</dt>\n<dd class=\"field-odd\"><p><a class=\"reference internal\" href=\"#dagster_dbt.DbtOutput\" title=\"dagster_dbt.DbtOutput\">DbtOutput</a></p>\n</dd>\n</dl>\n</dd></dl>\n\n<dl class=\"py method\">\n<dt id=\"dagster_dbt.DbtResource.test\">\n<em class=\"property\"><span class=\"pre\">abstract</span> </em><code class=\"sig-name descname\"><span class=\"pre\">test</span></code><span class=\"sig-paren\">(</span><em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">models</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">None</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">exclude</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">None</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">data</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">True</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">schema</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">True</span></span></em>, <em class=\"sig-param\"><span class=\"o\"><span class=\"pre\">**</span></span><span class=\"n\"><span class=\"pre\">kwargs</span></span></em><span class=\"sig-paren\">)</span><a class=\"reference internal\" href=\"../../../../../_modules/dagster_dbt/dbt_resource#DbtResource.test\"><span class=\"viewcode-link\"><span class=\"pre\">[source]</span></span></a><a class=\"headerlink\" href=\"#dagster_dbt.DbtResource.test\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Run the <code class=\"docutils literal notranslate\"><span class=\"pre\">test</span></code> command on a dbt project. kwargs are passed in as additional parameters.</p>\n<dl class=\"field-list simple\">\n<dt class=\"field-odd\">Parameters</dt>\n<dd class=\"field-odd\"><ul class=\"simple\">\n<li><p><strong>models</strong> (<em>List</em><em>[</em><a class=\"reference external\" href=\"https://docs.python.org/3/library/stdtypes.html#str\" title=\"(in Python v3.8)\"><em>str</em></a><em>]</em><em>, </em><em>optional</em>) \u2013 the models to include in testing.</p></li>\n<li><p><strong>exclude</strong> (<em>List</em><em>[</em><a class=\"reference external\" href=\"https://docs.python.org/3/library/stdtypes.html#str\" title=\"(in Python v3.8)\"><em>str</em></a><em>]</em><em>, </em><em>optional</em>) \u2013 the models to exclude from testing.</p></li>\n<li><p><strong>data</strong> (<a class=\"reference external\" href=\"https://docs.python.org/3/library/functions.html#bool\" title=\"(in Python v3.8)\"><em>bool</em></a><em>, </em><em>optional</em>) \u2013 If <code class=\"docutils literal notranslate\"><span class=\"pre\">True</span></code> (default), then run data tests.</p></li>\n<li><p><strong>schema</strong> (<a class=\"reference external\" href=\"https://docs.python.org/3/library/functions.html#bool\" title=\"(in Python v3.8)\"><em>bool</em></a><em>, </em><em>optional</em>) \u2013 If <code class=\"docutils literal notranslate\"><span class=\"pre\">True</span></code> (default), then run schema tests.</p></li>\n</ul>\n</dd>\n<dt class=\"field-even\">Returns</dt>\n<dd class=\"field-even\"><p>object containing parsed output from dbt</p>\n</dd>\n<dt class=\"field-odd\">Return type</dt>\n<dd class=\"field-odd\"><p><a class=\"reference internal\" href=\"#dagster_dbt.DbtOutput\" title=\"dagster_dbt.DbtOutput\">DbtOutput</a></p>\n</dd>\n</dl>\n</dd></dl>\n\n</dd></dl>\n\n</div>\n<div class=\"section\" id=\"errors\">\n<h2>Errors<a class=\"headerlink\" href=\"#errors\" title=\"Permalink to this headline\">\u00b6</a></h2>\n<dl class=\"py exception\">\n<dt id=\"dagster_dbt.DagsterDbtError\">\n<em class=\"property\"><span class=\"pre\">exception</span> </em><code class=\"sig-prename descclassname\"><span class=\"pre\">dagster_dbt.</span></code><code class=\"sig-name descname\"><span class=\"pre\">DagsterDbtError</span></code><span class=\"sig-paren\">(</span><em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">description</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">None</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">metadata_entries</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">None</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">metadata</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">None</span></span></em><span class=\"sig-paren\">)</span><a class=\"reference internal\" href=\"../../../../../_modules/dagster_dbt/errors#DagsterDbtError\"><span class=\"viewcode-link\"><span class=\"pre\">[source]</span></span></a><a class=\"headerlink\" href=\"#dagster_dbt.DagsterDbtError\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>The base exception of the <code class=\"docutils literal notranslate\"><span class=\"pre\">dagster-dbt</span></code> library.</p>\n</dd></dl>\n\n<dl class=\"py exception\">\n<dt id=\"dagster_dbt.DagsterDbtCliRuntimeError\">\n<em class=\"property\"><span class=\"pre\">exception</span> </em><code class=\"sig-prename descclassname\"><span class=\"pre\">dagster_dbt.</span></code><code class=\"sig-name descname\"><span class=\"pre\">DagsterDbtCliRuntimeError</span></code><span class=\"sig-paren\">(</span><em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">description</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">logs</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">raw_output</span></span></em><span class=\"sig-paren\">)</span><a class=\"reference internal\" href=\"../../../../../_modules/dagster_dbt/errors#DagsterDbtCliRuntimeError\"><span class=\"viewcode-link\"><span class=\"pre\">[source]</span></span></a><a class=\"headerlink\" href=\"#dagster_dbt.DagsterDbtCliRuntimeError\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Represents an error while executing a dbt CLI command.</p>\n</dd></dl>\n\n<dl class=\"py exception\">\n<dt id=\"dagster_dbt.DagsterDbtCliFatalRuntimeError\">\n<em class=\"property\"><span class=\"pre\">exception</span> </em><code class=\"sig-prename descclassname\"><span class=\"pre\">dagster_dbt.</span></code><code class=\"sig-name descname\"><span class=\"pre\">DagsterDbtCliFatalRuntimeError</span></code><span class=\"sig-paren\">(</span><em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">logs</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">raw_output</span></span></em><span class=\"sig-paren\">)</span><a class=\"reference internal\" href=\"../../../../../_modules/dagster_dbt/errors#DagsterDbtCliFatalRuntimeError\"><span class=\"viewcode-link\"><span class=\"pre\">[source]</span></span></a><a class=\"headerlink\" href=\"#dagster_dbt.DagsterDbtCliFatalRuntimeError\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Represents a fatal error in the dbt CLI (return code 2).</p>\n</dd></dl>\n\n<dl class=\"py exception\">\n<dt id=\"dagster_dbt.DagsterDbtCliHandledRuntimeError\">\n<em class=\"property\"><span class=\"pre\">exception</span> </em><code class=\"sig-prename descclassname\"><span class=\"pre\">dagster_dbt.</span></code><code class=\"sig-name descname\"><span class=\"pre\">DagsterDbtCliHandledRuntimeError</span></code><span class=\"sig-paren\">(</span><em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">logs</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">raw_output</span></span></em><span class=\"sig-paren\">)</span><a class=\"reference internal\" href=\"../../../../../_modules/dagster_dbt/errors#DagsterDbtCliHandledRuntimeError\"><span class=\"viewcode-link\"><span class=\"pre\">[source]</span></span></a><a class=\"headerlink\" href=\"#dagster_dbt.DagsterDbtCliHandledRuntimeError\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Represents a model error reported by the dbt CLI at runtime (return code 1).</p>\n</dd></dl>\n\n<dl class=\"py exception\">\n<dt id=\"dagster_dbt.DagsterDbtCliOutputsNotFoundError\">\n<em class=\"property\"><span class=\"pre\">exception</span> </em><code class=\"sig-prename descclassname\"><span class=\"pre\">dagster_dbt.</span></code><code class=\"sig-name descname\"><span class=\"pre\">DagsterDbtCliOutputsNotFoundError</span></code><span class=\"sig-paren\">(</span><em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">path</span></span></em><span class=\"sig-paren\">)</span><a class=\"reference internal\" href=\"../../../../../_modules/dagster_dbt/errors#DagsterDbtCliOutputsNotFoundError\"><span class=\"viewcode-link\"><span class=\"pre\">[source]</span></span></a><a class=\"headerlink\" href=\"#dagster_dbt.DagsterDbtCliOutputsNotFoundError\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Represents a problem in finding the <code class=\"docutils literal notranslate\"><span class=\"pre\">target/run_results.json</span></code> artifact when executing a dbt\nCLI command.</p>\n<p>For more details on <code class=\"docutils literal notranslate\"><span class=\"pre\">target/run_results.json</span></code>, see\n<a class=\"reference external\" href=\"https://docs.getdbt.com/reference/dbt-artifacts#run_resultsjson\">https://docs.getdbt.com/reference/dbt-artifacts#run_resultsjson</a>.</p>\n</dd></dl>\n\n<dl class=\"py exception\">\n<dt id=\"dagster_dbt.DagsterDbtCliUnexpectedOutputError\">\n<em class=\"property\"><span class=\"pre\">exception</span> </em><code class=\"sig-prename descclassname\"><span class=\"pre\">dagster_dbt.</span></code><code class=\"sig-name descname\"><span class=\"pre\">DagsterDbtCliUnexpectedOutputError</span></code><span class=\"sig-paren\">(</span><em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">invalid_line_nos</span></span></em><span class=\"sig-paren\">)</span><a class=\"reference internal\" href=\"../../../../../_modules/dagster_dbt/errors#DagsterDbtCliUnexpectedOutputError\"><span class=\"viewcode-link\"><span class=\"pre\">[source]</span></span></a><a class=\"headerlink\" href=\"#dagster_dbt.DagsterDbtCliUnexpectedOutputError\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Represents an error when parsing the output of a dbt CLI command.</p>\n</dd></dl>\n\n<dl class=\"py exception\">\n<dt id=\"dagster_dbt.DagsterDbtRpcUnexpectedPollOutputError\">\n<em class=\"property\"><span class=\"pre\">exception</span> </em><code class=\"sig-prename descclassname\"><span class=\"pre\">dagster_dbt.</span></code><code class=\"sig-name descname\"><span class=\"pre\">DagsterDbtRpcUnexpectedPollOutputError</span></code><span class=\"sig-paren\">(</span><em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">description</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">None</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">metadata_entries</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">None</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">metadata</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">None</span></span></em><span class=\"sig-paren\">)</span><a class=\"reference internal\" href=\"../../../../../_modules/dagster_dbt/errors#DagsterDbtRpcUnexpectedPollOutputError\"><span class=\"viewcode-link\"><span class=\"pre\">[source]</span></span></a><a class=\"headerlink\" href=\"#dagster_dbt.DagsterDbtRpcUnexpectedPollOutputError\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Represents an unexpected response when polling the dbt RPC server.</p>\n</dd></dl>\n\n</div>\n<div class=\"section\" id=\"utils\">\n<h2>Utils<a class=\"headerlink\" href=\"#utils\" title=\"Permalink to this headline\">\u00b6</a></h2>\n<dl class=\"py function\">\n<dt id=\"dagster_dbt.utils.generate_materializations\">\n<code class=\"sig-prename descclassname\"><span class=\"pre\">dagster_dbt.utils.</span></code><code class=\"sig-name descname\"><span class=\"pre\">generate_materializations</span></code><span class=\"sig-paren\">(</span><em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">dbt_output</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">asset_key_prefix</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">None</span></span></em><span class=\"sig-paren\">)</span><a class=\"reference internal\" href=\"../../../../../_modules/dagster_dbt/utils#generate_materializations\"><span class=\"viewcode-link\"><span class=\"pre\">[source]</span></span></a><a class=\"headerlink\" href=\"#dagster_dbt.utils.generate_materializations\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>This function yields <a class=\"reference internal\" href=\"../../ops#dagster.AssetMaterialization\" title=\"dagster.AssetMaterialization\"><code class=\"xref py py-class docutils literal notranslate\"><span class=\"pre\">dagster.AssetMaterialization</span></code></a> events for each model updated by\na dbt command.</p>\n<p>Information parsed from a <code class=\"xref py py-class docutils literal notranslate\"><span class=\"pre\">DbtOutput</span></code> object.</p>\n<p>Note that this will not work with output from the <cite>dbt_rpc_resource</cite>, because this resource does\nnot wait for a response from the RPC server before returning. Instead, use the\n<cite>dbt_rpc_sync_resource</cite>, which will wait for execution to complete.</p>\n<p>Examples:</p>\n<div class=\"highlight-python notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"kn\">from</span> <span class=\"nn\">dagster</span> <span class=\"kn\">import</span> <span class=\"n\">op</span><span class=\"p\">,</span> <span class=\"n\">Output</span>\n<span class=\"kn\">from</span> <span class=\"nn\">dagster_dbt.utils</span> <span class=\"kn\">import</span> <span class=\"n\">generate_materializations</span>\n<span class=\"kn\">from</span> <span class=\"nn\">dagster_dbt</span> <span class=\"kn\">import</span> <span class=\"n\">dbt_cli_resource</span><span class=\"p\">,</span> <span class=\"n\">dbt_rpc_sync_resource</span>\n\n<span class=\"nd\">@op</span><span class=\"p\">(</span><span class=\"n\">required_resource_keys</span><span class=\"o\">=</span><span class=\"p\">{</span><span class=\"s2\">&quot;dbt&quot;</span><span class=\"p\">})</span>\n<span class=\"k\">def</span> <span class=\"nf\">my_custom_dbt_run</span><span class=\"p\">(</span><span class=\"n\">context</span><span class=\"p\">):</span>\n    <span class=\"n\">dbt_output</span> <span class=\"o\">=</span> <span class=\"n\">context</span><span class=\"o\">.</span><span class=\"n\">resources</span><span class=\"o\">.</span><span class=\"n\">dbt</span><span class=\"o\">.</span><span class=\"n\">run</span><span class=\"p\">()</span>\n    <span class=\"k\">for</span> <span class=\"n\">materialization</span> <span class=\"ow\">in</span> <span class=\"n\">generate_materializations</span><span class=\"p\">(</span><span class=\"n\">dbt_output</span><span class=\"p\">):</span>\n        <span class=\"c1\"># you can modify the materialization object to add extra metadata, if desired</span>\n        <span class=\"k\">yield</span> <span class=\"n\">materialization</span>\n    <span class=\"k\">yield</span> <span class=\"n\">Output</span><span class=\"p\">(</span><span class=\"n\">my_dbt_output</span><span class=\"p\">)</span>\n\n<span class=\"nd\">@job</span><span class=\"p\">(</span><span class=\"n\">resource_defs</span><span class=\"o\">=</span><span class=\"p\">{{</span><span class=\"s2\">&quot;dbt&quot;</span><span class=\"p\">:</span><span class=\"n\">dbt_cli_resource</span><span class=\"p\">}})</span>\n<span class=\"k\">def</span> <span class=\"nf\">my_dbt_cli_job</span><span class=\"p\">():</span>\n    <span class=\"n\">my_custom_dbt_run</span><span class=\"p\">()</span>\n\n<span class=\"nd\">@job</span><span class=\"p\">(</span><span class=\"n\">resource_defs</span><span class=\"o\">=</span><span class=\"p\">{{</span><span class=\"s2\">&quot;dbt&quot;</span><span class=\"p\">:</span><span class=\"n\">dbt_rpc_sync_resource</span><span class=\"p\">}})</span>\n<span class=\"k\">def</span> <span class=\"nf\">my_dbt_rpc_job</span><span class=\"p\">():</span>\n    <span class=\"n\">my_custom_dbt_run</span><span class=\"p\">()</span>\n</pre></div>\n</div>\n</dd></dl>\n\n</div>\n<div class=\"section\" id=\"solids-legacy\">\n<h2>Solids [Legacy]<a class=\"headerlink\" href=\"#solids-legacy\" title=\"Permalink to this headline\">\u00b6</a></h2>\n<p>dagster_dbt provides a set of solids that may be used in legacy pipelines.</p>\n<div class=\"section\" id=\"cli-solids\">\n<h3>CLI Solids<a class=\"headerlink\" href=\"#cli-solids\" title=\"Permalink to this headline\">\u00b6</a></h3>\n<dl class=\"py data\">\n<dt id=\"dagster_dbt.dbt_cli_compile\">\n<code class=\"sig-prename descclassname\"><span class=\"pre\">dagster_dbt.</span></code><code class=\"sig-name descname\"><span class=\"pre\">dbt_cli_compile</span></code><em class=\"property\"> <span class=\"pre\">=</span> <span class=\"pre\">&lt;dagster.core.definitions.solid_definition.SolidDefinition</span> <span class=\"pre\">object&gt;</span></em><a class=\"reference internal\" href=\"../../../../../_modules/dagster_dbt/cli/solids#dbt_cli_compile\"><span class=\"viewcode-link\"><span class=\"pre\">[source]</span></span></a><a class=\"headerlink\" href=\"#dagster_dbt.dbt_cli_compile\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><div class=\"line-block\">\n<div class=\"line\"><br /></div>\n</div>\n<details class=\"summary-config-schema\">\n<summary>Config Schema:</summary><dl class=\"field-list\">\n<dt class=\"field-odd\">project-dir (dagster.StringSource, optional)</dt>\n<dd class=\"field-odd\"><p>Which directory to look in for the dbt_project.yml file. Default is the current working directory and its parents.</p>\n<p><strong>Default Value:</strong> \u2018.\u2019</p>\n</dd>\n<dt class=\"field-even\">profiles-dir (dagster.StringSource, optional)</dt>\n<dd class=\"field-even\"><p>Which directory to look in for the profiles.yml file. Default = $DBT_PROFILES_DIR or $HOME/.dbt</p>\n</dd>\n<dt class=\"field-odd\">profile (dagster.StringSource, optional)</dt>\n<dd class=\"field-odd\"><p>Which profile to load. Overrides setting in dbt_project.yml.</p>\n</dd>\n<dt class=\"field-even\">target (dagster.StringSource, optional)</dt>\n<dd class=\"field-even\"><p>Which target to load for the given profile.</p>\n</dd>\n<dt class=\"field-odd\">vars (permissive dict, optional)</dt>\n<dd class=\"field-odd\"><p>Supply variables to the project. This argument overrides variables defined in your dbt_project.yml file. This argument should be a dictionary, eg. {\u2018my_variable\u2019: \u2018my_value\u2019}</p>\n</dd>\n<dt class=\"field-even\">bypass-cache (Bool, optional)</dt>\n<dd class=\"field-even\"><p>If set, bypass the adapter-level cache of database state</p>\n<p><strong>Default Value:</strong> False</p>\n</dd>\n<dt class=\"field-odd\">warn-error (Bool, optional)</dt>\n<dd class=\"field-odd\"><p>If dbt would normally warn, instead raise an exception. Examples include \u2013models that selects nothing, deprecations, configurations with no associated models, invalid test configurations, and missing sources/refs in tests.</p>\n<p><strong>Default Value:</strong> False</p>\n</dd>\n<dt class=\"field-even\">dbt_executable (dagster.StringSource, optional)</dt>\n<dd class=\"field-even\"><p>Path to the dbt executable. Default is dbt</p>\n<p><strong>Default Value:</strong> \u2018dbt\u2019</p>\n</dd>\n<dt class=\"field-odd\">ignore_handled_error (Bool, optional)</dt>\n<dd class=\"field-odd\"><p>When True, will not raise an exception when the dbt CLI returns error code 1. Default is False.</p>\n<p><strong>Default Value:</strong> False</p>\n</dd>\n<dt class=\"field-even\">target-path (dagster.StringSource, optional)</dt>\n<dd class=\"field-even\"><p>The directory path for target if different from the default <cite>target-path</cite> in your dbt project configuration file.</p>\n<p><strong>Default Value:</strong> \u2018target\u2019</p>\n</dd>\n<dt class=\"field-odd\">docs_url (dagster.StringSource, optional)</dt>\n<dd class=\"field-odd\"><p>The url for where dbt docs are being served for this project.</p>\n</dd>\n<dt class=\"field-even\">parse-only (Bool, optional)</dt>\n<dd class=\"field-even\"><p><strong>Default Value:</strong> False</p>\n</dd>\n<dt class=\"field-odd\">threads (Union[Int, None], optional)</dt>\n<dd class=\"field-odd\"><p>Specify number of threads to use while executing models. Overrides settings in profiles.yml.</p>\n<p><strong>Default Value:</strong> None</p>\n</dd>\n<dt class=\"field-even\">no-version-check (Bool, optional)</dt>\n<dd class=\"field-even\"><p>Skip the check that dbt\u2019s version matches the one specified in the dbt_project.yml file (\u2018require-dbt-version\u2019)</p>\n<p><strong>Default Value:</strong> False</p>\n</dd>\n<dt class=\"field-odd\">models (Union[List[String], None], optional)</dt>\n<dd class=\"field-odd\"><p>The dbt models to run.</p>\n<p><strong>Default Value:</strong> None</p>\n</dd>\n<dt class=\"field-even\">exclude (Union[List[String], None], optional)</dt>\n<dd class=\"field-even\"><p>The dbt models to exclude.</p>\n<p><strong>Default Value:</strong> None</p>\n</dd>\n<dt class=\"field-odd\">selector (Union[List[String], None], optional)</dt>\n<dd class=\"field-odd\"><p>The selector name to use, as defined in your selectors.yml</p>\n<p><strong>Default Value:</strong> None</p>\n</dd>\n<dt class=\"field-even\">state (Union[List[String], None], optional)</dt>\n<dd class=\"field-even\"><p>If set, use the given directory as the source for json files to compare with this project.</p>\n<p><strong>Default Value:</strong> None</p>\n</dd>\n<dt class=\"field-odd\">full-refresh (Bool, optional)</dt>\n<dd class=\"field-odd\"><p>If specified, DBT will drop incremental models and fully-recalculate the incremental table from the model definition. (\u2013full-refresh)</p>\n<p><strong>Default Value:</strong> False</p>\n</dd>\n</dl>\n</details><p>This solid executes <code class=\"docutils literal notranslate\"><span class=\"pre\">dbt</span> <span class=\"pre\">compile</span></code> via the dbt CLI.</p>\n</dd></dl>\n\n<dl class=\"py data\">\n<dt id=\"dagster_dbt.dbt_cli_run\">\n<code class=\"sig-prename descclassname\"><span class=\"pre\">dagster_dbt.</span></code><code class=\"sig-name descname\"><span class=\"pre\">dbt_cli_run</span></code><em class=\"property\"> <span class=\"pre\">=</span> <span class=\"pre\">&lt;dagster.core.definitions.solid_definition.SolidDefinition</span> <span class=\"pre\">object&gt;</span></em><a class=\"reference internal\" href=\"../../../../../_modules/dagster_dbt/cli/solids#dbt_cli_run\"><span class=\"viewcode-link\"><span class=\"pre\">[source]</span></span></a><a class=\"headerlink\" href=\"#dagster_dbt.dbt_cli_run\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><div class=\"line-block\">\n<div class=\"line\"><br /></div>\n</div>\n<details class=\"summary-config-schema\">\n<summary>Config Schema:</summary><dl class=\"field-list\">\n<dt class=\"field-odd\">project-dir (dagster.StringSource, optional)</dt>\n<dd class=\"field-odd\"><p>Which directory to look in for the dbt_project.yml file. Default is the current working directory and its parents.</p>\n<p><strong>Default Value:</strong> \u2018.\u2019</p>\n</dd>\n<dt class=\"field-even\">profiles-dir (dagster.StringSource, optional)</dt>\n<dd class=\"field-even\"><p>Which directory to look in for the profiles.yml file. Default = $DBT_PROFILES_DIR or $HOME/.dbt</p>\n</dd>\n<dt class=\"field-odd\">profile (dagster.StringSource, optional)</dt>\n<dd class=\"field-odd\"><p>Which profile to load. Overrides setting in dbt_project.yml.</p>\n</dd>\n<dt class=\"field-even\">target (dagster.StringSource, optional)</dt>\n<dd class=\"field-even\"><p>Which target to load for the given profile.</p>\n</dd>\n<dt class=\"field-odd\">vars (permissive dict, optional)</dt>\n<dd class=\"field-odd\"><p>Supply variables to the project. This argument overrides variables defined in your dbt_project.yml file. This argument should be a dictionary, eg. {\u2018my_variable\u2019: \u2018my_value\u2019}</p>\n</dd>\n<dt class=\"field-even\">bypass-cache (Bool, optional)</dt>\n<dd class=\"field-even\"><p>If set, bypass the adapter-level cache of database state</p>\n<p><strong>Default Value:</strong> False</p>\n</dd>\n<dt class=\"field-odd\">warn-error (Bool, optional)</dt>\n<dd class=\"field-odd\"><p>If dbt would normally warn, instead raise an exception. Examples include \u2013models that selects nothing, deprecations, configurations with no associated models, invalid test configurations, and missing sources/refs in tests.</p>\n<p><strong>Default Value:</strong> False</p>\n</dd>\n<dt class=\"field-even\">dbt_executable (dagster.StringSource, optional)</dt>\n<dd class=\"field-even\"><p>Path to the dbt executable. Default is dbt</p>\n<p><strong>Default Value:</strong> \u2018dbt\u2019</p>\n</dd>\n<dt class=\"field-odd\">ignore_handled_error (Bool, optional)</dt>\n<dd class=\"field-odd\"><p>When True, will not raise an exception when the dbt CLI returns error code 1. Default is False.</p>\n<p><strong>Default Value:</strong> False</p>\n</dd>\n<dt class=\"field-even\">target-path (dagster.StringSource, optional)</dt>\n<dd class=\"field-even\"><p>The directory path for target if different from the default <cite>target-path</cite> in your dbt project configuration file.</p>\n<p><strong>Default Value:</strong> \u2018target\u2019</p>\n</dd>\n<dt class=\"field-odd\">docs_url (dagster.StringSource, optional)</dt>\n<dd class=\"field-odd\"><p>The url for where dbt docs are being served for this project.</p>\n</dd>\n<dt class=\"field-even\">threads (Union[Int, None], optional)</dt>\n<dd class=\"field-even\"><p>Specify number of threads to use while executing models. Overrides settings in profiles.yml.</p>\n<p><strong>Default Value:</strong> None</p>\n</dd>\n<dt class=\"field-odd\">models (Union[List[String], None], optional)</dt>\n<dd class=\"field-odd\"><p>The dbt models to run.</p>\n<p><strong>Default Value:</strong> None</p>\n</dd>\n<dt class=\"field-even\">exclude (Union[List[String], None], optional)</dt>\n<dd class=\"field-even\"><p>The dbt models to exclude.</p>\n<p><strong>Default Value:</strong> None</p>\n</dd>\n<dt class=\"field-odd\">full-refresh (Bool, optional)</dt>\n<dd class=\"field-odd\"><p>If specified, DBT will drop incremental models and fully-recalculate the incremental table from the model definition. (\u2013full-refresh)</p>\n<p><strong>Default Value:</strong> False</p>\n</dd>\n<dt class=\"field-even\">fail-fast (Bool, optional)</dt>\n<dd class=\"field-even\"><p>Stop execution upon a first failure. (\u2013fail-fast)</p>\n<p><strong>Default Value:</strong> False</p>\n</dd>\n<dt class=\"field-odd\">yield_materializations (Bool, optional)</dt>\n<dd class=\"field-odd\"><p>If True, materializations corresponding to the results of the dbt operation will be yielded when the solid executes. Default: True</p>\n<p><strong>Default Value:</strong> True</p>\n</dd>\n<dt class=\"field-even\">asset_key_prefix (List[String], optional)</dt>\n<dd class=\"field-even\"><p>If provided and yield_materializations is True, these components will be used to prefix the generated asset keys.</p>\n<p><strong>Default Value:</strong> []</p>\n</dd>\n</dl>\n</details><p>This solid executes <code class=\"docutils literal notranslate\"><span class=\"pre\">dbt</span> <span class=\"pre\">run</span></code> via the dbt CLI. See the solid definition for available\nparameters.</p>\n</dd></dl>\n\n<dl class=\"py data\">\n<dt id=\"dagster_dbt.dbt_cli_run_operation\">\n<code class=\"sig-prename descclassname\"><span class=\"pre\">dagster_dbt.</span></code><code class=\"sig-name descname\"><span class=\"pre\">dbt_cli_run_operation</span></code><em class=\"property\"> <span class=\"pre\">=</span> <span class=\"pre\">&lt;dagster.core.definitions.solid_definition.SolidDefinition</span> <span class=\"pre\">object&gt;</span></em><a class=\"reference internal\" href=\"../../../../../_modules/dagster_dbt/cli/solids#dbt_cli_run_operation\"><span class=\"viewcode-link\"><span class=\"pre\">[source]</span></span></a><a class=\"headerlink\" href=\"#dagster_dbt.dbt_cli_run_operation\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><div class=\"line-block\">\n<div class=\"line\"><br /></div>\n</div>\n<details class=\"summary-config-schema\">\n<summary>Config Schema:</summary><dl class=\"field-list\">\n<dt class=\"field-odd\">project-dir (dagster.StringSource, optional)</dt>\n<dd class=\"field-odd\"><p>Which directory to look in for the dbt_project.yml file. Default is the current working directory and its parents.</p>\n<p><strong>Default Value:</strong> \u2018.\u2019</p>\n</dd>\n<dt class=\"field-even\">profiles-dir (dagster.StringSource, optional)</dt>\n<dd class=\"field-even\"><p>Which directory to look in for the profiles.yml file. Default = $DBT_PROFILES_DIR or $HOME/.dbt</p>\n</dd>\n<dt class=\"field-odd\">profile (dagster.StringSource, optional)</dt>\n<dd class=\"field-odd\"><p>Which profile to load. Overrides setting in dbt_project.yml.</p>\n</dd>\n<dt class=\"field-even\">target (dagster.StringSource, optional)</dt>\n<dd class=\"field-even\"><p>Which target to load for the given profile.</p>\n</dd>\n<dt class=\"field-odd\">vars (permissive dict, optional)</dt>\n<dd class=\"field-odd\"><p>Supply variables to the project. This argument overrides variables defined in your dbt_project.yml file. This argument should be a dictionary, eg. {\u2018my_variable\u2019: \u2018my_value\u2019}</p>\n</dd>\n<dt class=\"field-even\">bypass-cache (Bool, optional)</dt>\n<dd class=\"field-even\"><p>If set, bypass the adapter-level cache of database state</p>\n<p><strong>Default Value:</strong> False</p>\n</dd>\n<dt class=\"field-odd\">warn-error (Bool, optional)</dt>\n<dd class=\"field-odd\"><p>If dbt would normally warn, instead raise an exception. Examples include \u2013models that selects nothing, deprecations, configurations with no associated models, invalid test configurations, and missing sources/refs in tests.</p>\n<p><strong>Default Value:</strong> False</p>\n</dd>\n<dt class=\"field-even\">dbt_executable (dagster.StringSource, optional)</dt>\n<dd class=\"field-even\"><p>Path to the dbt executable. Default is dbt</p>\n<p><strong>Default Value:</strong> \u2018dbt\u2019</p>\n</dd>\n<dt class=\"field-odd\">ignore_handled_error (Bool, optional)</dt>\n<dd class=\"field-odd\"><p>When True, will not raise an exception when the dbt CLI returns error code 1. Default is False.</p>\n<p><strong>Default Value:</strong> False</p>\n</dd>\n<dt class=\"field-even\">target-path (dagster.StringSource, optional)</dt>\n<dd class=\"field-even\"><p>The directory path for target if different from the default <cite>target-path</cite> in your dbt project configuration file.</p>\n<p><strong>Default Value:</strong> \u2018target\u2019</p>\n</dd>\n<dt class=\"field-odd\">docs_url (dagster.StringSource, optional)</dt>\n<dd class=\"field-odd\"><p>The url for where dbt docs are being served for this project.</p>\n</dd>\n<dt class=\"field-even\">macro (dagster.StringSource)</dt>\n<dd class=\"field-even\"><p>Specify the macro to invoke. dbt will call this macro with the supplied arguments and then exit.</p>\n</dd>\n<dt class=\"field-odd\">args (permissive dict, optional)</dt>\n<dd class=\"field-odd\"><p>Supply arguments to the macro. This dictionary will be mapped to the keyword arguments defined in the selected macro. This argument should be a dictionary, eg. {\u2018my_variable\u2019: \u2018my_value\u2019}</p>\n</dd>\n</dl>\n</details><p>This solid executes <code class=\"docutils literal notranslate\"><span class=\"pre\">dbt</span> <span class=\"pre\">run-operation</span></code> via the dbt CLI.</p>\n</dd></dl>\n\n<dl class=\"py data\">\n<dt id=\"dagster_dbt.dbt_cli_snapshot\">\n<code class=\"sig-prename descclassname\"><span class=\"pre\">dagster_dbt.</span></code><code class=\"sig-name descname\"><span class=\"pre\">dbt_cli_snapshot</span></code><em class=\"property\"> <span class=\"pre\">=</span> <span class=\"pre\">&lt;dagster.core.definitions.solid_definition.SolidDefinition</span> <span class=\"pre\">object&gt;</span></em><a class=\"reference internal\" href=\"../../../../../_modules/dagster_dbt/cli/solids#dbt_cli_snapshot\"><span class=\"viewcode-link\"><span class=\"pre\">[source]</span></span></a><a class=\"headerlink\" href=\"#dagster_dbt.dbt_cli_snapshot\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><div class=\"line-block\">\n<div class=\"line\"><br /></div>\n</div>\n<details class=\"summary-config-schema\">\n<summary>Config Schema:</summary><dl class=\"field-list\">\n<dt class=\"field-odd\">project-dir (dagster.StringSource, optional)</dt>\n<dd class=\"field-odd\"><p>Which directory to look in for the dbt_project.yml file. Default is the current working directory and its parents.</p>\n<p><strong>Default Value:</strong> \u2018.\u2019</p>\n</dd>\n<dt class=\"field-even\">profiles-dir (dagster.StringSource, optional)</dt>\n<dd class=\"field-even\"><p>Which directory to look in for the profiles.yml file. Default = $DBT_PROFILES_DIR or $HOME/.dbt</p>\n</dd>\n<dt class=\"field-odd\">profile (dagster.StringSource, optional)</dt>\n<dd class=\"field-odd\"><p>Which profile to load. Overrides setting in dbt_project.yml.</p>\n</dd>\n<dt class=\"field-even\">target (dagster.StringSource, optional)</dt>\n<dd class=\"field-even\"><p>Which target to load for the given profile.</p>\n</dd>\n<dt class=\"field-odd\">vars (permissive dict, optional)</dt>\n<dd class=\"field-odd\"><p>Supply variables to the project. This argument overrides variables defined in your dbt_project.yml file. This argument should be a dictionary, eg. {\u2018my_variable\u2019: \u2018my_value\u2019}</p>\n</dd>\n<dt class=\"field-even\">bypass-cache (Bool, optional)</dt>\n<dd class=\"field-even\"><p>If set, bypass the adapter-level cache of database state</p>\n<p><strong>Default Value:</strong> False</p>\n</dd>\n<dt class=\"field-odd\">warn-error (Bool, optional)</dt>\n<dd class=\"field-odd\"><p>If dbt would normally warn, instead raise an exception. Examples include \u2013models that selects nothing, deprecations, configurations with no associated models, invalid test configurations, and missing sources/refs in tests.</p>\n<p><strong>Default Value:</strong> False</p>\n</dd>\n<dt class=\"field-even\">dbt_executable (dagster.StringSource, optional)</dt>\n<dd class=\"field-even\"><p>Path to the dbt executable. Default is dbt</p>\n<p><strong>Default Value:</strong> \u2018dbt\u2019</p>\n</dd>\n<dt class=\"field-odd\">ignore_handled_error (Bool, optional)</dt>\n<dd class=\"field-odd\"><p>When True, will not raise an exception when the dbt CLI returns error code 1. Default is False.</p>\n<p><strong>Default Value:</strong> False</p>\n</dd>\n<dt class=\"field-even\">target-path (dagster.StringSource, optional)</dt>\n<dd class=\"field-even\"><p>The directory path for target if different from the default <cite>target-path</cite> in your dbt project configuration file.</p>\n<p><strong>Default Value:</strong> \u2018target\u2019</p>\n</dd>\n<dt class=\"field-odd\">docs_url (dagster.StringSource, optional)</dt>\n<dd class=\"field-odd\"><p>The url for where dbt docs are being served for this project.</p>\n</dd>\n<dt class=\"field-even\">threads (Union[Int, None], optional)</dt>\n<dd class=\"field-even\"><p>Specify number of threads to use while executing models. Overrides settings in profiles.yml.</p>\n<p><strong>Default Value:</strong> None</p>\n</dd>\n<dt class=\"field-odd\">select (Union[List[String], None], optional)</dt>\n<dd class=\"field-odd\"><p>The dbt models to include.</p>\n<p><strong>Default Value:</strong> None</p>\n</dd>\n<dt class=\"field-even\">exclude (Union[List[String], None], optional)</dt>\n<dd class=\"field-even\"><p>The dbt models to exclude.</p>\n<p><strong>Default Value:</strong> None</p>\n</dd>\n</dl>\n</details><p>This solid executes <code class=\"docutils literal notranslate\"><span class=\"pre\">dbt</span> <span class=\"pre\">snapshot</span></code> via the dbt CLI.</p>\n</dd></dl>\n\n<dl class=\"py data\">\n<dt id=\"dagster_dbt.dbt_cli_snapshot_freshness\">\n<code class=\"sig-prename descclassname\"><span class=\"pre\">dagster_dbt.</span></code><code class=\"sig-name descname\"><span class=\"pre\">dbt_cli_snapshot_freshness</span></code><em class=\"property\"> <span class=\"pre\">=</span> <span class=\"pre\">&lt;dagster.core.definitions.solid_definition.SolidDefinition</span> <span class=\"pre\">object&gt;</span></em><a class=\"reference internal\" href=\"../../../../../_modules/dagster_dbt/cli/solids#dbt_cli_snapshot_freshness\"><span class=\"viewcode-link\"><span class=\"pre\">[source]</span></span></a><a class=\"headerlink\" href=\"#dagster_dbt.dbt_cli_snapshot_freshness\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><div class=\"line-block\">\n<div class=\"line\"><br /></div>\n</div>\n<details class=\"summary-config-schema\">\n<summary>Config Schema:</summary><dl class=\"field-list\">\n<dt class=\"field-odd\">project-dir (dagster.StringSource, optional)</dt>\n<dd class=\"field-odd\"><p>Which directory to look in for the dbt_project.yml file. Default is the current working directory and its parents.</p>\n<p><strong>Default Value:</strong> \u2018.\u2019</p>\n</dd>\n<dt class=\"field-even\">profiles-dir (dagster.StringSource, optional)</dt>\n<dd class=\"field-even\"><p>Which directory to look in for the profiles.yml file. Default = $DBT_PROFILES_DIR or $HOME/.dbt</p>\n</dd>\n<dt class=\"field-odd\">profile (dagster.StringSource, optional)</dt>\n<dd class=\"field-odd\"><p>Which profile to load. Overrides setting in dbt_project.yml.</p>\n</dd>\n<dt class=\"field-even\">target (dagster.StringSource, optional)</dt>\n<dd class=\"field-even\"><p>Which target to load for the given profile.</p>\n</dd>\n<dt class=\"field-odd\">vars (permissive dict, optional)</dt>\n<dd class=\"field-odd\"><p>Supply variables to the project. This argument overrides variables defined in your dbt_project.yml file. This argument should be a dictionary, eg. {\u2018my_variable\u2019: \u2018my_value\u2019}</p>\n</dd>\n<dt class=\"field-even\">bypass-cache (Bool, optional)</dt>\n<dd class=\"field-even\"><p>If set, bypass the adapter-level cache of database state</p>\n<p><strong>Default Value:</strong> False</p>\n</dd>\n<dt class=\"field-odd\">warn-error (Bool, optional)</dt>\n<dd class=\"field-odd\"><p>If dbt would normally warn, instead raise an exception. Examples include \u2013models that selects nothing, deprecations, configurations with no associated models, invalid test configurations, and missing sources/refs in tests.</p>\n<p><strong>Default Value:</strong> False</p>\n</dd>\n<dt class=\"field-even\">dbt_executable (dagster.StringSource, optional)</dt>\n<dd class=\"field-even\"><p>Path to the dbt executable. Default is dbt</p>\n<p><strong>Default Value:</strong> \u2018dbt\u2019</p>\n</dd>\n<dt class=\"field-odd\">ignore_handled_error (Bool, optional)</dt>\n<dd class=\"field-odd\"><p>When True, will not raise an exception when the dbt CLI returns error code 1. Default is False.</p>\n<p><strong>Default Value:</strong> False</p>\n</dd>\n<dt class=\"field-even\">target-path (dagster.StringSource, optional)</dt>\n<dd class=\"field-even\"><p>The directory path for target if different from the default <cite>target-path</cite> in your dbt project configuration file.</p>\n<p><strong>Default Value:</strong> \u2018target\u2019</p>\n</dd>\n<dt class=\"field-odd\">docs_url (dagster.StringSource, optional)</dt>\n<dd class=\"field-odd\"><p>The url for where dbt docs are being served for this project.</p>\n</dd>\n<dt class=\"field-even\">select (Union[List[String], None], optional)</dt>\n<dd class=\"field-even\"><p>Specify the sources to snapshot freshness.</p>\n<p><strong>Default Value:</strong> None</p>\n</dd>\n<dt class=\"field-odd\">output (dagster.StringSource, optional)</dt>\n<dd class=\"field-odd\"><p>Specify the output path for the json report. By default, outputs to target/sources.json</p>\n</dd>\n<dt class=\"field-even\">threads (Union[Int, None], optional)</dt>\n<dd class=\"field-even\"><p>Specify number of threads to use while executing models. Overrides settings in profiles.yml.</p>\n<p><strong>Default Value:</strong> None</p>\n</dd>\n</dl>\n</details><p>This solid executes <code class=\"docutils literal notranslate\"><span class=\"pre\">dbt</span> <span class=\"pre\">source</span> <span class=\"pre\">snapshot-freshness</span></code> via the dbt CLI.</p>\n</dd></dl>\n\n<dl class=\"py data\">\n<dt id=\"dagster_dbt.dbt_cli_test\">\n<code class=\"sig-prename descclassname\"><span class=\"pre\">dagster_dbt.</span></code><code class=\"sig-name descname\"><span class=\"pre\">dbt_cli_test</span></code><em class=\"property\"> <span class=\"pre\">=</span> <span class=\"pre\">&lt;dagster.core.definitions.solid_definition.SolidDefinition</span> <span class=\"pre\">object&gt;</span></em><a class=\"reference internal\" href=\"../../../../../_modules/dagster_dbt/cli/solids#dbt_cli_test\"><span class=\"viewcode-link\"><span class=\"pre\">[source]</span></span></a><a class=\"headerlink\" href=\"#dagster_dbt.dbt_cli_test\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><div class=\"line-block\">\n<div class=\"line\"><br /></div>\n</div>\n<details class=\"summary-config-schema\">\n<summary>Config Schema:</summary><dl class=\"field-list\">\n<dt class=\"field-odd\">project-dir (dagster.StringSource, optional)</dt>\n<dd class=\"field-odd\"><p>Which directory to look in for the dbt_project.yml file. Default is the current working directory and its parents.</p>\n<p><strong>Default Value:</strong> \u2018.\u2019</p>\n</dd>\n<dt class=\"field-even\">profiles-dir (dagster.StringSource, optional)</dt>\n<dd class=\"field-even\"><p>Which directory to look in for the profiles.yml file. Default = $DBT_PROFILES_DIR or $HOME/.dbt</p>\n</dd>\n<dt class=\"field-odd\">profile (dagster.StringSource, optional)</dt>\n<dd class=\"field-odd\"><p>Which profile to load. Overrides setting in dbt_project.yml.</p>\n</dd>\n<dt class=\"field-even\">target (dagster.StringSource, optional)</dt>\n<dd class=\"field-even\"><p>Which target to load for the given profile.</p>\n</dd>\n<dt class=\"field-odd\">vars (permissive dict, optional)</dt>\n<dd class=\"field-odd\"><p>Supply variables to the project. This argument overrides variables defined in your dbt_project.yml file. This argument should be a dictionary, eg. {\u2018my_variable\u2019: \u2018my_value\u2019}</p>\n</dd>\n<dt class=\"field-even\">bypass-cache (Bool, optional)</dt>\n<dd class=\"field-even\"><p>If set, bypass the adapter-level cache of database state</p>\n<p><strong>Default Value:</strong> False</p>\n</dd>\n<dt class=\"field-odd\">warn-error (Bool, optional)</dt>\n<dd class=\"field-odd\"><p>If dbt would normally warn, instead raise an exception. Examples include \u2013models that selects nothing, deprecations, configurations with no associated models, invalid test configurations, and missing sources/refs in tests.</p>\n<p><strong>Default Value:</strong> False</p>\n</dd>\n<dt class=\"field-even\">dbt_executable (dagster.StringSource, optional)</dt>\n<dd class=\"field-even\"><p>Path to the dbt executable. Default is dbt</p>\n<p><strong>Default Value:</strong> \u2018dbt\u2019</p>\n</dd>\n<dt class=\"field-odd\">ignore_handled_error (Bool, optional)</dt>\n<dd class=\"field-odd\"><p>When True, will not raise an exception when the dbt CLI returns error code 1. Default is False.</p>\n<p><strong>Default Value:</strong> False</p>\n</dd>\n<dt class=\"field-even\">target-path (dagster.StringSource, optional)</dt>\n<dd class=\"field-even\"><p>The directory path for target if different from the default <cite>target-path</cite> in your dbt project configuration file.</p>\n<p><strong>Default Value:</strong> \u2018target\u2019</p>\n</dd>\n<dt class=\"field-odd\">docs_url (dagster.StringSource, optional)</dt>\n<dd class=\"field-odd\"><p>The url for where dbt docs are being served for this project.</p>\n</dd>\n<dt class=\"field-even\">data (Bool, optional)</dt>\n<dd class=\"field-even\"><p>Run data tests defined in \u201ctests\u201d directory.</p>\n<p><strong>Default Value:</strong> False</p>\n</dd>\n<dt class=\"field-odd\">schema (Bool, optional)</dt>\n<dd class=\"field-odd\"><p>Run constraint validations from schema.yml files.</p>\n<p><strong>Default Value:</strong> False</p>\n</dd>\n<dt class=\"field-even\">fail-fast (Bool, optional)</dt>\n<dd class=\"field-even\"><p>Stop execution upon a first test failure.</p>\n<p><strong>Default Value:</strong> False</p>\n</dd>\n<dt class=\"field-odd\">threads (Union[Int, None], optional)</dt>\n<dd class=\"field-odd\"><p>Specify number of threads to use while executing models. Overrides settings in profiles.yml.</p>\n<p><strong>Default Value:</strong> None</p>\n</dd>\n<dt class=\"field-even\">models (Union[List[String], None], optional)</dt>\n<dd class=\"field-even\"><p>The dbt models to run.</p>\n<p><strong>Default Value:</strong> None</p>\n</dd>\n<dt class=\"field-odd\">exclude (Union[List[String], None], optional)</dt>\n<dd class=\"field-odd\"><p>The dbt models to exclude.</p>\n<p><strong>Default Value:</strong> None</p>\n</dd>\n</dl>\n</details><p>This solid executes <code class=\"docutils literal notranslate\"><span class=\"pre\">dbt</span> <span class=\"pre\">test</span></code> via the dbt CLI. See the solid definition for available\nparameters.</p>\n</dd></dl>\n\n</div>\n<div class=\"section\" id=\"rpc-solids\">\n<h3>RPC Solids<a class=\"headerlink\" href=\"#rpc-solids\" title=\"Permalink to this headline\">\u00b6</a></h3>\n<dl class=\"py function\">\n<dt id=\"dagster_dbt.create_dbt_rpc_run_sql_solid\">\n<code class=\"sig-prename descclassname\"><span class=\"pre\">dagster_dbt.</span></code><code class=\"sig-name descname\"><span class=\"pre\">create_dbt_rpc_run_sql_solid</span></code><span class=\"sig-paren\">(</span><em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">name</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">output_def</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">None</span></span></em>, <em class=\"sig-param\"><span class=\"o\"><span class=\"pre\">**</span></span><span class=\"n\"><span class=\"pre\">kwargs</span></span></em><span class=\"sig-paren\">)</span><a class=\"reference internal\" href=\"../../../../../_modules/dagster_dbt/rpc/solids#create_dbt_rpc_run_sql_solid\"><span class=\"viewcode-link\"><span class=\"pre\">[source]</span></span></a><a class=\"headerlink\" href=\"#dagster_dbt.create_dbt_rpc_run_sql_solid\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>This function is a factory which constructs a solid that will copy the results of a SQL query\nrun within the context of a dbt project to a pandas <code class=\"docutils literal notranslate\"><span class=\"pre\">DataFrame</span></code>.</p>\n<p>Any kwargs passed to this function will be passed along to the underlying <a class=\"reference internal\" href=\"../../solids#dagster.solid\" title=\"dagster.solid\"><code class=\"xref py py-func docutils literal notranslate\"><span class=\"pre\">&#64;solid</span></code></a> decorator. However, note that overriding <code class=\"docutils literal notranslate\"><span class=\"pre\">config_schema</span></code>, <code class=\"docutils literal notranslate\"><span class=\"pre\">input_defs</span></code>, and\n<code class=\"docutils literal notranslate\"><span class=\"pre\">required_resource_keys</span></code> is not allowed and will throw a <a class=\"reference internal\" href=\"../../errors#dagster.DagsterInvalidDefinitionError\" title=\"dagster.DagsterInvalidDefinitionError\"><code class=\"xref py py-class docutils literal notranslate\"><span class=\"pre\">DagsterInvalidDefinitionError</span></code></a>.</p>\n<p>If you would like to configure this solid with different config fields, you could consider using\n<a class=\"reference internal\" href=\"../../solids#dagster.composite_solid\" title=\"dagster.composite_solid\"><code class=\"xref py py-func docutils literal notranslate\"><span class=\"pre\">&#64;composite_solid</span></code></a> to wrap this solid.</p>\n<dl class=\"field-list simple\">\n<dt class=\"field-odd\">Parameters</dt>\n<dd class=\"field-odd\"><ul class=\"simple\">\n<li><p><strong>name</strong> (<a class=\"reference external\" href=\"https://docs.python.org/3/library/stdtypes.html#str\" title=\"(in Python v3.8)\"><em>str</em></a>) \u2013 The name of this solid.</p></li>\n<li><p><strong>output_def</strong> (<a class=\"reference internal\" href=\"../../solids#dagster.OutputDefinition\" title=\"dagster.OutputDefinition\"><em>OutputDefinition</em></a><em>, </em><em>optional</em>) \u2013 The <a class=\"reference internal\" href=\"../../solids#dagster.OutputDefinition\" title=\"dagster.OutputDefinition\"><code class=\"xref py py-class docutils literal notranslate\"><span class=\"pre\">OutputDefinition</span></code></a> for the solid. This value should always be a representation\nof a pandas <code class=\"docutils literal notranslate\"><span class=\"pre\">DataFrame</span></code>. If not specified, the solid will default to an\n<a class=\"reference internal\" href=\"../../solids#dagster.OutputDefinition\" title=\"dagster.OutputDefinition\"><code class=\"xref py py-class docutils literal notranslate\"><span class=\"pre\">OutputDefinition</span></code></a> named \u201cdf\u201d with a <code class=\"docutils literal notranslate\"><span class=\"pre\">DataFrame</span></code>\ndagster type.</p></li>\n</ul>\n</dd>\n<dt class=\"field-even\">Returns</dt>\n<dd class=\"field-even\"><p>Returns the constructed solid definition.</p>\n</dd>\n<dt class=\"field-odd\">Return type</dt>\n<dd class=\"field-odd\"><p><a class=\"reference internal\" href=\"../../solids#dagster.SolidDefinition\" title=\"dagster.SolidDefinition\">SolidDefinition</a></p>\n</dd>\n</dl>\n</dd></dl>\n\n<dl class=\"py data\">\n<dt id=\"dagster_dbt.dbt_rpc_compile_sql\">\n<code class=\"sig-prename descclassname\"><span class=\"pre\">dagster_dbt.</span></code><code class=\"sig-name descname\"><span class=\"pre\">dbt_rpc_compile_sql</span></code><em class=\"property\"> <span class=\"pre\">=</span> <span class=\"pre\">&lt;dagster.core.definitions.solid_definition.SolidDefinition</span> <span class=\"pre\">object&gt;</span></em><a class=\"reference internal\" href=\"../../../../../_modules/dagster_dbt/rpc/solids#dbt_rpc_compile_sql\"><span class=\"viewcode-link\"><span class=\"pre\">[source]</span></span></a><a class=\"headerlink\" href=\"#dagster_dbt.dbt_rpc_compile_sql\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><div class=\"line-block\">\n<div class=\"line\"><br /></div>\n</div>\n<details class=\"summary-config-schema\">\n<summary>Config Schema:</summary><dl class=\"field-list\">\n<dt class=\"field-odd\">name (String)</dt>\n<dd class=\"field-odd\"><p></p></dd>\n<dt class=\"field-even\">interval (Int, optional)</dt>\n<dd class=\"field-even\"><p>The interval (in seconds) at which to poll the dbt rpc process.</p>\n<p><strong>Default Value:</strong> 10</p>\n</dd>\n<dt class=\"field-odd\">logs (Bool, optional)</dt>\n<dd class=\"field-odd\"><p>Whether or not to return logs from the process.</p>\n<p><strong>Default Value:</strong> True</p>\n</dd>\n<dt class=\"field-even\">yield_materializations (Bool, optional)</dt>\n<dd class=\"field-even\"><p>If True, materializations corresponding to the results of the dbt operation will be yielded when the solid executes. Default: True</p>\n<p><strong>Default Value:</strong> True</p>\n</dd>\n</dl>\n</details><p>This solid sends the <code class=\"docutils literal notranslate\"><span class=\"pre\">dbt</span> <span class=\"pre\">compile</span></code> command to a dbt RPC server and returns the request\ntoken.</p>\n<p>This dbt RPC solid is asynchronous. The request token can be used in subsequent RPC requests to\npoll the progress of the running dbt process.</p>\n</dd></dl>\n\n<dl class=\"py data\">\n<dt id=\"dagster_dbt.dbt_rpc_run\">\n<code class=\"sig-prename descclassname\"><span class=\"pre\">dagster_dbt.</span></code><code class=\"sig-name descname\"><span class=\"pre\">dbt_rpc_run</span></code><em class=\"property\"> <span class=\"pre\">=</span> <span class=\"pre\">&lt;dagster.core.definitions.solid_definition.SolidDefinition</span> <span class=\"pre\">object&gt;</span></em><a class=\"reference internal\" href=\"../../../../../_modules/dagster_dbt/rpc/solids#dbt_rpc_run\"><span class=\"viewcode-link\"><span class=\"pre\">[source]</span></span></a><a class=\"headerlink\" href=\"#dagster_dbt.dbt_rpc_run\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><div class=\"line-block\">\n<div class=\"line\"><br /></div>\n</div>\n<details class=\"summary-config-schema\">\n<summary>Config Schema:</summary><dl class=\"field-list\">\n<dt class=\"field-odd\">models (Union[List[String], None], optional)</dt>\n<dd class=\"field-odd\"><p>The dbt models to run.</p>\n<p><strong>Default Value:</strong> None</p>\n</dd>\n<dt class=\"field-even\">exclude (Union[List[String], None], optional)</dt>\n<dd class=\"field-even\"><p>The dbt models to exclude.</p>\n<p><strong>Default Value:</strong> None</p>\n</dd>\n</dl>\n</details><p>This solid sends the <code class=\"docutils literal notranslate\"><span class=\"pre\">dbt</span> <span class=\"pre\">run</span></code> command to a dbt RPC server and returns the request token.</p>\n<p>This dbt RPC solid is asynchronous. The request token can be used in subsequent RPC requests to\npoll the progress of the running dbt process.</p>\n</dd></dl>\n\n<dl class=\"py data\">\n<dt id=\"dagster_dbt.dbt_rpc_run_and_wait\">\n<code class=\"sig-prename descclassname\"><span class=\"pre\">dagster_dbt.</span></code><code class=\"sig-name descname\"><span class=\"pre\">dbt_rpc_run_and_wait</span></code><em class=\"property\"> <span class=\"pre\">=</span> <span class=\"pre\">&lt;dagster.core.definitions.solid_definition.SolidDefinition</span> <span class=\"pre\">object&gt;</span></em><a class=\"reference internal\" href=\"../../../../../_modules/dagster_dbt/rpc/solids#dbt_rpc_run_and_wait\"><span class=\"viewcode-link\"><span class=\"pre\">[source]</span></span></a><a class=\"headerlink\" href=\"#dagster_dbt.dbt_rpc_run_and_wait\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><div class=\"line-block\">\n<div class=\"line\"><br /></div>\n</div>\n<details class=\"summary-config-schema\">\n<summary>Config Schema:</summary><dl class=\"field-list\">\n<dt class=\"field-odd\">models (Union[List[String], None], optional)</dt>\n<dd class=\"field-odd\"><p>The dbt models to run.</p>\n<p><strong>Default Value:</strong> None</p>\n</dd>\n<dt class=\"field-even\">exclude (Union[List[String], None], optional)</dt>\n<dd class=\"field-even\"><p>The dbt models to exclude.</p>\n<p><strong>Default Value:</strong> None</p>\n</dd>\n<dt class=\"field-odd\">full_refresh (Bool, optional)</dt>\n<dd class=\"field-odd\"><p>Whether or not to perform a \u2013full-refresh.</p>\n<p><strong>Default Value:</strong> False</p>\n</dd>\n<dt class=\"field-even\">fail_fast (Bool, optional)</dt>\n<dd class=\"field-even\"><p>Whether or not to \u2013fail-fast.</p>\n<p><strong>Default Value:</strong> False</p>\n</dd>\n<dt class=\"field-odd\">warn_error (Bool, optional)</dt>\n<dd class=\"field-odd\"><p>Whether or not to \u2013warn-error.</p>\n<p><strong>Default Value:</strong> False</p>\n</dd>\n<dt class=\"field-even\">interval (Int, optional)</dt>\n<dd class=\"field-even\"><p>The interval (in seconds) at which to poll the dbt rpc process.</p>\n<p><strong>Default Value:</strong> 10</p>\n</dd>\n<dt class=\"field-odd\">logs (Bool, optional)</dt>\n<dd class=\"field-odd\"><p>Whether or not to return logs from the process.</p>\n<p><strong>Default Value:</strong> True</p>\n</dd>\n<dt class=\"field-even\">task_tags (permissive dict, optional)</dt>\n<dd class=\"field-even\"><details class=\"summary-default-value\">\n<summary>Default Value:</summary><div class=\"highlight-javascript notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"p\">{}</span>\n</pre></div>\n</div>\n</details></dd>\n<dt class=\"field-odd\">max_retries (Int, optional)</dt>\n<dd class=\"field-odd\"><p><strong>Default Value:</strong> 5</p>\n</dd>\n<dt class=\"field-even\">retry_interval (Int, optional)</dt>\n<dd class=\"field-even\"><p><strong>Default Value:</strong> 120</p>\n</dd>\n<dt class=\"field-odd\">yield_materializations (Bool, optional)</dt>\n<dd class=\"field-odd\"><p>If True, materializations corresponding to the results of the dbt operation will be yielded when the solid executes. Default: True</p>\n<p><strong>Default Value:</strong> True</p>\n</dd>\n</dl>\n</details><p>This solid sends the <code class=\"docutils literal notranslate\"><span class=\"pre\">dbt</span> <span class=\"pre\">run</span></code> command to a dbt RPC server and returns the result of the\nexecuted dbt process.</p>\n<p>This dbt RPC solid is synchronous, and will periodically poll the dbt RPC server until the dbt\nprocess is completed.</p>\n</dd></dl>\n\n<dl class=\"py data\">\n<dt id=\"dagster_dbt.dbt_rpc_run_operation\">\n<code class=\"sig-prename descclassname\"><span class=\"pre\">dagster_dbt.</span></code><code class=\"sig-name descname\"><span class=\"pre\">dbt_rpc_run_operation</span></code><em class=\"property\"> <span class=\"pre\">=</span> <span class=\"pre\">&lt;dagster.core.definitions.solid_definition.SolidDefinition</span> <span class=\"pre\">object&gt;</span></em><a class=\"reference internal\" href=\"../../../../../_modules/dagster_dbt/rpc/solids#dbt_rpc_run_operation\"><span class=\"viewcode-link\"><span class=\"pre\">[source]</span></span></a><a class=\"headerlink\" href=\"#dagster_dbt.dbt_rpc_run_operation\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><div class=\"line-block\">\n<div class=\"line\"><br /></div>\n</div>\n<details class=\"summary-config-schema\">\n<summary>Config Schema:</summary><dl class=\"field-list\">\n<dt class=\"field-odd\">macro (String)</dt>\n<dd class=\"field-odd\"><p>The dbt macro to invoke as a run operation</p>\n</dd>\n<dt class=\"field-even\">args (Union[permissive dict, None], optional)</dt>\n<dd class=\"field-even\"><p>Arguments to supply to the invoked macro.</p>\n<p><strong>Default Value:</strong> None</p>\n</dd>\n</dl>\n</details><p>This solid sends the <code class=\"docutils literal notranslate\"><span class=\"pre\">dbt</span> <span class=\"pre\">run-operation</span></code> command to a dbt RPC server and returns the\nrequest token.</p>\n<p>This dbt RPC solid is asynchronous. The request token can be used in subsequent RPC requests to\npoll the progress of the running dbt process.</p>\n</dd></dl>\n\n<dl class=\"py data\">\n<dt id=\"dagster_dbt.dbt_rpc_run_operation_and_wait\">\n<code class=\"sig-prename descclassname\"><span class=\"pre\">dagster_dbt.</span></code><code class=\"sig-name descname\"><span class=\"pre\">dbt_rpc_run_operation_and_wait</span></code><em class=\"property\"> <span class=\"pre\">=</span> <span class=\"pre\">&lt;dagster.core.definitions.solid_definition.SolidDefinition</span> <span class=\"pre\">object&gt;</span></em><a class=\"reference internal\" href=\"../../../../../_modules/dagster_dbt/rpc/solids#dbt_rpc_run_operation_and_wait\"><span class=\"viewcode-link\"><span class=\"pre\">[source]</span></span></a><a class=\"headerlink\" href=\"#dagster_dbt.dbt_rpc_run_operation_and_wait\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><div class=\"line-block\">\n<div class=\"line\"><br /></div>\n</div>\n<details class=\"summary-config-schema\">\n<summary>Config Schema:</summary><dl class=\"field-list\">\n<dt class=\"field-odd\">macro (String)</dt>\n<dd class=\"field-odd\"><p>The dbt macro to invoke as a run operation</p>\n</dd>\n<dt class=\"field-even\">args (Union[permissive dict, None], optional)</dt>\n<dd class=\"field-even\"><p>Arguments to supply to the invoked macro.</p>\n<p><strong>Default Value:</strong> None</p>\n</dd>\n<dt class=\"field-odd\">interval (Int, optional)</dt>\n<dd class=\"field-odd\"><p>The interval (in seconds) at which to poll the dbt rpc process.</p>\n<p><strong>Default Value:</strong> 10</p>\n</dd>\n<dt class=\"field-even\">logs (Bool, optional)</dt>\n<dd class=\"field-even\"><p>Whether or not to return logs from the process.</p>\n<p><strong>Default Value:</strong> True</p>\n</dd>\n<dt class=\"field-odd\">yield_materializations (Bool, optional)</dt>\n<dd class=\"field-odd\"><p>If True, materializations corresponding to the results of the dbt operation will be yielded when the solid executes. Default: True</p>\n<p><strong>Default Value:</strong> True</p>\n</dd>\n</dl>\n</details><p>This solid sends the <code class=\"docutils literal notranslate\"><span class=\"pre\">dbt</span> <span class=\"pre\">run-operation</span></code> command to a dbt RPC server and returns the\nresult of the executed dbt process.</p>\n<p>This dbt RPC solid is synchronous, and will periodically poll the dbt RPC server until the dbt\nprocess is completed.</p>\n</dd></dl>\n\n<dl class=\"py data\">\n<dt id=\"dagster_dbt.dbt_rpc_snapshot\">\n<code class=\"sig-prename descclassname\"><span class=\"pre\">dagster_dbt.</span></code><code class=\"sig-name descname\"><span class=\"pre\">dbt_rpc_snapshot</span></code><em class=\"property\"> <span class=\"pre\">=</span> <span class=\"pre\">&lt;dagster.core.definitions.solid_definition.SolidDefinition</span> <span class=\"pre\">object&gt;</span></em><a class=\"reference internal\" href=\"../../../../../_modules/dagster_dbt/rpc/solids#dbt_rpc_snapshot\"><span class=\"viewcode-link\"><span class=\"pre\">[source]</span></span></a><a class=\"headerlink\" href=\"#dagster_dbt.dbt_rpc_snapshot\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><div class=\"line-block\">\n<div class=\"line\"><br /></div>\n</div>\n<details class=\"summary-config-schema\">\n<summary>Config Schema:</summary><dl class=\"field-list\">\n<dt class=\"field-odd\">select (Union[List[String], None], optional)</dt>\n<dd class=\"field-odd\"><p>The dbt snapshot files to snapshot.</p>\n<p><strong>Default Value:</strong> None</p>\n</dd>\n<dt class=\"field-even\">exclude (Union[List[String], None], optional)</dt>\n<dd class=\"field-even\"><p>The dbt snapshot files to exclude from the snapshot.</p>\n<p><strong>Default Value:</strong> None</p>\n</dd>\n</dl>\n</details><p>This solid sends the <code class=\"docutils literal notranslate\"><span class=\"pre\">dbt</span> <span class=\"pre\">snapshot</span></code> command to a dbt RPC server and returns the\nrequest token.</p>\n<p>This dbt RPC solid is asynchronous. The request token can be used in subsequent RPC requests to\npoll the progress of the running dbt process.</p>\n</dd></dl>\n\n<dl class=\"py data\">\n<dt id=\"dagster_dbt.dbt_rpc_snapshot_and_wait\">\n<code class=\"sig-prename descclassname\"><span class=\"pre\">dagster_dbt.</span></code><code class=\"sig-name descname\"><span class=\"pre\">dbt_rpc_snapshot_and_wait</span></code><em class=\"property\"> <span class=\"pre\">=</span> <span class=\"pre\">&lt;dagster.core.definitions.solid_definition.SolidDefinition</span> <span class=\"pre\">object&gt;</span></em><a class=\"reference internal\" href=\"../../../../../_modules/dagster_dbt/rpc/solids#dbt_rpc_snapshot_and_wait\"><span class=\"viewcode-link\"><span class=\"pre\">[source]</span></span></a><a class=\"headerlink\" href=\"#dagster_dbt.dbt_rpc_snapshot_and_wait\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><div class=\"line-block\">\n<div class=\"line\"><br /></div>\n</div>\n<details class=\"summary-config-schema\">\n<summary>Config Schema:</summary><dl class=\"field-list\">\n<dt class=\"field-odd\">select (Union[List[String], None], optional)</dt>\n<dd class=\"field-odd\"><p>The dbt snapshot files to snapshot.</p>\n<p><strong>Default Value:</strong> None</p>\n</dd>\n<dt class=\"field-even\">exclude (Union[List[String], None], optional)</dt>\n<dd class=\"field-even\"><p>The dbt snapshot files to exclude from the snapshot.</p>\n<p><strong>Default Value:</strong> None</p>\n</dd>\n<dt class=\"field-odd\">interval (Int, optional)</dt>\n<dd class=\"field-odd\"><p>The interval (in seconds) at which to poll the dbt rpc process.</p>\n<p><strong>Default Value:</strong> 10</p>\n</dd>\n<dt class=\"field-even\">logs (Bool, optional)</dt>\n<dd class=\"field-even\"><p>Whether or not to return logs from the process.</p>\n<p><strong>Default Value:</strong> True</p>\n</dd>\n<dt class=\"field-odd\">task_tags (permissive dict, optional)</dt>\n<dd class=\"field-odd\"><details class=\"summary-default-value\">\n<summary>Default Value:</summary><div class=\"highlight-javascript notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"p\">{}</span>\n</pre></div>\n</div>\n</details></dd>\n<dt class=\"field-even\">max_retries (Int, optional)</dt>\n<dd class=\"field-even\"><p><strong>Default Value:</strong> 5</p>\n</dd>\n<dt class=\"field-odd\">retry_interval (Int, optional)</dt>\n<dd class=\"field-odd\"><p><strong>Default Value:</strong> 120</p>\n</dd>\n<dt class=\"field-even\">yield_materializations (Bool, optional)</dt>\n<dd class=\"field-even\"><p>If True, materializations corresponding to the results of the dbt operation will be yielded when the solid executes. Default: True</p>\n<p><strong>Default Value:</strong> True</p>\n</dd>\n</dl>\n</details><p>This solid sends the <code class=\"docutils literal notranslate\"><span class=\"pre\">dbt</span> <span class=\"pre\">snapshot</span></code> command to a dbt RPC server and returns the result of\nthe executed dbt process.</p>\n<p>This dbt RPC solid is synchronous, and will periodically poll the dbt RPC server until the dbt\nprocess is completed.</p>\n</dd></dl>\n\n<dl class=\"py data\">\n<dt id=\"dagster_dbt.dbt_rpc_snapshot_freshness\">\n<code class=\"sig-prename descclassname\"><span class=\"pre\">dagster_dbt.</span></code><code class=\"sig-name descname\"><span class=\"pre\">dbt_rpc_snapshot_freshness</span></code><em class=\"property\"> <span class=\"pre\">=</span> <span class=\"pre\">&lt;dagster.core.definitions.solid_definition.SolidDefinition</span> <span class=\"pre\">object&gt;</span></em><a class=\"reference internal\" href=\"../../../../../_modules/dagster_dbt/rpc/solids#dbt_rpc_snapshot_freshness\"><span class=\"viewcode-link\"><span class=\"pre\">[source]</span></span></a><a class=\"headerlink\" href=\"#dagster_dbt.dbt_rpc_snapshot_freshness\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><div class=\"line-block\">\n<div class=\"line\"><br /></div>\n</div>\n<details class=\"summary-config-schema\">\n<summary>Config Schema:</summary><dl class=\"field-list\">\n<dt class=\"field-odd\">select (Union[List[String], None], optional)</dt>\n<dd class=\"field-odd\"><p>The dbt sources to snapshot-freshness for.</p>\n<p><strong>Default Value:</strong> None</p>\n</dd>\n<dt class=\"field-even\">warn_error (Bool, optional)</dt>\n<dd class=\"field-even\"><p>Whether or not to \u2013warn-error.</p>\n<p><strong>Default Value:</strong> False</p>\n</dd>\n</dl>\n</details><p>This solid sends the <code class=\"docutils literal notranslate\"><span class=\"pre\">dbt</span> <span class=\"pre\">source</span> <span class=\"pre\">snapshot-freshness</span></code> command to a dbt RPC server and\nreturns the request token.</p>\n<p>This dbt RPC solid is asynchronous. The request token can be used in subsequent RPC requests to\npoll the progress of the running dbt process.</p>\n</dd></dl>\n\n<dl class=\"py data\">\n<dt id=\"dagster_dbt.dbt_rpc_snapshot_freshness_and_wait\">\n<code class=\"sig-prename descclassname\"><span class=\"pre\">dagster_dbt.</span></code><code class=\"sig-name descname\"><span class=\"pre\">dbt_rpc_snapshot_freshness_and_wait</span></code><em class=\"property\"> <span class=\"pre\">=</span> <span class=\"pre\">&lt;dagster.core.definitions.solid_definition.SolidDefinition</span> <span class=\"pre\">object&gt;</span></em><a class=\"reference internal\" href=\"../../../../../_modules/dagster_dbt/rpc/solids#dbt_rpc_snapshot_freshness_and_wait\"><span class=\"viewcode-link\"><span class=\"pre\">[source]</span></span></a><a class=\"headerlink\" href=\"#dagster_dbt.dbt_rpc_snapshot_freshness_and_wait\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><div class=\"line-block\">\n<div class=\"line\"><br /></div>\n</div>\n<details class=\"summary-config-schema\">\n<summary>Config Schema:</summary><dl class=\"field-list\">\n<dt class=\"field-odd\">select (Union[List[String], None], optional)</dt>\n<dd class=\"field-odd\"><p>The dbt sources to snapshot-freshness for.</p>\n<p><strong>Default Value:</strong> None</p>\n</dd>\n<dt class=\"field-even\">warn_error (Bool, optional)</dt>\n<dd class=\"field-even\"><p>Whether or not to \u2013warn-error.</p>\n<p><strong>Default Value:</strong> False</p>\n</dd>\n<dt class=\"field-odd\">interval (Int, optional)</dt>\n<dd class=\"field-odd\"><p>The interval (in seconds) at which to poll the dbt rpc process.</p>\n<p><strong>Default Value:</strong> 10</p>\n</dd>\n<dt class=\"field-even\">logs (Bool, optional)</dt>\n<dd class=\"field-even\"><p>Whether or not to return logs from the process.</p>\n<p><strong>Default Value:</strong> True</p>\n</dd>\n<dt class=\"field-odd\">yield_materializations (Bool, optional)</dt>\n<dd class=\"field-odd\"><p>If True, materializations corresponding to the results of the dbt operation will be yielded when the solid executes. Default: True</p>\n<p><strong>Default Value:</strong> True</p>\n</dd>\n</dl>\n</details><p>This solid sends the <code class=\"docutils literal notranslate\"><span class=\"pre\">dbt</span> <span class=\"pre\">source</span> <span class=\"pre\">snapshot</span></code> command to a dbt RPC server and returns the\nresult of the executed dbt process.</p>\n<p>This dbt RPC solid is synchronous, and will periodically poll the dbt RPC server until the dbt\nprocess is completed.</p>\n</dd></dl>\n\n<dl class=\"py data\">\n<dt id=\"dagster_dbt.dbt_rpc_test\">\n<code class=\"sig-prename descclassname\"><span class=\"pre\">dagster_dbt.</span></code><code class=\"sig-name descname\"><span class=\"pre\">dbt_rpc_test</span></code><em class=\"property\"> <span class=\"pre\">=</span> <span class=\"pre\">&lt;dagster.core.definitions.solid_definition.SolidDefinition</span> <span class=\"pre\">object&gt;</span></em><a class=\"reference internal\" href=\"../../../../../_modules/dagster_dbt/rpc/solids#dbt_rpc_test\"><span class=\"viewcode-link\"><span class=\"pre\">[source]</span></span></a><a class=\"headerlink\" href=\"#dagster_dbt.dbt_rpc_test\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><div class=\"line-block\">\n<div class=\"line\"><br /></div>\n</div>\n<details class=\"summary-config-schema\">\n<summary>Config Schema:</summary><dl class=\"field-list\">\n<dt class=\"field-odd\">models (Union[List[String], None], optional)</dt>\n<dd class=\"field-odd\"><p>The dbt models to test.</p>\n<p><strong>Default Value:</strong> None</p>\n</dd>\n<dt class=\"field-even\">exclude (Union[List[String], None], optional)</dt>\n<dd class=\"field-even\"><p>The dbt models to exclude.</p>\n<p><strong>Default Value:</strong> None</p>\n</dd>\n<dt class=\"field-odd\">data (Bool, optional)</dt>\n<dd class=\"field-odd\"><p>Whether or not to run custom data tests.</p>\n<p><strong>Default Value:</strong> True</p>\n</dd>\n<dt class=\"field-even\">schema (Bool, optional)</dt>\n<dd class=\"field-even\"><p>Whether or not to run schema tests.</p>\n<p><strong>Default Value:</strong> True</p>\n</dd>\n</dl>\n</details><p>This solid sends the <code class=\"docutils literal notranslate\"><span class=\"pre\">dbt</span> <span class=\"pre\">test</span></code> command to a dbt RPC server and returns the request token.</p>\n<p>This dbt RPC solid is asynchronous. The request token can be used in subsequent RPC requests to\npoll the progress of the running dbt process.</p>\n</dd></dl>\n\n<dl class=\"py data\">\n<dt id=\"dagster_dbt.dbt_rpc_test_and_wait\">\n<code class=\"sig-prename descclassname\"><span class=\"pre\">dagster_dbt.</span></code><code class=\"sig-name descname\"><span class=\"pre\">dbt_rpc_test_and_wait</span></code><em class=\"property\"> <span class=\"pre\">=</span> <span class=\"pre\">&lt;dagster.core.definitions.solid_definition.SolidDefinition</span> <span class=\"pre\">object&gt;</span></em><a class=\"reference internal\" href=\"../../../../../_modules/dagster_dbt/rpc/solids#dbt_rpc_test_and_wait\"><span class=\"viewcode-link\"><span class=\"pre\">[source]</span></span></a><a class=\"headerlink\" href=\"#dagster_dbt.dbt_rpc_test_and_wait\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><div class=\"line-block\">\n<div class=\"line\"><br /></div>\n</div>\n<details class=\"summary-config-schema\">\n<summary>Config Schema:</summary><dl class=\"field-list\">\n<dt class=\"field-odd\">models (Union[List[String], None], optional)</dt>\n<dd class=\"field-odd\"><p>The dbt models to test.</p>\n<p><strong>Default Value:</strong> None</p>\n</dd>\n<dt class=\"field-even\">exclude (Union[List[String], None], optional)</dt>\n<dd class=\"field-even\"><p>The dbt models to exclude.</p>\n<p><strong>Default Value:</strong> None</p>\n</dd>\n<dt class=\"field-odd\">data (Bool, optional)</dt>\n<dd class=\"field-odd\"><p>Whether or not to run custom data tests.</p>\n<p><strong>Default Value:</strong> True</p>\n</dd>\n<dt class=\"field-even\">schema (Bool, optional)</dt>\n<dd class=\"field-even\"><p>Whether or not to run schema tests.</p>\n<p><strong>Default Value:</strong> True</p>\n</dd>\n<dt class=\"field-odd\">interval (Int, optional)</dt>\n<dd class=\"field-odd\"><p>The interval (in seconds) at which to poll the dbt rpc process.</p>\n<p><strong>Default Value:</strong> 10</p>\n</dd>\n<dt class=\"field-even\">logs (Bool, optional)</dt>\n<dd class=\"field-even\"><p>Whether or not to return logs from the process.</p>\n<p><strong>Default Value:</strong> True</p>\n</dd>\n<dt class=\"field-odd\">yield_materializations (Bool, optional)</dt>\n<dd class=\"field-odd\"><p>If True, materializations corresponding to the results of the dbt operation will be yielded when the solid executes. Default: True</p>\n<p><strong>Default Value:</strong> True</p>\n</dd>\n</dl>\n</details><p>This solid sends the <code class=\"docutils literal notranslate\"><span class=\"pre\">dbt</span> <span class=\"pre\">test</span></code> command to a dbt RPC server and returns the result of the\nexecuted dbt process.</p>\n<p>This dbt RPC solid is synchronous, and will periodically poll the dbt RPC server until the dbt\nprocess is completed.</p>\n</dd></dl>\n\n</div>\n</div>\n</div>\n", "current_page_name": "sections/api/apidocs/libraries/dagster-dbt", "customsidebar": null, "display_toc": true, "meta": null, "metatags": "", "next": {"link": "../dagster-fivetran/", "title": "Fivetran (dagster-fivetran)"}, "page_source_suffix": ".rst", "parents": [], "prev": {"link": "../dagster-datadog/", "title": "Datadog (dagster-datadog)"}, "rellinks": [["genindex", "General Index", "I", "index"], ["py-modindex", "Python Module Index", "", "modules"], ["sections/api/apidocs/libraries/dagster-fivetran", "Fivetran (dagster-fivetran)", "N", "next"], ["sections/api/apidocs/libraries/dagster-datadog", "Datadog (dagster-datadog)", "P", "previous"]], "sidebars": ["globaltoc.html", "searchbox.html"], "sourcename": "sections/api/apidocs/libraries/dagster-dbt.rst.txt", "title": "dbt (dagster-dbt)", "toc": "<ul>\n<li><a class=\"reference internal\" href=\"#\">dbt (dagster-dbt)</a><ul>\n<li><a class=\"reference internal\" href=\"#ops\">Ops</a><ul>\n<li><a class=\"reference internal\" href=\"#dbt-core-ops\">dbt Core Ops</a></li>\n<li><a class=\"reference internal\" href=\"#dbt-cloud-ops\">dbt Cloud Ops</a></li>\n</ul>\n</li>\n<li><a class=\"reference internal\" href=\"#resources\">Resources</a><ul>\n<li><a class=\"reference internal\" href=\"#cli-resources\">CLI Resources</a></li>\n<li><a class=\"reference internal\" href=\"#rpc-resources\">RPC Resources</a></li>\n<li><a class=\"reference internal\" href=\"#dbt-cloud-resources\">dbt Cloud Resources</a></li>\n</ul>\n</li>\n<li><a class=\"reference internal\" href=\"#assets\">Assets</a></li>\n<li><a class=\"reference internal\" href=\"#types\">Types</a></li>\n<li><a class=\"reference internal\" href=\"#errors\">Errors</a></li>\n<li><a class=\"reference internal\" href=\"#utils\">Utils</a></li>\n<li><a class=\"reference internal\" href=\"#solids-legacy\">Solids [Legacy]</a><ul>\n<li><a class=\"reference internal\" href=\"#cli-solids\">CLI Solids</a></li>\n<li><a class=\"reference internal\" href=\"#rpc-solids\">RPC Solids</a></li>\n</ul>\n</li>\n</ul>\n</li>\n</ul>\n"}, "dagster-docker": {"alabaster_version": "0.7.12", "body": "<div class=\"section\" id=\"orchestration-on-docker\">\n<h1>Orchestration on Docker<a class=\"headerlink\" href=\"#orchestration-on-docker\" title=\"Permalink to this headline\">\u00b6</a></h1>\n</div>\n<div class=\"section\" id=\"apis\">\n<h1>APIs<a class=\"headerlink\" href=\"#apis\" title=\"Permalink to this headline\">\u00b6</a></h1>\n<dl class=\"py data\">\n<dt id=\"dagster_docker.DockerRunLauncher\">\n<code class=\"sig-prename descclassname\"><span class=\"pre\">dagster_docker.</span></code><code class=\"sig-name descname\"><span class=\"pre\">DockerRunLauncher</span></code><em class=\"property\"> <span class=\"pre\">RunLauncher</span></em><a class=\"reference internal\" href=\"../../../../../_modules/dagster_docker/docker_run_launcher#DockerRunLauncher\"><span class=\"viewcode-link\"><span class=\"pre\">[source]</span></span></a><a class=\"headerlink\" href=\"#dagster_docker.DockerRunLauncher\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><div class=\"line-block\">\n<div class=\"line\"><br /></div>\n</div>\n<details class=\"summary-config-schema\">\n<summary>Config Schema:</summary><dl class=\"field-list\">\n<dt class=\"field-odd\">image (dagster.StringSource, optional)</dt>\n<dd class=\"field-odd\"><p>The docker image to be used if the repository does not specify one.</p>\n</dd>\n<dt class=\"field-even\">network (dagster.StringSource, optional)</dt>\n<dd class=\"field-even\"><p>Name of the network to which to connect the launched container at creation time</p>\n</dd>\n<dt class=\"field-odd\">registry (strict dict, optional)</dt>\n<dd class=\"field-odd\"><p>Information for using a non local/public docker registry</p>\n<details class=\"summary-config-schema\">\n<summary>Config Schema:</summary><dl class=\"field-list simple\">\n<dt class=\"field-odd\">url (dagster.StringSource)</dt>\n<dd class=\"field-odd\"><p></p></dd>\n<dt class=\"field-even\">username (dagster.StringSource)</dt>\n<dd class=\"field-even\"><p></p></dd>\n<dt class=\"field-odd\">password (dagster.StringSource)</dt>\n<dd class=\"field-odd\"><p></p></dd>\n</dl>\n</details></dd>\n<dt class=\"field-even\">env_vars (List[String], optional)</dt>\n<dd class=\"field-even\"><p>The list of environment variables names to include in the docker container. Each can be of the form KEY=VALUE or just KEY (in which case the value will be pulled from the local environment)</p>\n</dd>\n<dt class=\"field-odd\">container_kwargs (permissive dict, optional)</dt>\n<dd class=\"field-odd\"><p>key-value pairs that can be passed into containers.create. See <a class=\"reference external\" href=\"https://docker-py.readthedocs.io/en/stable/containers.html\">https://docker-py.readthedocs.io/en/stable/containers.html</a> for the full list of available options.</p>\n</dd>\n<dt class=\"field-even\">networks (List[dagster.StringSource], optional)</dt>\n<dd class=\"field-even\"><p>Names of the networks to which to connect the launched container at creation time</p>\n</dd>\n</dl>\n</details><p>Launches runs in a Docker container.</p>\n</dd></dl>\n\n<dl class=\"py data\">\n<dt id=\"dagster_docker.docker_executor\">\n<code class=\"sig-prename descclassname\"><span class=\"pre\">dagster_docker.</span></code><code class=\"sig-name descname\"><span class=\"pre\">docker_executor</span></code><em class=\"property\"> <span class=\"pre\">ExecutorDefinition</span></em><a class=\"reference internal\" href=\"../../../../../_modules/dagster_docker/docker_executor#docker_executor\"><span class=\"viewcode-link\"><span class=\"pre\">[source]</span></span></a><a class=\"headerlink\" href=\"#dagster_docker.docker_executor\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><div class=\"line-block\">\n<div class=\"line\"><br /></div>\n</div>\n<details class=\"summary-config-schema\">\n<summary>Config Schema:</summary><dl class=\"field-list\">\n<dt class=\"field-odd\">image (dagster.StringSource, optional)</dt>\n<dd class=\"field-odd\"><p>The docker image to be used if the repository does not specify one.</p>\n</dd>\n<dt class=\"field-even\">network (dagster.StringSource, optional)</dt>\n<dd class=\"field-even\"><p>Name of the network to which to connect the launched container at creation time</p>\n</dd>\n<dt class=\"field-odd\">registry (strict dict, optional)</dt>\n<dd class=\"field-odd\"><p>Information for using a non local/public docker registry</p>\n<details class=\"summary-config-schema\">\n<summary>Config Schema:</summary><dl class=\"field-list simple\">\n<dt class=\"field-odd\">url (dagster.StringSource)</dt>\n<dd class=\"field-odd\"><p></p></dd>\n<dt class=\"field-even\">username (dagster.StringSource)</dt>\n<dd class=\"field-even\"><p></p></dd>\n<dt class=\"field-odd\">password (dagster.StringSource)</dt>\n<dd class=\"field-odd\"><p></p></dd>\n</dl>\n</details></dd>\n<dt class=\"field-even\">env_vars (List[String], optional)</dt>\n<dd class=\"field-even\"><p>The list of environment variables names to include in the docker container. Each can be of the form KEY=VALUE or just KEY (in which case the value will be pulled from the local environment)</p>\n</dd>\n<dt class=\"field-odd\">container_kwargs (permissive dict, optional)</dt>\n<dd class=\"field-odd\"><p>key-value pairs that can be passed into containers.create. See <a class=\"reference external\" href=\"https://docker-py.readthedocs.io/en/stable/containers.html\">https://docker-py.readthedocs.io/en/stable/containers.html</a> for the full list of available options.</p>\n</dd>\n<dt class=\"field-even\">networks (List[dagster.StringSource], optional)</dt>\n<dd class=\"field-even\"><p>Names of the networks to which to connect the launched container at creation time</p>\n</dd>\n<dt class=\"field-odd\">retries (selector, optional)</dt>\n<dd class=\"field-odd\"><details class=\"summary-default-value\">\n<summary>Default Value:</summary><div class=\"highlight-javascript notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"p\">{</span>\n    <span class=\"s2\">&quot;enabled&quot;</span><span class=\"o\">:</span> <span class=\"p\">{}</span>\n<span class=\"p\">}</span>\n</pre></div>\n</div>\n</details><details class=\"summary-config-schema\">\n<summary>Config Schema:</summary><dl class=\"field-list\">\n<dt class=\"field-odd\">enabled (strict dict, optional)</dt>\n<dd class=\"field-odd\"><details class=\"summary-default-value\">\n<summary>Default Value:</summary><div class=\"highlight-javascript notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"p\">{}</span>\n</pre></div>\n</div>\n</details></dd>\n<dt class=\"field-even\">disabled (strict dict, optional)</dt>\n<dd class=\"field-even\"><details class=\"summary-default-value\">\n<summary>Default Value:</summary><div class=\"highlight-javascript notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"p\">{}</span>\n</pre></div>\n</div>\n</details></dd>\n</dl>\n</details></dd>\n</dl>\n</details><p>Executor which launches steps as Docker containers.</p>\n<p>To use the <cite>docker_executor</cite>, set it as the <cite>executor_def</cite> when defining a job:</p>\n<div class=\"highlight-python notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"kn\">from</span> <span class=\"nn\">dagster</span> <span class=\"kn\">import</span> <span class=\"n\">job</span>\n<span class=\"kn\">from</span> <span class=\"nn\">dagster_docker</span> <span class=\"kn\">import</span> <span class=\"n\">docker_executor</span>\n\n<span class=\"nd\">@job</span><span class=\"p\">(</span><span class=\"n\">executor_def</span><span class=\"o\">=</span><span class=\"n\">docker_executor</span><span class=\"p\">)</span>\n<span class=\"k\">def</span> <span class=\"nf\">docker_job</span><span class=\"p\">():</span>\n    <span class=\"k\">pass</span>\n</pre></div>\n</div>\n<p>Then you can configure the executor with run config as follows:</p>\n<div class=\"highlight-YAML notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"nt\">execution</span><span class=\"p\">:</span><span class=\"w\"></span>\n<span class=\"w\">  </span><span class=\"nt\">config</span><span class=\"p\">:</span><span class=\"w\"></span>\n<span class=\"w\">    </span><span class=\"nt\">registry</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"l l-Scalar l-Scalar-Plain\">...</span><span class=\"w\"></span>\n<span class=\"w\">    </span><span class=\"nt\">network</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"l l-Scalar l-Scalar-Plain\">...</span><span class=\"w\"></span>\n<span class=\"w\">    </span><span class=\"nt\">networks</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"l l-Scalar l-Scalar-Plain\">...</span><span class=\"w\"></span>\n<span class=\"w\">    </span><span class=\"nt\">container_kwargs</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"l l-Scalar l-Scalar-Plain\">...</span><span class=\"w\"></span>\n</pre></div>\n</div>\n<p>If you\u2019re using the DockerRunLauncher, configuration set on the containers created by the run\nlauncher will also be set on the containers that are created for each step.</p>\n</dd></dl>\n\n</div>\n", "current_page_name": "sections/api/apidocs/libraries/dagster-docker", "customsidebar": null, "display_toc": true, "meta": null, "metatags": "", "next": {"link": "../dagster-gcp/", "title": "GCP (dagster-gcp)"}, "page_source_suffix": ".rst", "parents": [], "prev": {"link": "../dagster-fivetran/", "title": "Fivetran (dagster-fivetran)"}, "rellinks": [["genindex", "General Index", "I", "index"], ["py-modindex", "Python Module Index", "", "modules"], ["sections/api/apidocs/libraries/dagster-gcp", "GCP (dagster-gcp)", "N", "next"], ["sections/api/apidocs/libraries/dagster-fivetran", "Fivetran (dagster-fivetran)", "P", "previous"]], "sidebars": ["globaltoc.html", "searchbox.html"], "sourcename": "sections/api/apidocs/libraries/dagster-docker.rst.txt", "title": "Orchestration on Docker", "toc": "<ul>\n<li><a class=\"reference internal\" href=\"#\">Orchestration on Docker</a></li>\n<li><a class=\"reference internal\" href=\"#apis\">APIs</a></li>\n</ul>\n"}, "dagster-fivetran": {"alabaster_version": "0.7.12", "body": "<div class=\"section\" id=\"fivetran-dagster-fivetran\">\n<h1>Fivetran (dagster-fivetran)<a class=\"headerlink\" href=\"#fivetran-dagster-fivetran\" title=\"Permalink to this headline\">\u00b6</a></h1>\n<p>This library provides a Dagster integration with <a class=\"reference external\" href=\"https://www.fivetran.com/\">Fivetran</a>.</p>\n<div class=\"section\" id=\"ops\">\n<h2>Ops<a class=\"headerlink\" href=\"#ops\" title=\"Permalink to this headline\">\u00b6</a></h2>\n<dl class=\"py data\">\n<dt id=\"dagster_fivetran.fivetran_sync_op\">\n<code class=\"sig-prename descclassname\"><span class=\"pre\">dagster_fivetran.</span></code><code class=\"sig-name descname\"><span class=\"pre\">fivetran_sync_op</span></code><em class=\"property\"> <span class=\"pre\">=</span> <span class=\"pre\">&lt;dagster.core.definitions.op_definition.OpDefinition</span> <span class=\"pre\">object&gt;</span></em><a class=\"reference internal\" href=\"../../../../../_modules/dagster_fivetran/ops#fivetran_sync_op\"><span class=\"viewcode-link\"><span class=\"pre\">[source]</span></span></a><a class=\"headerlink\" href=\"#dagster_fivetran.fivetran_sync_op\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><div class=\"line-block\">\n<div class=\"line\"><br /></div>\n</div>\n<details class=\"summary-config-schema\">\n<summary>Config Schema:</summary><dl class=\"field-list\">\n<dt class=\"field-odd\">connector_id (String)</dt>\n<dd class=\"field-odd\"><p>The Fivetran Connector ID that this op will sync. You can retrieve this value from the \u201cSetup\u201d tab of a given connector in the Fivetran UI.</p>\n</dd>\n<dt class=\"field-even\">poll_interval (Float, optional)</dt>\n<dd class=\"field-even\"><p>The time (in seconds) that will be waited between successive polls.</p>\n<p><strong>Default Value:</strong> 10</p>\n</dd>\n<dt class=\"field-odd\">poll_timeout (Union[Float, None], optional)</dt>\n<dd class=\"field-odd\"><p>The maximum time that will waited before this operation is timed out. By default, this will never time out.</p>\n<p><strong>Default Value:</strong> None</p>\n</dd>\n<dt class=\"field-even\">yield_materializations (Bool, optional)</dt>\n<dd class=\"field-even\"><p>If True, materializations corresponding to the results of the Fivetran sync will be yielded when the op executes.</p>\n<p><strong>Default Value:</strong> True</p>\n</dd>\n<dt class=\"field-odd\">asset_key_prefix (List[String], optional)</dt>\n<dd class=\"field-odd\"><p>If provided and yield_materializations is True, these components will be used to prefix the generated asset keys.</p>\n<p><strong>Default Value:</strong> [\u2018fivetran\u2019]</p>\n</dd>\n</dl>\n</details><p>Executes a Fivetran sync for a given <code class=\"docutils literal notranslate\"><span class=\"pre\">connector_id</span></code>, and polls until that sync\ncompletes, raising an error if it is unsuccessful. It outputs a FivetranOutput which contains\nthe details of the Fivetran connector after the sync successfully completes, as well as details\nabout which tables the sync updates.</p>\n<p>It requires the use of the <a class=\"reference internal\" href=\"#dagster_fivetran.fivetran_resource\" title=\"dagster_fivetran.fivetran_resource\"><code class=\"xref py py-class docutils literal notranslate\"><span class=\"pre\">fivetran_resource</span></code></a>, which allows it to\ncommunicate with the Fivetran API.</p>\n<p>Examples:</p>\n<div class=\"highlight-python notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"kn\">from</span> <span class=\"nn\">dagster</span> <span class=\"kn\">import</span> <span class=\"n\">job</span>\n<span class=\"kn\">from</span> <span class=\"nn\">dagster_fivetran</span> <span class=\"kn\">import</span> <span class=\"n\">fivetran_resource</span><span class=\"p\">,</span> <span class=\"n\">fivetran_sync_op</span>\n\n<span class=\"n\">my_fivetran_resource</span> <span class=\"o\">=</span> <span class=\"n\">fivetran_resource</span><span class=\"o\">.</span><span class=\"n\">configured</span><span class=\"p\">(</span>\n    <span class=\"p\">{</span>\n        <span class=\"s2\">&quot;api_key&quot;</span><span class=\"p\">:</span> <span class=\"p\">{</span><span class=\"s2\">&quot;env&quot;</span><span class=\"p\">:</span> <span class=\"s2\">&quot;FIVETRAN_API_KEY&quot;</span><span class=\"p\">},</span>\n        <span class=\"s2\">&quot;api_secret&quot;</span><span class=\"p\">:</span> <span class=\"p\">{</span><span class=\"s2\">&quot;env&quot;</span><span class=\"p\">:</span> <span class=\"s2\">&quot;FIVETRAN_API_SECRET&quot;</span><span class=\"p\">},</span>\n    <span class=\"p\">}</span>\n<span class=\"p\">)</span>\n\n<span class=\"n\">sync_foobar</span> <span class=\"o\">=</span> <span class=\"n\">fivetran_sync_op</span><span class=\"o\">.</span><span class=\"n\">configured</span><span class=\"p\">({</span><span class=\"s2\">&quot;connector_id&quot;</span><span class=\"p\">:</span> <span class=\"s2\">&quot;foobar&quot;</span><span class=\"p\">},</span> <span class=\"n\">name</span><span class=\"o\">=</span><span class=\"s2\">&quot;sync_foobar&quot;</span><span class=\"p\">)</span>\n\n<span class=\"nd\">@job</span><span class=\"p\">(</span><span class=\"n\">resource_defs</span><span class=\"o\">=</span><span class=\"p\">{</span><span class=\"s2\">&quot;fivetran&quot;</span><span class=\"p\">:</span> <span class=\"n\">my_fivetran_resource</span><span class=\"p\">})</span>\n<span class=\"k\">def</span> <span class=\"nf\">my_simple_fivetran_job</span><span class=\"p\">():</span>\n    <span class=\"n\">sync_foobar</span><span class=\"p\">()</span>\n\n<span class=\"nd\">@job</span><span class=\"p\">(</span><span class=\"n\">resource_defs</span><span class=\"o\">=</span><span class=\"p\">{</span><span class=\"s2\">&quot;fivetran&quot;</span><span class=\"p\">:</span> <span class=\"n\">my_fivetran_resource</span><span class=\"p\">})</span>\n<span class=\"k\">def</span> <span class=\"nf\">my_composed_fivetran_job</span><span class=\"p\">():</span>\n    <span class=\"n\">final_foobar_state</span> <span class=\"o\">=</span> <span class=\"n\">sync_foobar</span><span class=\"p\">(</span><span class=\"n\">start_after</span><span class=\"o\">=</span><span class=\"n\">some_op</span><span class=\"p\">())</span>\n    <span class=\"n\">other_op</span><span class=\"p\">(</span><span class=\"n\">final_foobar_state</span><span class=\"p\">)</span>\n</pre></div>\n</div>\n</dd></dl>\n\n</div>\n<div class=\"section\" id=\"resources\">\n<h2>Resources<a class=\"headerlink\" href=\"#resources\" title=\"Permalink to this headline\">\u00b6</a></h2>\n<dl class=\"py data\">\n<dt id=\"dagster_fivetran.fivetran_resource\">\n<code class=\"sig-prename descclassname\"><span class=\"pre\">dagster_fivetran.</span></code><code class=\"sig-name descname\"><span class=\"pre\">fivetran_resource</span></code><em class=\"property\"> <span class=\"pre\">ResourceDefinition</span></em><a class=\"reference internal\" href=\"../../../../../_modules/dagster_fivetran/resources#fivetran_resource\"><span class=\"viewcode-link\"><span class=\"pre\">[source]</span></span></a><a class=\"headerlink\" href=\"#dagster_fivetran.fivetran_resource\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><div class=\"line-block\">\n<div class=\"line\"><br /></div>\n</div>\n<details class=\"summary-config-schema\">\n<summary>Config Schema:</summary><dl class=\"field-list\">\n<dt class=\"field-odd\">api_key (dagster.StringSource)</dt>\n<dd class=\"field-odd\"><p>Fivetran API Key. You can find this value on the Fivetran settings page: <a class=\"reference external\" href=\"https://fivetran.com/account/settings\">https://fivetran.com/account/settings</a></p>\n</dd>\n<dt class=\"field-even\">api_secret (dagster.StringSource)</dt>\n<dd class=\"field-even\"><p>Fivetran API Secret. You can find this value on the Fivetran settings page: <a class=\"reference external\" href=\"https://fivetran.com/account/settings\">https://fivetran.com/account/settings</a></p>\n</dd>\n<dt class=\"field-odd\">disable_schedule_on_trigger (Bool, optional)</dt>\n<dd class=\"field-odd\"><p>Specifies if you would like any connector that is sync\u2019d using this resource to be automatically taken off its Fivetran schedule.</p>\n<p><strong>Default Value:</strong> True</p>\n</dd>\n<dt class=\"field-even\">request_max_retries (Int, optional)</dt>\n<dd class=\"field-even\"><p>The maximum number of times requests to the Fivetran API should be retried before failing.</p>\n<p><strong>Default Value:</strong> 3</p>\n</dd>\n<dt class=\"field-odd\">request_retry_delay (Float, optional)</dt>\n<dd class=\"field-odd\"><p>Time (in seconds) to wait between each request retry.</p>\n<p><strong>Default Value:</strong> 0.25</p>\n</dd>\n</dl>\n</details><p>This resource allows users to programatically interface with the Fivetran REST API to launch\nsyncs and monitor their progress. This currently implements only a subset of the functionality\nexposed by the API.</p>\n<p>For a complete set of documentation on the Fivetran REST API, including expected response JSON\nschemae, see the <a class=\"reference external\" href=\"https://fivetran.com/docs/rest-api/connectors\">Fivetran API Docs</a>.</p>\n<p>To configure this resource, we recommend using the <a class=\"reference external\" href=\"https://docs.dagster.io/concepts/configuration/configured\">configured</a> method.</p>\n<p><strong>Examples:</strong></p>\n<div class=\"highlight-python notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"kn\">from</span> <span class=\"nn\">dagster</span> <span class=\"kn\">import</span> <span class=\"n\">job</span>\n<span class=\"kn\">from</span> <span class=\"nn\">dagster_fivetran</span> <span class=\"kn\">import</span> <span class=\"n\">fivetran_resource</span>\n\n<span class=\"n\">my_fivetran_resource</span> <span class=\"o\">=</span> <span class=\"n\">fivetran_resource</span><span class=\"o\">.</span><span class=\"n\">configured</span><span class=\"p\">(</span>\n    <span class=\"p\">{</span>\n        <span class=\"s2\">&quot;api_key&quot;</span><span class=\"p\">:</span> <span class=\"p\">{</span><span class=\"s2\">&quot;env&quot;</span><span class=\"p\">:</span> <span class=\"s2\">&quot;FIVETRAN_API_KEY&quot;</span><span class=\"p\">},</span>\n        <span class=\"s2\">&quot;api_secret&quot;</span><span class=\"p\">:</span> <span class=\"p\">{</span><span class=\"s2\">&quot;env&quot;</span><span class=\"p\">:</span> <span class=\"s2\">&quot;FIVETRAN_API_SECRET&quot;</span><span class=\"p\">},</span>\n    <span class=\"p\">}</span>\n<span class=\"p\">)</span>\n\n<span class=\"nd\">@job</span><span class=\"p\">(</span><span class=\"n\">resource_defs</span><span class=\"o\">=</span><span class=\"p\">{</span><span class=\"s2\">&quot;fivetran&quot;</span><span class=\"p\">:</span><span class=\"n\">my_fivetran_resource</span><span class=\"p\">})</span>\n<span class=\"k\">def</span> <span class=\"nf\">my_fivetran_job</span><span class=\"p\">():</span>\n    <span class=\"o\">...</span>\n</pre></div>\n</div>\n</dd></dl>\n\n<dl class=\"py class\">\n<dt id=\"dagster_fivetran.FivetranResource\">\n<em class=\"property\"><span class=\"pre\">class</span> </em><code class=\"sig-prename descclassname\"><span class=\"pre\">dagster_fivetran.</span></code><code class=\"sig-name descname\"><span class=\"pre\">FivetranResource</span></code><span class=\"sig-paren\">(</span><em class=\"sig-param\"><span class=\"pre\">api_key</span></em>, <em class=\"sig-param\"><span class=\"pre\">api_secret</span></em>, <em class=\"sig-param\"><span class=\"pre\">disable_schedule_on_trigger=True</span></em>, <em class=\"sig-param\"><span class=\"pre\">request_max_retries=3</span></em>, <em class=\"sig-param\"><span class=\"pre\">request_retry_delay=0.25</span></em>, <em class=\"sig-param\"><span class=\"pre\">log=&lt;Logger</span> <span class=\"pre\">dagster.builtin</span> <span class=\"pre\">(DEBUG)&gt;</span></em><span class=\"sig-paren\">)</span><a class=\"reference internal\" href=\"../../../../../_modules/dagster_fivetran/resources#FivetranResource\"><span class=\"viewcode-link\"><span class=\"pre\">[source]</span></span></a><a class=\"headerlink\" href=\"#dagster_fivetran.FivetranResource\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>This class exposes methods on top of the Fivetran REST API.</p>\n<dl class=\"py method\">\n<dt id=\"dagster_fivetran.FivetranResource.get_connector_details\">\n<code class=\"sig-name descname\"><span class=\"pre\">get_connector_details</span></code><span class=\"sig-paren\">(</span><em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">connector_id</span></span></em><span class=\"sig-paren\">)</span><a class=\"reference internal\" href=\"../../../../../_modules/dagster_fivetran/resources#FivetranResource.get_connector_details\"><span class=\"viewcode-link\"><span class=\"pre\">[source]</span></span></a><a class=\"headerlink\" href=\"#dagster_fivetran.FivetranResource.get_connector_details\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Gets details about a given connector from the Fivetran Connector API.</p>\n<dl class=\"field-list simple\">\n<dt class=\"field-odd\">Parameters</dt>\n<dd class=\"field-odd\"><p><strong>connector_id</strong> (<a class=\"reference external\" href=\"https://docs.python.org/3/library/stdtypes.html#str\" title=\"(in Python v3.8)\"><em>str</em></a>) \u2013 The Fivetran Connector ID. You can retrieve this value from the\n\u201cSetup\u201d tab of a given connector in the Fivetran UI.</p>\n</dd>\n<dt class=\"field-even\">Returns</dt>\n<dd class=\"field-even\"><p>Parsed json data from the response to this request</p>\n</dd>\n<dt class=\"field-odd\">Return type</dt>\n<dd class=\"field-odd\"><p>Dict[<a class=\"reference external\" href=\"https://docs.python.org/3/library/stdtypes.html#str\" title=\"(in Python v3.8)\">str</a>, Any]</p>\n</dd>\n</dl>\n</dd></dl>\n\n<dl class=\"py method\">\n<dt id=\"dagster_fivetran.FivetranResource.get_connector_sync_status\">\n<code class=\"sig-name descname\"><span class=\"pre\">get_connector_sync_status</span></code><span class=\"sig-paren\">(</span><em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">connector_id</span></span></em><span class=\"sig-paren\">)</span><a class=\"reference internal\" href=\"../../../../../_modules/dagster_fivetran/resources#FivetranResource.get_connector_sync_status\"><span class=\"viewcode-link\"><span class=\"pre\">[source]</span></span></a><a class=\"headerlink\" href=\"#dagster_fivetran.FivetranResource.get_connector_sync_status\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Gets details about the status of the most recent Fivetran sync operation for a given\nconnector.</p>\n<dl class=\"field-list simple\">\n<dt class=\"field-odd\">Parameters</dt>\n<dd class=\"field-odd\"><p><strong>connector_id</strong> (<a class=\"reference external\" href=\"https://docs.python.org/3/library/stdtypes.html#str\" title=\"(in Python v3.8)\"><em>str</em></a>) \u2013 The Fivetran Connector ID. You can retrieve this value from the\n\u201cSetup\u201d tab of a given connector in the Fivetran UI.</p>\n</dd>\n<dt class=\"field-even\">Returns</dt>\n<dd class=\"field-even\"><p>Tuple representing the timestamp of the last completeded sync, if it succeeded, and\nthe currently reported sync status.</p>\n</dd>\n<dt class=\"field-odd\">Return type</dt>\n<dd class=\"field-odd\"><p>Tuple[<a class=\"reference external\" href=\"https://docs.python.org/3/library/datetime.html#datetime.datetime\" title=\"(in Python v3.8)\">datetime.datetime</a>, <a class=\"reference external\" href=\"https://docs.python.org/3/library/functions.html#bool\" title=\"(in Python v3.8)\">bool</a>, <a class=\"reference external\" href=\"https://docs.python.org/3/library/stdtypes.html#str\" title=\"(in Python v3.8)\">str</a>]</p>\n</dd>\n</dl>\n</dd></dl>\n\n<dl class=\"py method\">\n<dt id=\"dagster_fivetran.FivetranResource.make_request\">\n<code class=\"sig-name descname\"><span class=\"pre\">make_request</span></code><span class=\"sig-paren\">(</span><em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">method</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">endpoint</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">data</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">None</span></span></em><span class=\"sig-paren\">)</span><a class=\"reference internal\" href=\"../../../../../_modules/dagster_fivetran/resources#FivetranResource.make_request\"><span class=\"viewcode-link\"><span class=\"pre\">[source]</span></span></a><a class=\"headerlink\" href=\"#dagster_fivetran.FivetranResource.make_request\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Creates and sends a request to the desired Fivetran Connector API endpoint.</p>\n<dl class=\"field-list simple\">\n<dt class=\"field-odd\">Parameters</dt>\n<dd class=\"field-odd\"><ul class=\"simple\">\n<li><p><strong>method</strong> (<a class=\"reference external\" href=\"https://docs.python.org/3/library/stdtypes.html#str\" title=\"(in Python v3.8)\"><em>str</em></a>) \u2013 The http method to use for this request (e.g. \u201cPOST\u201d, \u201cGET\u201d, \u201cPATCH\u201d).</p></li>\n<li><p><strong>endpoint</strong> (<a class=\"reference external\" href=\"https://docs.python.org/3/library/stdtypes.html#str\" title=\"(in Python v3.8)\"><em>str</em></a>) \u2013 The Fivetran API endpoint to send this request to.</p></li>\n<li><p><strong>data</strong> (<em>Optional</em><em>[</em><a class=\"reference external\" href=\"https://docs.python.org/3/library/stdtypes.html#str\" title=\"(in Python v3.8)\"><em>str</em></a><em>]</em>) \u2013 JSON-formatted data string to be included in the request.</p></li>\n</ul>\n</dd>\n<dt class=\"field-even\">Returns</dt>\n<dd class=\"field-even\"><p>Parsed json data from the response to this request</p>\n</dd>\n<dt class=\"field-odd\">Return type</dt>\n<dd class=\"field-odd\"><p>Dict[<a class=\"reference external\" href=\"https://docs.python.org/3/library/stdtypes.html#str\" title=\"(in Python v3.8)\">str</a>, Any]</p>\n</dd>\n</dl>\n</dd></dl>\n\n<dl class=\"py method\">\n<dt id=\"dagster_fivetran.FivetranResource.poll_sync\">\n<code class=\"sig-name descname\"><span class=\"pre\">poll_sync</span></code><span class=\"sig-paren\">(</span><em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">connector_id</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">initial_last_sync_completion</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">poll_interval</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">10</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">poll_timeout</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">None</span></span></em><span class=\"sig-paren\">)</span><a class=\"reference internal\" href=\"../../../../../_modules/dagster_fivetran/resources#FivetranResource.poll_sync\"><span class=\"viewcode-link\"><span class=\"pre\">[source]</span></span></a><a class=\"headerlink\" href=\"#dagster_fivetran.FivetranResource.poll_sync\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Given a Fivetran connector and the timestamp at which the previous sync completed, poll\nuntil the next sync completes.</p>\n<p>The previous sync completion time is necessary because the only way to tell when a sync\ncompletes is when this value changes.</p>\n<dl class=\"field-list simple\">\n<dt class=\"field-odd\">Parameters</dt>\n<dd class=\"field-odd\"><ul class=\"simple\">\n<li><p><strong>connector_id</strong> (<a class=\"reference external\" href=\"https://docs.python.org/3/library/stdtypes.html#str\" title=\"(in Python v3.8)\"><em>str</em></a>) \u2013 The Fivetran Connector ID. You can retrieve this value from the\n\u201cSetup\u201d tab of a given connector in the Fivetran UI.</p></li>\n<li><p><strong>initial_last_sync_completion</strong> (<a class=\"reference external\" href=\"https://docs.python.org/3/library/datetime.html#datetime.datetime\" title=\"(in Python v3.8)\"><em>datetime.datetime</em></a>) \u2013 The timestamp of the last completed sync\n(successful or otherwise) for this connector, prior to running this method.</p></li>\n<li><p><strong>poll_interval</strong> (<a class=\"reference external\" href=\"https://docs.python.org/3/library/functions.html#float\" title=\"(in Python v3.8)\"><em>float</em></a>) \u2013 The time (in seconds) that will be waited between successive polls.</p></li>\n<li><p><strong>poll_timeout</strong> (<a class=\"reference external\" href=\"https://docs.python.org/3/library/functions.html#float\" title=\"(in Python v3.8)\"><em>float</em></a>) \u2013 The maximum time that will waited before this operation is timed\nout. By default, this will never time out.</p></li>\n</ul>\n</dd>\n<dt class=\"field-even\">Returns</dt>\n<dd class=\"field-even\"><p>Parsed json data representing the API response.</p>\n</dd>\n<dt class=\"field-odd\">Return type</dt>\n<dd class=\"field-odd\"><p>Dict[<a class=\"reference external\" href=\"https://docs.python.org/3/library/stdtypes.html#str\" title=\"(in Python v3.8)\">str</a>, Any]</p>\n</dd>\n</dl>\n</dd></dl>\n\n<dl class=\"py method\">\n<dt id=\"dagster_fivetran.FivetranResource.resync_and_poll\">\n<code class=\"sig-name descname\"><span class=\"pre\">resync_and_poll</span></code><span class=\"sig-paren\">(</span><em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">connector_id</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">resync_parameters</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">poll_interval</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">10</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">poll_timeout</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">None</span></span></em><span class=\"sig-paren\">)</span><a class=\"reference internal\" href=\"../../../../../_modules/dagster_fivetran/resources#FivetranResource.resync_and_poll\"><span class=\"viewcode-link\"><span class=\"pre\">[source]</span></span></a><a class=\"headerlink\" href=\"#dagster_fivetran.FivetranResource.resync_and_poll\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Initializes a historical resync operation for the given connector, and polls until it completes.</p>\n<dl class=\"field-list simple\">\n<dt class=\"field-odd\">Parameters</dt>\n<dd class=\"field-odd\"><ul class=\"simple\">\n<li><p><strong>connector_id</strong> (<a class=\"reference external\" href=\"https://docs.python.org/3/library/stdtypes.html#str\" title=\"(in Python v3.8)\"><em>str</em></a>) \u2013 The Fivetran Connector ID. You can retrieve this value from the\n\u201cSetup\u201d tab of a given connector in the Fivetran UI.</p></li>\n<li><p><strong>resync_parameters</strong> (<em>Dict</em><em>[</em><a class=\"reference external\" href=\"https://docs.python.org/3/library/stdtypes.html#str\" title=\"(in Python v3.8)\"><em>str</em></a><em>, </em><em>List</em><em>[</em><a class=\"reference external\" href=\"https://docs.python.org/3/library/stdtypes.html#str\" title=\"(in Python v3.8)\"><em>str</em></a><em>]</em><em>]</em>) \u2013 The payload to send to the Fivetran API.\nThis should be a dictionary with schema names as the keys and a list of tables\nto resync as the values.</p></li>\n<li><p><strong>poll_interval</strong> (<a class=\"reference external\" href=\"https://docs.python.org/3/library/functions.html#float\" title=\"(in Python v3.8)\"><em>float</em></a>) \u2013 The time (in seconds) that will be waited between successive polls.</p></li>\n<li><p><strong>poll_timeout</strong> (<a class=\"reference external\" href=\"https://docs.python.org/3/library/functions.html#float\" title=\"(in Python v3.8)\"><em>float</em></a>) \u2013 The maximum time that will waited before this operation is timed\nout. By default, this will never time out.</p></li>\n</ul>\n</dd>\n<dt class=\"field-even\">Returns</dt>\n<dd class=\"field-even\"><p>Object containing details about the connector and the tables it updates</p>\n</dd>\n<dt class=\"field-odd\">Return type</dt>\n<dd class=\"field-odd\"><p><code class=\"xref py py-class docutils literal notranslate\"><span class=\"pre\">FivetranOutput</span></code></p>\n</dd>\n</dl>\n</dd></dl>\n\n<dl class=\"py method\">\n<dt id=\"dagster_fivetran.FivetranResource.start_resync\">\n<code class=\"sig-name descname\"><span class=\"pre\">start_resync</span></code><span class=\"sig-paren\">(</span><em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">connector_id</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">resync_parameters</span></span></em><span class=\"sig-paren\">)</span><a class=\"reference internal\" href=\"../../../../../_modules/dagster_fivetran/resources#FivetranResource.start_resync\"><span class=\"viewcode-link\"><span class=\"pre\">[source]</span></span></a><a class=\"headerlink\" href=\"#dagster_fivetran.FivetranResource.start_resync\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Initiates a historical sync of all data for multiple schema tables within a Fivetran connector.</p>\n<dl class=\"field-list simple\">\n<dt class=\"field-odd\">Parameters</dt>\n<dd class=\"field-odd\"><ul class=\"simple\">\n<li><p><strong>connector_id</strong> (<a class=\"reference external\" href=\"https://docs.python.org/3/library/stdtypes.html#str\" title=\"(in Python v3.8)\"><em>str</em></a>) \u2013 The Fivetran Connector ID. You can retrieve this value from the\n\u201cSetup\u201d tab of a given connector in the Fivetran UI.</p></li>\n<li><p><strong>resync_parameters</strong> (<em>Dict</em><em>[</em><a class=\"reference external\" href=\"https://docs.python.org/3/library/stdtypes.html#str\" title=\"(in Python v3.8)\"><em>str</em></a><em>, </em><em>List</em><em>[</em><a class=\"reference external\" href=\"https://docs.python.org/3/library/stdtypes.html#str\" title=\"(in Python v3.8)\"><em>str</em></a><em>]</em><em>]</em>) \u2013 The resync parameters to send to the Fivetran API.\nAn example payload can be found here: <a class=\"reference external\" href=\"https://fivetran.com/docs/rest-api/connectors#request_6\">https://fivetran.com/docs/rest-api/connectors#request_6</a></p></li>\n</ul>\n</dd>\n<dt class=\"field-even\">Returns</dt>\n<dd class=\"field-even\"><p><dl class=\"simple\">\n<dt>Parsed json data representing the connector details API response after</dt><dd><p>the resync is started.</p>\n</dd>\n</dl>\n</p>\n</dd>\n<dt class=\"field-odd\">Return type</dt>\n<dd class=\"field-odd\"><p>Dict[<a class=\"reference external\" href=\"https://docs.python.org/3/library/stdtypes.html#str\" title=\"(in Python v3.8)\">str</a>, Any]</p>\n</dd>\n</dl>\n</dd></dl>\n\n<dl class=\"py method\">\n<dt id=\"dagster_fivetran.FivetranResource.start_sync\">\n<code class=\"sig-name descname\"><span class=\"pre\">start_sync</span></code><span class=\"sig-paren\">(</span><em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">connector_id</span></span></em><span class=\"sig-paren\">)</span><a class=\"reference internal\" href=\"../../../../../_modules/dagster_fivetran/resources#FivetranResource.start_sync\"><span class=\"viewcode-link\"><span class=\"pre\">[source]</span></span></a><a class=\"headerlink\" href=\"#dagster_fivetran.FivetranResource.start_sync\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Initiates a sync of a Fivetran connector.</p>\n<dl class=\"field-list simple\">\n<dt class=\"field-odd\">Parameters</dt>\n<dd class=\"field-odd\"><p><strong>connector_id</strong> (<a class=\"reference external\" href=\"https://docs.python.org/3/library/stdtypes.html#str\" title=\"(in Python v3.8)\"><em>str</em></a>) \u2013 The Fivetran Connector ID. You can retrieve this value from the\n\u201cSetup\u201d tab of a given connector in the Fivetran UI.</p>\n</dd>\n<dt class=\"field-even\">Returns</dt>\n<dd class=\"field-even\"><p><dl class=\"simple\">\n<dt>Parsed json data representing the connector details API response after</dt><dd><p>the sync is started.</p>\n</dd>\n</dl>\n</p>\n</dd>\n<dt class=\"field-odd\">Return type</dt>\n<dd class=\"field-odd\"><p>Dict[<a class=\"reference external\" href=\"https://docs.python.org/3/library/stdtypes.html#str\" title=\"(in Python v3.8)\">str</a>, Any]</p>\n</dd>\n</dl>\n</dd></dl>\n\n<dl class=\"py method\">\n<dt id=\"dagster_fivetran.FivetranResource.sync_and_poll\">\n<code class=\"sig-name descname\"><span class=\"pre\">sync_and_poll</span></code><span class=\"sig-paren\">(</span><em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">connector_id</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">poll_interval</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">10</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">poll_timeout</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">None</span></span></em><span class=\"sig-paren\">)</span><a class=\"reference internal\" href=\"../../../../../_modules/dagster_fivetran/resources#FivetranResource.sync_and_poll\"><span class=\"viewcode-link\"><span class=\"pre\">[source]</span></span></a><a class=\"headerlink\" href=\"#dagster_fivetran.FivetranResource.sync_and_poll\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Initializes a sync operation for the given connector, and polls until it completes.</p>\n<dl class=\"field-list simple\">\n<dt class=\"field-odd\">Parameters</dt>\n<dd class=\"field-odd\"><ul class=\"simple\">\n<li><p><strong>connector_id</strong> (<a class=\"reference external\" href=\"https://docs.python.org/3/library/stdtypes.html#str\" title=\"(in Python v3.8)\"><em>str</em></a>) \u2013 The Fivetran Connector ID. You can retrieve this value from the\n\u201cSetup\u201d tab of a given connector in the Fivetran UI.</p></li>\n<li><p><strong>poll_interval</strong> (<a class=\"reference external\" href=\"https://docs.python.org/3/library/functions.html#float\" title=\"(in Python v3.8)\"><em>float</em></a>) \u2013 The time (in seconds) that will be waited between successive polls.</p></li>\n<li><p><strong>poll_timeout</strong> (<a class=\"reference external\" href=\"https://docs.python.org/3/library/functions.html#float\" title=\"(in Python v3.8)\"><em>float</em></a>) \u2013 The maximum time that will waited before this operation is timed\nout. By default, this will never time out.</p></li>\n</ul>\n</dd>\n<dt class=\"field-even\">Returns</dt>\n<dd class=\"field-even\"><p>Object containing details about the connector and the tables it updates</p>\n</dd>\n<dt class=\"field-odd\">Return type</dt>\n<dd class=\"field-odd\"><p><code class=\"xref py py-class docutils literal notranslate\"><span class=\"pre\">FivetranOutput</span></code></p>\n</dd>\n</dl>\n</dd></dl>\n\n<dl class=\"py method\">\n<dt id=\"dagster_fivetran.FivetranResource.update_connector\">\n<code class=\"sig-name descname\"><span class=\"pre\">update_connector</span></code><span class=\"sig-paren\">(</span><em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">connector_id</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">properties</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">None</span></span></em><span class=\"sig-paren\">)</span><a class=\"reference internal\" href=\"../../../../../_modules/dagster_fivetran/resources#FivetranResource.update_connector\"><span class=\"viewcode-link\"><span class=\"pre\">[source]</span></span></a><a class=\"headerlink\" href=\"#dagster_fivetran.FivetranResource.update_connector\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Updates properties of a Fivetran Connector.</p>\n<dl class=\"field-list simple\">\n<dt class=\"field-odd\">Parameters</dt>\n<dd class=\"field-odd\"><ul class=\"simple\">\n<li><p><strong>connector_id</strong> (<a class=\"reference external\" href=\"https://docs.python.org/3/library/stdtypes.html#str\" title=\"(in Python v3.8)\"><em>str</em></a>) \u2013 The Fivetran Connector ID. You can retrieve this value from the\n\u201cSetup\u201d tab of a given connector in the Fivetran UI.</p></li>\n<li><p><strong>properties</strong> (<em>Dict</em><em>[</em><a class=\"reference external\" href=\"https://docs.python.org/3/library/stdtypes.html#str\" title=\"(in Python v3.8)\"><em>str</em></a><em>, </em><em>Any</em><em>]</em>) \u2013 The properties to be updated. For a comprehensive list of\nproperties, see the [Fivetran docs](<a class=\"reference external\" href=\"https://fivetran.com/docs/rest-api/connectors#modifyaconnector\">https://fivetran.com/docs/rest-api/connectors#modifyaconnector</a>).</p></li>\n</ul>\n</dd>\n<dt class=\"field-even\">Returns</dt>\n<dd class=\"field-even\"><p>Parsed json data representing the API response.</p>\n</dd>\n<dt class=\"field-odd\">Return type</dt>\n<dd class=\"field-odd\"><p>Dict[<a class=\"reference external\" href=\"https://docs.python.org/3/library/stdtypes.html#str\" title=\"(in Python v3.8)\">str</a>, Any]</p>\n</dd>\n</dl>\n</dd></dl>\n\n<dl class=\"py method\">\n<dt id=\"dagster_fivetran.FivetranResource.update_schedule_type\">\n<code class=\"sig-name descname\"><span class=\"pre\">update_schedule_type</span></code><span class=\"sig-paren\">(</span><em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">connector_id</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">schedule_type</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">None</span></span></em><span class=\"sig-paren\">)</span><a class=\"reference internal\" href=\"../../../../../_modules/dagster_fivetran/resources#FivetranResource.update_schedule_type\"><span class=\"viewcode-link\"><span class=\"pre\">[source]</span></span></a><a class=\"headerlink\" href=\"#dagster_fivetran.FivetranResource.update_schedule_type\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Updates the schedule type property of the connector to either \u201cauto\u201d or \u201cmanual\u201d.</p>\n<dl class=\"field-list simple\">\n<dt class=\"field-odd\">Parameters</dt>\n<dd class=\"field-odd\"><ul class=\"simple\">\n<li><p><strong>connector_id</strong> (<a class=\"reference external\" href=\"https://docs.python.org/3/library/stdtypes.html#str\" title=\"(in Python v3.8)\"><em>str</em></a>) \u2013 The Fivetran Connector ID. You can retrieve this value from the\n\u201cSetup\u201d tab of a given connector in the Fivetran UI.</p></li>\n<li><p><strong>schedule_type</strong> (<em>Optional</em><em>[</em><a class=\"reference external\" href=\"https://docs.python.org/3/library/stdtypes.html#str\" title=\"(in Python v3.8)\"><em>str</em></a><em>]</em>) \u2013 Either \u201cauto\u201d (to turn the schedule on) or \u201cmanual\u201d (to\nturn it off).</p></li>\n</ul>\n</dd>\n<dt class=\"field-even\">Returns</dt>\n<dd class=\"field-even\"><p>Parsed json data representing the API response.</p>\n</dd>\n<dt class=\"field-odd\">Return type</dt>\n<dd class=\"field-odd\"><p>Dict[<a class=\"reference external\" href=\"https://docs.python.org/3/library/stdtypes.html#str\" title=\"(in Python v3.8)\">str</a>, Any]</p>\n</dd>\n</dl>\n</dd></dl>\n\n</dd></dl>\n\n</div>\n<div class=\"section\" id=\"assets\">\n<h2>Assets<a class=\"headerlink\" href=\"#assets\" title=\"Permalink to this headline\">\u00b6</a></h2>\n<dl class=\"py function\">\n<dt id=\"dagster_fivetran.build_fivetran_assets\">\n<code class=\"sig-prename descclassname\"><span class=\"pre\">dagster_fivetran.</span></code><code class=\"sig-name descname\"><span class=\"pre\">build_fivetran_assets</span></code><span class=\"sig-paren\">(</span><em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">connector_id</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">destination_tables</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">poll_interval</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">10</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">poll_timeout</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">None</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">io_manager_key</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">None</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">asset_key_prefix</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">None</span></span></em><span class=\"sig-paren\">)</span><a class=\"reference internal\" href=\"../../../../../_modules/dagster_fivetran/asset_defs#build_fivetran_assets\"><span class=\"viewcode-link\"><span class=\"pre\">[source]</span></span></a><a class=\"headerlink\" href=\"#dagster_fivetran.build_fivetran_assets\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Build a set of assets for a given Fivetran connector.</p>\n<p>Returns an AssetsDefintion which connects the specified <code class=\"docutils literal notranslate\"><span class=\"pre\">asset_keys</span></code> to the computation that\nwill update them. Internally, executes a Fivetran sync for a given <code class=\"docutils literal notranslate\"><span class=\"pre\">connector_id</span></code>, and\npolls until that sync completes, raising an error if it is unsuccessful. Requires the use of the\n<a class=\"reference internal\" href=\"#dagster_fivetran.fivetran_resource\" title=\"dagster_fivetran.fivetran_resource\"><code class=\"xref py py-class docutils literal notranslate\"><span class=\"pre\">fivetran_resource</span></code></a>, which allows it to communicate with the\nFivetran API.</p>\n<dl class=\"field-list simple\">\n<dt class=\"field-odd\">Parameters</dt>\n<dd class=\"field-odd\"><ul class=\"simple\">\n<li><p><strong>connector_id</strong> (<a class=\"reference external\" href=\"https://docs.python.org/3/library/stdtypes.html#str\" title=\"(in Python v3.8)\"><em>str</em></a>) \u2013 The Fivetran Connector ID that this op will sync. You can retrieve this\nvalue from the \u201cSetup\u201d tab of a given connector in the Fivetran UI.</p></li>\n<li><p><strong>destination_tables</strong> (<em>List</em><em>[</em><a class=\"reference external\" href=\"https://docs.python.org/3/library/stdtypes.html#str\" title=\"(in Python v3.8)\"><em>str</em></a><em>]</em>) \u2013 <cite>schema_name.table_name</cite> for each table that you want to be\nrepresented in the Dagster asset graph for this connection.</p></li>\n<li><p><strong>poll_interval</strong> (<a class=\"reference external\" href=\"https://docs.python.org/3/library/functions.html#float\" title=\"(in Python v3.8)\"><em>float</em></a>) \u2013 The time (in seconds) that will be waited between successive polls.</p></li>\n<li><p><strong>poll_timeout</strong> (<em>Optional</em><em>[</em><a class=\"reference external\" href=\"https://docs.python.org/3/library/functions.html#float\" title=\"(in Python v3.8)\"><em>float</em></a><em>]</em>) \u2013 The maximum time that will waited before this operation is\ntimed out. By default, this will never time out.</p></li>\n<li><p><strong>io_manager_key</strong> (<em>Optional</em><em>[</em><a class=\"reference external\" href=\"https://docs.python.org/3/library/stdtypes.html#str\" title=\"(in Python v3.8)\"><em>str</em></a><em>]</em>) \u2013 The io_manager to be used to handle each of these assets.</p></li>\n<li><p><strong>asset_key_prefix</strong> (<em>Optional</em><em>[</em><em>List</em><em>[</em><a class=\"reference external\" href=\"https://docs.python.org/3/library/stdtypes.html#str\" title=\"(in Python v3.8)\"><em>str</em></a><em>]</em><em>]</em>) \u2013 A prefix for the asset keys inside this asset.\nIf left blank, assets will have a key of <cite>AssetKey([schema_name, table_name])</cite>.</p></li>\n</ul>\n</dd>\n</dl>\n<p>Examples:</p>\n<div class=\"highlight-python notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"kn\">from</span> <span class=\"nn\">dagster</span> <span class=\"kn\">import</span> <span class=\"n\">AssetKey</span><span class=\"p\">,</span> <span class=\"n\">build_assets_job</span>\n\n<span class=\"kn\">from</span> <span class=\"nn\">dagster_fivetran</span> <span class=\"kn\">import</span> <span class=\"n\">fivetran_resource</span>\n<span class=\"kn\">from</span> <span class=\"nn\">dagster_fivetran.assets</span> <span class=\"kn\">import</span> <span class=\"n\">build_fivetran_assets</span>\n\n<span class=\"n\">my_fivetran_resource</span> <span class=\"o\">=</span> <span class=\"n\">fivetran_resource</span><span class=\"o\">.</span><span class=\"n\">configured</span><span class=\"p\">(</span>\n    <span class=\"p\">{</span>\n        <span class=\"s2\">&quot;api_key&quot;</span><span class=\"p\">:</span> <span class=\"p\">{</span><span class=\"s2\">&quot;env&quot;</span><span class=\"p\">:</span> <span class=\"s2\">&quot;FIVETRAN_API_KEY&quot;</span><span class=\"p\">},</span>\n        <span class=\"s2\">&quot;api_secret&quot;</span><span class=\"p\">:</span> <span class=\"p\">{</span><span class=\"s2\">&quot;env&quot;</span><span class=\"p\">:</span> <span class=\"s2\">&quot;FIVETRAN_API_SECRET&quot;</span><span class=\"p\">},</span>\n    <span class=\"p\">}</span>\n<span class=\"p\">)</span>\n\n<span class=\"n\">fivetran_assets</span> <span class=\"o\">=</span> <span class=\"n\">build_fivetran_assets</span><span class=\"p\">(</span>\n    <span class=\"n\">connector_id</span><span class=\"o\">=</span><span class=\"s2\">&quot;foobar&quot;</span><span class=\"p\">,</span>\n    <span class=\"n\">table_names</span><span class=\"o\">=</span><span class=\"p\">[</span><span class=\"s2\">&quot;schema1.table1&quot;</span><span class=\"p\">,</span> <span class=\"s2\">&quot;schema2.table2&quot;</span><span class=\"p\">],</span>\n<span class=\"p\">])</span>\n\n<span class=\"n\">my_fivetran_job</span> <span class=\"o\">=</span> <span class=\"n\">build_assets_job</span><span class=\"p\">(</span>\n    <span class=\"s2\">&quot;my_fivetran_job&quot;</span><span class=\"p\">,</span>\n    <span class=\"n\">assets</span><span class=\"o\">=</span><span class=\"p\">[</span><span class=\"n\">fivetran_assets</span><span class=\"p\">],</span>\n    <span class=\"n\">resource_defs</span><span class=\"o\">=</span><span class=\"p\">{</span><span class=\"s2\">&quot;fivetran&quot;</span><span class=\"p\">:</span> <span class=\"n\">my_fivetran_resource</span><span class=\"p\">}</span>\n<span class=\"p\">)</span>\n</pre></div>\n</div>\n</dd></dl>\n\n</div>\n</div>\n", "current_page_name": "sections/api/apidocs/libraries/dagster-fivetran", "customsidebar": null, "display_toc": true, "meta": null, "metatags": "", "next": {"link": "../dagster-docker/", "title": "Orchestration on Docker"}, "page_source_suffix": ".rst", "parents": [], "prev": {"link": "../dagster-dbt/", "title": "dbt (dagster-dbt)"}, "rellinks": [["genindex", "General Index", "I", "index"], ["py-modindex", "Python Module Index", "", "modules"], ["sections/api/apidocs/libraries/dagster-docker", "Orchestration on Docker", "N", "next"], ["sections/api/apidocs/libraries/dagster-dbt", "dbt (dagster-dbt)", "P", "previous"]], "sidebars": ["globaltoc.html", "searchbox.html"], "sourcename": "sections/api/apidocs/libraries/dagster-fivetran.rst.txt", "title": "Fivetran (dagster-fivetran)", "toc": "<ul>\n<li><a class=\"reference internal\" href=\"#\">Fivetran (dagster-fivetran)</a><ul>\n<li><a class=\"reference internal\" href=\"#ops\">Ops</a></li>\n<li><a class=\"reference internal\" href=\"#resources\">Resources</a></li>\n<li><a class=\"reference internal\" href=\"#assets\">Assets</a></li>\n</ul>\n</li>\n</ul>\n"}, "dagster-gcp": {"alabaster_version": "0.7.12", "body": "<div class=\"section\" id=\"gcp-dagster-gcp\">\n<h1>GCP (dagster-gcp)<a class=\"headerlink\" href=\"#gcp-dagster-gcp\" title=\"Permalink to this headline\">\u00b6</a></h1>\n<div class=\"section\" id=\"bigquery\">\n<h2>BigQuery<a class=\"headerlink\" href=\"#bigquery\" title=\"Permalink to this headline\">\u00b6</a></h2>\n<dl class=\"py class\">\n<dt id=\"dagster_gcp.BigQueryError\">\n<em class=\"property\"><span class=\"pre\">class</span> </em><code class=\"sig-prename descclassname\"><span class=\"pre\">dagster_gcp.</span></code><code class=\"sig-name descname\"><span class=\"pre\">BigQueryError</span></code><a class=\"reference internal\" href=\"../../../../../_modules/dagster_gcp/bigquery/types#BigQueryError\"><span class=\"viewcode-link\"><span class=\"pre\">[source]</span></span></a><a class=\"headerlink\" href=\"#dagster_gcp.BigQueryError\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd></dd></dl>\n\n<dl class=\"py data\">\n<dt id=\"dagster_gcp.bigquery_resource\">\n<code class=\"sig-prename descclassname\"><span class=\"pre\">dagster_gcp.</span></code><code class=\"sig-name descname\"><span class=\"pre\">bigquery_resource</span></code><em class=\"property\"> <span class=\"pre\">ResourceDefinition</span></em><a class=\"reference internal\" href=\"../../../../../_modules/dagster_gcp/bigquery/resources#bigquery_resource\"><span class=\"viewcode-link\"><span class=\"pre\">[source]</span></span></a><a class=\"headerlink\" href=\"#dagster_gcp.bigquery_resource\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><div class=\"line-block\">\n<div class=\"line\"><br /></div>\n</div>\n<details class=\"summary-config-schema\">\n<summary>Config Schema:</summary><dl class=\"field-list simple\">\n<dt class=\"field-odd\">project (dagster.StringSource, optional)</dt>\n<dd class=\"field-odd\"><p>Project ID for the project which the client acts on behalf of. Will be passed\nwhen creating a dataset / job. If not passed, falls back to the default inferred from the\nenvironment.</p>\n</dd>\n<dt class=\"field-even\">location (dagster.StringSource, optional)</dt>\n<dd class=\"field-even\"><p>(Optional) Default location for jobs / datasets / tables.</p>\n</dd>\n</dl>\n</details></dd></dl>\n\n<dl class=\"py function\">\n<dt id=\"dagster_gcp.bq_create_dataset\">\n<code class=\"sig-prename descclassname\"><span class=\"pre\">dagster_gcp.</span></code><code class=\"sig-name descname\"><span class=\"pre\">bq_create_dataset</span></code><span class=\"sig-paren\">(</span><em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">context</span></span></em><span class=\"sig-paren\">)</span><a class=\"reference internal\" href=\"../../../../../_modules/dagster_gcp/bigquery/ops#bq_create_dataset\"><span class=\"viewcode-link\"><span class=\"pre\">[source]</span></span></a><a class=\"headerlink\" href=\"#dagster_gcp.bq_create_dataset\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>BigQuery Create Dataset.</p>\n<p>This op encapsulates creating a BigQuery dataset.</p>\n<p>Expects a BQ client to be provisioned in resources as context.resources.bigquery.</p>\n</dd></dl>\n\n<dl class=\"py function\">\n<dt id=\"dagster_gcp.bq_delete_dataset\">\n<code class=\"sig-prename descclassname\"><span class=\"pre\">dagster_gcp.</span></code><code class=\"sig-name descname\"><span class=\"pre\">bq_delete_dataset</span></code><span class=\"sig-paren\">(</span><em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">context</span></span></em><span class=\"sig-paren\">)</span><a class=\"reference internal\" href=\"../../../../../_modules/dagster_gcp/bigquery/ops#bq_delete_dataset\"><span class=\"viewcode-link\"><span class=\"pre\">[source]</span></span></a><a class=\"headerlink\" href=\"#dagster_gcp.bq_delete_dataset\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>BigQuery Delete Dataset.</p>\n<p>This op encapsulates deleting a BigQuery dataset.</p>\n<p>Expects a BQ client to be provisioned in resources as context.resources.bigquery.</p>\n</dd></dl>\n\n<dl class=\"py function\">\n<dt id=\"dagster_gcp.bq_op_for_queries\">\n<code class=\"sig-prename descclassname\"><span class=\"pre\">dagster_gcp.</span></code><code class=\"sig-name descname\"><span class=\"pre\">bq_op_for_queries</span></code><span class=\"sig-paren\">(</span><em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">sql_queries</span></span></em><span class=\"sig-paren\">)</span><a class=\"reference internal\" href=\"../../../../../_modules/dagster_gcp/bigquery/ops#bq_op_for_queries\"><span class=\"viewcode-link\"><span class=\"pre\">[source]</span></span></a><a class=\"headerlink\" href=\"#dagster_gcp.bq_op_for_queries\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Executes BigQuery SQL queries.</p>\n<p>Expects a BQ client to be provisioned in resources as context.resources.bigquery.</p>\n</dd></dl>\n\n<dl class=\"py function\">\n<dt id=\"dagster_gcp.import_df_to_bq\">\n<code class=\"sig-prename descclassname\"><span class=\"pre\">dagster_gcp.</span></code><code class=\"sig-name descname\"><span class=\"pre\">import_df_to_bq</span></code><span class=\"sig-paren\">(</span><em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">context</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">df</span></span></em><span class=\"sig-paren\">)</span><a class=\"reference internal\" href=\"../../../../../_modules/dagster_gcp/bigquery/ops#import_df_to_bq\"><span class=\"viewcode-link\"><span class=\"pre\">[source]</span></span></a><a class=\"headerlink\" href=\"#dagster_gcp.import_df_to_bq\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd></dd></dl>\n\n<dl class=\"py function\">\n<dt id=\"dagster_gcp.import_file_to_bq\">\n<code class=\"sig-prename descclassname\"><span class=\"pre\">dagster_gcp.</span></code><code class=\"sig-name descname\"><span class=\"pre\">import_file_to_bq</span></code><span class=\"sig-paren\">(</span><em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">context</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">path</span></span></em><span class=\"sig-paren\">)</span><a class=\"reference internal\" href=\"../../../../../_modules/dagster_gcp/bigquery/ops#import_file_to_bq\"><span class=\"viewcode-link\"><span class=\"pre\">[source]</span></span></a><a class=\"headerlink\" href=\"#dagster_gcp.import_file_to_bq\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd></dd></dl>\n\n<dl class=\"py function\">\n<dt id=\"dagster_gcp.import_gcs_paths_to_bq\">\n<code class=\"sig-prename descclassname\"><span class=\"pre\">dagster_gcp.</span></code><code class=\"sig-name descname\"><span class=\"pre\">import_gcs_paths_to_bq</span></code><span class=\"sig-paren\">(</span><em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">context</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">paths</span></span></em><span class=\"sig-paren\">)</span><a class=\"reference internal\" href=\"../../../../../_modules/dagster_gcp/bigquery/ops#import_gcs_paths_to_bq\"><span class=\"viewcode-link\"><span class=\"pre\">[source]</span></span></a><a class=\"headerlink\" href=\"#dagster_gcp.import_gcs_paths_to_bq\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd></dd></dl>\n\n</div>\n<div class=\"section\" id=\"dataproc\">\n<h2>Dataproc<a class=\"headerlink\" href=\"#dataproc\" title=\"Permalink to this headline\">\u00b6</a></h2>\n<dl class=\"py data\">\n<dt id=\"dagster_gcp.dataproc_op\">\n<code class=\"sig-prename descclassname\"><span class=\"pre\">dagster_gcp.</span></code><code class=\"sig-name descname\"><span class=\"pre\">dataproc_op</span></code><em class=\"property\"> <span class=\"pre\">=</span> <span class=\"pre\">&lt;dagster.core.definitions.op_definition.OpDefinition</span> <span class=\"pre\">object&gt;</span></em><a class=\"reference internal\" href=\"../../../../../_modules/dagster_gcp/dataproc/ops#dataproc_op\"><span class=\"viewcode-link\"><span class=\"pre\">[source]</span></span></a><a class=\"headerlink\" href=\"#dagster_gcp.dataproc_op\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><div class=\"line-block\">\n<div class=\"line\"><br /></div>\n</div>\n<details class=\"summary-config-schema\">\n<summary>Config Schema:</summary><dl class=\"field-list\">\n<dt class=\"field-odd\">job_timeout_in_seconds (Int, optional)</dt>\n<dd class=\"field-odd\"><p>Optional. Maximum time in seconds to wait for the job being\ncompleted. Default is set to 1200 seconds (20 minutes).</p>\n<p><strong>Default Value:</strong> 1200</p>\n</dd>\n<dt class=\"field-even\">job_config (strict dict)</dt>\n<dd class=\"field-even\"><details class=\"summary-config-schema\">\n<summary>Config Schema:</summary><dl class=\"field-list\">\n<dt class=\"field-odd\">job (strict dict, optional)</dt>\n<dd class=\"field-odd\"><p>A Cloud Dataproc job resource.</p>\n<details class=\"summary-config-schema\">\n<summary>Config Schema:</summary><dl class=\"field-list\">\n<dt class=\"field-odd\">status (strict dict, optional)</dt>\n<dd class=\"field-odd\"><p>Cloud Dataproc job status.</p>\n</dd>\n<dt class=\"field-even\">placement (strict dict, optional)</dt>\n<dd class=\"field-even\"><p>Cloud Dataproc job config.</p>\n<details class=\"summary-config-schema\">\n<summary>Config Schema:</summary><dl class=\"field-list simple\">\n<dt class=\"field-odd\">clusterName (String, optional)</dt>\n<dd class=\"field-odd\"><p>Required. The name of the cluster where the job will\nbe submitted.</p>\n</dd>\n</dl>\n</details></dd>\n<dt class=\"field-even\">scheduling (strict dict, optional)</dt>\n<dd class=\"field-even\"><p>Job scheduling options.</p>\n<details class=\"summary-config-schema\">\n<summary>Config Schema:</summary><dl class=\"field-list simple\">\n<dt class=\"field-odd\">maxFailuresPerHour (Int, optional)</dt>\n<dd class=\"field-odd\"><p>Optional. Maximum number of times per hour a driver\nmay be restarted as a result of driver terminating with non-zero\ncode before job is reported failed.A job may be reported as\nthrashing if driver exits with non-zero code 4 times within 10\nminute window.Maximum value is 10.</p>\n</dd>\n</dl>\n</details></dd>\n<dt class=\"field-even\">pigJob (strict dict, optional)</dt>\n<dd class=\"field-even\"><p>A Cloud Dataproc job for running Apache Pig\n(<a class=\"reference external\" href=\"https://pig.apache.org/\">https://pig.apache.org/</a>) queries on YARN.</p>\n<details class=\"summary-config-schema\">\n<summary>Config Schema:</summary><dl class=\"field-list\">\n<dt class=\"field-odd\">queryFileUri (String, optional)</dt>\n<dd class=\"field-odd\"><p>The HCFS URI of the script that contains the Pig\nqueries.</p>\n</dd>\n<dt class=\"field-even\">queryList (strict dict, optional)</dt>\n<dd class=\"field-even\"><p>A list of queries to run on a cluster.</p>\n<details class=\"summary-config-schema\">\n<summary>Config Schema:</summary><dl class=\"field-list simple\">\n<dt class=\"field-odd\">queries (List[String], optional)</dt>\n<dd class=\"field-odd\"><p>Required. The queries to execute. You do\nnot need to terminate a query with a semicolon. Multiple\nqueries can be specified in one string by separating\neach with a semicolon. Here is an example of an Cloud\nDataproc API snippet that uses a QueryList to specify a\nHiveJob: \u201chiveJob\u201d: {   \u201cqueryList\u201d: {     \u201cqueries\u201d: [\n\u201cquery1\u201d,       \u201cquery2\u201d,       \u201cquery3;query4\u201d,     ]\n} }</p>\n</dd>\n</dl>\n</details></dd>\n<dt class=\"field-even\">jarFileUris (List[String], optional)</dt>\n<dd class=\"field-even\"><p>Optional. HCFS URIs of jar files to add to the\nCLASSPATH of the Pig Client and Hadoop MapReduce (MR) tasks. Can\ncontain Pig UDFs.</p>\n</dd>\n<dt class=\"field-odd\">scriptVariables (permissive dict, optional)</dt>\n<dd class=\"field-odd\"><p>Optional. Mapping of query variable names to values\n(equivalent to the Pig command: name=[value]).</p>\n</dd>\n<dt class=\"field-even\">loggingConfig (strict dict, optional)</dt>\n<dd class=\"field-even\"><p>The runtime logging config of the job.</p>\n<details class=\"summary-config-schema\">\n<summary>Config Schema:</summary><dl class=\"field-list simple\">\n<dt class=\"field-odd\">driverLogLevels (permissive dict, optional)</dt>\n<dd class=\"field-odd\"><p>The per-package log levels for the\ndriver. This may include \u201croot\u201d package name to\nconfigure rootLogger. Examples:  \u2018com.google = FATAL\u2019,\n\u2018root = INFO\u2019, \u2018org.apache = DEBUG\u2019</p>\n</dd>\n</dl>\n</details></dd>\n<dt class=\"field-even\">properties (permissive dict, optional)</dt>\n<dd class=\"field-even\"><p>Optional. A mapping of property names to values, used\nto configure Pig. Properties that conflict with values set by the\nCloud Dataproc API may be overwritten. Can include properties set in\n/etc/hadoop/conf/*-site.xml, /etc/pig/conf/pig.properties, and\nclasses in user code.</p>\n</dd>\n<dt class=\"field-odd\">continueOnFailure (Bool, optional)</dt>\n<dd class=\"field-odd\"><p>Optional. Whether to continue executing queries if a\nquery fails. The default value is false. Setting to true can be\nuseful when executing independent parallel queries.</p>\n</dd>\n</dl>\n</details></dd>\n<dt class=\"field-even\">hiveJob (strict dict, optional)</dt>\n<dd class=\"field-even\"><p>A Cloud Dataproc job for running Apache Hive\n(<a class=\"reference external\" href=\"https://hive.apache.org/\">https://hive.apache.org/</a>) queries on YARN.</p>\n<details class=\"summary-config-schema\">\n<summary>Config Schema:</summary><dl class=\"field-list\">\n<dt class=\"field-odd\">continueOnFailure (Bool, optional)</dt>\n<dd class=\"field-odd\"><p>Optional. Whether to continue executing queries if a\nquery fails. The default value is false. Setting to true can be\nuseful when executing independent parallel queries.</p>\n</dd>\n<dt class=\"field-even\">queryFileUri (String, optional)</dt>\n<dd class=\"field-even\"><p>The HCFS URI of the script that contains Hive\nqueries.</p>\n</dd>\n<dt class=\"field-odd\">queryList (strict dict, optional)</dt>\n<dd class=\"field-odd\"><p>A list of queries to run on a cluster.</p>\n<details class=\"summary-config-schema\">\n<summary>Config Schema:</summary><dl class=\"field-list simple\">\n<dt class=\"field-odd\">queries (List[String], optional)</dt>\n<dd class=\"field-odd\"><p>Required. The queries to execute. You do\nnot need to terminate a query with a semicolon. Multiple\nqueries can be specified in one string by separating\neach with a semicolon. Here is an example of an Cloud\nDataproc API snippet that uses a QueryList to specify a\nHiveJob: \u201chiveJob\u201d: {   \u201cqueryList\u201d: {     \u201cqueries\u201d: [\n\u201cquery1\u201d,       \u201cquery2\u201d,       \u201cquery3;query4\u201d,     ]\n} }</p>\n</dd>\n</dl>\n</details></dd>\n<dt class=\"field-even\">jarFileUris (List[String], optional)</dt>\n<dd class=\"field-even\"><p>Optional. HCFS URIs of jar files to add to the\nCLASSPATH of the Hive server and Hadoop MapReduce (MR) tasks. Can\ncontain Hive SerDes and UDFs.</p>\n</dd>\n<dt class=\"field-odd\">scriptVariables (permissive dict, optional)</dt>\n<dd class=\"field-odd\"><p>Optional. Mapping of query variable names to values\n(equivalent to the Hive command: SET name=\u201dvalue\u201d;).</p>\n</dd>\n<dt class=\"field-even\">properties (permissive dict, optional)</dt>\n<dd class=\"field-even\"><p>Optional. A mapping of property names and values,\nused to configure Hive. Properties that conflict with values set by\nthe Cloud Dataproc API may be overwritten. Can include properties\nset in /etc/hadoop/conf/*-site.xml, /etc/hive/conf/hive-site.xml,\nand classes in user code.</p>\n</dd>\n</dl>\n</details></dd>\n<dt class=\"field-odd\">labels (permissive dict, optional)</dt>\n<dd class=\"field-odd\"><p>Optional. The labels to associate with this job. Label keys must\ncontain 1 to 63 characters, and must conform to RFC 1035\n(<a class=\"reference external\" href=\"https://www.ietf.org/rfc/rfc1035.txt\">https://www.ietf.org/rfc/rfc1035.txt</a>). Label values may be empty, but, if\npresent, must contain 1 to 63 characters, and must conform to RFC 1035\n(<a class=\"reference external\" href=\"https://www.ietf.org/rfc/rfc1035.txt\">https://www.ietf.org/rfc/rfc1035.txt</a>). No more than 32 labels can be associated\nwith a job.</p>\n</dd>\n<dt class=\"field-even\">sparkJob (strict dict, optional)</dt>\n<dd class=\"field-even\"><p>A Cloud Dataproc job for running Apache Spark\n(<a class=\"reference external\" href=\"http://spark.apache.org/\">http://spark.apache.org/</a>) applications on YARN.</p>\n<details class=\"summary-config-schema\">\n<summary>Config Schema:</summary><dl class=\"field-list\">\n<dt class=\"field-odd\">archiveUris (List[String], optional)</dt>\n<dd class=\"field-odd\"><p>Optional. HCFS URIs of archives to be extracted in\nthe working directory of Spark drivers and tasks. Supported file\ntypes: .jar, .tar, .tar.gz, .tgz, and .zip.</p>\n</dd>\n<dt class=\"field-even\">mainJarFileUri (String, optional)</dt>\n<dd class=\"field-even\"><p>The HCFS URI of the jar file that contains the main\nclass.</p>\n</dd>\n<dt class=\"field-odd\">jarFileUris (List[String], optional)</dt>\n<dd class=\"field-odd\"><p>Optional. HCFS URIs of jar files to add to the\nCLASSPATHs of the Spark driver and tasks.</p>\n</dd>\n<dt class=\"field-even\">loggingConfig (strict dict, optional)</dt>\n<dd class=\"field-even\"><p>The runtime logging config of the job.</p>\n<details class=\"summary-config-schema\">\n<summary>Config Schema:</summary><dl class=\"field-list simple\">\n<dt class=\"field-odd\">driverLogLevels (permissive dict, optional)</dt>\n<dd class=\"field-odd\"><p>The per-package log levels for the\ndriver. This may include \u201croot\u201d package name to\nconfigure rootLogger. Examples:  \u2018com.google = FATAL\u2019,\n\u2018root = INFO\u2019, \u2018org.apache = DEBUG\u2019</p>\n</dd>\n</dl>\n</details></dd>\n<dt class=\"field-even\">properties (permissive dict, optional)</dt>\n<dd class=\"field-even\"><p>Optional. A mapping of property names to values, used\nto configure Spark. Properties that conflict with values set by the\nCloud Dataproc API may be overwritten. Can include properties set in\n/etc/spark/conf/spark-defaults.conf and classes in user code.</p>\n</dd>\n<dt class=\"field-odd\">args (List[String], optional)</dt>\n<dd class=\"field-odd\"><p>Optional. The arguments to pass to the driver. Do not\ninclude arguments, such as \u2013conf, that can be set as job\nproperties, since a collision may occur that causes an incorrect job\nsubmission.</p>\n</dd>\n<dt class=\"field-even\">fileUris (List[String], optional)</dt>\n<dd class=\"field-even\"><p>Optional. HCFS URIs of files to be copied to the\nworking directory of Spark drivers and distributed tasks. Useful for\nnaively parallel tasks.</p>\n</dd>\n<dt class=\"field-odd\">mainClass (String, optional)</dt>\n<dd class=\"field-odd\"><p>The name of the driver\u2019s main class. The jar file\nthat contains the class must be in the default CLASSPATH or\nspecified in jar_file_uris.</p>\n</dd>\n</dl>\n</details></dd>\n<dt class=\"field-even\">sparkSqlJob (strict dict, optional)</dt>\n<dd class=\"field-even\"><p>A Cloud Dataproc job for running Apache Spark SQL\n(<a class=\"reference external\" href=\"http://spark.apache.org/sql/\">http://spark.apache.org/sql/</a>) queries.</p>\n<details class=\"summary-config-schema\">\n<summary>Config Schema:</summary><dl class=\"field-list\">\n<dt class=\"field-odd\">queryList (strict dict, optional)</dt>\n<dd class=\"field-odd\"><p>A list of queries to run on a cluster.</p>\n<details class=\"summary-config-schema\">\n<summary>Config Schema:</summary><dl class=\"field-list simple\">\n<dt class=\"field-odd\">queries (List[String], optional)</dt>\n<dd class=\"field-odd\"><p>Required. The queries to execute. You do\nnot need to terminate a query with a semicolon. Multiple\nqueries can be specified in one string by separating\neach with a semicolon. Here is an example of an Cloud\nDataproc API snippet that uses a QueryList to specify a\nHiveJob: \u201chiveJob\u201d: {   \u201cqueryList\u201d: {     \u201cqueries\u201d: [\n\u201cquery1\u201d,       \u201cquery2\u201d,       \u201cquery3;query4\u201d,     ]\n} }</p>\n</dd>\n</dl>\n</details></dd>\n<dt class=\"field-even\">queryFileUri (String, optional)</dt>\n<dd class=\"field-even\"><p>The HCFS URI of the script that contains SQL\nqueries.</p>\n</dd>\n<dt class=\"field-odd\">scriptVariables (permissive dict, optional)</dt>\n<dd class=\"field-odd\"><p>Optional. Mapping of query variable names to values\n(equivalent to the Spark SQL command: SET name=\u201dvalue\u201d;).</p>\n</dd>\n<dt class=\"field-even\">jarFileUris (List[String], optional)</dt>\n<dd class=\"field-even\"><p>Optional. HCFS URIs of jar files to be added to the\nSpark CLASSPATH.</p>\n</dd>\n<dt class=\"field-odd\">loggingConfig (strict dict, optional)</dt>\n<dd class=\"field-odd\"><p>The runtime logging config of the job.</p>\n<details class=\"summary-config-schema\">\n<summary>Config Schema:</summary><dl class=\"field-list simple\">\n<dt class=\"field-odd\">driverLogLevels (permissive dict, optional)</dt>\n<dd class=\"field-odd\"><p>The per-package log levels for the\ndriver. This may include \u201croot\u201d package name to\nconfigure rootLogger. Examples:  \u2018com.google = FATAL\u2019,\n\u2018root = INFO\u2019, \u2018org.apache = DEBUG\u2019</p>\n</dd>\n</dl>\n</details></dd>\n<dt class=\"field-even\">properties (permissive dict, optional)</dt>\n<dd class=\"field-even\"><p>Optional. A mapping of property names to values, used\nto configure Spark SQL\u2019s SparkConf. Properties that conflict with\nvalues set by the Cloud Dataproc API may be overwritten.</p>\n</dd>\n</dl>\n</details></dd>\n<dt class=\"field-odd\">pysparkJob (strict dict, optional)</dt>\n<dd class=\"field-odd\"><p>A Cloud Dataproc job for running Apache PySpark\n(<a class=\"reference external\" href=\"https://spark.apache.org/docs/0.9.0/python-programming-guide.html\">https://spark.apache.org/docs/0.9.0/python-programming-guide.html</a>) applications\non YARN.</p>\n<details class=\"summary-config-schema\">\n<summary>Config Schema:</summary><dl class=\"field-list\">\n<dt class=\"field-odd\">jarFileUris (List[String], optional)</dt>\n<dd class=\"field-odd\"><p>Optional. HCFS URIs of jar files to add to the\nCLASSPATHs of the Python driver and tasks.</p>\n</dd>\n<dt class=\"field-even\">loggingConfig (strict dict, optional)</dt>\n<dd class=\"field-even\"><p>The runtime logging config of the job.</p>\n<details class=\"summary-config-schema\">\n<summary>Config Schema:</summary><dl class=\"field-list simple\">\n<dt class=\"field-odd\">driverLogLevels (permissive dict, optional)</dt>\n<dd class=\"field-odd\"><p>The per-package log levels for the\ndriver. This may include \u201croot\u201d package name to\nconfigure rootLogger. Examples:  \u2018com.google = FATAL\u2019,\n\u2018root = INFO\u2019, \u2018org.apache = DEBUG\u2019</p>\n</dd>\n</dl>\n</details></dd>\n<dt class=\"field-even\">properties (permissive dict, optional)</dt>\n<dd class=\"field-even\"><p>Optional. A mapping of property names to values, used\nto configure PySpark. Properties that conflict with values set by\nthe Cloud Dataproc API may be overwritten. Can include properties\nset in /etc/spark/conf/spark-defaults.conf and classes in user\ncode.</p>\n</dd>\n<dt class=\"field-odd\">args (List[String], optional)</dt>\n<dd class=\"field-odd\"><p>Optional. The arguments to pass to the driver. Do not\ninclude arguments, such as \u2013conf, that can be set as job\nproperties, since a collision may occur that causes an incorrect job\nsubmission.</p>\n</dd>\n<dt class=\"field-even\">fileUris (List[String], optional)</dt>\n<dd class=\"field-even\"><p>Optional. HCFS URIs of files to be copied to the\nworking directory of Python drivers and distributed tasks. Useful\nfor naively parallel tasks.</p>\n</dd>\n<dt class=\"field-odd\">pythonFileUris (List[String], optional)</dt>\n<dd class=\"field-odd\"><p>Optional. HCFS file URIs of Python files to pass to\nthe PySpark framework. Supported file types: .py, .egg, and\n.zip.</p>\n</dd>\n<dt class=\"field-even\">mainPythonFileUri (String, optional)</dt>\n<dd class=\"field-even\"><p>Required. The HCFS URI of the main Python file to use\nas the driver. Must be a .py file.</p>\n</dd>\n<dt class=\"field-odd\">archiveUris (List[String], optional)</dt>\n<dd class=\"field-odd\"><p>Optional. HCFS URIs of archives to be extracted in\nthe working directory of .jar, .tar, .tar.gz, .tgz, and .zip.</p>\n</dd>\n</dl>\n</details></dd>\n<dt class=\"field-even\">reference (strict dict, optional)</dt>\n<dd class=\"field-even\"><p>Encapsulates the full scoping used to reference a job.</p>\n<details class=\"summary-config-schema\">\n<summary>Config Schema:</summary><dl class=\"field-list simple\">\n<dt class=\"field-odd\">projectId (String, optional)</dt>\n<dd class=\"field-odd\"><p>Required. The ID of the Google Cloud Platform project\nthat the job belongs to.</p>\n</dd>\n<dt class=\"field-even\">jobId (String, optional)</dt>\n<dd class=\"field-even\"><p>Optional. The job ID, which must be unique within the\nproject.The ID must contain only letters (a-z, A-Z), numbers (0-9),\nunderscores (_), or hyphens (-). The maximum length is 100\ncharacters.If not specified by the caller, the job ID will be\nprovided by the server.</p>\n</dd>\n</dl>\n</details></dd>\n<dt class=\"field-odd\">hadoopJob (strict dict, optional)</dt>\n<dd class=\"field-odd\"><p>A Cloud Dataproc job for running Apache Hadoop MapReduce\n(<a class=\"reference external\" href=\"https://hadoop.apache.org/docs/current/hadoop-mapreduce-client/hadoop-mapreduce-client-core/MapReduceTutorial.html\">https://hadoop.apache.org/docs/current/hadoop-mapreduce-client/hadoop-mapreduce-client-core/MapReduceTutorial.html</a>)\njobs on Apache Hadoop YARN\n(<a class=\"reference external\" href=\"https://hadoop.apache.org/docs/r2.7.1/hadoop-yarn/hadoop-yarn-site/YARN.html\">https://hadoop.apache.org/docs/r2.7.1/hadoop-yarn/hadoop-yarn-site/YARN.html</a>).</p>\n<details class=\"summary-config-schema\">\n<summary>Config Schema:</summary><dl class=\"field-list\">\n<dt class=\"field-odd\">jarFileUris (List[String], optional)</dt>\n<dd class=\"field-odd\"><p>Optional. Jar file URIs to add to the CLASSPATHs of\nthe Hadoop driver and tasks.</p>\n</dd>\n<dt class=\"field-even\">loggingConfig (strict dict, optional)</dt>\n<dd class=\"field-even\"><p>The runtime logging config of the job.</p>\n<details class=\"summary-config-schema\">\n<summary>Config Schema:</summary><dl class=\"field-list simple\">\n<dt class=\"field-odd\">driverLogLevels (permissive dict, optional)</dt>\n<dd class=\"field-odd\"><p>The per-package log levels for the\ndriver. This may include \u201croot\u201d package name to\nconfigure rootLogger. Examples:  \u2018com.google = FATAL\u2019,\n\u2018root = INFO\u2019, \u2018org.apache = DEBUG\u2019</p>\n</dd>\n</dl>\n</details></dd>\n<dt class=\"field-even\">properties (permissive dict, optional)</dt>\n<dd class=\"field-even\"><p>Optional. A mapping of property names to values, used\nto configure Hadoop. Properties that conflict with values set by the\nCloud Dataproc API may be overwritten. Can include properties set in\n/etc/hadoop/conf/*-site and classes in user code.</p>\n</dd>\n<dt class=\"field-odd\">args (List[String], optional)</dt>\n<dd class=\"field-odd\"><p>Optional. The arguments to pass to the driver. Do not\ninclude arguments, such as -libjars or -Dfoo=bar, that can be set as\njob properties, since a collision may occur that causes an incorrect\njob submission.</p>\n</dd>\n<dt class=\"field-even\">fileUris (List[String], optional)</dt>\n<dd class=\"field-even\"><p>Optional. HCFS (Hadoop Compatible Filesystem) URIs of\nfiles to be copied to the working directory of Hadoop drivers and\ndistributed tasks. Useful for naively parallel tasks.</p>\n</dd>\n<dt class=\"field-odd\">mainClass (String, optional)</dt>\n<dd class=\"field-odd\"><p>The name of the driver\u2019s main class. The jar file\ncontaining the class must be in the default CLASSPATH or specified\nin jar_file_uris.</p>\n</dd>\n<dt class=\"field-even\">archiveUris (List[String], optional)</dt>\n<dd class=\"field-even\"><p>Optional. HCFS URIs of archives to be extracted in\nthe working directory of Hadoop drivers and tasks. Supported file\ntypes: .jar, .tar, .tar.gz, .tgz, or .zip.</p>\n</dd>\n<dt class=\"field-odd\">mainJarFileUri (String, optional)</dt>\n<dd class=\"field-odd\"><p>The HCFS URI of the jar file containing the main\nclass. Examples:\n\u2018gs://foo-bucket/analytics-binaries/extract-useful-metrics-mr.jar\u2019\n\u2018hdfs:/tmp/test-samples/custom-wordcount.jar\u2019\n\u2018file:///home/usr/lib/hadoop-mapreduce/hadoop-mapreduce-examples.jar\u2019</p>\n</dd>\n</dl>\n</details></dd>\n</dl>\n</details></dd>\n<dt class=\"field-even\">projectId (dagster.StringSource)</dt>\n<dd class=\"field-even\"><p>Required. Project ID for the project which the client acts on behalf of. Will\nbe passed when creating a dataset / job. If not passed, falls back to the default inferred\nfrom the environment.</p>\n</dd>\n<dt class=\"field-odd\">region (dagster.StringSource)</dt>\n<dd class=\"field-odd\"><p></p></dd>\n</dl>\n</details></dd>\n<dt class=\"field-even\">job_scoped_cluster (Bool, optional)</dt>\n<dd class=\"field-even\"><p>whether to create a cluster or use an existing cluster</p>\n<p><strong>Default Value:</strong> True</p>\n</dd>\n</dl>\n</details></dd></dl>\n\n<dl class=\"py data\">\n<dt id=\"dagster_gcp.dataproc_resource\">\n<code class=\"sig-prename descclassname\"><span class=\"pre\">dagster_gcp.</span></code><code class=\"sig-name descname\"><span class=\"pre\">dataproc_resource</span></code><em class=\"property\"> <span class=\"pre\">ResourceDefinition</span></em><a class=\"reference internal\" href=\"../../../../../_modules/dagster_gcp/dataproc/resources#dataproc_resource\"><span class=\"viewcode-link\"><span class=\"pre\">[source]</span></span></a><a class=\"headerlink\" href=\"#dagster_gcp.dataproc_resource\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><div class=\"line-block\">\n<div class=\"line\"><br /></div>\n</div>\n<details class=\"summary-config-schema\">\n<summary>Config Schema:</summary><dl class=\"field-list\">\n<dt class=\"field-odd\">projectId (dagster.StringSource)</dt>\n<dd class=\"field-odd\"><p>Required. Project ID for the project which the client acts on behalf of. Will\nbe passed when creating a dataset / job. If not passed, falls back to the default inferred\nfrom the environment.</p>\n</dd>\n<dt class=\"field-even\">region (dagster.StringSource)</dt>\n<dd class=\"field-even\"><p></p></dd>\n<dt class=\"field-odd\">clusterName (dagster.StringSource)</dt>\n<dd class=\"field-odd\"><p>Required. The cluster name. Cluster names within a project must be unique.\nNames of deleted clusters can be reused.</p>\n</dd>\n<dt class=\"field-even\">cluster_config (strict dict, optional)</dt>\n<dd class=\"field-even\"><p>The cluster config.</p>\n<details class=\"summary-config-schema\">\n<summary>Config Schema:</summary><dl class=\"field-list\">\n<dt class=\"field-odd\">masterConfig (strict dict, optional)</dt>\n<dd class=\"field-odd\"><p>Optional. The config settings for Compute Engine resources in an\ninstance group, such as a master or worker group.</p>\n<details class=\"summary-config-schema\">\n<summary>Config Schema:</summary><dl class=\"field-list\">\n<dt class=\"field-odd\">accelerators (List[strict dict], optional)</dt>\n<dd class=\"field-odd\"><p>Optional. The Compute Engine accelerator\nconfiguration for these instances.Beta Feature: This feature is\nstill under development. It may be changed before final release.</p>\n</dd>\n<dt class=\"field-even\">numInstances (Int, optional)</dt>\n<dd class=\"field-even\"><p>Optional. The number of VM instances in the instance\ngroup. For master instance groups, must be set to 1.</p>\n</dd>\n<dt class=\"field-odd\">diskConfig (strict dict, optional)</dt>\n<dd class=\"field-odd\"><p>Specifies the config of disk options for a group of\nVM instances.</p>\n<details class=\"summary-config-schema\">\n<summary>Config Schema:</summary><dl class=\"field-list simple\">\n<dt class=\"field-odd\">numLocalSsds (Int, optional)</dt>\n<dd class=\"field-odd\"><p>Optional. Number of attached SSDs, from 0\nto 4 (default is 0). If SSDs are not attached, the boot\ndisk is used to store runtime logs and HDFS\n(<a class=\"reference external\" href=\"https://hadoop.apache.org/docs/r1.2.1/hdfs_user_guide.html\">https://hadoop.apache.org/docs/r1.2.1/hdfs_user_guide.html</a>)\ndata. If one or more SSDs are attached, this runtime\nbulk data is spread across them, and the boot disk\ncontains only basic config and installed binaries.</p>\n</dd>\n<dt class=\"field-even\">bootDiskSizeGb (Int, optional)</dt>\n<dd class=\"field-even\"><p>Optional. Size in GB of the boot disk\n(default is 500GB).</p>\n</dd>\n<dt class=\"field-odd\">bootDiskType (String, optional)</dt>\n<dd class=\"field-odd\"><p>Optional. Type of the boot disk (default\nis \u201cpd-standard\u201d). Valid values: \u201cpd-ssd\u201d (Persistent\nDisk Solid State Drive) or \u201cpd-standard\u201d (Persistent\nDisk Hard Disk Drive).</p>\n</dd>\n</dl>\n</details></dd>\n<dt class=\"field-even\">managedGroupConfig (strict dict, optional)</dt>\n<dd class=\"field-even\"><p>Specifies the resources used to actively manage an\ninstance group.</p>\n</dd>\n<dt class=\"field-odd\">isPreemptible (Bool, optional)</dt>\n<dd class=\"field-odd\"><p>Optional. Specifies that this instance group contains\npreemptible instances.</p>\n</dd>\n<dt class=\"field-even\">imageUri (String, optional)</dt>\n<dd class=\"field-even\"><p>Optional. The Compute Engine image resource used for\ncluster instances. It can be specified or may be inferred from\nSoftwareConfig.image_version.</p>\n</dd>\n<dt class=\"field-odd\">machineTypeUri (String, optional)</dt>\n<dd class=\"field-odd\"><p>Optional. The Compute Engine machine type used for\ncluster instances.A full URL, partial URI, or short name are valid.\nExamples:\n<a class=\"reference external\" href=\"https://www.googleapis.com/compute/v1/projects/[project_id]/zones/us-east1-a/machineTypes/n1-standard-2\">https://www.googleapis.com/compute/v1/projects/[project_id]/zones/us-east1-a/machineTypes/n1-standard-2</a>\nprojects/[project_id]/zones/us-east1-a/machineTypes/n1-standard-2\nn1-standard-2Auto Zone Exception: If you are using the Cloud\nDataproc Auto Zone Placement feature, you must use the short name of\nthe machine type resource, for example, n1-standard-2.</p>\n</dd>\n</dl>\n</details></dd>\n<dt class=\"field-even\">secondaryWorkerConfig (strict dict, optional)</dt>\n<dd class=\"field-even\"><p>Optional. The config settings for Compute Engine resources in an\ninstance group, such as a master or worker group.</p>\n<details class=\"summary-config-schema\">\n<summary>Config Schema:</summary><dl class=\"field-list\">\n<dt class=\"field-odd\">accelerators (List[strict dict], optional)</dt>\n<dd class=\"field-odd\"><p>Optional. The Compute Engine accelerator\nconfiguration for these instances.Beta Feature: This feature is\nstill under development. It may be changed before final release.</p>\n</dd>\n<dt class=\"field-even\">numInstances (Int, optional)</dt>\n<dd class=\"field-even\"><p>Optional. The number of VM instances in the instance\ngroup. For master instance groups, must be set to 1.</p>\n</dd>\n<dt class=\"field-odd\">diskConfig (strict dict, optional)</dt>\n<dd class=\"field-odd\"><p>Specifies the config of disk options for a group of\nVM instances.</p>\n<details class=\"summary-config-schema\">\n<summary>Config Schema:</summary><dl class=\"field-list simple\">\n<dt class=\"field-odd\">numLocalSsds (Int, optional)</dt>\n<dd class=\"field-odd\"><p>Optional. Number of attached SSDs, from 0\nto 4 (default is 0). If SSDs are not attached, the boot\ndisk is used to store runtime logs and HDFS\n(<a class=\"reference external\" href=\"https://hadoop.apache.org/docs/r1.2.1/hdfs_user_guide.html\">https://hadoop.apache.org/docs/r1.2.1/hdfs_user_guide.html</a>)\ndata. If one or more SSDs are attached, this runtime\nbulk data is spread across them, and the boot disk\ncontains only basic config and installed binaries.</p>\n</dd>\n<dt class=\"field-even\">bootDiskSizeGb (Int, optional)</dt>\n<dd class=\"field-even\"><p>Optional. Size in GB of the boot disk\n(default is 500GB).</p>\n</dd>\n<dt class=\"field-odd\">bootDiskType (String, optional)</dt>\n<dd class=\"field-odd\"><p>Optional. Type of the boot disk (default\nis \u201cpd-standard\u201d). Valid values: \u201cpd-ssd\u201d (Persistent\nDisk Solid State Drive) or \u201cpd-standard\u201d (Persistent\nDisk Hard Disk Drive).</p>\n</dd>\n</dl>\n</details></dd>\n<dt class=\"field-even\">managedGroupConfig (strict dict, optional)</dt>\n<dd class=\"field-even\"><p>Specifies the resources used to actively manage an\ninstance group.</p>\n</dd>\n<dt class=\"field-odd\">isPreemptible (Bool, optional)</dt>\n<dd class=\"field-odd\"><p>Optional. Specifies that this instance group contains\npreemptible instances.</p>\n</dd>\n<dt class=\"field-even\">imageUri (String, optional)</dt>\n<dd class=\"field-even\"><p>Optional. The Compute Engine image resource used for\ncluster instances. It can be specified or may be inferred from\nSoftwareConfig.image_version.</p>\n</dd>\n<dt class=\"field-odd\">machineTypeUri (String, optional)</dt>\n<dd class=\"field-odd\"><p>Optional. The Compute Engine machine type used for\ncluster instances.A full URL, partial URI, or short name are valid.\nExamples:\n<a class=\"reference external\" href=\"https://www.googleapis.com/compute/v1/projects/[project_id]/zones/us-east1-a/machineTypes/n1-standard-2\">https://www.googleapis.com/compute/v1/projects/[project_id]/zones/us-east1-a/machineTypes/n1-standard-2</a>\nprojects/[project_id]/zones/us-east1-a/machineTypes/n1-standard-2\nn1-standard-2Auto Zone Exception: If you are using the Cloud\nDataproc Auto Zone Placement feature, you must use the short name of\nthe machine type resource, for example, n1-standard-2.</p>\n</dd>\n</dl>\n</details></dd>\n<dt class=\"field-even\">encryptionConfig (strict dict, optional)</dt>\n<dd class=\"field-even\"><p>Encryption settings for the cluster.</p>\n<details class=\"summary-config-schema\">\n<summary>Config Schema:</summary><dl class=\"field-list simple\">\n<dt class=\"field-odd\">gcePdKmsKeyName (String, optional)</dt>\n<dd class=\"field-odd\"><p>Optional. The Cloud KMS key name to use for PD disk\nencryption for all instances in the cluster.</p>\n</dd>\n</dl>\n</details></dd>\n<dt class=\"field-even\">securityConfig (strict dict, optional)</dt>\n<dd class=\"field-even\"><p>Security related configuration, including Kerberos.</p>\n<details class=\"summary-config-schema\">\n<summary>Config Schema:</summary><dl class=\"field-list\">\n<dt class=\"field-odd\">kerberosConfig (strict dict, optional)</dt>\n<dd class=\"field-odd\"><p>Specifies Kerberos related configuration.</p>\n<details class=\"summary-config-schema\">\n<summary>Config Schema:</summary><dl class=\"field-list simple\">\n<dt class=\"field-odd\">truststorePasswordUri (String, optional)</dt>\n<dd class=\"field-odd\"><p>Optional. The Cloud Storage URI of a KMS\nencrypted file containing the password to the user\nprovided truststore. For the self-signed certificate,\nthis password is generated by Dataproc.</p>\n</dd>\n<dt class=\"field-even\">enableKerberos (Bool, optional)</dt>\n<dd class=\"field-even\"><p>Optional. Flag to indicate whether to\nKerberize the cluster.</p>\n</dd>\n<dt class=\"field-odd\">truststoreUri (String, optional)</dt>\n<dd class=\"field-odd\"><p>Optional. The Cloud Storage URI of the\ntruststore file used for SSL encryption. If not\nprovided, Dataproc will provide a self-signed\ncertificate.</p>\n</dd>\n<dt class=\"field-even\">crossRealmTrustRealm (String, optional)</dt>\n<dd class=\"field-even\"><p>Optional. The remote realm the Dataproc\non-cluster KDC will trust, should the user enable cross\nrealm trust.</p>\n</dd>\n<dt class=\"field-odd\">rootPrincipalPasswordUri (String, optional)</dt>\n<dd class=\"field-odd\"><p>Required. The Cloud Storage URI of a KMS\nencrypted file containing the root principal\npassword.</p>\n</dd>\n<dt class=\"field-even\">kmsKeyUri (String, optional)</dt>\n<dd class=\"field-even\"><p>Required. The uri of the KMS key used to\nencrypt various sensitive files.</p>\n</dd>\n<dt class=\"field-odd\">crossRealmTrustKdc (String, optional)</dt>\n<dd class=\"field-odd\"><p>Optional. The KDC (IP or hostname) for\nthe remote trusted realm in a cross realm trust\nrelationship.</p>\n</dd>\n<dt class=\"field-even\">crossRealmTrustSharedPasswordUri (String, optional)</dt>\n<dd class=\"field-even\"><p>Optional. The Cloud Storage URI of a KMS\nencrypted file containing the shared password between\nthe on-cluster Kerberos realm and the remote trusted\nrealm, in a cross realm trust relationship.</p>\n</dd>\n<dt class=\"field-odd\">tgtLifetimeHours (Int, optional)</dt>\n<dd class=\"field-odd\"><p>Optional. The lifetime of the ticket\ngranting ticket, in hours. If not specified, or user\nspecifies 0, then default value 10 will be used.</p>\n</dd>\n<dt class=\"field-even\">keystoreUri (String, optional)</dt>\n<dd class=\"field-even\"><p>Optional. The Cloud Storage URI of the\nkeystore file used for SSL encryption. If not provided,\nDataproc will provide a self-signed certificate.</p>\n</dd>\n<dt class=\"field-odd\">keyPasswordUri (String, optional)</dt>\n<dd class=\"field-odd\"><p>Optional. The Cloud Storage URI of a KMS\nencrypted file containing the password to the user\nprovided key. For the self-signed certificate, this\npassword is generated by Dataproc.</p>\n</dd>\n<dt class=\"field-even\">keystorePasswordUri (String, optional)</dt>\n<dd class=\"field-even\"><p>Optional. The Cloud Storage URI of a KMS\nencrypted file containing the password to the user\nprovided keystore. For the self-signed certificate, this\npassword is generated by Dataproc.</p>\n</dd>\n<dt class=\"field-odd\">crossRealmTrustAdminServer (String, optional)</dt>\n<dd class=\"field-odd\"><p>Optional. The admin server (IP or\nhostname) for the remote trusted realm in a cross realm\ntrust relationship.</p>\n</dd>\n<dt class=\"field-even\">kdcDbKeyUri (String, optional)</dt>\n<dd class=\"field-even\"><p>Optional. The Cloud Storage URI of a KMS\nencrypted file containing the master key of the KDC\ndatabase.</p>\n</dd>\n</dl>\n</details></dd>\n</dl>\n</details></dd>\n<dt class=\"field-odd\">initializationActions (List[strict dict], optional)</dt>\n<dd class=\"field-odd\"><p>Optional. Commands to execute on each node after config is\ncompleted. By default, executables are run on master and all worker nodes. You\ncan test a node\u2019s role metadata to run an executable on a master or worker\nnode, as shown below using curl (you can also use wget): ROLE=$(curl -H\nMetadata-Flavor:Google\nhttp://metadata/computeMetadata/v1/instance/attributes/dataproc-role) if [[\n\u201c${ROLE}\u201d == \u2018Master\u2019 ]]; then   \u2026 master specific actions \u2026 else   \u2026\nworker specific actions \u2026 fi</p>\n</dd>\n<dt class=\"field-even\">configBucket (String, optional)</dt>\n<dd class=\"field-even\"><p>Optional. A Google Cloud Storage bucket used to stage job\ndependencies, config files, and job driver console output. If you do not specify\na staging bucket, Cloud Dataproc will determine a Cloud Storage location (US,\nASIA, or EU) for your cluster\u2019s staging bucket according to the Google Compute\nEngine zone where your cluster is deployed, and then create and manage this\nproject-level, per-location bucket (see Cloud Dataproc staging bucket).</p>\n</dd>\n<dt class=\"field-odd\">workerConfig (strict dict, optional)</dt>\n<dd class=\"field-odd\"><p>Optional. The config settings for Compute Engine resources in an\ninstance group, such as a master or worker group.</p>\n<details class=\"summary-config-schema\">\n<summary>Config Schema:</summary><dl class=\"field-list\">\n<dt class=\"field-odd\">accelerators (List[strict dict], optional)</dt>\n<dd class=\"field-odd\"><p>Optional. The Compute Engine accelerator\nconfiguration for these instances.Beta Feature: This feature is\nstill under development. It may be changed before final release.</p>\n</dd>\n<dt class=\"field-even\">numInstances (Int, optional)</dt>\n<dd class=\"field-even\"><p>Optional. The number of VM instances in the instance\ngroup. For master instance groups, must be set to 1.</p>\n</dd>\n<dt class=\"field-odd\">diskConfig (strict dict, optional)</dt>\n<dd class=\"field-odd\"><p>Specifies the config of disk options for a group of\nVM instances.</p>\n<details class=\"summary-config-schema\">\n<summary>Config Schema:</summary><dl class=\"field-list simple\">\n<dt class=\"field-odd\">numLocalSsds (Int, optional)</dt>\n<dd class=\"field-odd\"><p>Optional. Number of attached SSDs, from 0\nto 4 (default is 0). If SSDs are not attached, the boot\ndisk is used to store runtime logs and HDFS\n(<a class=\"reference external\" href=\"https://hadoop.apache.org/docs/r1.2.1/hdfs_user_guide.html\">https://hadoop.apache.org/docs/r1.2.1/hdfs_user_guide.html</a>)\ndata. If one or more SSDs are attached, this runtime\nbulk data is spread across them, and the boot disk\ncontains only basic config and installed binaries.</p>\n</dd>\n<dt class=\"field-even\">bootDiskSizeGb (Int, optional)</dt>\n<dd class=\"field-even\"><p>Optional. Size in GB of the boot disk\n(default is 500GB).</p>\n</dd>\n<dt class=\"field-odd\">bootDiskType (String, optional)</dt>\n<dd class=\"field-odd\"><p>Optional. Type of the boot disk (default\nis \u201cpd-standard\u201d). Valid values: \u201cpd-ssd\u201d (Persistent\nDisk Solid State Drive) or \u201cpd-standard\u201d (Persistent\nDisk Hard Disk Drive).</p>\n</dd>\n</dl>\n</details></dd>\n<dt class=\"field-even\">managedGroupConfig (strict dict, optional)</dt>\n<dd class=\"field-even\"><p>Specifies the resources used to actively manage an\ninstance group.</p>\n</dd>\n<dt class=\"field-odd\">isPreemptible (Bool, optional)</dt>\n<dd class=\"field-odd\"><p>Optional. Specifies that this instance group contains\npreemptible instances.</p>\n</dd>\n<dt class=\"field-even\">imageUri (String, optional)</dt>\n<dd class=\"field-even\"><p>Optional. The Compute Engine image resource used for\ncluster instances. It can be specified or may be inferred from\nSoftwareConfig.image_version.</p>\n</dd>\n<dt class=\"field-odd\">machineTypeUri (String, optional)</dt>\n<dd class=\"field-odd\"><p>Optional. The Compute Engine machine type used for\ncluster instances.A full URL, partial URI, or short name are valid.\nExamples:\n<a class=\"reference external\" href=\"https://www.googleapis.com/compute/v1/projects/[project_id]/zones/us-east1-a/machineTypes/n1-standard-2\">https://www.googleapis.com/compute/v1/projects/[project_id]/zones/us-east1-a/machineTypes/n1-standard-2</a>\nprojects/[project_id]/zones/us-east1-a/machineTypes/n1-standard-2\nn1-standard-2Auto Zone Exception: If you are using the Cloud\nDataproc Auto Zone Placement feature, you must use the short name of\nthe machine type resource, for example, n1-standard-2.</p>\n</dd>\n</dl>\n</details></dd>\n<dt class=\"field-even\">gceClusterConfig (strict dict, optional)</dt>\n<dd class=\"field-even\"><p>Common config settings for resources of Compute Engine cluster\ninstances, applicable to all instances in the cluster.</p>\n<details class=\"summary-config-schema\">\n<summary>Config Schema:</summary><dl class=\"field-list simple\">\n<dt class=\"field-odd\">networkUri (String, optional)</dt>\n<dd class=\"field-odd\"><p>Optional. The Compute Engine network to be used for\nmachine communications. Cannot be specified with subnetwork_uri. If\nneither network_uri nor subnetwork_uri is specified, the \u201cdefault\u201d\nnetwork of the project is used, if it exists. Cannot be a \u201cCustom\nSubnet Network\u201d (see Using Subnetworks for more information).A full\nURL, partial URI, or short name are valid. Examples:\n<a class=\"reference external\" href=\"https://www.googleapis.com/compute/v1/projects/[project_id]/regions/global/default\">https://www.googleapis.com/compute/v1/projects/[project_id]/regions/global/default</a>\nprojects/[project_id]/regions/global/default default</p>\n</dd>\n<dt class=\"field-even\">zoneUri (String, optional)</dt>\n<dd class=\"field-even\"><p>Optional. The zone where the Compute Engine cluster\nwill be located. On a create request, it is required in the \u201cglobal\u201d\nregion. If omitted in a non-global Cloud Dataproc region, the\nservice will pick a zone in the corresponding Compute Engine region.\nOn a get request, zone will always be present.A full URL, partial\nURI, or short name are valid. Examples:\n<a class=\"reference external\" href=\"https://www.googleapis.com/compute/v1/projects/[project_id]/zones/[zone\">https://www.googleapis.com/compute/v1/projects/[project_id]/zones/[zone</a>]\nprojects/[project_id]/zones/[zone] us-central1-f</p>\n</dd>\n<dt class=\"field-odd\">metadata (permissive dict, optional)</dt>\n<dd class=\"field-odd\"><p>The Compute Engine metadata entries to add to all\ninstances (see Project and instance metadata\n(<a class=\"reference external\" href=\"https://cloud.google.com/compute/docs/storing-retrieving-metadata#project_and_instance_metadata\">https://cloud.google.com/compute/docs/storing-retrieving-metadata#project_and_instance_metadata</a>)).</p>\n</dd>\n<dt class=\"field-even\">internalIpOnly (Bool, optional)</dt>\n<dd class=\"field-even\"><p>Optional. If true, all instances in the cluster will\nonly have internal IP addresses. By default, clusters are not\nrestricted to internal IP addresses, and will have ephemeral\nexternal IP addresses assigned to each instance. This\ninternal_ip_only restriction can only be enabled for subnetwork\nenabled networks, and all off-cluster dependencies must be\nconfigured to be accessible without external IP addresses.</p>\n</dd>\n<dt class=\"field-odd\">serviceAccountScopes (List[String], optional)</dt>\n<dd class=\"field-odd\"><p>Optional. The URIs of service account scopes to be\nincluded in Compute Engine instances. The following base set of\nscopes is always included:\n<a class=\"reference external\" href=\"https://www.googleapis.com/auth/cloud.useraccounts.readonly\">https://www.googleapis.com/auth/cloud.useraccounts.readonly</a>\n<a class=\"reference external\" href=\"https://www.googleapis.com/auth/devstorage.read_write\">https://www.googleapis.com/auth/devstorage.read_write</a>\n<a class=\"reference external\" href=\"https://www.googleapis.com/auth/logging.writeIf\">https://www.googleapis.com/auth/logging.writeIf</a> no scopes are\nspecified, the following defaults are also provided:\n<a class=\"reference external\" href=\"https://www.googleapis.com/auth/bigquery\">https://www.googleapis.com/auth/bigquery</a>\n<a class=\"reference external\" href=\"https://www.googleapis.com/auth/bigtable.admin.table\">https://www.googleapis.com/auth/bigtable.admin.table</a>\n<a class=\"reference external\" href=\"https://www.googleapis.com/auth/bigtable.data\">https://www.googleapis.com/auth/bigtable.data</a>\n<a class=\"reference external\" href=\"https://www.googleapis.com/auth/devstorage.full_control\">https://www.googleapis.com/auth/devstorage.full_control</a></p>\n</dd>\n<dt class=\"field-even\">tags (List[String], optional)</dt>\n<dd class=\"field-even\"><p>The Compute Engine tags to add to all instances (see\nTagging instances).</p>\n</dd>\n<dt class=\"field-odd\">serviceAccount (String, optional)</dt>\n<dd class=\"field-odd\"><p>Optional. The service account of the instances.\nDefaults to the default Compute Engine service account. Custom\nservice accounts need permissions equivalent to the following IAM\nroles: roles/logging.logWriter roles/storage.objectAdmin(see\n<a class=\"reference external\" href=\"https://cloud.google.com/compute/docs/access/service-accounts#custom_service_accounts\">https://cloud.google.com/compute/docs/access/service-accounts#custom_service_accounts</a>\nfor more information). Example:\n[account_id]&#64;[project_id].iam.gserviceaccount.com</p>\n</dd>\n<dt class=\"field-even\">subnetworkUri (String, optional)</dt>\n<dd class=\"field-even\"><p>Optional. The Compute Engine subnetwork to be used\nfor machine communications. Cannot be specified with network_uri.A\nfull URL, partial URI, or short name are valid. Examples:\n<a class=\"reference external\" href=\"https://www.googleapis.com/compute/v1/projects/[project_id]/regions/us-east1/subnetworks/sub0\">https://www.googleapis.com/compute/v1/projects/[project_id]/regions/us-east1/subnetworks/sub0</a>\nprojects/[project_id]/regions/us-east1/subnetworks/sub0 sub0</p>\n</dd>\n</dl>\n</details></dd>\n<dt class=\"field-odd\">softwareConfig (strict dict, optional)</dt>\n<dd class=\"field-odd\"><p>Specifies the selection and config of software inside the\ncluster.</p>\n<details class=\"summary-config-schema\">\n<summary>Config Schema:</summary><dl class=\"field-list simple\">\n<dt class=\"field-odd\">properties (permissive dict, optional)</dt>\n<dd class=\"field-odd\"><p>Optional. The properties to set on daemon config\nfiles.Property keys are specified in prefix:property format, for\nexample core:hadoop.tmp.dir. The following are supported prefixes\nand their mappings: capacity-scheduler: capacity-scheduler.xml core:\ncore-site.xml distcp: distcp-default.xml hdfs: hdfs-site.xml hive:\nhive-site.xml mapred: mapred-site.xml pig: pig.properties spark:\nspark-defaults.conf yarn: yarn-site.xmlFor more information, see\nCluster properties.</p>\n</dd>\n<dt class=\"field-even\">optionalComponents (List[Component], optional)</dt>\n<dd class=\"field-even\"><p>The set of optional components to activate on the\ncluster.</p>\n</dd>\n<dt class=\"field-odd\">imageVersion (String, optional)</dt>\n<dd class=\"field-odd\"><p>Optional. The version of software inside the cluster.\nIt must be one of the supported Cloud Dataproc Versions, such as\n\u201c1.2\u201d (including a subminor version, such as \u201c1.2.29\u201d), or the\n\u201cpreview\u201d version. If unspecified, it defaults to the latest Debian\nversion.</p>\n</dd>\n</dl>\n</details></dd>\n</dl>\n</details></dd>\n</dl>\n</details></dd></dl>\n\n</div>\n<div class=\"section\" id=\"gcs\">\n<h2>GCS<a class=\"headerlink\" href=\"#gcs\" title=\"Permalink to this headline\">\u00b6</a></h2>\n<dl class=\"py data\">\n<dt id=\"dagster_gcp.gcs_resource\">\n<code class=\"sig-prename descclassname\"><span class=\"pre\">dagster_gcp.</span></code><code class=\"sig-name descname\"><span class=\"pre\">gcs_resource</span></code><em class=\"property\"> <span class=\"pre\">ResourceDefinition</span></em><a class=\"reference internal\" href=\"../../../../../_modules/dagster_gcp/gcs/resources#gcs_resource\"><span class=\"viewcode-link\"><span class=\"pre\">[source]</span></span></a><a class=\"headerlink\" href=\"#dagster_gcp.gcs_resource\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><div class=\"line-block\">\n<div class=\"line\"><br /></div>\n</div>\n<details class=\"summary-config-schema\">\n<summary>Config Schema:</summary><dl class=\"field-list simple\">\n<dt class=\"field-odd\">project (Union[dagster.StringSource, None], optional)</dt>\n<dd class=\"field-odd\"><p>Project name</p>\n</dd>\n</dl>\n</details></dd></dl>\n\n<dl class=\"py class\">\n<dt id=\"dagster_gcp.GCSFileHandle\">\n<em class=\"property\"><span class=\"pre\">class</span> </em><code class=\"sig-prename descclassname\"><span class=\"pre\">dagster_gcp.</span></code><code class=\"sig-name descname\"><span class=\"pre\">GCSFileHandle</span></code><span class=\"sig-paren\">(</span><em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">gcs_bucket</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">gcs_key</span></span></em><span class=\"sig-paren\">)</span><a class=\"reference internal\" href=\"../../../../../_modules/dagster_gcp/gcs/file_manager#GCSFileHandle\"><span class=\"viewcode-link\"><span class=\"pre\">[source]</span></span></a><a class=\"headerlink\" href=\"#dagster_gcp.GCSFileHandle\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>A reference to a file on GCS.</p>\n<dl class=\"py method\">\n<dt id=\"dagster_gcp.GCSFileHandle.gcs_bucket\">\n<em class=\"property\"><span class=\"pre\">property</span> </em><code class=\"sig-name descname\"><span class=\"pre\">gcs_bucket</span></code><a class=\"headerlink\" href=\"#dagster_gcp.GCSFileHandle.gcs_bucket\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>The name of the GCS bucket.</p>\n<dl class=\"field-list simple\">\n<dt class=\"field-odd\">Type</dt>\n<dd class=\"field-odd\"><p><a class=\"reference external\" href=\"https://docs.python.org/3/library/stdtypes.html#str\" title=\"(in Python v3.8)\">str</a></p>\n</dd>\n</dl>\n</dd></dl>\n\n<dl class=\"py method\">\n<dt id=\"dagster_gcp.GCSFileHandle.gcs_key\">\n<em class=\"property\"><span class=\"pre\">property</span> </em><code class=\"sig-name descname\"><span class=\"pre\">gcs_key</span></code><a class=\"headerlink\" href=\"#dagster_gcp.GCSFileHandle.gcs_key\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>The GCS key.</p>\n<dl class=\"field-list simple\">\n<dt class=\"field-odd\">Type</dt>\n<dd class=\"field-odd\"><p><a class=\"reference external\" href=\"https://docs.python.org/3/library/stdtypes.html#str\" title=\"(in Python v3.8)\">str</a></p>\n</dd>\n</dl>\n</dd></dl>\n\n<dl class=\"py method\">\n<dt id=\"dagster_gcp.GCSFileHandle.gcs_path\">\n<em class=\"property\"><span class=\"pre\">property</span> </em><code class=\"sig-name descname\"><span class=\"pre\">gcs_path</span></code><a class=\"headerlink\" href=\"#dagster_gcp.GCSFileHandle.gcs_path\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>The file\u2019s GCS URL.</p>\n<dl class=\"field-list simple\">\n<dt class=\"field-odd\">Type</dt>\n<dd class=\"field-odd\"><p><a class=\"reference external\" href=\"https://docs.python.org/3/library/stdtypes.html#str\" title=\"(in Python v3.8)\">str</a></p>\n</dd>\n</dl>\n</dd></dl>\n\n<dl class=\"py method\">\n<dt id=\"dagster_gcp.GCSFileHandle.path_desc\">\n<em class=\"property\"><span class=\"pre\">property</span> </em><code class=\"sig-name descname\"><span class=\"pre\">path_desc</span></code><a class=\"headerlink\" href=\"#dagster_gcp.GCSFileHandle.path_desc\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>The file\u2019s GCS URL.</p>\n<dl class=\"field-list simple\">\n<dt class=\"field-odd\">Type</dt>\n<dd class=\"field-odd\"><p><a class=\"reference external\" href=\"https://docs.python.org/3/library/stdtypes.html#str\" title=\"(in Python v3.8)\">str</a></p>\n</dd>\n</dl>\n</dd></dl>\n\n</dd></dl>\n\n<dl class=\"py data\">\n<dt id=\"dagster_gcp.gcs_file_manager\">\n<code class=\"sig-prename descclassname\"><span class=\"pre\">dagster_gcp.</span></code><code class=\"sig-name descname\"><span class=\"pre\">gcs_file_manager</span></code><em class=\"property\"> <span class=\"pre\">ResourceDefinition</span></em><a class=\"reference internal\" href=\"../../../../../_modules/dagster_gcp/gcs/resources#gcs_file_manager\"><span class=\"viewcode-link\"><span class=\"pre\">[source]</span></span></a><a class=\"headerlink\" href=\"#dagster_gcp.gcs_file_manager\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>FileManager that provides abstract access to GCS.</p>\n<p>Implements the <a class=\"reference internal\" href=\"../../internals#dagster.core.storage.file_manager.FileManager\" title=\"dagster.core.storage.file_manager.FileManager\"><code class=\"xref py py-class docutils literal notranslate\"><span class=\"pre\">FileManager</span></code></a> API.</p>\n</dd></dl>\n\n<dl class=\"py data\">\n<dt id=\"dagster_gcp.gcs.gcs_pickle_io_manager\">\n<code class=\"sig-prename descclassname\"><span class=\"pre\">dagster_gcp.gcs.</span></code><code class=\"sig-name descname\"><span class=\"pre\">gcs_pickle_io_manager</span></code><em class=\"property\"> <span class=\"pre\">IOManagerDefinition</span></em><a class=\"reference internal\" href=\"../../../../../_modules/dagster_gcp/gcs/io_manager#gcs_pickle_io_manager\"><span class=\"viewcode-link\"><span class=\"pre\">[source]</span></span></a><a class=\"headerlink\" href=\"#dagster_gcp.gcs.gcs_pickle_io_manager\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><div class=\"line-block\">\n<div class=\"line\"><br /></div>\n</div>\n<details class=\"summary-config-schema\">\n<summary>Config Schema:</summary><dl class=\"field-list simple\">\n<dt class=\"field-odd\">gcs_bucket (dagster.StringSource)</dt>\n<dd class=\"field-odd\"><p></p></dd>\n<dt class=\"field-even\">gcs_prefix (dagster.StringSource, optional)</dt>\n<dd class=\"field-even\"><p><strong>Default Value:</strong> \u2018dagster\u2019</p>\n</dd>\n</dl>\n</details><p>Persistent IO manager using GCS for storage.</p>\n<p>Serializes objects via pickling. Suitable for objects storage for distributed executors, so long\nas each execution node has network connectivity and credentials for GCS and the backing bucket.</p>\n<p>Assigns each op output to a unique filepath containing run ID, step key, and output name.\nAssigns each asset to a single filesystem path, at \u201c&lt;base_dir&gt;/&lt;asset_key&gt;\u201d. If the asset key\nhas multiple components, the final component is used as the name of the file, and the preceding\ncomponents as parent directories under the base_dir.</p>\n<p>Subsequent materializations of an asset will overwrite previous materializations of that asset.\nWith a base directory of \u201c/my/base/path\u201d, an asset with key\n<cite>AssetKey([\u201cone\u201d, \u201ctwo\u201d, \u201cthree\u201d])</cite> would be stored in a file called \u201cthree\u201d in a directory\nwith path \u201c/my/base/path/one/two/\u201d.</p>\n<p>Attach this resource definition to your job to make it available to your ops.</p>\n<div class=\"highlight-python notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"nd\">@job</span><span class=\"p\">(</span><span class=\"n\">resource_defs</span><span class=\"o\">=</span><span class=\"p\">{</span><span class=\"s1\">&#39;io_manager&#39;</span><span class=\"p\">:</span> <span class=\"n\">gcs_pickle_io_manager</span><span class=\"p\">,</span> <span class=\"s1\">&#39;gcs&#39;</span><span class=\"p\">:</span> <span class=\"n\">gcs_resource</span><span class=\"p\">,</span> <span class=\"o\">...</span><span class=\"p\">})</span>\n<span class=\"k\">def</span> <span class=\"nf\">my_job</span><span class=\"p\">():</span>\n    <span class=\"n\">my_op</span><span class=\"p\">()</span>\n</pre></div>\n</div>\n<p>You may configure this storage as follows:</p>\n<div class=\"highlight-YAML notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"nt\">resources</span><span class=\"p\">:</span><span class=\"w\"></span>\n<span class=\"w\">    </span><span class=\"nt\">io_manager</span><span class=\"p\">:</span><span class=\"w\"></span>\n<span class=\"w\">        </span><span class=\"nt\">config</span><span class=\"p\">:</span><span class=\"w\"></span>\n<span class=\"w\">            </span><span class=\"nt\">gcs_bucket</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"l l-Scalar l-Scalar-Plain\">my-cool-bucket</span><span class=\"w\"></span>\n<span class=\"w\">            </span><span class=\"nt\">gcs_prefix</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"l l-Scalar l-Scalar-Plain\">good/prefix-for-files-</span><span class=\"w\"></span>\n</pre></div>\n</div>\n</dd></dl>\n\n</div>\n<div class=\"section\" id=\"legacy-apis\">\n<h2>Legacy APIs<a class=\"headerlink\" href=\"#legacy-apis\" title=\"Permalink to this headline\">\u00b6</a></h2>\n<dl class=\"py function\">\n<dt id=\"dagster_gcp.bq_solid_for_queries\">\n<code class=\"sig-prename descclassname\"><span class=\"pre\">dagster_gcp.</span></code><code class=\"sig-name descname\"><span class=\"pre\">bq_solid_for_queries</span></code><span class=\"sig-paren\">(</span><em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">sql_queries</span></span></em><span class=\"sig-paren\">)</span><a class=\"reference internal\" href=\"../../../../../_modules/dagster_gcp/bigquery/ops#bq_solid_for_queries\"><span class=\"viewcode-link\"><span class=\"pre\">[source]</span></span></a><a class=\"headerlink\" href=\"#dagster_gcp.bq_solid_for_queries\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Executes BigQuery SQL queries.</p>\n<p>Expects a BQ client to be provisioned in resources as context.resources.bigquery.</p>\n</dd></dl>\n\n<dl class=\"py function\">\n<dt id=\"dagster_gcp.dataproc_solid\">\n<code class=\"sig-prename descclassname\"><span class=\"pre\">dagster_gcp.</span></code><code class=\"sig-name descname\"><span class=\"pre\">dataproc_solid</span></code><span class=\"sig-paren\">(</span><em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">context</span></span></em><span class=\"sig-paren\">)</span><a class=\"reference internal\" href=\"../../../../../_modules/dagster_gcp/dataproc/ops#dataproc_solid\"><span class=\"viewcode-link\"><span class=\"pre\">[source]</span></span></a><a class=\"headerlink\" href=\"#dagster_gcp.dataproc_solid\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd></dd></dl>\n\n</div>\n</div>\n", "current_page_name": "sections/api/apidocs/libraries/dagster-gcp", "customsidebar": null, "display_toc": true, "meta": null, "metatags": "", "next": {"link": "../dagster-ge/", "title": "Great Expectations (dagster-ge)"}, "page_source_suffix": ".rst", "parents": [], "prev": {"link": "../dagster-docker/", "title": "Orchestration on Docker"}, "rellinks": [["genindex", "General Index", "I", "index"], ["py-modindex", "Python Module Index", "", "modules"], ["sections/api/apidocs/libraries/dagster-ge", "Great Expectations (dagster-ge)", "N", "next"], ["sections/api/apidocs/libraries/dagster-docker", "Orchestration on Docker", "P", "previous"]], "sidebars": ["globaltoc.html", "searchbox.html"], "sourcename": "sections/api/apidocs/libraries/dagster-gcp.rst.txt", "title": "GCP (dagster-gcp)", "toc": "<ul>\n<li><a class=\"reference internal\" href=\"#\">GCP (dagster-gcp)</a><ul>\n<li><a class=\"reference internal\" href=\"#bigquery\">BigQuery</a></li>\n<li><a class=\"reference internal\" href=\"#dataproc\">Dataproc</a></li>\n<li><a class=\"reference internal\" href=\"#gcs\">GCS</a></li>\n<li><a class=\"reference internal\" href=\"#legacy-apis\">Legacy APIs</a></li>\n</ul>\n</li>\n</ul>\n"}, "dagster-ge": {"alabaster_version": "0.7.12", "body": "<div class=\"section\" id=\"great-expectations-dagster-ge\">\n<h1>Great Expectations (dagster-ge)<a class=\"headerlink\" href=\"#great-expectations-dagster-ge\" title=\"Permalink to this headline\">\u00b6</a></h1>\n<dl class=\"py function\">\n<dt id=\"dagster_ge.ge_validation_solid_factory\">\n<code class=\"sig-prename descclassname\"><span class=\"pre\">dagster_ge.</span></code><code class=\"sig-name descname\"><span class=\"pre\">ge_validation_solid_factory</span></code><span class=\"sig-paren\">(</span><em class=\"sig-param\"><span class=\"pre\">name</span></em>, <em class=\"sig-param\"><span class=\"pre\">datasource_name</span></em>, <em class=\"sig-param\"><span class=\"pre\">suite_name</span></em>, <em class=\"sig-param\"><span class=\"pre\">validation_operator_name=None</span></em>, <em class=\"sig-param\"><span class=\"pre\">input_dagster_type=&lt;dagster.core.types.dagster_type.DagsterType</span> <span class=\"pre\">object&gt;</span></em>, <em class=\"sig-param\"><span class=\"pre\">batch_kwargs=None</span></em><span class=\"sig-paren\">)</span><a class=\"reference internal\" href=\"../../../../../_modules/dagster_ge/factory#ge_validation_solid_factory\"><span class=\"viewcode-link\"><span class=\"pre\">[source]</span></span></a><a class=\"headerlink\" href=\"#dagster_ge.ge_validation_solid_factory\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Generates solids for interacting with GE.</p>\n<dl class=\"field-list simple\">\n<dt class=\"field-odd\">Parameters</dt>\n<dd class=\"field-odd\"><ul class=\"simple\">\n<li><p><strong>name</strong> (<a class=\"reference external\" href=\"https://docs.python.org/3/library/stdtypes.html#str\" title=\"(in Python v3.8)\"><em>str</em></a>) \u2013 the name of the solid</p></li>\n<li><p><strong>datasource_name</strong> (<a class=\"reference external\" href=\"https://docs.python.org/3/library/stdtypes.html#str\" title=\"(in Python v3.8)\"><em>str</em></a>) \u2013 the name of your DataSource, see your great_expectations.yml</p></li>\n<li><p><strong>suite_name</strong> (<a class=\"reference external\" href=\"https://docs.python.org/3/library/stdtypes.html#str\" title=\"(in Python v3.8)\"><em>str</em></a>) \u2013 the name of your expectation suite, see your great_expectations.yml</p></li>\n<li><p><strong>validation_operator_name</strong> (<em>Optional</em><em>[</em><a class=\"reference external\" href=\"https://docs.python.org/3/library/stdtypes.html#str\" title=\"(in Python v3.8)\"><em>str</em></a><em>]</em>) \u2013 what validation operator to run  \u2013 defaults to None,\nwhich generates an ephemeral validator.\nIf you want to save data docs, use \u2018action_list_operator\u2019.\nSee <a class=\"reference external\" href=\"https://docs.greatexpectations.io/en/latest/reference/core_concepts/validation_operators_and_actions.html\">https://docs.greatexpectations.io/en/latest/reference/core_concepts/validation_operators_and_actions.html</a></p></li>\n<li><p><strong>input_dagster_type</strong> (<a class=\"reference internal\" href=\"../../types#dagster.DagsterType\" title=\"dagster.DagsterType\"><em>DagsterType</em></a>) \u2013 the Dagster type used to type check the input to the\nsolid. Defaults to <cite>dagster_pandas.DataFrame</cite>.</p></li>\n<li><p><strong>batch_kwargs</strong> (<em>Optional</em><em>[</em><a class=\"reference external\" href=\"https://docs.python.org/3/library/stdtypes.html#dict\" title=\"(in Python v3.8)\"><em>dict</em></a><em>]</em>) \u2013 overrides the <cite>batch_kwargs</cite> parameter when calling the\n<cite>ge_data_context</cite>\u2019s <cite>get_batch</cite> method. Defaults to <cite>{\u201cdataset\u201d: dataset}</cite>,\nwhere <cite>dataset</cite> is the input to the generated solid.</p></li>\n</ul>\n</dd>\n<dt class=\"field-even\">Returns</dt>\n<dd class=\"field-even\"><p>A solid that takes in a set of data and yields both an expectation with relevant metadata\nand an output with all the metadata (for user processing)</p>\n</dd>\n</dl>\n</dd></dl>\n\n<dl class=\"py function\">\n<dt id=\"dagster_ge.ge_validation_op_factory\">\n<code class=\"sig-prename descclassname\"><span class=\"pre\">dagster_ge.</span></code><code class=\"sig-name descname\"><span class=\"pre\">ge_validation_op_factory</span></code><span class=\"sig-paren\">(</span><em class=\"sig-param\"><span class=\"pre\">name</span></em>, <em class=\"sig-param\"><span class=\"pre\">datasource_name</span></em>, <em class=\"sig-param\"><span class=\"pre\">suite_name</span></em>, <em class=\"sig-param\"><span class=\"pre\">validation_operator_name=None</span></em>, <em class=\"sig-param\"><span class=\"pre\">input_dagster_type=&lt;dagster.core.types.dagster_type.DagsterType</span> <span class=\"pre\">object&gt;</span></em>, <em class=\"sig-param\"><span class=\"pre\">batch_kwargs=None</span></em><span class=\"sig-paren\">)</span><a class=\"reference internal\" href=\"../../../../../_modules/dagster_ge/factory#ge_validation_op_factory\"><span class=\"viewcode-link\"><span class=\"pre\">[source]</span></span></a><a class=\"headerlink\" href=\"#dagster_ge.ge_validation_op_factory\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Generates ops for interacting with GE.</p>\n<dl class=\"field-list simple\">\n<dt class=\"field-odd\">Parameters</dt>\n<dd class=\"field-odd\"><ul class=\"simple\">\n<li><p><strong>name</strong> (<a class=\"reference external\" href=\"https://docs.python.org/3/library/stdtypes.html#str\" title=\"(in Python v3.8)\"><em>str</em></a>) \u2013 the name of the op</p></li>\n<li><p><strong>datasource_name</strong> (<a class=\"reference external\" href=\"https://docs.python.org/3/library/stdtypes.html#str\" title=\"(in Python v3.8)\"><em>str</em></a>) \u2013 the name of your DataSource, see your great_expectations.yml</p></li>\n<li><p><strong>suite_name</strong> (<a class=\"reference external\" href=\"https://docs.python.org/3/library/stdtypes.html#str\" title=\"(in Python v3.8)\"><em>str</em></a>) \u2013 the name of your expectation suite, see your great_expectations.yml</p></li>\n<li><p><strong>validation_operator_name</strong> (<em>Optional</em><em>[</em><a class=\"reference external\" href=\"https://docs.python.org/3/library/stdtypes.html#str\" title=\"(in Python v3.8)\"><em>str</em></a><em>]</em>) \u2013 what validation operator to run  \u2013 defaults to\nNone, which generates an ephemeral validator.  If you want to save data docs, use\n\u2018action_list_operator\u2019.\nSee <a class=\"reference external\" href=\"https://docs.greatexpectations.io/en/latest/reference/core_concepts/validation_operators_and_actions.html\">https://docs.greatexpectations.io/en/latest/reference/core_concepts/validation_operators_and_actions.html</a></p></li>\n<li><p><strong>input_dagster_type</strong> (<a class=\"reference internal\" href=\"../../types#dagster.DagsterType\" title=\"dagster.DagsterType\"><em>DagsterType</em></a>) \u2013 the Dagster type used to type check the input to the op.\nDefaults to <cite>dagster_pandas.DataFrame</cite>.</p></li>\n<li><p><strong>batch_kwargs</strong> (<em>Optional</em><em>[</em><a class=\"reference external\" href=\"https://docs.python.org/3/library/stdtypes.html#dict\" title=\"(in Python v3.8)\"><em>dict</em></a><em>]</em>) \u2013 overrides the <cite>batch_kwargs</cite> parameter when calling the\n<cite>ge_data_context</cite>\u2019s <cite>get_batch</cite> method. Defaults to <cite>{\u201cdataset\u201d: dataset}</cite>, where\n<cite>dataset</cite> is the input to the generated op.</p></li>\n</ul>\n</dd>\n<dt class=\"field-even\">Returns</dt>\n<dd class=\"field-even\"><p>A solid that takes in a set of data and yields both an expectation with relevant metadata\nand an output with all the metadata (for user processing)</p>\n</dd>\n</dl>\n</dd></dl>\n\n</div>\n", "current_page_name": "sections/api/apidocs/libraries/dagster-ge", "customsidebar": null, "display_toc": false, "meta": null, "metatags": "", "next": {"link": "../dagster-github/", "title": "GitHub (dagster-github)"}, "page_source_suffix": ".rst", "parents": [], "prev": {"link": "../dagster-gcp/", "title": "GCP (dagster-gcp)"}, "rellinks": [["genindex", "General Index", "I", "index"], ["py-modindex", "Python Module Index", "", "modules"], ["sections/api/apidocs/libraries/dagster-github", "GitHub (dagster-github)", "N", "next"], ["sections/api/apidocs/libraries/dagster-gcp", "GCP (dagster-gcp)", "P", "previous"]], "sidebars": ["globaltoc.html", "searchbox.html"], "sourcename": "sections/api/apidocs/libraries/dagster-ge.rst.txt", "title": "Great Expectations (dagster-ge)", "toc": "<ul>\n<li><a class=\"reference internal\" href=\"#\">Great Expectations (dagster-ge)</a></li>\n</ul>\n"}, "dagster-github": {"alabaster_version": "0.7.12", "body": "<div class=\"section\" id=\"github-dagster-github\">\n<h1>GitHub (dagster-github)<a class=\"headerlink\" href=\"#github-dagster-github\" title=\"Permalink to this headline\">\u00b6</a></h1>\n<p>This library provides an integration with GitHub Apps, to support performing various automation\noperations within your github repositories and with the tighter permissions scopes that github apps\nallow for vs using a personal token.</p>\n<p>Presently, it provides a thin wrapper on the <a class=\"reference external\" href=\"https://developer.github.com/v4/\">github v4 graphql API</a>.</p>\n<p>To use this integration, you\u2019ll first need to create a GitHub App for it.</p>\n<ol class=\"arabic simple\">\n<li><p><strong>Create App</strong>: Follow the instructions in\n<a class=\"reference external\" href=\"https://developer.github.com/apps/quickstart-guides/setting-up-your-development-environment/\">https://developer.github.com/apps/quickstart-guides/setting-up-your-development-environment/</a>, You will end up with a private key and App ID, which will be used when configuring the\n<code class=\"docutils literal notranslate\"><span class=\"pre\">dagster-github</span></code> resource. <strong>Note</strong> you will need to grant your app the relevent permissions\nfor the API requests you want to make, for example to post issues it will need read/write access\nfor the issues repository permission, more info on GitHub application permissions can be found\n<a class=\"reference external\" href=\"https://developer.github.com/v3/apps/permissions/\">here</a></p></li>\n<li><p><strong>Install App</strong>: Follow the instructions in\n<a class=\"reference external\" href=\"https://developer.github.com/apps/quickstart-guides/setting-up-your-development-environment/#step-7-install-the-app-on-your-account\">https://developer.github.com/apps/quickstart-guides/setting-up-your-development-environment/#step-7-install-the-app-on-your-account</a></p></li>\n<li><p><strong>Find your installation_id</strong>: You can pull this from the GitHub app administration page,\n<code class=\"docutils literal notranslate\"><span class=\"pre\">https://github.com/apps/&lt;app-name&gt;/installations/&lt;installation_id&gt;</span></code>. <strong>Note</strong> if your app is\ninstalled more than once you can also programatically retrieve these IDs.</p></li>\n</ol>\n<p>Sharing your App ID and Installation ID is fine, but make sure that the Private Key for your app is\nstored securily.</p>\n</div>\n<div class=\"section\" id=\"posting-issues\">\n<h1>Posting Issues<a class=\"headerlink\" href=\"#posting-issues\" title=\"Permalink to this headline\">\u00b6</a></h1>\n<p>Now, you can create issues in GitHub from Dagster with the GitHub resource:</p>\n<div class=\"highlight-python notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"kn\">import</span> <span class=\"nn\">os</span>\n\n<span class=\"kn\">from</span> <span class=\"nn\">dagster</span> <span class=\"kn\">import</span> <span class=\"n\">job</span><span class=\"p\">,</span> <span class=\"n\">op</span>\n<span class=\"kn\">from</span> <span class=\"nn\">dagster_github</span> <span class=\"kn\">import</span> <span class=\"n\">github_resource</span>\n\n\n<span class=\"nd\">@op</span><span class=\"p\">(</span><span class=\"n\">resource_defs</span><span class=\"o\">=</span><span class=\"p\">{</span><span class=\"s1\">&#39;github&#39;</span><span class=\"p\">})</span>\n<span class=\"k\">def</span> <span class=\"nf\">github_op</span><span class=\"p\">(</span><span class=\"n\">context</span><span class=\"p\">):</span>\n    <span class=\"n\">context</span><span class=\"o\">.</span><span class=\"n\">resources</span><span class=\"o\">.</span><span class=\"n\">github</span><span class=\"o\">.</span><span class=\"n\">create_issue</span><span class=\"p\">(</span>\n        <span class=\"n\">repo_name</span><span class=\"o\">=</span><span class=\"s1\">&#39;dagster&#39;</span><span class=\"p\">,</span>\n        <span class=\"n\">repo_owner</span><span class=\"o\">=</span><span class=\"s1\">&#39;dagster-io&#39;</span><span class=\"p\">,</span>\n        <span class=\"n\">title</span><span class=\"o\">=</span><span class=\"s1\">&#39;Dagster</span><span class=\"se\">\\&#39;</span><span class=\"s1\">s first github issue&#39;</span><span class=\"p\">,</span>\n        <span class=\"n\">body</span><span class=\"o\">=</span><span class=\"s1\">&#39;this open source thing seems like a pretty good idea&#39;</span><span class=\"p\">,</span>\n    <span class=\"p\">)</span>\n\n<span class=\"nd\">@job</span><span class=\"p\">(</span><span class=\"n\">resource_defs</span><span class=\"o\">=</span><span class=\"p\">{</span><span class=\"s1\">&#39;github&#39;</span><span class=\"p\">:</span> <span class=\"n\">github_resource</span><span class=\"p\">})</span>\n<span class=\"k\">def</span> <span class=\"nf\">github_job</span><span class=\"p\">():</span>\n    <span class=\"n\">github_op</span><span class=\"p\">()</span>\n\n<span class=\"n\">github_job</span><span class=\"o\">.</span><span class=\"n\">execute_in_process</span><span class=\"p\">(</span>\n    <span class=\"n\">run_config</span><span class=\"o\">=</span><span class=\"p\">{</span><span class=\"s1\">&#39;resources&#39;</span><span class=\"p\">:</span> <span class=\"p\">{</span><span class=\"s1\">&#39;github&#39;</span><span class=\"p\">:</span> <span class=\"p\">{</span><span class=\"s1\">&#39;config&#39;</span><span class=\"p\">:</span> <span class=\"p\">{</span>\n        <span class=\"s2\">&quot;github_app_id&quot;</span><span class=\"p\">:</span> <span class=\"n\">os</span><span class=\"o\">.</span><span class=\"n\">getenv</span><span class=\"p\">(</span><span class=\"s1\">&#39;GITHUB_APP_ID&#39;</span><span class=\"p\">),</span>\n        <span class=\"s2\">&quot;github_app_private_rsa_key&quot;</span><span class=\"p\">:</span> <span class=\"n\">os</span><span class=\"o\">.</span><span class=\"n\">getenv</span><span class=\"p\">(</span><span class=\"s1\">&#39;GITHUB_PRIVATE_KEY&#39;</span><span class=\"p\">),</span>\n        <span class=\"s2\">&quot;github_installation_id&quot;</span><span class=\"p\">:</span> <span class=\"n\">os</span><span class=\"o\">.</span><span class=\"n\">getenv</span><span class=\"p\">(</span><span class=\"s1\">&#39;GITHUB_INSTALLATION_ID&#39;</span><span class=\"p\">),</span>\n    <span class=\"p\">}}}}</span>\n<span class=\"p\">)</span>\n</pre></div>\n</div>\n<p>Run the above code, and you\u2019ll see the issue appear in GitHub:\n<span class=\"raw-html-m2r\"><img width=\"636\" src=\"https://user-images.githubusercontent.com/5943242/72079909-c6012300-32c9-11ea-8acc-19e6f5f3d067.png\"></span></p>\n<p>GitHub enterprise users can provide their hostname in the run config. Provide <code class=\"docutils literal notranslate\"><span class=\"pre\">github_hostname</span></code>\nas part of your github config like below.</p>\n<div class=\"highlight-python notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"n\">github_job</span><span class=\"o\">.</span><span class=\"n\">execute_in_process</span><span class=\"p\">(</span>\n    <span class=\"n\">run_config</span><span class=\"o\">=</span><span class=\"p\">{</span><span class=\"s1\">&#39;resources&#39;</span><span class=\"p\">:</span> <span class=\"p\">{</span><span class=\"s1\">&#39;github&#39;</span><span class=\"p\">:</span> <span class=\"p\">{</span><span class=\"s1\">&#39;config&#39;</span><span class=\"p\">:</span> <span class=\"p\">{</span>\n        <span class=\"s2\">&quot;github_app_id&quot;</span><span class=\"p\">:</span> <span class=\"n\">os</span><span class=\"o\">.</span><span class=\"n\">getenv</span><span class=\"p\">(</span><span class=\"s1\">&#39;GITHUB_APP_ID&#39;</span><span class=\"p\">),</span>\n        <span class=\"s2\">&quot;github_app_private_rsa_key&quot;</span><span class=\"p\">:</span> <span class=\"n\">os</span><span class=\"o\">.</span><span class=\"n\">getenv</span><span class=\"p\">(</span><span class=\"s1\">&#39;GITHUB_PRIVATE_KEY&#39;</span><span class=\"p\">),</span>\n        <span class=\"s2\">&quot;github_installation_id&quot;</span><span class=\"p\">:</span> <span class=\"n\">os</span><span class=\"o\">.</span><span class=\"n\">getenv</span><span class=\"p\">(</span><span class=\"s1\">&#39;GITHUB_INSTALLATION_ID&#39;</span><span class=\"p\">),</span>\n        <span class=\"s2\">&quot;github_hostname&quot;</span><span class=\"p\">:</span> <span class=\"n\">os</span><span class=\"o\">.</span><span class=\"n\">getenv</span><span class=\"p\">(</span><span class=\"s1\">&#39;GITHUB_HOSTNAME&#39;</span><span class=\"p\">),</span>\n    <span class=\"p\">}}}}</span>\n</pre></div>\n</div>\n<p>By provisioning <code class=\"docutils literal notranslate\"><span class=\"pre\">github_resource</span></code> as a Dagster job resource, you can post to GitHub from\nwithin any op execution.</p>\n</div>\n<div class=\"section\" id=\"executing-graphql-queries\">\n<h1>Executing GraphQL queries<a class=\"headerlink\" href=\"#executing-graphql-queries\" title=\"Permalink to this headline\">\u00b6</a></h1>\n<div class=\"highlight-python notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"kn\">import</span> <span class=\"nn\">os</span>\n\n<span class=\"kn\">from</span> <span class=\"nn\">dagster</span> <span class=\"kn\">import</span> <span class=\"n\">job</span><span class=\"p\">,</span> <span class=\"n\">op</span>\n<span class=\"kn\">from</span> <span class=\"nn\">dagster_github</span> <span class=\"kn\">import</span> <span class=\"n\">github_resource</span>\n\n\n<span class=\"nd\">@op</span><span class=\"p\">(</span><span class=\"n\">resource_defs</span><span class=\"o\">=</span><span class=\"p\">{</span><span class=\"s1\">&#39;github&#39;</span><span class=\"p\">})</span>\n<span class=\"k\">def</span> <span class=\"nf\">github_op</span><span class=\"p\">(</span><span class=\"n\">context</span><span class=\"p\">):</span>\n    <span class=\"n\">context</span><span class=\"o\">.</span><span class=\"n\">resources</span><span class=\"o\">.</span><span class=\"n\">github</span><span class=\"o\">.</span><span class=\"n\">execute</span><span class=\"p\">(</span>\n        <span class=\"n\">query</span><span class=\"o\">=</span><span class=\"s2\">&quot;&quot;&quot;</span>\n<span class=\"s2\">        query get_repo_id($repo_name: String!, $repo_owner: String!) {</span>\n<span class=\"s2\">            repository(name: $repo_name, owner: $repo_owner) {</span>\n<span class=\"s2\">                id</span>\n<span class=\"s2\">            }</span>\n<span class=\"s2\">        }</span>\n<span class=\"s2\">        &quot;&quot;&quot;</span><span class=\"p\">,</span>\n        <span class=\"n\">variables</span><span class=\"o\">=</span><span class=\"p\">{</span><span class=\"s2\">&quot;repo_name&quot;</span><span class=\"p\">:</span> <span class=\"n\">repo_name</span><span class=\"p\">,</span> <span class=\"s2\">&quot;repo_owner&quot;</span><span class=\"p\">:</span> <span class=\"n\">repo_owner</span><span class=\"p\">},</span>\n    <span class=\"p\">)</span>\n\n<span class=\"nd\">@job</span><span class=\"p\">(</span><span class=\"n\">resource_defs</span><span class=\"o\">=</span><span class=\"p\">{</span><span class=\"s1\">&#39;github&#39;</span><span class=\"p\">:</span> <span class=\"n\">github_resource</span><span class=\"p\">})</span>\n<span class=\"k\">def</span> <span class=\"nf\">github_job</span><span class=\"p\">():</span>\n    <span class=\"n\">github_op</span><span class=\"p\">()</span>\n\n<span class=\"n\">github_job</span><span class=\"o\">.</span><span class=\"n\">execute_in_process</span><span class=\"p\">(</span>\n    <span class=\"n\">run_config</span><span class=\"o\">=</span><span class=\"p\">{</span><span class=\"s1\">&#39;resources&#39;</span><span class=\"p\">:</span> <span class=\"p\">{</span><span class=\"s1\">&#39;github&#39;</span><span class=\"p\">:</span> <span class=\"p\">{</span><span class=\"s1\">&#39;config&#39;</span><span class=\"p\">:</span> <span class=\"p\">{</span>\n        <span class=\"s2\">&quot;github_app_id&quot;</span><span class=\"p\">:</span> <span class=\"n\">os</span><span class=\"o\">.</span><span class=\"n\">getenv</span><span class=\"p\">(</span><span class=\"s1\">&#39;GITHUB_APP_ID&#39;</span><span class=\"p\">),</span>\n        <span class=\"s2\">&quot;github_app_private_rsa_key&quot;</span><span class=\"p\">:</span> <span class=\"n\">os</span><span class=\"o\">.</span><span class=\"n\">getenv</span><span class=\"p\">(</span><span class=\"s1\">&#39;GITHUB_PRIVATE_KEY&#39;</span><span class=\"p\">),</span>\n        <span class=\"s2\">&quot;github_installation_id&quot;</span><span class=\"p\">:</span> <span class=\"n\">os</span><span class=\"o\">.</span><span class=\"n\">getenv</span><span class=\"p\">(</span><span class=\"s1\">&#39;GITHUB_INSTALLATION_ID&#39;</span><span class=\"p\">),</span>\n    <span class=\"p\">}}}}</span>\n<span class=\"p\">)</span>\n</pre></div>\n</div>\n<dl class=\"py data\">\n<dt id=\"dagster_github.github_resource\">\n<code class=\"sig-prename descclassname\"><span class=\"pre\">dagster_github.</span></code><code class=\"sig-name descname\"><span class=\"pre\">github_resource</span></code><em class=\"property\"> <span class=\"pre\">ResourceDefinition</span></em><a class=\"reference internal\" href=\"../../../../../_modules/dagster_github/resources#github_resource\"><span class=\"viewcode-link\"><span class=\"pre\">[source]</span></span></a><a class=\"headerlink\" href=\"#dagster_github.github_resource\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><div class=\"line-block\">\n<div class=\"line\"><br /></div>\n</div>\n<details class=\"summary-config-schema\">\n<summary>Config Schema:</summary><dl class=\"field-list simple\">\n<dt class=\"field-odd\">github_app_id (dagster.IntSource)</dt>\n<dd class=\"field-odd\"><p>Github Application ID, for more info see <a class=\"reference external\" href=\"https://developer.github.com/apps/\">https://developer.github.com/apps/</a></p>\n</dd>\n<dt class=\"field-even\">github_app_private_rsa_key (dagster.StringSource)</dt>\n<dd class=\"field-even\"><p>Github Application Private RSA key text, for more info see <a class=\"reference external\" href=\"https://developer.github.com/apps/\">https://developer.github.com/apps/</a></p>\n</dd>\n<dt class=\"field-odd\">github_installation_id (dagster.IntSource, optional)</dt>\n<dd class=\"field-odd\"><p>Github Application Installation ID, for more info see <a class=\"reference external\" href=\"https://developer.github.com/apps/\">https://developer.github.com/apps/</a></p>\n</dd>\n<dt class=\"field-even\">github_hostname (dagster.StringSource, optional)</dt>\n<dd class=\"field-even\"><p>Github hostname. Defaults to <cite>api.github.com</cite>, for more info see <a class=\"reference external\" href=\"https://developer.github.com/apps/\">https://developer.github.com/apps/</a></p>\n</dd>\n</dl>\n</details></dd></dl>\n\n</div>\n", "current_page_name": "sections/api/apidocs/libraries/dagster-github", "customsidebar": null, "display_toc": true, "meta": null, "metatags": "", "next": {"link": "../dagster-k8s/", "title": "Kubernetes (dagster-k8s)"}, "page_source_suffix": ".rst", "parents": [], "prev": {"link": "../dagster-ge/", "title": "Great Expectations (dagster-ge)"}, "rellinks": [["genindex", "General Index", "I", "index"], ["py-modindex", "Python Module Index", "", "modules"], ["sections/api/apidocs/libraries/dagster-k8s", "Kubernetes (dagster-k8s)", "N", "next"], ["sections/api/apidocs/libraries/dagster-ge", "Great Expectations (dagster-ge)", "P", "previous"]], "sidebars": ["globaltoc.html", "searchbox.html"], "sourcename": "sections/api/apidocs/libraries/dagster-github.rst.txt", "title": "GitHub (dagster-github)", "toc": "<ul>\n<li><a class=\"reference internal\" href=\"#\">GitHub (dagster-github)</a></li>\n<li><a class=\"reference internal\" href=\"#posting-issues\">Posting Issues</a></li>\n<li><a class=\"reference internal\" href=\"#executing-graphql-queries\">Executing GraphQL queries</a></li>\n</ul>\n"}, "dagster-graphql": {"alabaster_version": "0.7.12", "body": "<div class=\"section\" id=\"graphql-dagster-graphql\">\n<h1>GraphQL (dagster-graphql)<a class=\"headerlink\" href=\"#graphql-dagster-graphql\" title=\"Permalink to this headline\">\u00b6</a></h1>\n<div class=\"section\" id=\"python-client\">\n<h2>Python Client<a class=\"headerlink\" href=\"#python-client\" title=\"Permalink to this headline\">\u00b6</a></h2>\n<dl class=\"py class\">\n<dt id=\"dagster_graphql.DagsterGraphQLClient\">\n<em class=\"property\"><span class=\"pre\">class</span> </em><code class=\"sig-prename descclassname\"><span class=\"pre\">dagster_graphql.</span></code><code class=\"sig-name descname\"><span class=\"pre\">DagsterGraphQLClient</span></code><span class=\"sig-paren\">(</span><em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">hostname</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">port_number</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">None</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">transport</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">None</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">use_https</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">False</span></span></em><span class=\"sig-paren\">)</span><a class=\"reference internal\" href=\"../../../../../_modules/dagster_graphql/client/client#DagsterGraphQLClient\"><span class=\"viewcode-link\"><span class=\"pre\">[source]</span></span></a><a class=\"headerlink\" href=\"#dagster_graphql.DagsterGraphQLClient\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Official Dagster Python Client for GraphQL</p>\n<p>Utilizes the gql library to dispatch queries over HTTP to a remote Dagster GraphQL Server</p>\n<p>As of now, all operations on this client are synchronous.</p>\n<p>Intended usage:</p>\n<div class=\"highlight-python notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"n\">client</span> <span class=\"o\">=</span> <span class=\"n\">DagsterGraphQLClient</span><span class=\"p\">(</span><span class=\"s2\">&quot;localhost&quot;</span><span class=\"p\">,</span> <span class=\"n\">port_number</span><span class=\"o\">=</span><span class=\"mi\">3000</span><span class=\"p\">)</span>\n<span class=\"n\">status</span> <span class=\"o\">=</span> <span class=\"n\">client</span><span class=\"o\">.</span><span class=\"n\">get_run_status</span><span class=\"p\">(</span><span class=\"o\">**</span><span class=\"n\">SOME_RUN_ID</span><span class=\"o\">**</span><span class=\"p\">)</span>\n</pre></div>\n</div>\n<dl class=\"field-list simple\">\n<dt class=\"field-odd\">Parameters</dt>\n<dd class=\"field-odd\"><ul class=\"simple\">\n<li><p><strong>hostname</strong> (<a class=\"reference external\" href=\"https://docs.python.org/3/library/stdtypes.html#str\" title=\"(in Python v3.8)\"><em>str</em></a>) \u2013 Hostname for the Dagster GraphQL API, like <cite>localhost</cite> or\n<cite>dagit.dagster.YOUR_ORG_HERE</cite>.</p></li>\n<li><p><strong>port_number</strong> (<em>Optional</em><em>[</em><a class=\"reference external\" href=\"https://docs.python.org/3/library/functions.html#int\" title=\"(in Python v3.8)\"><em>int</em></a><em>]</em><em>, </em><em>optional</em>) \u2013 Optional port number to connect to on the host.\nDefaults to None.</p></li>\n<li><p><strong>transport</strong> (<em>Optional</em><em>[</em><em>Transport</em><em>]</em><em>, </em><em>optional</em>) \u2013 A custom transport to use to connect to the\nGraphQL API with (e.g. for custom auth). Defaults to None.</p></li>\n<li><p><strong>use_https</strong> (<a class=\"reference external\" href=\"https://docs.python.org/3/library/functions.html#bool\" title=\"(in Python v3.8)\"><em>bool</em></a><em>, </em><em>optional</em>) \u2013 Whether to use https in the URL connection string for the\nGraphQL API. Defaults to False.</p></li>\n</ul>\n</dd>\n<dt class=\"field-even\">Raises</dt>\n<dd class=\"field-even\"><p><strong>ConnectionError</strong> \u2013 if the client cannot connect to the host.</p>\n</dd>\n</dl>\n<dl class=\"py method\">\n<dt id=\"dagster_graphql.DagsterGraphQLClient.get_run_status\">\n<code class=\"sig-name descname\"><span class=\"pre\">get_run_status</span></code><span class=\"sig-paren\">(</span><em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">run_id</span></span></em><span class=\"sig-paren\">)</span><a class=\"reference internal\" href=\"../../../../../_modules/dagster_graphql/client/client#DagsterGraphQLClient.get_run_status\"><span class=\"viewcode-link\"><span class=\"pre\">[source]</span></span></a><a class=\"headerlink\" href=\"#dagster_graphql.DagsterGraphQLClient.get_run_status\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Get the status of a given Pipeline Run</p>\n<dl class=\"field-list simple\">\n<dt class=\"field-odd\">Parameters</dt>\n<dd class=\"field-odd\"><p><strong>run_id</strong> (<a class=\"reference external\" href=\"https://docs.python.org/3/library/stdtypes.html#str\" title=\"(in Python v3.8)\"><em>str</em></a>) \u2013 run id of the requested pipeline run.</p>\n</dd>\n<dt class=\"field-even\">Raises</dt>\n<dd class=\"field-even\"><ul class=\"simple\">\n<li><p><a class=\"reference internal\" href=\"#dagster_graphql.DagsterGraphQLClientError\" title=\"dagster_graphql.DagsterGraphQLClientError\"><strong>DagsterGraphQLClientError</strong></a><strong>(</strong><strong>&quot;PipelineNotFoundError&quot;</strong><strong>, </strong><strong>message</strong><strong>)</strong> \u2013 if the requested run id is not found</p></li>\n<li><p><a class=\"reference internal\" href=\"#dagster_graphql.DagsterGraphQLClientError\" title=\"dagster_graphql.DagsterGraphQLClientError\"><strong>DagsterGraphQLClientError</strong></a><strong>(</strong><strong>&quot;PythonError&quot;</strong><strong>, </strong><strong>message</strong><strong>)</strong> \u2013 on internal framework errors</p></li>\n</ul>\n</dd>\n<dt class=\"field-odd\">Returns</dt>\n<dd class=\"field-odd\"><p>returns a status Enum describing the state of the requested pipeline run</p>\n</dd>\n<dt class=\"field-even\">Return type</dt>\n<dd class=\"field-even\"><p>PipelineRunStatus</p>\n</dd>\n</dl>\n</dd></dl>\n\n<dl class=\"py method\">\n<dt id=\"dagster_graphql.DagsterGraphQLClient.reload_repository_location\">\n<code class=\"sig-name descname\"><span class=\"pre\">reload_repository_location</span></code><span class=\"sig-paren\">(</span><em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">repository_location_name</span></span></em><span class=\"sig-paren\">)</span><a class=\"reference internal\" href=\"../../../../../_modules/dagster_graphql/client/client#DagsterGraphQLClient.reload_repository_location\"><span class=\"viewcode-link\"><span class=\"pre\">[source]</span></span></a><a class=\"headerlink\" href=\"#dagster_graphql.DagsterGraphQLClient.reload_repository_location\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Reloads a Dagster Repository Location, which reloads all repositories in that repository location.</p>\n<p>This is useful in a variety of contexts, including refreshing Dagit without restarting\nthe server.</p>\n<dl class=\"field-list simple\">\n<dt class=\"field-odd\">Parameters</dt>\n<dd class=\"field-odd\"><p><strong>repository_location_name</strong> (<a class=\"reference external\" href=\"https://docs.python.org/3/library/stdtypes.html#str\" title=\"(in Python v3.8)\"><em>str</em></a>) \u2013 The name of the repository location</p>\n</dd>\n<dt class=\"field-even\">Returns</dt>\n<dd class=\"field-even\"><p>Object with information about the result of the reload request</p>\n</dd>\n<dt class=\"field-odd\">Return type</dt>\n<dd class=\"field-odd\"><p><a class=\"reference internal\" href=\"#dagster_graphql.ReloadRepositoryLocationInfo\" title=\"dagster_graphql.ReloadRepositoryLocationInfo\">ReloadRepositoryLocationInfo</a></p>\n</dd>\n</dl>\n</dd></dl>\n\n<dl class=\"py method\">\n<dt id=\"dagster_graphql.DagsterGraphQLClient.shutdown_repository_location\">\n<code class=\"sig-name descname\"><span class=\"pre\">shutdown_repository_location</span></code><span class=\"sig-paren\">(</span><em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">repository_location_name</span></span></em><span class=\"sig-paren\">)</span><a class=\"reference internal\" href=\"../../../../../_modules/dagster_graphql/client/client#DagsterGraphQLClient.shutdown_repository_location\"><span class=\"viewcode-link\"><span class=\"pre\">[source]</span></span></a><a class=\"headerlink\" href=\"#dagster_graphql.DagsterGraphQLClient.shutdown_repository_location\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Shuts down the server that is serving metadata for the provided repository location.</p>\n<p>This is primarily useful when you want the server to be restarted by the compute environment\nin which it is running (for example, in Kubernetes, the pod in which the server is running\nwill automatically restart when the server is shut down, and the repository metadata will\nbe reloaded)</p>\n<dl class=\"field-list simple\">\n<dt class=\"field-odd\">Parameters</dt>\n<dd class=\"field-odd\"><p><strong>repository_location_name</strong> (<a class=\"reference external\" href=\"https://docs.python.org/3/library/stdtypes.html#str\" title=\"(in Python v3.8)\"><em>str</em></a>) \u2013 The name of the repository location</p>\n</dd>\n<dt class=\"field-even\">Returns</dt>\n<dd class=\"field-even\"><p>Object with information about the result of the reload request</p>\n</dd>\n<dt class=\"field-odd\">Return type</dt>\n<dd class=\"field-odd\"><p>ShutdownRepositoryLocationInfo</p>\n</dd>\n</dl>\n</dd></dl>\n\n<dl class=\"py method\">\n<dt id=\"dagster_graphql.DagsterGraphQLClient.submit_job_execution\">\n<code class=\"sig-name descname\"><span class=\"pre\">submit_job_execution</span></code><span class=\"sig-paren\">(</span><em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">job_name</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">repository_location_name</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">None</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">repository_name</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">None</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">run_config</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">None</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">tags</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">None</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">op_selection</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">None</span></span></em><span class=\"sig-paren\">)</span><a class=\"reference internal\" href=\"../../../../../_modules/dagster_graphql/client/client#DagsterGraphQLClient.submit_job_execution\"><span class=\"viewcode-link\"><span class=\"pre\">[source]</span></span></a><a class=\"headerlink\" href=\"#dagster_graphql.DagsterGraphQLClient.submit_job_execution\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Submits a job with attached configuration for execution.</p>\n<dl class=\"field-list simple\">\n<dt class=\"field-odd\">Parameters</dt>\n<dd class=\"field-odd\"><ul class=\"simple\">\n<li><p><strong>job_name</strong> (<a class=\"reference external\" href=\"https://docs.python.org/3/library/stdtypes.html#str\" title=\"(in Python v3.8)\"><em>str</em></a>) \u2013 The job\u2019s name</p></li>\n<li><p><strong>repository_location_name</strong> (<em>Optional</em><em>[</em><a class=\"reference external\" href=\"https://docs.python.org/3/library/stdtypes.html#str\" title=\"(in Python v3.8)\"><em>str</em></a><em>]</em>) \u2013 The name of the repository location where\nthe job is located. If omitted, the client will try to infer the repository location\nfrom the available options on the Dagster deployment. Defaults to None.</p></li>\n<li><p><strong>repository_name</strong> (<em>Optional</em><em>[</em><a class=\"reference external\" href=\"https://docs.python.org/3/library/stdtypes.html#str\" title=\"(in Python v3.8)\"><em>str</em></a><em>]</em>) \u2013 The name of the repository where the job is located.\nIf omitted, the client will try to infer the repository from the available options\non the Dagster deployment. Defaults to None.</p></li>\n<li><p><strong>run_config</strong> (<em>Optional</em><em>[</em><em>Dict</em><em>[</em><a class=\"reference external\" href=\"https://docs.python.org/3/library/stdtypes.html#str\" title=\"(in Python v3.8)\"><em>str</em></a><em>, </em><em>Any</em><em>]</em><em>]</em>) \u2013 This is the run config to execute the job with.\nNote that runConfigData is any-typed in the GraphQL type system. This type is used when passing in\nan arbitrary object for run config. However, it must conform to the constraints of the config\nschema for this job. If it does not, the client will throw a DagsterGraphQLClientError with a message of\nJobConfigValidationInvalid. Defaults to None.</p></li>\n<li><p><strong>tags</strong> (<em>Optional</em><em>[</em><em>Dict</em><em>[</em><a class=\"reference external\" href=\"https://docs.python.org/3/library/stdtypes.html#str\" title=\"(in Python v3.8)\"><em>str</em></a><em>, </em><em>Any</em><em>]</em><em>]</em>) \u2013 A set of tags to add to the job execution.</p></li>\n</ul>\n</dd>\n<dt class=\"field-even\">Raises</dt>\n<dd class=\"field-even\"><ul class=\"simple\">\n<li><p><a class=\"reference internal\" href=\"#dagster_graphql.DagsterGraphQLClientError\" title=\"dagster_graphql.DagsterGraphQLClientError\"><strong>DagsterGraphQLClientError</strong></a><strong>(</strong><strong>&quot;InvalidStepError&quot;</strong><strong>, </strong><strong>invalid_step_key</strong><strong>)</strong> \u2013 the job has an invalid step</p></li>\n<li><p><a class=\"reference internal\" href=\"#dagster_graphql.DagsterGraphQLClientError\" title=\"dagster_graphql.DagsterGraphQLClientError\"><strong>DagsterGraphQLClientError</strong></a><strong>(</strong><strong>&quot;InvalidOutputError&quot;</strong><strong>, </strong><strong>body=error_object</strong><strong>)</strong> \u2013 some solid has an invalid output within the job.\n    The error_object is of type dagster_graphql.InvalidOutputErrorInfo.</p></li>\n<li><p><a class=\"reference internal\" href=\"#dagster_graphql.DagsterGraphQLClientError\" title=\"dagster_graphql.DagsterGraphQLClientError\"><strong>DagsterGraphQLClientError</strong></a><strong>(</strong><strong>&quot;RunConflict&quot;</strong><strong>, </strong><strong>message</strong><strong>)</strong> \u2013 a <cite>DagsterRunConflict</cite> occured during execution.\n    This indicates that a conflicting job run already exists in run storage.</p></li>\n<li><p><a class=\"reference internal\" href=\"#dagster_graphql.DagsterGraphQLClientError\" title=\"dagster_graphql.DagsterGraphQLClientError\"><strong>DagsterGraphQLClientError</strong></a><strong>(</strong><strong>&quot;PipelineConfigurationInvalid&quot;</strong><strong>, </strong><strong>invalid_step_key</strong><strong>)</strong> \u2013 the run_config is not in the expected format\n    for the job</p></li>\n<li><p><a class=\"reference internal\" href=\"#dagster_graphql.DagsterGraphQLClientError\" title=\"dagster_graphql.DagsterGraphQLClientError\"><strong>DagsterGraphQLClientError</strong></a><strong>(</strong><strong>&quot;JobNotFoundError&quot;</strong><strong>, </strong><strong>message</strong><strong>)</strong> \u2013 the requested job does not exist</p></li>\n<li><p><a class=\"reference internal\" href=\"#dagster_graphql.DagsterGraphQLClientError\" title=\"dagster_graphql.DagsterGraphQLClientError\"><strong>DagsterGraphQLClientError</strong></a><strong>(</strong><strong>&quot;PythonError&quot;</strong><strong>, </strong><strong>message</strong><strong>)</strong> \u2013 an internal framework error occurred</p></li>\n</ul>\n</dd>\n<dt class=\"field-odd\">Returns</dt>\n<dd class=\"field-odd\"><p>run id of the submitted pipeline run</p>\n</dd>\n<dt class=\"field-even\">Return type</dt>\n<dd class=\"field-even\"><p><a class=\"reference external\" href=\"https://docs.python.org/3/library/stdtypes.html#str\" title=\"(in Python v3.8)\">str</a></p>\n</dd>\n</dl>\n</dd></dl>\n\n<dl class=\"py method\">\n<dt id=\"dagster_graphql.DagsterGraphQLClient.submit_pipeline_execution\">\n<code class=\"sig-name descname\"><span class=\"pre\">submit_pipeline_execution</span></code><span class=\"sig-paren\">(</span><em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">pipeline_name</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">repository_location_name</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">None</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">repository_name</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">None</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">run_config</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">None</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">mode</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">None</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">preset</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">None</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">tags</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">None</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">solid_selection</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">None</span></span></em><span class=\"sig-paren\">)</span><a class=\"reference internal\" href=\"../../../../../_modules/dagster_graphql/client/client#DagsterGraphQLClient.submit_pipeline_execution\"><span class=\"viewcode-link\"><span class=\"pre\">[source]</span></span></a><a class=\"headerlink\" href=\"#dagster_graphql.DagsterGraphQLClient.submit_pipeline_execution\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Submits a Pipeline with attached configuration for execution.</p>\n<dl class=\"field-list simple\">\n<dt class=\"field-odd\">Parameters</dt>\n<dd class=\"field-odd\"><ul class=\"simple\">\n<li><p><strong>pipeline_name</strong> (<a class=\"reference external\" href=\"https://docs.python.org/3/library/stdtypes.html#str\" title=\"(in Python v3.8)\"><em>str</em></a>) \u2013 The pipeline\u2019s name</p></li>\n<li><p><strong>repository_location_name</strong> (<em>Optional</em><em>[</em><a class=\"reference external\" href=\"https://docs.python.org/3/library/stdtypes.html#str\" title=\"(in Python v3.8)\"><em>str</em></a><em>]</em><em>, </em><em>optional</em>) \u2013 The name of the repository location where\nthe pipeline is located. If omitted, the client will try to infer the repository location\nfrom the available options on the Dagster deployment. Defaults to None.</p></li>\n<li><p><strong>repository_name</strong> (<em>Optional</em><em>[</em><a class=\"reference external\" href=\"https://docs.python.org/3/library/stdtypes.html#str\" title=\"(in Python v3.8)\"><em>str</em></a><em>]</em><em>, </em><em>optional</em>) \u2013 The name of the repository where the pipeline is located.\nIf omitted, the client will try to infer the repository from the available options\non the Dagster deployment. Defaults to None.</p></li>\n<li><p><strong>run_config</strong> (<em>Optional</em><em>[</em><em>Any</em><em>]</em><em>, </em><em>optional</em>) \u2013 This is the run config to execute the pipeline with.\nNote that runConfigData is any-typed in the GraphQL type system. This type is used when passing in\nan arbitrary object for run config. However, it must conform to the constraints of the config\nschema for this pipeline. If it does not, the client will throw a DagsterGraphQLClientError with a message of\nRunConfigValidationInvalid. Defaults to None.</p></li>\n<li><p><strong>mode</strong> (<em>Optional</em><em>[</em><a class=\"reference external\" href=\"https://docs.python.org/3/library/stdtypes.html#str\" title=\"(in Python v3.8)\"><em>str</em></a><em>]</em><em>, </em><em>optional</em>) \u2013 The mode to run the pipeline with. If you have not\ndefined any custom modes for your pipeline, the default mode is \u201cdefault\u201d. Defaults to None.</p></li>\n<li><p><strong>preset</strong> (<em>Optional</em><em>[</em><a class=\"reference external\" href=\"https://docs.python.org/3/library/stdtypes.html#str\" title=\"(in Python v3.8)\"><em>str</em></a><em>]</em><em>, </em><em>optional</em>) \u2013 The name of a pre-defined preset to use instead of a\nrun config. Defaults to None.</p></li>\n<li><p><strong>tags</strong> (<em>Optional</em><em>[</em><em>Dict</em><em>[</em><a class=\"reference external\" href=\"https://docs.python.org/3/library/stdtypes.html#str\" title=\"(in Python v3.8)\"><em>str</em></a><em>, </em><em>Any</em><em>]</em><em>]</em><em>, </em><em>optional</em>) \u2013 A set of tags to add to the pipeline execution.</p></li>\n</ul>\n</dd>\n<dt class=\"field-even\">Raises</dt>\n<dd class=\"field-even\"><ul class=\"simple\">\n<li><p><a class=\"reference internal\" href=\"#dagster_graphql.DagsterGraphQLClientError\" title=\"dagster_graphql.DagsterGraphQLClientError\"><strong>DagsterGraphQLClientError</strong></a><strong>(</strong><strong>&quot;InvalidStepError&quot;</strong><strong>, </strong><strong>invalid_step_key</strong><strong>)</strong> \u2013 the pipeline has an invalid step</p></li>\n<li><p><a class=\"reference internal\" href=\"#dagster_graphql.DagsterGraphQLClientError\" title=\"dagster_graphql.DagsterGraphQLClientError\"><strong>DagsterGraphQLClientError</strong></a><strong>(</strong><strong>&quot;InvalidOutputError&quot;</strong><strong>, </strong><strong>body=error_object</strong><strong>)</strong> \u2013 some solid has an invalid output within the pipeline.\n    The error_object is of type dagster_graphql.InvalidOutputErrorInfo.</p></li>\n<li><p><a class=\"reference internal\" href=\"#dagster_graphql.DagsterGraphQLClientError\" title=\"dagster_graphql.DagsterGraphQLClientError\"><strong>DagsterGraphQLClientError</strong></a><strong>(</strong><strong>&quot;ConflictingExecutionParamsError&quot;</strong><strong>, </strong><strong>invalid_step_key</strong><strong>)</strong> \u2013 a preset and a run_config &amp; mode are present\n    that conflict with one another</p></li>\n<li><p><a class=\"reference internal\" href=\"#dagster_graphql.DagsterGraphQLClientError\" title=\"dagster_graphql.DagsterGraphQLClientError\"><strong>DagsterGraphQLClientError</strong></a><strong>(</strong><strong>&quot;PresetNotFoundError&quot;</strong><strong>, </strong><strong>message</strong><strong>)</strong> \u2013 if the provided preset name is not found</p></li>\n<li><p><a class=\"reference internal\" href=\"#dagster_graphql.DagsterGraphQLClientError\" title=\"dagster_graphql.DagsterGraphQLClientError\"><strong>DagsterGraphQLClientError</strong></a><strong>(</strong><strong>&quot;RunConflict&quot;</strong><strong>, </strong><strong>message</strong><strong>)</strong> \u2013 a <cite>DagsterRunConflict</cite> occured during execution.\n    This indicates that a conflicting pipeline run already exists in run storage.</p></li>\n<li><p><a class=\"reference internal\" href=\"#dagster_graphql.DagsterGraphQLClientError\" title=\"dagster_graphql.DagsterGraphQLClientError\"><strong>DagsterGraphQLClientError</strong></a><strong>(</strong><strong>&quot;PipelineConfigurationInvalid&quot;</strong><strong>, </strong><strong>invalid_step_key</strong><strong>)</strong> \u2013 the run_config is not in the expected format\n    for the pipeline</p></li>\n<li><p><a class=\"reference internal\" href=\"#dagster_graphql.DagsterGraphQLClientError\" title=\"dagster_graphql.DagsterGraphQLClientError\"><strong>DagsterGraphQLClientError</strong></a><strong>(</strong><strong>&quot;PipelineNotFoundError&quot;</strong><strong>, </strong><strong>message</strong><strong>)</strong> \u2013 the requested pipeline does not exist</p></li>\n<li><p><a class=\"reference internal\" href=\"#dagster_graphql.DagsterGraphQLClientError\" title=\"dagster_graphql.DagsterGraphQLClientError\"><strong>DagsterGraphQLClientError</strong></a><strong>(</strong><strong>&quot;PythonError&quot;</strong><strong>, </strong><strong>message</strong><strong>)</strong> \u2013 an internal framework error occurred</p></li>\n</ul>\n</dd>\n<dt class=\"field-odd\">Returns</dt>\n<dd class=\"field-odd\"><p>run id of the submitted pipeline run</p>\n</dd>\n<dt class=\"field-even\">Return type</dt>\n<dd class=\"field-even\"><p><a class=\"reference external\" href=\"https://docs.python.org/3/library/stdtypes.html#str\" title=\"(in Python v3.8)\">str</a></p>\n</dd>\n</dl>\n</dd></dl>\n\n<dl class=\"py method\">\n<dt id=\"dagster_graphql.DagsterGraphQLClient.terminate_run\">\n<code class=\"sig-name descname\"><span class=\"pre\">terminate_run</span></code><span class=\"sig-paren\">(</span><em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">run_id</span></span></em><span class=\"sig-paren\">)</span><a class=\"reference internal\" href=\"../../../../../_modules/dagster_graphql/client/client#DagsterGraphQLClient.terminate_run\"><span class=\"viewcode-link\"><span class=\"pre\">[source]</span></span></a><a class=\"headerlink\" href=\"#dagster_graphql.DagsterGraphQLClient.terminate_run\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Terminates a pipeline run. This method it is useful when you would like to stop a pipeline run\nbased on a external event.</p>\n<dl class=\"field-list simple\">\n<dt class=\"field-odd\">Parameters</dt>\n<dd class=\"field-odd\"><p><strong>run_id</strong> (<a class=\"reference external\" href=\"https://docs.python.org/3/library/stdtypes.html#str\" title=\"(in Python v3.8)\"><em>str</em></a>) \u2013 The run id of the pipeline run to terminate</p>\n</dd>\n</dl>\n</dd></dl>\n\n</dd></dl>\n\n<dl class=\"py exception\">\n<dt id=\"dagster_graphql.DagsterGraphQLClientError\">\n<em class=\"property\"><span class=\"pre\">exception</span> </em><code class=\"sig-prename descclassname\"><span class=\"pre\">dagster_graphql.</span></code><code class=\"sig-name descname\"><span class=\"pre\">DagsterGraphQLClientError</span></code><span class=\"sig-paren\">(</span><em class=\"sig-param\"><span class=\"o\"><span class=\"pre\">*</span></span><span class=\"n\"><span class=\"pre\">args</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">body</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">None</span></span></em><span class=\"sig-paren\">)</span><a class=\"reference internal\" href=\"../../../../../_modules/dagster_graphql/client/utils#DagsterGraphQLClientError\"><span class=\"viewcode-link\"><span class=\"pre\">[source]</span></span></a><a class=\"headerlink\" href=\"#dagster_graphql.DagsterGraphQLClientError\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd></dd></dl>\n\n<dl class=\"py class\">\n<dt id=\"dagster_graphql.InvalidOutputErrorInfo\">\n<em class=\"property\"><span class=\"pre\">class</span> </em><code class=\"sig-prename descclassname\"><span class=\"pre\">dagster_graphql.</span></code><code class=\"sig-name descname\"><span class=\"pre\">InvalidOutputErrorInfo</span></code><span class=\"sig-paren\">(</span><em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">step_key</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">invalid_output_name</span></span></em><span class=\"sig-paren\">)</span><a class=\"reference internal\" href=\"../../../../../_modules/dagster_graphql/client/utils#InvalidOutputErrorInfo\"><span class=\"viewcode-link\"><span class=\"pre\">[source]</span></span></a><a class=\"headerlink\" href=\"#dagster_graphql.InvalidOutputErrorInfo\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>This class gives information about an InvalidOutputError from submitting a pipeline for execution\nfrom GraphQL.</p>\n<dl class=\"field-list simple\">\n<dt class=\"field-odd\">Parameters</dt>\n<dd class=\"field-odd\"><ul class=\"simple\">\n<li><p><strong>step_key</strong> (<a class=\"reference external\" href=\"https://docs.python.org/3/library/stdtypes.html#str\" title=\"(in Python v3.8)\"><em>str</em></a>) \u2013 key of the step that failed</p></li>\n<li><p><strong>invalid_output_name</strong> (<a class=\"reference external\" href=\"https://docs.python.org/3/library/stdtypes.html#str\" title=\"(in Python v3.8)\"><em>str</em></a>) \u2013 the name of the invalid output from the given step</p></li>\n</ul>\n</dd>\n</dl>\n</dd></dl>\n\n<dl class=\"py class\">\n<dt id=\"dagster_graphql.ReloadRepositoryLocationInfo\">\n<em class=\"property\"><span class=\"pre\">class</span> </em><code class=\"sig-prename descclassname\"><span class=\"pre\">dagster_graphql.</span></code><code class=\"sig-name descname\"><span class=\"pre\">ReloadRepositoryLocationInfo</span></code><span class=\"sig-paren\">(</span><em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">status</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">failure_type</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">None</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">message</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">None</span></span></em><span class=\"sig-paren\">)</span><a class=\"reference internal\" href=\"../../../../../_modules/dagster_graphql/client/utils#ReloadRepositoryLocationInfo\"><span class=\"viewcode-link\"><span class=\"pre\">[source]</span></span></a><a class=\"headerlink\" href=\"#dagster_graphql.ReloadRepositoryLocationInfo\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>This class gives information about the result of reloading\na Dagster repository location with a GraphQL mutation.</p>\n<dl class=\"field-list simple\">\n<dt class=\"field-odd\">Parameters</dt>\n<dd class=\"field-odd\"><ul class=\"simple\">\n<li><p><strong>status</strong> (<a class=\"reference internal\" href=\"#dagster_graphql.ReloadRepositoryLocationStatus\" title=\"dagster_graphql.ReloadRepositoryLocationStatus\"><em>ReloadRepositoryLocationStatus</em></a>) \u2013 The status of the reload repository location mutation</p></li>\n<li><p><strong>failure_type</strong> \u2013 (Optional[str], optional): the failure type if <cite>status == ReloadRepositoryLocationStatus.FAILURE</cite>.\nCan be one of <cite>ReloadNotSupported</cite>, <cite>RepositoryLocationNotFound</cite>, or <cite>RepositoryLocationLoadFailure</cite>. Defaults to None.</p></li>\n<li><p><strong>message</strong> (<em>Optional</em><em>[</em><a class=\"reference external\" href=\"https://docs.python.org/3/library/stdtypes.html#str\" title=\"(in Python v3.8)\"><em>str</em></a><em>]</em><em>, </em><em>optional</em>) \u2013 the failure message/reason if\n<cite>status == ReloadRepositoryLocationStatus.FAILURE</cite>. Defaults to None.</p></li>\n</ul>\n</dd>\n</dl>\n</dd></dl>\n\n<dl class=\"py class\">\n<dt id=\"dagster_graphql.ReloadRepositoryLocationStatus\">\n<em class=\"property\"><span class=\"pre\">class</span> </em><code class=\"sig-prename descclassname\"><span class=\"pre\">dagster_graphql.</span></code><code class=\"sig-name descname\"><span class=\"pre\">ReloadRepositoryLocationStatus</span></code><span class=\"sig-paren\">(</span><em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">value</span></span></em><span class=\"sig-paren\">)</span><a class=\"reference internal\" href=\"../../../../../_modules/dagster_graphql/client/utils#ReloadRepositoryLocationStatus\"><span class=\"viewcode-link\"><span class=\"pre\">[source]</span></span></a><a class=\"headerlink\" href=\"#dagster_graphql.ReloadRepositoryLocationStatus\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>This enum describes the status of a GraphQL mutation to reload a Dagster repository location</p>\n<dl class=\"field-list simple\">\n<dt class=\"field-odd\">Parameters</dt>\n<dd class=\"field-odd\"><p><strong>Enum</strong> (<a class=\"reference external\" href=\"https://docs.python.org/3/library/stdtypes.html#str\" title=\"(in Python v3.8)\"><em>str</em></a>) \u2013 can be either <cite>ReloadRepositoryLocationStatus.SUCCESS</cite>\nor <cite>ReloadRepositoryLocationStatus.FAILURE</cite>.</p>\n</dd>\n</dl>\n</dd></dl>\n\n</div>\n</div>\n", "current_page_name": "sections/api/apidocs/libraries/dagster-graphql", "customsidebar": null, "display_toc": true, "meta": null, "metatags": "", "next": null, "page_source_suffix": ".rst", "parents": [], "prev": {"link": "../dagstermill/", "title": "Dagstermill"}, "rellinks": [["genindex", "General Index", "I", "index"], ["py-modindex", "Python Module Index", "", "modules"], ["sections/api/apidocs/libraries/dagstermill", "Dagstermill", "P", "previous"]], "sidebars": ["globaltoc.html", "searchbox.html"], "sourcename": "sections/api/apidocs/libraries/dagster-graphql.rst.txt", "title": "GraphQL (dagster-graphql)", "toc": "<ul>\n<li><a class=\"reference internal\" href=\"#\">GraphQL (dagster-graphql)</a><ul>\n<li><a class=\"reference internal\" href=\"#python-client\">Python Client</a></li>\n</ul>\n</li>\n</ul>\n"}, "dagster-k8s": {"alabaster_version": "0.7.12", "body": "<div class=\"section\" id=\"kubernetes-dagster-k8s\">\n<h1>Kubernetes (dagster-k8s)<a class=\"headerlink\" href=\"#kubernetes-dagster-k8s\" title=\"Permalink to this headline\">\u00b6</a></h1>\n<p>See also the <a class=\"reference external\" href=\"https://docs.dagster.io/deploying/kubernetes/\">Kubernetes deployment guide</a>.</p>\n<p>This library contains utilities for running Dagster with Kubernetes. This includes a Python API\nallowing Dagit to launch runs as Kubernetes Jobs, as well as a Helm chart you can use as the basis\nfor a Dagster deployment on a Kubernetes cluster.</p>\n</div>\n<div class=\"section\" id=\"apis\">\n<h1>APIs<a class=\"headerlink\" href=\"#apis\" title=\"Permalink to this headline\">\u00b6</a></h1>\n<dl class=\"py data\">\n<dt id=\"dagster_k8s.K8sRunLauncher\">\n<code class=\"sig-prename descclassname\"><span class=\"pre\">dagster_k8s.</span></code><code class=\"sig-name descname\"><span class=\"pre\">K8sRunLauncher</span></code><em class=\"property\"> <span class=\"pre\">RunLauncher</span></em><a class=\"reference internal\" href=\"../../../../../_modules/dagster_k8s/launcher#K8sRunLauncher\"><span class=\"viewcode-link\"><span class=\"pre\">[source]</span></span></a><a class=\"headerlink\" href=\"#dagster_k8s.K8sRunLauncher\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><div class=\"line-block\">\n<div class=\"line\"><br /></div>\n</div>\n<details class=\"summary-config-schema\">\n<summary>Config Schema:</summary><dl class=\"field-list\">\n<dt class=\"field-odd\">job_image (Union[dagster.StringSource, None], optional)</dt>\n<dd class=\"field-odd\"><p>Docker image to use for launched Jobs. If this field is empty, the image that was used to originally load the Dagster repository will be used. (Ex: \u201cmycompany.com/dagster-k8s-image:latest\u201d).</p>\n</dd>\n<dt class=\"field-even\">image_pull_policy (Union[dagster.StringSource, None], optional)</dt>\n<dd class=\"field-even\"><p>Image pull policy to set on launched Pods.</p>\n</dd>\n<dt class=\"field-odd\">image_pull_secrets (Union[List[strict dict], None], optional)</dt>\n<dd class=\"field-odd\"><p>Specifies that Kubernetes should get the credentials from the Secrets named in this list.</p>\n</dd>\n<dt class=\"field-even\">service_account_name (Union[dagster.StringSource, None], optional)</dt>\n<dd class=\"field-even\"><p>The name of the Kubernetes service account under which to run.</p>\n</dd>\n<dt class=\"field-odd\">env_config_maps (Union[List[dagster.StringSource], None], optional)</dt>\n<dd class=\"field-odd\"><p>A list of custom ConfigMapEnvSource names from which to draw environment variables (using <code class=\"docutils literal notranslate\"><span class=\"pre\">envFrom</span></code>) for the Job. Default: <code class=\"docutils literal notranslate\"><span class=\"pre\">[]</span></code>. See:https://kubernetes.io/docs/tasks/inject-data-application/define-environment-variable-container/#define-an-environment-variable-for-a-container</p>\n</dd>\n<dt class=\"field-even\">env_secrets (Union[List[dagster.StringSource], None], optional)</dt>\n<dd class=\"field-even\"><p>A list of custom Secret names from which to draw environment variables (using <code class=\"docutils literal notranslate\"><span class=\"pre\">envFrom</span></code>) for the Job. Default: <code class=\"docutils literal notranslate\"><span class=\"pre\">[]</span></code>. See:https://kubernetes.io/docs/tasks/inject-data-application/distribute-credentials-secure/#configure-all-key-value-pairs-in-a-secret-as-container-environment-variables</p>\n</dd>\n<dt class=\"field-odd\">env_vars (Union[List[String], None], optional)</dt>\n<dd class=\"field-odd\"><p>A list of environment variables to inject into the Job. Each can be of the form KEY=VALUE or just KEY (in which case the value will be pulled from the current process). Default: <code class=\"docutils literal notranslate\"><span class=\"pre\">[]</span></code>. See: <a class=\"reference external\" href=\"https://kubernetes.io/docs/tasks/inject-data-application/distribute-credentials-secure/#configure-all-key-value-pairs-in-a-secret-as-container-environment-variables\">https://kubernetes.io/docs/tasks/inject-data-application/distribute-credentials-secure/#configure-all-key-value-pairs-in-a-secret-as-container-environment-variables</a></p>\n</dd>\n<dt class=\"field-even\">volume_mounts (List[permissive dict], optional)</dt>\n<dd class=\"field-even\"><p>A list of volume mounts to include in the job\u2019s container. Default: <code class=\"docutils literal notranslate\"><span class=\"pre\">[]</span></code>. See: <a class=\"reference external\" href=\"https://v1-18.docs.kubernetes.io/docs/reference/generated/kubernetes-api/v1.18/#volumemount-v1-core\">https://v1-18.docs.kubernetes.io/docs/reference/generated/kubernetes-api/v1.18/#volumemount-v1-core</a></p>\n<p><strong>Default Value:</strong> []</p>\n</dd>\n<dt class=\"field-odd\">volumes (List[permissive dict], optional)</dt>\n<dd class=\"field-odd\"><p>A list of volumes to include in the Job\u2019s Pod. Default: <code class=\"docutils literal notranslate\"><span class=\"pre\">[]</span></code>. For the many possible volume source types that can be included, see: <a class=\"reference external\" href=\"https://v1-18.docs.kubernetes.io/docs/reference/generated/kubernetes-api/v1.18/#volume-v1-core\">https://v1-18.docs.kubernetes.io/docs/reference/generated/kubernetes-api/v1.18/#volume-v1-core</a></p>\n<p><strong>Default Value:</strong> []</p>\n</dd>\n<dt class=\"field-even\">labels (permissive dict, optional)</dt>\n<dd class=\"field-even\"><p>Labels to apply to all created pods. See: <a class=\"reference external\" href=\"https://kubernetes.io/docs/concepts/overview/working-with-objects/labels\">https://kubernetes.io/docs/concepts/overview/working-with-objects/labels</a></p>\n</dd>\n<dt class=\"field-odd\">resources (Union[strict dict, None], optional)</dt>\n<dd class=\"field-odd\"><p>Compute resource requirements for the container. See: <a class=\"reference external\" href=\"https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/\">https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/</a></p>\n</dd>\n<dt class=\"field-even\">instance_config_map (dagster.StringSource)</dt>\n<dd class=\"field-even\"><p>The <code class=\"docutils literal notranslate\"><span class=\"pre\">name</span></code> of an existing Volume to mount into the pod in order to provide a ConfigMap for the Dagster instance. This Volume should contain a <code class=\"docutils literal notranslate\"><span class=\"pre\">dagster.yaml</span></code> with appropriate values for run storage, event log storage, etc.</p>\n</dd>\n<dt class=\"field-odd\">postgres_password_secret (dagster.StringSource, optional)</dt>\n<dd class=\"field-odd\"><p>The name of the Kubernetes Secret where the postgres password can be retrieved. Will be mounted and supplied as an environment variable to the Job Pod.Secret must contain the key <code class=\"docutils literal notranslate\"><span class=\"pre\">&quot;postgresql-password&quot;</span></code> which will be exposed in the Job environment as the environment variable <code class=\"docutils literal notranslate\"><span class=\"pre\">DAGSTER_PG_PASSWORD</span></code>.</p>\n</dd>\n<dt class=\"field-even\">dagster_home (dagster.StringSource, optional)</dt>\n<dd class=\"field-even\"><p>The location of DAGSTER_HOME in the Job container; this is where the <code class=\"docutils literal notranslate\"><span class=\"pre\">dagster.yaml</span></code> file will be mounted from the instance ConfigMap specified here. Defaults to /opt/dagster/dagster_home.</p>\n<p><strong>Default Value:</strong> \u2018/opt/dagster/dagster_home\u2019</p>\n</dd>\n<dt class=\"field-odd\">load_incluster_config (Bool, optional)</dt>\n<dd class=\"field-odd\"><p>Set this value if you are running the launcher\nwithin a k8s cluster. If <code class=\"docutils literal notranslate\"><span class=\"pre\">True</span></code>, we assume the launcher is running within the target\ncluster and load config using <code class=\"docutils literal notranslate\"><span class=\"pre\">kubernetes.config.load_incluster_config</span></code>. Otherwise,\nwe will use the k8s config specified in <code class=\"docutils literal notranslate\"><span class=\"pre\">kubeconfig_file</span></code> (using\n<code class=\"docutils literal notranslate\"><span class=\"pre\">kubernetes.config.load_kube_config</span></code>) or fall back to the default kubeconfig.</p>\n<p><strong>Default Value:</strong> True</p>\n</dd>\n<dt class=\"field-even\">kubeconfig_file (Union[String, None], optional)</dt>\n<dd class=\"field-even\"><p>The kubeconfig file from which to load config. Defaults to using the default kubeconfig.</p>\n<p><strong>Default Value:</strong> None</p>\n</dd>\n<dt class=\"field-odd\">fail_pod_on_run_failure (Bool, optional)</dt>\n<dd class=\"field-odd\"><p>Whether the launched Kubernetes Jobs and Pods should fail if the Dagster run fails</p>\n</dd>\n<dt class=\"field-even\">job_namespace (dagster.StringSource, optional)</dt>\n<dd class=\"field-even\"><p><strong>Default Value:</strong> \u2018default\u2019</p>\n</dd>\n</dl>\n</details><p>RunLauncher that starts a Kubernetes Job for each Dagster job run.</p>\n<p>Encapsulates each run in a separate, isolated invocation of <code class=\"docutils literal notranslate\"><span class=\"pre\">dagster-graphql</span></code>.</p>\n<p>You can configure a Dagster instance to use this RunLauncher by adding a section to your\n<code class=\"docutils literal notranslate\"><span class=\"pre\">dagster.yaml</span></code> like the following:</p>\n<div class=\"highlight-yaml notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"nt\">run_launcher</span><span class=\"p\">:</span><span class=\"w\"></span>\n<span class=\"w\">  </span><span class=\"nt\">module</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"l l-Scalar l-Scalar-Plain\">dagster_k8s.launcher</span><span class=\"w\"></span>\n<span class=\"w\">  </span><span class=\"nt\">class</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"l l-Scalar l-Scalar-Plain\">K8sRunLauncher</span><span class=\"w\"></span>\n<span class=\"w\">  </span><span class=\"nt\">config</span><span class=\"p\">:</span><span class=\"w\"></span>\n<span class=\"w\">    </span><span class=\"nt\">service_account_name</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"l l-Scalar l-Scalar-Plain\">your_service_account</span><span class=\"w\"></span>\n<span class=\"w\">    </span><span class=\"nt\">job_image</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"l l-Scalar l-Scalar-Plain\">my_project/dagster_image:latest</span><span class=\"w\"></span>\n<span class=\"w\">    </span><span class=\"nt\">instance_config_map</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"l l-Scalar l-Scalar-Plain\">dagster-instance</span><span class=\"w\"></span>\n<span class=\"w\">    </span><span class=\"nt\">postgres_password_secret</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"l l-Scalar l-Scalar-Plain\">dagster-postgresql-secret</span><span class=\"w\"></span>\n</pre></div>\n</div>\n</dd></dl>\n\n<dl class=\"py data\">\n<dt id=\"dagster_k8s.k8s_job_executor\">\n<code class=\"sig-prename descclassname\"><span class=\"pre\">dagster_k8s.</span></code><code class=\"sig-name descname\"><span class=\"pre\">k8s_job_executor</span></code><em class=\"property\"> <span class=\"pre\">ExecutorDefinition</span></em><a class=\"reference internal\" href=\"../../../../../_modules/dagster_k8s/executor#k8s_job_executor\"><span class=\"viewcode-link\"><span class=\"pre\">[source]</span></span></a><a class=\"headerlink\" href=\"#dagster_k8s.k8s_job_executor\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><div class=\"line-block\">\n<div class=\"line\"><br /></div>\n</div>\n<details class=\"summary-config-schema\">\n<summary>Config Schema:</summary><dl class=\"field-list\">\n<dt class=\"field-odd\">job_image (Union[dagster.StringSource, None], optional)</dt>\n<dd class=\"field-odd\"><p>Docker image to use for launched Jobs. If this field is empty, the image that was used to originally load the Dagster repository will be used. (Ex: \u201cmycompany.com/dagster-k8s-image:latest\u201d).</p>\n</dd>\n<dt class=\"field-even\">image_pull_policy (Union[dagster.StringSource, None], optional)</dt>\n<dd class=\"field-even\"><p>Image pull policy to set on launched Pods.</p>\n</dd>\n<dt class=\"field-odd\">image_pull_secrets (Union[List[strict dict], None], optional)</dt>\n<dd class=\"field-odd\"><p>Specifies that Kubernetes should get the credentials from the Secrets named in this list.</p>\n</dd>\n<dt class=\"field-even\">service_account_name (Union[dagster.StringSource, None], optional)</dt>\n<dd class=\"field-even\"><p>The name of the Kubernetes service account under which to run.</p>\n</dd>\n<dt class=\"field-odd\">env_config_maps (Union[List[dagster.StringSource], None], optional)</dt>\n<dd class=\"field-odd\"><p>A list of custom ConfigMapEnvSource names from which to draw environment variables (using <code class=\"docutils literal notranslate\"><span class=\"pre\">envFrom</span></code>) for the Job. Default: <code class=\"docutils literal notranslate\"><span class=\"pre\">[]</span></code>. See:https://kubernetes.io/docs/tasks/inject-data-application/define-environment-variable-container/#define-an-environment-variable-for-a-container</p>\n</dd>\n<dt class=\"field-even\">env_secrets (Union[List[dagster.StringSource], None], optional)</dt>\n<dd class=\"field-even\"><p>A list of custom Secret names from which to draw environment variables (using <code class=\"docutils literal notranslate\"><span class=\"pre\">envFrom</span></code>) for the Job. Default: <code class=\"docutils literal notranslate\"><span class=\"pre\">[]</span></code>. See:https://kubernetes.io/docs/tasks/inject-data-application/distribute-credentials-secure/#configure-all-key-value-pairs-in-a-secret-as-container-environment-variables</p>\n</dd>\n<dt class=\"field-odd\">env_vars (Union[List[String], None], optional)</dt>\n<dd class=\"field-odd\"><p>A list of environment variables to inject into the Job. Each can be of the form KEY=VALUE or just KEY (in which case the value will be pulled from the current process). Default: <code class=\"docutils literal notranslate\"><span class=\"pre\">[]</span></code>. See: <a class=\"reference external\" href=\"https://kubernetes.io/docs/tasks/inject-data-application/distribute-credentials-secure/#configure-all-key-value-pairs-in-a-secret-as-container-environment-variables\">https://kubernetes.io/docs/tasks/inject-data-application/distribute-credentials-secure/#configure-all-key-value-pairs-in-a-secret-as-container-environment-variables</a></p>\n</dd>\n<dt class=\"field-even\">volume_mounts (List[permissive dict], optional)</dt>\n<dd class=\"field-even\"><p>A list of volume mounts to include in the job\u2019s container. Default: <code class=\"docutils literal notranslate\"><span class=\"pre\">[]</span></code>. See: <a class=\"reference external\" href=\"https://v1-18.docs.kubernetes.io/docs/reference/generated/kubernetes-api/v1.18/#volumemount-v1-core\">https://v1-18.docs.kubernetes.io/docs/reference/generated/kubernetes-api/v1.18/#volumemount-v1-core</a></p>\n<p><strong>Default Value:</strong> []</p>\n</dd>\n<dt class=\"field-odd\">volumes (List[permissive dict], optional)</dt>\n<dd class=\"field-odd\"><p>A list of volumes to include in the Job\u2019s Pod. Default: <code class=\"docutils literal notranslate\"><span class=\"pre\">[]</span></code>. For the many possible volume source types that can be included, see: <a class=\"reference external\" href=\"https://v1-18.docs.kubernetes.io/docs/reference/generated/kubernetes-api/v1.18/#volume-v1-core\">https://v1-18.docs.kubernetes.io/docs/reference/generated/kubernetes-api/v1.18/#volume-v1-core</a></p>\n<p><strong>Default Value:</strong> []</p>\n</dd>\n<dt class=\"field-even\">labels (permissive dict, optional)</dt>\n<dd class=\"field-even\"><p>Labels to apply to all created pods. See: <a class=\"reference external\" href=\"https://kubernetes.io/docs/concepts/overview/working-with-objects/labels\">https://kubernetes.io/docs/concepts/overview/working-with-objects/labels</a></p>\n</dd>\n<dt class=\"field-odd\">resources (Union[strict dict, None], optional)</dt>\n<dd class=\"field-odd\"><p>Compute resource requirements for the container. See: <a class=\"reference external\" href=\"https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/\">https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/</a></p>\n</dd>\n<dt class=\"field-even\">job_namespace (dagster.StringSource, optional)</dt>\n<dd class=\"field-even\"><p></p></dd>\n<dt class=\"field-odd\">retries (selector, optional)</dt>\n<dd class=\"field-odd\"><details class=\"summary-default-value\">\n<summary>Default Value:</summary><div class=\"highlight-javascript notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"p\">{</span>\n    <span class=\"s2\">&quot;enabled&quot;</span><span class=\"o\">:</span> <span class=\"p\">{}</span>\n<span class=\"p\">}</span>\n</pre></div>\n</div>\n</details><details class=\"summary-config-schema\">\n<summary>Config Schema:</summary><dl class=\"field-list\">\n<dt class=\"field-odd\">enabled (strict dict, optional)</dt>\n<dd class=\"field-odd\"><details class=\"summary-default-value\">\n<summary>Default Value:</summary><div class=\"highlight-javascript notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"p\">{}</span>\n</pre></div>\n</div>\n</details></dd>\n<dt class=\"field-even\">disabled (strict dict, optional)</dt>\n<dd class=\"field-even\"><details class=\"summary-default-value\">\n<summary>Default Value:</summary><div class=\"highlight-javascript notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"p\">{}</span>\n</pre></div>\n</div>\n</details></dd>\n</dl>\n</details></dd>\n<dt class=\"field-odd\">max_concurrent (dagster.IntSource, optional)</dt>\n<dd class=\"field-odd\"><p>Limit on the number of pods that will run concurrently within the scope of a Dagster run. Note that this limit is per run, not global.</p>\n</dd>\n</dl>\n</details><p>Executor which launches steps as Kubernetes Jobs.</p>\n<p>To use the <cite>k8s_job_executor</cite>, set it as the <cite>executor_def</cite> when defining a job:</p>\n<div class=\"highlight-python notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"kn\">from</span> <span class=\"nn\">dagster</span> <span class=\"kn\">import</span> <span class=\"n\">job</span>\n<span class=\"kn\">from</span> <span class=\"nn\">dagster_k8s</span> <span class=\"kn\">import</span> <span class=\"n\">k8s_job_executor</span>\n\n<span class=\"nd\">@job</span><span class=\"p\">(</span><span class=\"n\">executor_def</span><span class=\"o\">=</span><span class=\"n\">k8s_job_executor</span><span class=\"p\">)</span>\n<span class=\"k\">def</span> <span class=\"nf\">k8s_job</span><span class=\"p\">():</span>\n    <span class=\"k\">pass</span>\n</pre></div>\n</div>\n<p>Then you can configure the executor with run config as follows:</p>\n<div class=\"highlight-YAML notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"nt\">execution</span><span class=\"p\">:</span><span class=\"w\"></span>\n<span class=\"w\">  </span><span class=\"nt\">config</span><span class=\"p\">:</span><span class=\"w\"></span>\n<span class=\"w\">    </span><span class=\"nt\">job_namespace</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"s\">&#39;some-namespace&#39;</span><span class=\"w\"></span>\n<span class=\"w\">    </span><span class=\"nt\">image_pull_policy</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"l l-Scalar l-Scalar-Plain\">...</span><span class=\"w\"></span>\n<span class=\"w\">    </span><span class=\"nt\">image_pull_secrets</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"l l-Scalar l-Scalar-Plain\">...</span><span class=\"w\"></span>\n<span class=\"w\">    </span><span class=\"nt\">service_account_name</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"l l-Scalar l-Scalar-Plain\">...</span><span class=\"w\"></span>\n<span class=\"w\">    </span><span class=\"nt\">env_config_maps</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"l l-Scalar l-Scalar-Plain\">...</span><span class=\"w\"></span>\n<span class=\"w\">    </span><span class=\"nt\">env_secrets</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"l l-Scalar l-Scalar-Plain\">...</span><span class=\"w\"></span>\n<span class=\"w\">    </span><span class=\"nt\">env_vars</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"l l-Scalar l-Scalar-Plain\">...</span><span class=\"w\"></span>\n<span class=\"w\">    </span><span class=\"nt\">job_image</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"l l-Scalar l-Scalar-Plain\">...</span><span class=\"w\"> </span><span class=\"c1\"># leave out if using userDeployments</span><span class=\"w\"></span>\n<span class=\"w\">    </span><span class=\"nt\">max_concurrent</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"l l-Scalar l-Scalar-Plain\">...</span><span class=\"w\"></span>\n</pre></div>\n</div>\n<p><cite>max_concurrent</cite> limits the number of pods that will execute concurrently for one run. By default\nthere is no limit- it will maximally parallel as allowed by the DAG. Note that this is not a\nglobal limit.</p>\n<p>Configuration set on the Kubernetes Jobs and Pods created by the <cite>K8sRunLauncher</cite> will also be\nset on Kubernetes Jobs and Pods created by the <cite>k8s_job_executor</cite>.</p>\n</dd></dl>\n\n<div class=\"section\" id=\"python-api\">\n<h2>Python API<a class=\"headerlink\" href=\"#python-api\" title=\"Permalink to this headline\">\u00b6</a></h2>\n<p>The <code class=\"docutils literal notranslate\"><span class=\"pre\">K8sRunLauncher</span></code> allows Dagit instances to be configured to launch new runs by starting\nper-run Kubernetes Jobs. To configure the <code class=\"docutils literal notranslate\"><span class=\"pre\">K8sRunLauncher</span></code>, your <code class=\"docutils literal notranslate\"><span class=\"pre\">dagster.yaml</span></code> should\ninclude a section like:</p>\n<div class=\"highlight-yaml notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"nt\">run_launcher</span><span class=\"p\">:</span><span class=\"w\"></span>\n<span class=\"w\">  </span><span class=\"nt\">module</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"l l-Scalar l-Scalar-Plain\">dagster_k8s.launcher</span><span class=\"w\"></span>\n<span class=\"w\">  </span><span class=\"nt\">class</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"l l-Scalar l-Scalar-Plain\">K8sRunLauncher</span><span class=\"w\"></span>\n<span class=\"w\">  </span><span class=\"nt\">config</span><span class=\"p\">:</span><span class=\"w\"></span>\n<span class=\"w\">    </span><span class=\"nt\">image_pull_secrets</span><span class=\"p\">:</span><span class=\"w\"></span>\n<span class=\"w\">    </span><span class=\"nt\">service_account_name</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"l l-Scalar l-Scalar-Plain\">dagster</span><span class=\"w\"></span>\n<span class=\"w\">    </span><span class=\"nt\">job_image</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"s\">&quot;my-company.com/image:latest&quot;</span><span class=\"w\"></span>\n<span class=\"w\">    </span><span class=\"nt\">dagster_home</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"s\">&quot;/opt/dagster/dagster_home&quot;</span><span class=\"w\"></span>\n<span class=\"w\">    </span><span class=\"nt\">postgres_password_secret</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"s\">&quot;dagster-postgresql-secret&quot;</span><span class=\"w\"></span>\n<span class=\"w\">    </span><span class=\"nt\">image_pull_policy</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"s\">&quot;IfNotPresent&quot;</span><span class=\"w\"></span>\n<span class=\"w\">    </span><span class=\"nt\">job_namespace</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"s\">&quot;dagster&quot;</span><span class=\"w\"></span>\n<span class=\"w\">    </span><span class=\"nt\">instance_config_map</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"s\">&quot;dagster-instance&quot;</span><span class=\"w\"></span>\n<span class=\"w\">    </span><span class=\"nt\">env_config_maps</span><span class=\"p\">:</span><span class=\"w\"></span>\n<span class=\"w\">      </span><span class=\"p p-Indicator\">-</span><span class=\"w\"> </span><span class=\"s\">&quot;dagster-k8s-job-runner-env&quot;</span><span class=\"w\"></span>\n<span class=\"w\">    </span><span class=\"nt\">env_secrets</span><span class=\"p\">:</span><span class=\"w\"></span>\n<span class=\"w\">      </span><span class=\"p p-Indicator\">-</span><span class=\"w\"> </span><span class=\"s\">&quot;dagster-k8s-some-secret&quot;</span><span class=\"w\"></span>\n</pre></div>\n</div>\n</div>\n<div class=\"section\" id=\"helm-chart\">\n<h2>Helm chart<a class=\"headerlink\" href=\"#helm-chart\" title=\"Permalink to this headline\">\u00b6</a></h2>\n<p>For local dev (e.g., on kind or minikube):</p>\n<div class=\"highlight-shell notranslate\"><div class=\"highlight\"><pre><span></span>helm install <span class=\"se\">\\</span>\n    --set dagit.image.repository<span class=\"o\">=</span><span class=\"s2\">&quot;dagster.io/buildkite-test-image&quot;</span> <span class=\"se\">\\</span>\n    --set dagit.image.tag<span class=\"o\">=</span><span class=\"s2\">&quot;py37-latest&quot;</span> <span class=\"se\">\\</span>\n    --set job_runner.image.repository<span class=\"o\">=</span><span class=\"s2\">&quot;dagster.io/buildkite-test-image&quot;</span> <span class=\"se\">\\</span>\n    --set job_runner.image.tag<span class=\"o\">=</span><span class=\"s2\">&quot;py37-latest&quot;</span> <span class=\"se\">\\</span>\n    --set <span class=\"nv\">imagePullPolicy</span><span class=\"o\">=</span><span class=\"s2\">&quot;IfNotPresent&quot;</span> <span class=\"se\">\\</span>\n    dagster <span class=\"se\">\\</span>\n    helm/dagster/\n</pre></div>\n</div>\n<p>Upon installation, the Helm chart will provide instructions for port forwarding Dagit and Flower (if\nconfigured).</p>\n</div>\n<div class=\"section\" id=\"running-tests\">\n<h2>Running tests<a class=\"headerlink\" href=\"#running-tests\" title=\"Permalink to this headline\">\u00b6</a></h2>\n<p>To run the unit tests:</p>\n<div class=\"highlight-default notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"n\">pytest</span> <span class=\"o\">-</span><span class=\"n\">m</span> <span class=\"s2\">&quot;not integration&quot;</span>\n</pre></div>\n</div>\n<p>To run the integration tests, you must have <a class=\"reference external\" href=\"https://docs.docker.com/install/\">Docker</a>,\n<a class=\"reference external\" href=\"https://kind.sigs.k8s.io/docs/user/quick-start#installation\">kind</a>,\nand <a class=\"reference external\" href=\"https://helm.sh/docs/intro/install/\">helm</a> installed.</p>\n<p>On macOS:</p>\n<div class=\"highlight-default notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"n\">brew</span> <span class=\"n\">install</span> <span class=\"n\">kind</span>\n<span class=\"n\">brew</span> <span class=\"n\">install</span> <span class=\"n\">helm</span>\n</pre></div>\n</div>\n<p>Docker must be running.</p>\n<p>You may experience slow first test runs thanks to image pulls (run <code class=\"docutils literal notranslate\"><span class=\"pre\">pytest</span> <span class=\"pre\">-svv</span> <span class=\"pre\">--fulltrace</span></code> for\nvisibility). Building images and loading them to the kind cluster is slow, and there is\nno visibility into the progress of the load.</p>\n<p><strong>NOTE:</strong> This process is quite slow, as it requires bootstrapping a local <code class=\"docutils literal notranslate\"><span class=\"pre\">kind</span></code> cluster with\nDocker images and the <code class=\"docutils literal notranslate\"><span class=\"pre\">dagster-k8s</span></code> Helm chart. For faster development, you can either:</p>\n<ol class=\"arabic simple\">\n<li><p>Keep a warm kind cluster</p></li>\n<li><p>Use a remote K8s cluster, e.g. via AWS EKS or GCP GKE</p></li>\n</ol>\n<p>Instructions are below.</p>\n<div class=\"section\" id=\"faster-local-development-with-kind\">\n<h3>Faster local development (with kind)<a class=\"headerlink\" href=\"#faster-local-development-with-kind\" title=\"Permalink to this headline\">\u00b6</a></h3>\n<p>You may find that the kind cluster creation, image loading, and kind cluster creation loop\nis too slow for effective local dev.</p>\n<p>You may bypass cluster creation and image loading in the following way. First add the <code class=\"docutils literal notranslate\"><span class=\"pre\">--no-cleanup</span></code>\nflag to your pytest invocation:</p>\n<div class=\"highlight-shell notranslate\"><div class=\"highlight\"><pre><span></span>pytest --no-cleanup -s -vvv -m <span class=\"s2\">&quot;not integration&quot;</span>\n</pre></div>\n</div>\n<p>The tests will run as before, but the kind cluster will be left running after the tests are completed.</p>\n<p>For subsequent test runs, you can run:</p>\n<div class=\"highlight-shell notranslate\"><div class=\"highlight\"><pre><span></span>pytest --kind-cluster<span class=\"o\">=</span><span class=\"s2\">&quot;cluster-d9971c84d44d47f382a2928c8c161faa&quot;</span> --existing-helm-namespace<span class=\"o\">=</span><span class=\"s2\">&quot;dagster-test-95590a&quot;</span> -s -vvv -m <span class=\"s2\">&quot;not integration&quot;</span>\n</pre></div>\n</div>\n<p>This will bypass cluster creation, image loading, and Helm chart installation, for much faster tests.</p>\n<p>The kind cluster name and Helm namespace for this command can be found in the logs, or retrieved\nvia the respective CLIs, using <code class=\"docutils literal notranslate\"><span class=\"pre\">kind</span> <span class=\"pre\">get</span> <span class=\"pre\">clusters</span></code> and <code class=\"docutils literal notranslate\"><span class=\"pre\">kubectl</span> <span class=\"pre\">get</span> <span class=\"pre\">namespaces</span></code>. Note that\nfor <code class=\"docutils literal notranslate\"><span class=\"pre\">kubectl</span></code> and <code class=\"docutils literal notranslate\"><span class=\"pre\">helm</span></code> to work correctly with a kind cluster, you should override your\nkubeconfig file location with:</p>\n<div class=\"highlight-shell notranslate\"><div class=\"highlight\"><pre><span></span>kind get kubeconfig --name kind-test &gt; /tmp/kubeconfig\n<span class=\"nb\">export</span> <span class=\"nv\">KUBECONFIG</span><span class=\"o\">=</span>/tmp/kubeconfig\n</pre></div>\n</div>\n</div>\n<div class=\"section\" id=\"manual-kind-cluster-setup\">\n<h3>Manual kind cluster setup<a class=\"headerlink\" href=\"#manual-kind-cluster-setup\" title=\"Permalink to this headline\">\u00b6</a></h3>\n<p>The test fixtures provided by <code class=\"docutils literal notranslate\"><span class=\"pre\">dagster-k8s</span></code> automate the process described below, but sometimes\nit\u2019s useful to manually configure a kind cluster and load images onto it.</p>\n<p>First, ensure you have a Docker image appropriate for your Python version. Run, from the root of\nthe repo:</p>\n<div class=\"highlight-shell notranslate\"><div class=\"highlight\"><pre><span></span>./python_modules/dagster-test/dagster_test/test_project/build.sh <span class=\"m\">3</span>.7.6 <span class=\"se\">\\</span>\n    dagster.io.priv/buildkite-test-image:py37-latest\n</pre></div>\n</div>\n<p>In the above invocation, the Python majmin version should be appropriate for your desired tests.</p>\n<p>Then run the following commands to create the cluster and load the image. Note that there is no\nfeedback from the loading process.</p>\n<div class=\"highlight-shell notranslate\"><div class=\"highlight\"><pre><span></span>kind create cluster --name kind-test\nkind load docker-image --name kind-test dagster.io/dagster-docker-buildkite:py37-latest\n</pre></div>\n</div>\n<p>If you are deploying the Helm chart with an in-cluster Postgres (rather than an external database),\nand/or with dagster-celery workers (and a RabbitMQ), you\u2019ll also want to have images present for\nrabbitmq and postgresql:</p>\n<div class=\"highlight-shell notranslate\"><div class=\"highlight\"><pre><span></span>docker pull docker.io/bitnami/rabbitmq\ndocker pull docker.io/bitnami/postgresql\n\nkind load docker-image --name kind-test docker.io/bitnami/rabbitmq:latest\nkind load docker-image --name kind-test docker.io/bitnami/postgresql:latest\n</pre></div>\n</div>\n<p>Then you can run pytest as follows:</p>\n<div class=\"highlight-shell notranslate\"><div class=\"highlight\"><pre><span></span>pytest --kind-cluster<span class=\"o\">=</span>kind-test\n</pre></div>\n</div>\n</div>\n</div>\n<div class=\"section\" id=\"faster-local-development-with-an-existing-k8s-cluster\">\n<h2>Faster local development (with an existing K8s cluster)<a class=\"headerlink\" href=\"#faster-local-development-with-an-existing-k8s-cluster\" title=\"Permalink to this headline\">\u00b6</a></h2>\n<p>If you already have a development K8s cluster available, you can run tests on that cluster vs.\nrunning locally in <code class=\"docutils literal notranslate\"><span class=\"pre\">kind</span></code>.</p>\n<p>For this to work, first build and deploy the test image to a registry available to your cluster.\nFor example, with a private ECR repository:</p>\n<div class=\"highlight-default notranslate\"><div class=\"highlight\"><pre><span></span>./python_modules/dagster-test/dagster_test/test_project/build.sh 3.7.6\ndocker tag dagster-docker-buildkite:latest $AWS_ACCOUNT_ID.dkr.ecr.us-west-2.amazonaws.com/dagster-k8s-tests:2020-04-21T21-04-06\n\naws ecr get-login --no-include-email --region us-west-1 | sh\ndocker push $AWS_ACCOUNT_ID.dkr.ecr.us-west-1.amazonaws.com/dagster-k8s-tests:2020-04-21T21-04-06\n</pre></div>\n</div>\n<p>Then, you can run tests on EKS with:</p>\n<div class=\"highlight-default notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"n\">export</span> <span class=\"n\">DAGSTER_DOCKER_IMAGE_TAG</span><span class=\"o\">=</span><span class=\"s2\">&quot;2020-04-21T21-04-06&quot;</span>\n<span class=\"n\">export</span> <span class=\"n\">DAGSTER_DOCKER_REPOSITORY</span><span class=\"o\">=</span><span class=\"s2\">&quot;$AWS_ACCOUNT_ID.dkr.ecr.us-west-2.amazonaws.com&quot;</span>\n<span class=\"n\">export</span> <span class=\"n\">DAGSTER_DOCKER_IMAGE</span><span class=\"o\">=</span><span class=\"s2\">&quot;dagster-k8s-tests&quot;</span>\n\n<span class=\"c1\"># First run with --no-cleanup to leave Helm chart in place</span>\n<span class=\"n\">pytest</span> <span class=\"o\">--</span><span class=\"n\">cluster</span><span class=\"o\">-</span><span class=\"n\">provider</span><span class=\"o\">=</span><span class=\"s2\">&quot;kubeconfig&quot;</span> <span class=\"o\">--</span><span class=\"n\">no</span><span class=\"o\">-</span><span class=\"n\">cleanup</span> <span class=\"o\">-</span><span class=\"n\">s</span> <span class=\"o\">-</span><span class=\"n\">vvv</span>\n\n<span class=\"c1\"># Subsequent runs against existing Helm chart</span>\n<span class=\"n\">pytest</span> <span class=\"o\">--</span><span class=\"n\">cluster</span><span class=\"o\">-</span><span class=\"n\">provider</span><span class=\"o\">=</span><span class=\"s2\">&quot;kubeconfig&quot;</span> <span class=\"o\">--</span><span class=\"n\">existing</span><span class=\"o\">-</span><span class=\"n\">helm</span><span class=\"o\">-</span><span class=\"n\">namespace</span><span class=\"o\">=</span><span class=\"s2\">&quot;dagster-test-&lt;some id&gt;&quot;</span> <span class=\"o\">-</span><span class=\"n\">s</span> <span class=\"o\">-</span><span class=\"n\">vvv</span>\n</pre></div>\n</div>\n</div>\n<div class=\"section\" id=\"validating-helm-charts\">\n<h2>Validating Helm charts<a class=\"headerlink\" href=\"#validating-helm-charts\" title=\"Permalink to this headline\">\u00b6</a></h2>\n<p>To test / validate Helm charts, you can run:</p>\n<div class=\"highlight-shell notranslate\"><div class=\"highlight\"><pre><span></span>helm install dagster --dry-run --debug helm/dagster\nhelm lint\n</pre></div>\n</div>\n</div>\n<div class=\"section\" id=\"enabling-gcr-access-from-minikube\">\n<h2>Enabling GCR access from Minikube<a class=\"headerlink\" href=\"#enabling-gcr-access-from-minikube\" title=\"Permalink to this headline\">\u00b6</a></h2>\n<p>To enable GCR access from Minikube:</p>\n<div class=\"highlight-shell notranslate\"><div class=\"highlight\"><pre><span></span>kubectl create secret docker-registry element-dev-key <span class=\"se\">\\</span>\n    --docker-server<span class=\"o\">=</span>https://gcr.io <span class=\"se\">\\</span>\n    --docker-username<span class=\"o\">=</span>oauth2accesstoken <span class=\"se\">\\</span>\n    --docker-password<span class=\"o\">=</span><span class=\"s2\">&quot;</span><span class=\"k\">$(</span>gcloud auth print-access-token<span class=\"k\">)</span><span class=\"s2\">&quot;</span> <span class=\"se\">\\</span>\n    --docker-email<span class=\"o\">=</span>my@email.com\n</pre></div>\n</div>\n</div>\n<div class=\"section\" id=\"a-note-about-pvcs\">\n<h2>A note about PVCs<a class=\"headerlink\" href=\"#a-note-about-pvcs\" title=\"Permalink to this headline\">\u00b6</a></h2>\n<p>Both the Postgres and the RabbitMQ Helm charts will store credentials using Persistent Volume\nClaims, which will outlive test invocations and calls to <code class=\"docutils literal notranslate\"><span class=\"pre\">helm</span> <span class=\"pre\">uninstall</span></code>. These must be deleted if\nyou want to change credentials. To view your pvcs, run:</p>\n<div class=\"highlight-default notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"n\">kubectl</span> <span class=\"n\">get</span> <span class=\"n\">pvc</span>\n</pre></div>\n</div>\n</div>\n<div class=\"section\" id=\"testing-redis\">\n<h2>Testing Redis<a class=\"headerlink\" href=\"#testing-redis\" title=\"Permalink to this headline\">\u00b6</a></h2>\n<p>The Redis Helm chart installs w/ a randomly-generated password by default; turn this off:</p>\n<div class=\"highlight-default notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"n\">helm</span> <span class=\"n\">install</span> <span class=\"n\">dagredis</span> <span class=\"n\">stable</span><span class=\"o\">/</span><span class=\"n\">redis</span> <span class=\"o\">--</span><span class=\"nb\">set</span> <span class=\"n\">usePassword</span><span class=\"o\">=</span><span class=\"n\">false</span>\n</pre></div>\n</div>\n<p>Then, to connect to your database from outside the cluster execute the following commands:</p>\n<div class=\"highlight-default notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"n\">kubectl</span> <span class=\"n\">port</span><span class=\"o\">-</span><span class=\"n\">forward</span> <span class=\"o\">--</span><span class=\"n\">namespace</span> <span class=\"n\">default</span> <span class=\"n\">svc</span><span class=\"o\">/</span><span class=\"n\">dagredis</span><span class=\"o\">-</span><span class=\"n\">master</span> <span class=\"mi\">6379</span><span class=\"p\">:</span><span class=\"mi\">6379</span>\n<span class=\"n\">redis</span><span class=\"o\">-</span><span class=\"n\">cli</span> <span class=\"o\">-</span><span class=\"n\">h</span> <span class=\"mf\">127.0.0.1</span> <span class=\"o\">-</span><span class=\"n\">p</span> <span class=\"mi\">6379</span>\n</pre></div>\n</div>\n</div>\n</div>\n", "current_page_name": "sections/api/apidocs/libraries/dagster-k8s", "customsidebar": null, "display_toc": true, "meta": null, "metatags": "", "next": {"link": "../dagster-mlflow/", "title": "MLflow (dagster-mlflow)"}, "page_source_suffix": ".rst", "parents": [], "prev": {"link": "../dagster-github/", "title": "GitHub (dagster-github)"}, "rellinks": [["genindex", "General Index", "I", "index"], ["py-modindex", "Python Module Index", "", "modules"], ["sections/api/apidocs/libraries/dagster-mlflow", "MLflow (dagster-mlflow)", "N", "next"], ["sections/api/apidocs/libraries/dagster-github", "GitHub (dagster-github)", "P", "previous"]], "sidebars": ["globaltoc.html", "searchbox.html"], "sourcename": "sections/api/apidocs/libraries/dagster-k8s.rst.txt", "title": "Kubernetes (dagster-k8s)", "toc": "<ul>\n<li><a class=\"reference internal\" href=\"#\">Kubernetes (dagster-k8s)</a></li>\n<li><a class=\"reference internal\" href=\"#apis\">APIs</a><ul>\n<li><a class=\"reference internal\" href=\"#python-api\">Python API</a></li>\n<li><a class=\"reference internal\" href=\"#helm-chart\">Helm chart</a></li>\n<li><a class=\"reference internal\" href=\"#running-tests\">Running tests</a><ul>\n<li><a class=\"reference internal\" href=\"#faster-local-development-with-kind\">Faster local development (with kind)</a></li>\n<li><a class=\"reference internal\" href=\"#manual-kind-cluster-setup\">Manual kind cluster setup</a></li>\n</ul>\n</li>\n<li><a class=\"reference internal\" href=\"#faster-local-development-with-an-existing-k8s-cluster\">Faster local development (with an existing K8s cluster)</a></li>\n<li><a class=\"reference internal\" href=\"#validating-helm-charts\">Validating Helm charts</a></li>\n<li><a class=\"reference internal\" href=\"#enabling-gcr-access-from-minikube\">Enabling GCR access from Minikube</a></li>\n<li><a class=\"reference internal\" href=\"#a-note-about-pvcs\">A note about PVCs</a></li>\n<li><a class=\"reference internal\" href=\"#testing-redis\">Testing Redis</a></li>\n</ul>\n</li>\n</ul>\n"}, "dagster-mlflow": {"alabaster_version": "0.7.12", "body": "<div class=\"section\" id=\"mlflow-dagster-mlflow\">\n<h1>MLflow (dagster-mlflow)<a class=\"headerlink\" href=\"#mlflow-dagster-mlflow\" title=\"Permalink to this headline\">\u00b6</a></h1>\n<dl class=\"py data\">\n<dt id=\"dagster_mlflow.mlflow_tracking\">\n<code class=\"sig-prename descclassname\"><span class=\"pre\">dagster_mlflow.</span></code><code class=\"sig-name descname\"><span class=\"pre\">mlflow_tracking</span></code><em class=\"property\"> <span class=\"pre\">ResourceDefinition</span></em><a class=\"reference internal\" href=\"../../../../../_modules/dagster_mlflow/resources#mlflow_tracking\"><span class=\"viewcode-link\"><span class=\"pre\">[source]</span></span></a><a class=\"headerlink\" href=\"#dagster_mlflow.mlflow_tracking\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><div class=\"line-block\">\n<div class=\"line\"><br /></div>\n</div>\n<details class=\"summary-config-schema\">\n<summary>Config Schema:</summary><dl class=\"field-list\">\n<dt class=\"field-odd\">experiment_name (dagster.StringSource)</dt>\n<dd class=\"field-odd\"><p>MlFlow experiment name.</p>\n</dd>\n<dt class=\"field-even\">mlflow_tracking_uri (Union[dagster.StringSource, None], optional)</dt>\n<dd class=\"field-even\"><p>MlFlow tracking server uri.</p>\n<p><strong>Default Value:</strong> None</p>\n</dd>\n<dt class=\"field-odd\">parent_run_id (Union[String, None], optional)</dt>\n<dd class=\"field-odd\"><p>Mlflow run ID of parent run if this is a nested run.</p>\n<p><strong>Default Value:</strong> None</p>\n</dd>\n<dt class=\"field-even\">env (permissive dict, optional)</dt>\n<dd class=\"field-even\"><p>Environment variables for mlflow setup.</p>\n<details class=\"summary-default-value\">\n<summary>Default Value:</summary><div class=\"highlight-javascript notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"p\">{}</span>\n</pre></div>\n</div>\n</details></dd>\n<dt class=\"field-odd\">env_to_tag (Union[List[Any], None], optional)</dt>\n<dd class=\"field-odd\"><p>List of environment variables to log as tags in mlflow.</p>\n<p><strong>Default Value:</strong> None</p>\n</dd>\n<dt class=\"field-even\">extra_tags (permissive dict, optional)</dt>\n<dd class=\"field-even\"><p>Any extra key-value tags to log to mlflow.</p>\n<details class=\"summary-default-value\">\n<summary>Default Value:</summary><div class=\"highlight-javascript notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"p\">{}</span>\n</pre></div>\n</div>\n</details></dd>\n</dl>\n</details><p>This resource initializes an MLflow run that\u2019s used for all steps within a Dagster run.</p>\n<p>This resource provides access to all of mlflow\u2019s methods as well as the mlflow tracking client\u2019s\nmethods.</p>\n<p>Usage:</p>\n<ol class=\"arabic simple\">\n<li><p>Add the mlflow resource to any solids in which you want to invoke mlflow tracking APIs.</p></li>\n<li><p>Add the <cite>end_mlflow_on_run_finished</cite> hook to your pipeline to end the MLflow run\nwhen the Dagster run is finished.</p></li>\n</ol>\n<p class=\"rubric\">Examples</p>\n<div class=\"highlight-python notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"kn\">from</span> <span class=\"nn\">dagster_mlflow</span> <span class=\"kn\">import</span> <span class=\"n\">end_mlflow_on_run_finished</span><span class=\"p\">,</span> <span class=\"n\">mlflow_tracking</span>\n\n<span class=\"nd\">@op</span><span class=\"p\">(</span><span class=\"n\">required_resource_keys</span><span class=\"o\">=</span><span class=\"p\">{</span><span class=\"s2\">&quot;mlflow&quot;</span><span class=\"p\">})</span>\n<span class=\"k\">def</span> <span class=\"nf\">mlflow_solid</span><span class=\"p\">(</span><span class=\"n\">context</span><span class=\"p\">):</span>\n    <span class=\"n\">mlflow</span><span class=\"o\">.</span><span class=\"n\">log_params</span><span class=\"p\">(</span><span class=\"n\">some_params</span><span class=\"p\">)</span>\n    <span class=\"n\">mlflow</span><span class=\"o\">.</span><span class=\"n\">tracking</span><span class=\"o\">.</span><span class=\"n\">MlflowClient</span><span class=\"p\">()</span><span class=\"o\">.</span><span class=\"n\">create_registered_model</span><span class=\"p\">(</span><span class=\"n\">some_model_name</span><span class=\"p\">)</span>\n\n<span class=\"nd\">@end_mlflow_on_run_finished</span>\n<span class=\"nd\">@job</span><span class=\"p\">(</span><span class=\"n\">resource_defs</span><span class=\"o\">=</span><span class=\"p\">{</span><span class=\"s2\">&quot;mlflow&quot;</span><span class=\"p\">:</span> <span class=\"n\">mlflow_tracking</span><span class=\"p\">})</span>\n<span class=\"k\">def</span> <span class=\"nf\">mlf_example</span><span class=\"p\">():</span>\n    <span class=\"n\">mlflow_op</span><span class=\"p\">()</span>\n\n<span class=\"c1\"># example using an mlflow instance with s3 storage</span>\n<span class=\"n\">mlf_example</span><span class=\"o\">.</span><span class=\"n\">execute_in_process</span><span class=\"p\">(</span><span class=\"n\">run_config</span><span class=\"o\">=</span><span class=\"p\">{</span>\n    <span class=\"s2\">&quot;resources&quot;</span><span class=\"p\">:</span> <span class=\"p\">{</span>\n        <span class=\"s2\">&quot;mlflow&quot;</span><span class=\"p\">:</span> <span class=\"p\">{</span>\n            <span class=\"s2\">&quot;config&quot;</span><span class=\"p\">:</span> <span class=\"p\">{</span>\n                <span class=\"s2\">&quot;experiment_name&quot;</span><span class=\"p\">:</span> <span class=\"n\">my_experiment</span><span class=\"p\">,</span>\n                <span class=\"s2\">&quot;mlflow_tracking_uri&quot;</span><span class=\"p\">:</span> <span class=\"s2\">&quot;http://localhost:5000&quot;</span><span class=\"p\">,</span>\n\n                <span class=\"c1\"># if want to run a nested run, provide parent_run_id</span>\n                <span class=\"s2\">&quot;parent_run_id&quot;</span><span class=\"p\">:</span> <span class=\"n\">an_existing_mlflow_run_id</span><span class=\"p\">,</span>\n\n                <span class=\"c1\"># env variables to pass to mlflow</span>\n                <span class=\"s2\">&quot;env&quot;</span><span class=\"p\">:</span> <span class=\"p\">{</span>\n                    <span class=\"s2\">&quot;MLFLOW_S3_ENDPOINT_URL&quot;</span><span class=\"p\">:</span> <span class=\"n\">my_s3_endpoint</span><span class=\"p\">,</span>\n                    <span class=\"s2\">&quot;AWS_ACCESS_KEY_ID&quot;</span><span class=\"p\">:</span> <span class=\"n\">my_aws_key_id</span><span class=\"p\">,</span>\n                    <span class=\"s2\">&quot;AWS_SECRET_ACCESS_KEY&quot;</span><span class=\"p\">:</span> <span class=\"n\">my_secret</span><span class=\"p\">,</span>\n                <span class=\"p\">},</span>\n\n                <span class=\"c1\"># env variables you want to log as mlflow tags</span>\n                <span class=\"s2\">&quot;env_to_tag&quot;</span><span class=\"p\">:</span> <span class=\"p\">[</span><span class=\"s2\">&quot;DOCKER_IMAGE_TAG&quot;</span><span class=\"p\">],</span>\n\n                <span class=\"c1\"># key-value tags to add to your experiment</span>\n                <span class=\"s2\">&quot;extra_tags&quot;</span><span class=\"p\">:</span> <span class=\"p\">{</span><span class=\"s2\">&quot;super&quot;</span><span class=\"p\">:</span> <span class=\"s2\">&quot;experiment&quot;</span><span class=\"p\">},</span>\n            <span class=\"p\">}</span>\n        <span class=\"p\">}</span>\n    <span class=\"p\">}</span>\n<span class=\"p\">})</span>\n</pre></div>\n</div>\n</dd></dl>\n\n<dl class=\"py data\">\n<dt id=\"dagster_mlflow.end_mlflow_on_run_finished\">\n<code class=\"sig-prename descclassname\"><span class=\"pre\">dagster_mlflow.</span></code><code class=\"sig-name descname\"><span class=\"pre\">end_mlflow_on_run_finished</span></code><em class=\"property\"> <span class=\"pre\">HookDefinition</span></em><a class=\"headerlink\" href=\"#dagster_mlflow.end_mlflow_on_run_finished\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd></dd></dl>\n\n<div class=\"section\" id=\"legacy\">\n<h2>Legacy<a class=\"headerlink\" href=\"#legacy\" title=\"Permalink to this headline\">\u00b6</a></h2>\n<dl class=\"py data\">\n<dt id=\"dagster_mlflow.end_mlflow_run_on_pipeline_finished\">\n<code class=\"sig-prename descclassname\"><span class=\"pre\">dagster_mlflow.</span></code><code class=\"sig-name descname\"><span class=\"pre\">end_mlflow_run_on_pipeline_finished</span></code><em class=\"property\"> <span class=\"pre\">HookDefinition</span></em><a class=\"headerlink\" href=\"#dagster_mlflow.end_mlflow_run_on_pipeline_finished\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd></dd></dl>\n\n</div>\n</div>\n", "current_page_name": "sections/api/apidocs/libraries/dagster-mlflow", "customsidebar": null, "display_toc": true, "meta": null, "metatags": "", "next": {"link": "../dagster-msteams/", "title": "Microsoft Teams (dagster-msteams)"}, "page_source_suffix": ".rst", "parents": [], "prev": {"link": "../dagster-k8s/", "title": "Kubernetes (dagster-k8s)"}, "rellinks": [["genindex", "General Index", "I", "index"], ["py-modindex", "Python Module Index", "", "modules"], ["sections/api/apidocs/libraries/dagster-msteams", "Microsoft Teams (dagster-msteams)", "N", "next"], ["sections/api/apidocs/libraries/dagster-k8s", "Kubernetes (dagster-k8s)", "P", "previous"]], "sidebars": ["globaltoc.html", "searchbox.html"], "sourcename": "sections/api/apidocs/libraries/dagster-mlflow.rst.txt", "title": "MLflow (dagster-mlflow)", "toc": "<ul>\n<li><a class=\"reference internal\" href=\"#\">MLflow (dagster-mlflow)</a><ul>\n<li><a class=\"reference internal\" href=\"#legacy\">Legacy</a></li>\n</ul>\n</li>\n</ul>\n"}, "dagster-msteams": {"alabaster_version": "0.7.12", "body": "<div class=\"section\" id=\"microsoft-teams-dagster-msteams\">\n<h1>Microsoft Teams (dagster-msteams)<a class=\"headerlink\" href=\"#microsoft-teams-dagster-msteams\" title=\"Permalink to this headline\">\u00b6</a></h1>\n<dl class=\"py data\">\n<dt id=\"dagster_msteams.msteams_resource\">\n<code class=\"sig-prename descclassname\"><span class=\"pre\">dagster_msteams.</span></code><code class=\"sig-name descname\"><span class=\"pre\">msteams_resource</span></code><em class=\"property\"> <span class=\"pre\">ResourceDefinition</span></em><a class=\"reference internal\" href=\"../../../../../_modules/dagster_msteams/resources#msteams_resource\"><span class=\"viewcode-link\"><span class=\"pre\">[source]</span></span></a><a class=\"headerlink\" href=\"#dagster_msteams.msteams_resource\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><div class=\"line-block\">\n<div class=\"line\"><br /></div>\n</div>\n<details class=\"summary-config-schema\">\n<summary>Config Schema:</summary><dl class=\"field-list simple\">\n<dt class=\"field-odd\">hook_url (dagster.StringSource)</dt>\n<dd class=\"field-odd\"><p>To send messages to MS Teams channel, an incoming webhook has to\nbe created. The incoming webhook url must be given as a part of the\nresource config to the msteams_resource in dagster.</p>\n</dd>\n<dt class=\"field-even\">http_proxy (dagster.StringSource, optional)</dt>\n<dd class=\"field-even\"><p></p></dd>\n<dt class=\"field-odd\">https_proxy (dagster.StringSource, optional)</dt>\n<dd class=\"field-odd\"><p></p></dd>\n<dt class=\"field-even\">timeout (Float, optional)</dt>\n<dd class=\"field-even\"><p><strong>Default Value:</strong> 60</p>\n</dd>\n<dt class=\"field-odd\">Verify (Bool, optional)</dt>\n<dd class=\"field-odd\"><p></p></dd>\n</dl>\n</details><p>This resource is for connecting to Microsoft Teams.</p>\n<p>The resource object is a <cite>dagster_msteams.TeamsClient</cite>.</p>\n<p>By configuring this resource, you can post messages to MS Teams from any Dagster solid:</p>\n<p>Examples:</p>\n<div class=\"highlight-python notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"kn\">import</span> <span class=\"nn\">os</span>\n\n<span class=\"kn\">from</span> <span class=\"nn\">dagster</span> <span class=\"kn\">import</span> <span class=\"n\">ModeDefinition</span><span class=\"p\">,</span> <span class=\"n\">execute_pipeline</span><span class=\"p\">,</span> <span class=\"n\">pipeline</span><span class=\"p\">,</span> <span class=\"n\">solid</span>\n<span class=\"kn\">from</span> <span class=\"nn\">dagster_msteams</span> <span class=\"kn\">import</span> <span class=\"n\">Card</span><span class=\"p\">,</span> <span class=\"n\">msteams_resource</span>\n\n\n<span class=\"nd\">@solid</span><span class=\"p\">(</span><span class=\"n\">required_resource_keys</span><span class=\"o\">=</span><span class=\"p\">{</span><span class=\"s2\">&quot;msteams&quot;</span><span class=\"p\">})</span>\n<span class=\"k\">def</span> <span class=\"nf\">teams_solid</span><span class=\"p\">(</span><span class=\"n\">context</span><span class=\"p\">):</span>\n    <span class=\"n\">card</span> <span class=\"o\">=</span> <span class=\"n\">Card</span><span class=\"p\">()</span>\n    <span class=\"n\">card</span><span class=\"o\">.</span><span class=\"n\">add_attachment</span><span class=\"p\">(</span><span class=\"n\">text_message</span><span class=\"o\">=</span><span class=\"s2\">&quot;Hello There !!&quot;</span><span class=\"p\">)</span>\n    <span class=\"n\">context</span><span class=\"o\">.</span><span class=\"n\">resources</span><span class=\"o\">.</span><span class=\"n\">msteams</span><span class=\"o\">.</span><span class=\"n\">post_message</span><span class=\"p\">(</span><span class=\"n\">payload</span><span class=\"o\">=</span><span class=\"n\">card</span><span class=\"o\">.</span><span class=\"n\">payload</span><span class=\"p\">)</span>\n\n\n<span class=\"nd\">@pipeline</span><span class=\"p\">(</span>\n    <span class=\"n\">mode_defs</span><span class=\"o\">=</span><span class=\"p\">[</span><span class=\"n\">ModeDefinition</span><span class=\"p\">(</span><span class=\"n\">resource_defs</span><span class=\"o\">=</span><span class=\"p\">{</span><span class=\"s2\">&quot;msteams&quot;</span><span class=\"p\">:</span> <span class=\"n\">msteams_resource</span><span class=\"p\">})],</span>\n<span class=\"p\">)</span>\n<span class=\"k\">def</span> <span class=\"nf\">teams_pipeline</span><span class=\"p\">():</span>\n    <span class=\"n\">teams_solid</span><span class=\"p\">()</span>\n\n\n<span class=\"n\">execute_pipeline</span><span class=\"p\">(</span>\n    <span class=\"n\">teams_pipeline</span><span class=\"p\">,</span>\n    <span class=\"p\">{</span><span class=\"s2\">&quot;resources&quot;</span><span class=\"p\">:</span> <span class=\"p\">{</span><span class=\"s2\">&quot;msteams&quot;</span><span class=\"p\">:</span> <span class=\"p\">{</span><span class=\"s2\">&quot;config&quot;</span><span class=\"p\">:</span> <span class=\"p\">{</span><span class=\"s2\">&quot;hook_url&quot;</span><span class=\"p\">:</span> <span class=\"n\">os</span><span class=\"o\">.</span><span class=\"n\">getenv</span><span class=\"p\">(</span><span class=\"s2\">&quot;TEAMS_WEBHOOK_URL&quot;</span><span class=\"p\">)}}}},</span>\n<span class=\"p\">)</span>\n</pre></div>\n</div>\n</dd></dl>\n\n<dl class=\"py data\">\n<dt id=\"dagster_msteams.teams_on_failure\">\n<code class=\"sig-prename descclassname\"><span class=\"pre\">dagster_msteams.</span></code><code class=\"sig-name descname\"><span class=\"pre\">teams_on_failure</span></code><em class=\"property\"> <span class=\"pre\">HookDefinition</span></em><a class=\"reference internal\" href=\"../../../../../_modules/dagster_msteams/hooks#teams_on_failure\"><span class=\"viewcode-link\"><span class=\"pre\">[source]</span></span></a><a class=\"headerlink\" href=\"#dagster_msteams.teams_on_failure\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Create a hook on step failure events that will message the given MS Teams webhook URL.</p>\n<dl class=\"field-list simple\">\n<dt class=\"field-odd\">Parameters</dt>\n<dd class=\"field-odd\"><ul class=\"simple\">\n<li><p><strong>message_fn</strong> (<em>Optional</em><em>(</em><em>Callable</em><em>[</em><em>[</em><a class=\"reference internal\" href=\"../../hooks#dagster.HookContext\" title=\"dagster.HookContext\"><em>HookContext</em></a><em>]</em><em>, </em><a class=\"reference external\" href=\"https://docs.python.org/3/library/stdtypes.html#str\" title=\"(in Python v3.8)\"><em>str</em></a><em>]</em><em>)</em>) \u2013 Function which takes in the\nHookContext outputs the message you want to send.</p></li>\n<li><p><strong>dagit_base_url</strong> \u2013 (Optional[str]): The base url of your Dagit instance. Specify this\nto allow messages to include deeplinks to the specific pipeline run that triggered\nthe hook.</p></li>\n</ul>\n</dd>\n</dl>\n<p class=\"rubric\">Examples</p>\n<div class=\"highlight-python notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"nd\">@teams_on_failure</span><span class=\"p\">(</span><span class=\"n\">dagit_base_url</span><span class=\"o\">=</span><span class=\"s2\">&quot;http://localhost:3000&quot;</span><span class=\"p\">)</span>\n<span class=\"nd\">@pipeline</span><span class=\"p\">(</span><span class=\"o\">...</span><span class=\"p\">)</span>\n<span class=\"k\">def</span> <span class=\"nf\">my_pipeline</span><span class=\"p\">():</span>\n    <span class=\"k\">pass</span>\n</pre></div>\n</div>\n<div class=\"highlight-python notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"k\">def</span> <span class=\"nf\">my_message_fn</span><span class=\"p\">(</span><span class=\"n\">context</span><span class=\"p\">:</span> <span class=\"n\">HookContext</span><span class=\"p\">)</span> <span class=\"o\">-&gt;</span> <span class=\"nb\">str</span><span class=\"p\">:</span>\n    <span class=\"k\">return</span> <span class=\"s2\">&quot;Solid </span><span class=\"si\">{solid_name}</span><span class=\"s2\"> failed!&quot;</span><span class=\"o\">.</span><span class=\"n\">format</span><span class=\"p\">(</span>\n        <span class=\"n\">solid_name</span><span class=\"o\">=</span><span class=\"n\">context</span><span class=\"o\">.</span><span class=\"n\">solid</span>\n    <span class=\"p\">)</span>\n\n<span class=\"nd\">@solid</span>\n<span class=\"k\">def</span> <span class=\"nf\">a_solid</span><span class=\"p\">(</span><span class=\"n\">context</span><span class=\"p\">):</span>\n    <span class=\"k\">pass</span>\n\n<span class=\"nd\">@pipeline</span><span class=\"p\">(</span><span class=\"o\">...</span><span class=\"p\">)</span>\n<span class=\"k\">def</span> <span class=\"nf\">my_pipeline</span><span class=\"p\">():</span>\n    <span class=\"n\">a_solid</span><span class=\"o\">.</span><span class=\"n\">with_hooks</span><span class=\"p\">(</span><span class=\"n\">hook_defs</span><span class=\"o\">=</span><span class=\"p\">{</span><span class=\"n\">teams_on_failure</span><span class=\"p\">(</span><span class=\"s2\">&quot;#foo&quot;</span><span class=\"p\">,</span> <span class=\"n\">my_message_fn</span><span class=\"p\">)})</span>\n</pre></div>\n</div>\n</dd></dl>\n\n<dl class=\"py data\">\n<dt id=\"dagster_msteams.teams_on_success\">\n<code class=\"sig-prename descclassname\"><span class=\"pre\">dagster_msteams.</span></code><code class=\"sig-name descname\"><span class=\"pre\">teams_on_success</span></code><em class=\"property\"> <span class=\"pre\">HookDefinition</span></em><a class=\"reference internal\" href=\"../../../../../_modules/dagster_msteams/hooks#teams_on_success\"><span class=\"viewcode-link\"><span class=\"pre\">[source]</span></span></a><a class=\"headerlink\" href=\"#dagster_msteams.teams_on_success\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Create a hook on step success events that will message the given MS Teams webhook URL.</p>\n<dl class=\"field-list simple\">\n<dt class=\"field-odd\">Parameters</dt>\n<dd class=\"field-odd\"><ul class=\"simple\">\n<li><p><strong>message_fn</strong> (<em>Optional</em><em>(</em><em>Callable</em><em>[</em><em>[</em><a class=\"reference internal\" href=\"../../hooks#dagster.HookContext\" title=\"dagster.HookContext\"><em>HookContext</em></a><em>]</em><em>, </em><a class=\"reference external\" href=\"https://docs.python.org/3/library/stdtypes.html#str\" title=\"(in Python v3.8)\"><em>str</em></a><em>]</em><em>)</em>) \u2013 Function which takes in the\nHookContext outputs the message you want to send.</p></li>\n<li><p><strong>dagit_base_url</strong> \u2013 (Optional[str]): The base url of your Dagit instance. Specify this\nto allow messages to include deeplinks to the specific pipeline run that triggered\nthe hook.</p></li>\n</ul>\n</dd>\n</dl>\n<p class=\"rubric\">Examples</p>\n<div class=\"highlight-python notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"nd\">@teams_on_success</span><span class=\"p\">(</span><span class=\"n\">dagit_base_url</span><span class=\"o\">=</span><span class=\"s2\">&quot;http://localhost:3000&quot;</span><span class=\"p\">)</span>\n<span class=\"nd\">@pipeline</span><span class=\"p\">(</span><span class=\"o\">...</span><span class=\"p\">)</span>\n<span class=\"k\">def</span> <span class=\"nf\">my_pipeline</span><span class=\"p\">():</span>\n    <span class=\"k\">pass</span>\n</pre></div>\n</div>\n<div class=\"highlight-python notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"k\">def</span> <span class=\"nf\">my_message_fn</span><span class=\"p\">(</span><span class=\"n\">context</span><span class=\"p\">:</span> <span class=\"n\">HookContext</span><span class=\"p\">)</span> <span class=\"o\">-&gt;</span> <span class=\"nb\">str</span><span class=\"p\">:</span>\n    <span class=\"k\">return</span> <span class=\"s2\">&quot;Solid </span><span class=\"si\">{solid_name}</span><span class=\"s2\"> failed!&quot;</span><span class=\"o\">.</span><span class=\"n\">format</span><span class=\"p\">(</span>\n        <span class=\"n\">solid_name</span><span class=\"o\">=</span><span class=\"n\">context</span><span class=\"o\">.</span><span class=\"n\">solid</span>\n    <span class=\"p\">)</span>\n\n<span class=\"nd\">@solid</span>\n<span class=\"k\">def</span> <span class=\"nf\">a_solid</span><span class=\"p\">(</span><span class=\"n\">context</span><span class=\"p\">):</span>\n    <span class=\"k\">pass</span>\n\n<span class=\"nd\">@pipeline</span><span class=\"p\">(</span><span class=\"o\">...</span><span class=\"p\">)</span>\n<span class=\"k\">def</span> <span class=\"nf\">my_pipeline</span><span class=\"p\">():</span>\n    <span class=\"n\">a_solid</span><span class=\"o\">.</span><span class=\"n\">with_hooks</span><span class=\"p\">(</span><span class=\"n\">hook_defs</span><span class=\"o\">=</span><span class=\"p\">{</span><span class=\"n\">teams_on_success</span><span class=\"p\">(</span><span class=\"s2\">&quot;#foo&quot;</span><span class=\"p\">,</span> <span class=\"n\">my_message_fn</span><span class=\"p\">)})</span>\n</pre></div>\n</div>\n</dd></dl>\n\n<dl class=\"py function\">\n<dt id=\"dagster_msteams.make_teams_on_pipeline_failure_sensor\">\n<code class=\"sig-prename descclassname\"><span class=\"pre\">dagster_msteams.</span></code><code class=\"sig-name descname\"><span class=\"pre\">make_teams_on_pipeline_failure_sensor</span></code><span class=\"sig-paren\">(</span><em class=\"sig-param\"><span class=\"pre\">hook_url</span></em>, <em class=\"sig-param\"><span class=\"pre\">message_fn=&lt;function</span> <span class=\"pre\">_default_failure_message&gt;</span></em>, <em class=\"sig-param\"><span class=\"pre\">http_proxy=None</span></em>, <em class=\"sig-param\"><span class=\"pre\">https_proxy=None</span></em>, <em class=\"sig-param\"><span class=\"pre\">timeout=60</span></em>, <em class=\"sig-param\"><span class=\"pre\">verify=None</span></em>, <em class=\"sig-param\"><span class=\"pre\">name=None</span></em>, <em class=\"sig-param\"><span class=\"pre\">dagit_base_url=None</span></em>, <em class=\"sig-param\"><span class=\"pre\">default_status=&lt;DefaultSensorStatus.STOPPED:</span> <span class=\"pre\">'STOPPED'&gt;</span></em><span class=\"sig-paren\">)</span><a class=\"reference internal\" href=\"../../../../../_modules/dagster_msteams/sensors#make_teams_on_pipeline_failure_sensor\"><span class=\"viewcode-link\"><span class=\"pre\">[source]</span></span></a><a class=\"headerlink\" href=\"#dagster_msteams.make_teams_on_pipeline_failure_sensor\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Create a sensor on pipeline failures that will message the given MS Teams webhook URL.</p>\n<dl class=\"field-list simple\">\n<dt class=\"field-odd\">Parameters</dt>\n<dd class=\"field-odd\"><ul class=\"simple\">\n<li><p><strong>hook_url</strong> (<a class=\"reference external\" href=\"https://docs.python.org/3/library/stdtypes.html#str\" title=\"(in Python v3.8)\"><em>str</em></a>) \u2013 MS Teams incoming webhook URL.</p></li>\n<li><p><strong>message_fn</strong> (<em>Optional</em><em>(</em><em>Callable</em><em>[</em><em>[</em><a class=\"reference internal\" href=\"../../schedules-sensors#dagster.PipelineFailureSensorContext\" title=\"dagster.PipelineFailureSensorContext\"><em>PipelineFailureSensorContext</em></a><em>]</em><em>, </em><a class=\"reference external\" href=\"https://docs.python.org/3/library/stdtypes.html#str\" title=\"(in Python v3.8)\"><em>str</em></a><em>]</em><em>)</em>) \u2013 Function which\ntakes in the <code class=\"docutils literal notranslate\"><span class=\"pre\">PipelineFailureSensorContext</span></code> and outputs the message you want to send.\nDefaults to a text message that contains error message, pipeline name, and run ID.</p></li>\n<li><p><strong>http_proxy</strong> \u2013 (Optional[str]): Proxy for requests using http protocol.</p></li>\n<li><p><strong>https_proxy</strong> \u2013 (Optional[str]): Proxy for requests using https protocol.</p></li>\n<li><p><strong>timeout</strong> \u2013 (Optional[float]): Connection timeout in seconds. Defaults to 60.</p></li>\n<li><p><strong>verify</strong> \u2013 (Optional[bool]): Whether to verify the servers TLS certificate.</p></li>\n<li><p><strong>name</strong> \u2013 (Optional[str]): The name of the sensor. Defaults to \u201cteams_on_pipeline_failure\u201d.</p></li>\n<li><p><strong>dagit_base_url</strong> \u2013 (Optional[str]): The base url of your Dagit instance. Specify this to allow\nmessages to include deeplinks to the failed pipeline run.</p></li>\n<li><p><strong>default_status</strong> (<em>DefaultSensorStatus</em>) \u2013 Whether the sensor starts as running or not. The default\nstatus can be overridden from Dagit or via the GraphQL API.</p></li>\n</ul>\n</dd>\n</dl>\n<p class=\"rubric\">Examples</p>\n<div class=\"highlight-python notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"n\">teams_on_pipeline_failure</span> <span class=\"o\">=</span> <span class=\"n\">make_teams_on_pipeline_failure_sensor</span><span class=\"p\">(</span>\n    <span class=\"n\">hook_url</span><span class=\"o\">=</span><span class=\"n\">os</span><span class=\"o\">.</span><span class=\"n\">getenv</span><span class=\"p\">(</span><span class=\"s2\">&quot;TEAMS_WEBHOOK_URL&quot;</span><span class=\"p\">)</span>\n<span class=\"p\">)</span>\n\n<span class=\"nd\">@repository</span>\n<span class=\"k\">def</span> <span class=\"nf\">my_repo</span><span class=\"p\">():</span>\n    <span class=\"k\">return</span> <span class=\"p\">[</span><span class=\"n\">my_pipeline</span> <span class=\"o\">+</span> <span class=\"n\">teams_on_pipeline_failure</span><span class=\"p\">]</span>\n</pre></div>\n</div>\n<div class=\"highlight-python notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"k\">def</span> <span class=\"nf\">my_message_fn</span><span class=\"p\">(</span><span class=\"n\">context</span><span class=\"p\">:</span> <span class=\"n\">PipelineFailureSensorContext</span><span class=\"p\">)</span> <span class=\"o\">-&gt;</span> <span class=\"nb\">str</span><span class=\"p\">:</span>\n    <span class=\"k\">return</span> <span class=\"s2\">&quot;Pipeline </span><span class=\"si\">{pipeline_name}</span><span class=\"s2\"> failed! Error: </span><span class=\"si\">{error}</span><span class=\"s2\">&quot;</span><span class=\"o\">.</span><span class=\"n\">format</span><span class=\"p\">(</span>\n        <span class=\"n\">pipeline_name</span><span class=\"o\">=</span><span class=\"n\">context</span><span class=\"o\">.</span><span class=\"n\">pipeline_run</span><span class=\"o\">.</span><span class=\"n\">pipeline_name</span><span class=\"p\">,</span>\n        <span class=\"n\">error</span><span class=\"o\">=</span><span class=\"n\">context</span><span class=\"o\">.</span><span class=\"n\">failure_event</span><span class=\"o\">.</span><span class=\"n\">message</span><span class=\"p\">,</span>\n    <span class=\"p\">)</span>\n\n<span class=\"n\">teams_on_pipeline_failure</span> <span class=\"o\">=</span> <span class=\"n\">make_teams_on_pipeline_failure_sensor</span><span class=\"p\">(</span>\n    <span class=\"n\">hook_url</span><span class=\"o\">=</span><span class=\"n\">os</span><span class=\"o\">.</span><span class=\"n\">getenv</span><span class=\"p\">(</span><span class=\"s2\">&quot;TEAMS_WEBHOOK_URL&quot;</span><span class=\"p\">),</span>\n    <span class=\"n\">message_fn</span><span class=\"o\">=</span><span class=\"n\">my_message_fn</span><span class=\"p\">,</span>\n    <span class=\"n\">dagit_base_url</span><span class=\"o\">=</span><span class=\"s2\">&quot;http://localhost:3000&quot;</span><span class=\"p\">,</span>\n<span class=\"p\">)</span>\n</pre></div>\n</div>\n</dd></dl>\n\n</div>\n", "current_page_name": "sections/api/apidocs/libraries/dagster-msteams", "customsidebar": null, "display_toc": false, "meta": null, "metatags": "", "next": {"link": "../dagster-mysql/", "title": "MySQL (dagster-mysql)"}, "page_source_suffix": ".rst", "parents": [], "prev": {"link": "../dagster-mlflow/", "title": "MLflow (dagster-mlflow)"}, "rellinks": [["genindex", "General Index", "I", "index"], ["py-modindex", "Python Module Index", "", "modules"], ["sections/api/apidocs/libraries/dagster-mysql", "MySQL (dagster-mysql)", "N", "next"], ["sections/api/apidocs/libraries/dagster-mlflow", "MLflow (dagster-mlflow)", "P", "previous"]], "sidebars": ["globaltoc.html", "searchbox.html"], "sourcename": "sections/api/apidocs/libraries/dagster-msteams.rst.txt", "title": "Microsoft Teams (dagster-msteams)", "toc": "<ul>\n<li><a class=\"reference internal\" href=\"#\">Microsoft Teams (dagster-msteams)</a></li>\n</ul>\n"}, "dagster-mysql": {"alabaster_version": "0.7.12", "body": "<div class=\"section\" id=\"mysql-dagster-mysql\">\n<h1>MySQL (dagster-mysql)<a class=\"headerlink\" href=\"#mysql-dagster-mysql\" title=\"Permalink to this headline\">\u00b6</a></h1>\n<dl class=\"py class\">\n<dt id=\"dagster_mysql.MySQLEventLogStorage\">\n<em class=\"property\"><span class=\"pre\">class</span> </em><code class=\"sig-prename descclassname\"><span class=\"pre\">dagster_mysql.</span></code><code class=\"sig-name descname\"><span class=\"pre\">MySQLEventLogStorage</span></code><span class=\"sig-paren\">(</span><em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">mysql_url</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">inst_data</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">None</span></span></em><span class=\"sig-paren\">)</span><a class=\"reference internal\" href=\"../../../../../_modules/dagster_mysql/event_log/event_log#MySQLEventLogStorage\"><span class=\"viewcode-link\"><span class=\"pre\">[source]</span></span></a><a class=\"headerlink\" href=\"#dagster_mysql.MySQLEventLogStorage\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>MySQL-backed event log storage.</p>\n<p>Users should not directly instantiate this class; it is instantiated by internal machinery when\n<code class=\"docutils literal notranslate\"><span class=\"pre\">dagit</span></code> and <code class=\"docutils literal notranslate\"><span class=\"pre\">dagster-graphql</span></code> load, based on the values in the <code class=\"docutils literal notranslate\"><span class=\"pre\">dagster.yaml</span></code> file in\n<code class=\"docutils literal notranslate\"><span class=\"pre\">$DAGSTER_HOME</span></code>. Configuration of this class should be done by setting values in that file.</p>\n<div class=\"literal-block-wrapper docutils container\" id=\"id1\">\n<div class=\"code-block-caption\"><span class=\"caption-text\">dagster.yaml</span><a class=\"headerlink\" href=\"#id1\" title=\"Permalink to this code\">\u00b6</a></div>\n<div class=\"highlight-YAML notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"nt\">event_log_storage</span><span class=\"p\">:</span><span class=\"w\"></span>\n<span class=\"w\"> </span><span class=\"nt\">module</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"l l-Scalar l-Scalar-Plain\">dagster_mysql.event_log</span><span class=\"w\"></span>\n<span class=\"w\"> </span><span class=\"nt\">class</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"l l-Scalar l-Scalar-Plain\">MySQLEventLogStorage</span><span class=\"w\"></span>\n<span class=\"w\"> </span><span class=\"nt\">config</span><span class=\"p\">:</span><span class=\"w\"></span>\n<span class=\"w\">  </span><span class=\"nt\">mysql_db</span><span class=\"p\">:</span><span class=\"w\"></span>\n<span class=\"w\">   </span><span class=\"nt\">username</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"p p-Indicator\">{</span><span class=\"w\"> </span><span class=\"nv\">username</span><span class=\"w\"> </span><span class=\"p p-Indicator\">}</span><span class=\"w\"></span>\n<span class=\"w\">   </span><span class=\"nt\">password</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"p p-Indicator\">{</span><span class=\"w\"> </span><span class=\"nv\">password</span><span class=\"w\"> </span><span class=\"p p-Indicator\">}</span><span class=\"w\"></span>\n<span class=\"w\">   </span><span class=\"nt\">hostname</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"p p-Indicator\">{</span><span class=\"w\"> </span><span class=\"nv\">hostname</span><span class=\"w\"> </span><span class=\"p p-Indicator\">}</span><span class=\"w\"></span>\n<span class=\"w\">   </span><span class=\"nt\">db_name</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"p p-Indicator\">{</span><span class=\"w\"> </span><span class=\"nv\">db_name</span><span class=\"w\"> </span><span class=\"p p-Indicator\">}</span><span class=\"w\"></span>\n<span class=\"w\">   </span><span class=\"nt\">port</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"p p-Indicator\">{</span><span class=\"w\"> </span><span class=\"nv\">port</span><span class=\"w\"> </span><span class=\"p p-Indicator\">}</span><span class=\"w\"></span>\n</pre></div>\n</div>\n</div>\n<p>Note that the fields in this config are <a class=\"reference internal\" href=\"../../config#dagster.StringSource\" title=\"dagster.StringSource\"><code class=\"xref py py-class docutils literal notranslate\"><span class=\"pre\">StringSource</span></code></a> and\n<a class=\"reference internal\" href=\"../../config#dagster.IntSource\" title=\"dagster.IntSource\"><code class=\"xref py py-class docutils literal notranslate\"><span class=\"pre\">IntSource</span></code></a> and can be configured from environment variables.</p>\n</dd></dl>\n\n<dl class=\"py class\">\n<dt id=\"dagster_mysql.MySQLRunStorage\">\n<em class=\"property\"><span class=\"pre\">class</span> </em><code class=\"sig-prename descclassname\"><span class=\"pre\">dagster_mysql.</span></code><code class=\"sig-name descname\"><span class=\"pre\">MySQLRunStorage</span></code><span class=\"sig-paren\">(</span><em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">mysql_url</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">inst_data</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">None</span></span></em><span class=\"sig-paren\">)</span><a class=\"reference internal\" href=\"../../../../../_modules/dagster_mysql/run_storage/run_storage#MySQLRunStorage\"><span class=\"viewcode-link\"><span class=\"pre\">[source]</span></span></a><a class=\"headerlink\" href=\"#dagster_mysql.MySQLRunStorage\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>MySQL-backed run storage.</p>\n<p>Users should not directly instantiate this class; it is instantiated by internal machinery when\n<code class=\"docutils literal notranslate\"><span class=\"pre\">dagit</span></code> and <code class=\"docutils literal notranslate\"><span class=\"pre\">dagster-graphql</span></code> load, based on the values in the <code class=\"docutils literal notranslate\"><span class=\"pre\">dagster.yaml</span></code> file in\n<code class=\"docutils literal notranslate\"><span class=\"pre\">$DAGSTER_HOME</span></code>. Configuration of this class should be done by setting values in that file.</p>\n<div class=\"literal-block-wrapper docutils container\" id=\"id2\">\n<div class=\"code-block-caption\"><span class=\"caption-text\">dagster.yaml</span><a class=\"headerlink\" href=\"#id2\" title=\"Permalink to this code\">\u00b6</a></div>\n<div class=\"highlight-YAML notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"nt\">run_storage</span><span class=\"p\">:</span><span class=\"w\"></span>\n<span class=\"w\"> </span><span class=\"nt\">module</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"l l-Scalar l-Scalar-Plain\">dagster_mysql.run_storage</span><span class=\"w\"></span>\n<span class=\"w\"> </span><span class=\"nt\">class</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"l l-Scalar l-Scalar-Plain\">MySQLRunStorage</span><span class=\"w\"></span>\n<span class=\"w\"> </span><span class=\"nt\">config</span><span class=\"p\">:</span><span class=\"w\"></span>\n<span class=\"w\">  </span><span class=\"nt\">mysql_db</span><span class=\"p\">:</span><span class=\"w\"></span>\n<span class=\"w\">   </span><span class=\"nt\">username</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"p p-Indicator\">{</span><span class=\"w\"> </span><span class=\"nv\">username</span><span class=\"w\"> </span><span class=\"p p-Indicator\">}</span><span class=\"w\"></span>\n<span class=\"w\">   </span><span class=\"nt\">password</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"p p-Indicator\">{</span><span class=\"w\"> </span><span class=\"nv\">password</span><span class=\"w\"> </span><span class=\"p p-Indicator\">}</span><span class=\"w\"></span>\n<span class=\"w\">   </span><span class=\"nt\">hostname</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"p p-Indicator\">{</span><span class=\"w\"> </span><span class=\"nv\">hostname</span><span class=\"w\"> </span><span class=\"p p-Indicator\">}</span><span class=\"w\"></span>\n<span class=\"w\">   </span><span class=\"nt\">db_name</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"p p-Indicator\">{</span><span class=\"w\"> </span><span class=\"nv\">database</span><span class=\"w\"> </span><span class=\"p p-Indicator\">}</span><span class=\"w\"></span>\n<span class=\"w\">   </span><span class=\"nt\">port</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"p p-Indicator\">{</span><span class=\"w\"> </span><span class=\"nv\">port</span><span class=\"w\"> </span><span class=\"p p-Indicator\">}</span><span class=\"w\"></span>\n</pre></div>\n</div>\n</div>\n<p>Note that the fields in this config are <a class=\"reference internal\" href=\"../../config#dagster.StringSource\" title=\"dagster.StringSource\"><code class=\"xref py py-class docutils literal notranslate\"><span class=\"pre\">StringSource</span></code></a> and\n<a class=\"reference internal\" href=\"../../config#dagster.IntSource\" title=\"dagster.IntSource\"><code class=\"xref py py-class docutils literal notranslate\"><span class=\"pre\">IntSource</span></code></a> and can be configured from environment variables.</p>\n</dd></dl>\n\n<dl class=\"py class\">\n<dt id=\"dagster_mysql.MySQLScheduleStorage\">\n<em class=\"property\"><span class=\"pre\">class</span> </em><code class=\"sig-prename descclassname\"><span class=\"pre\">dagster_mysql.</span></code><code class=\"sig-name descname\"><span class=\"pre\">MySQLScheduleStorage</span></code><span class=\"sig-paren\">(</span><em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">mysql_url</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">inst_data</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">None</span></span></em><span class=\"sig-paren\">)</span><a class=\"reference internal\" href=\"../../../../../_modules/dagster_mysql/schedule_storage/schedule_storage#MySQLScheduleStorage\"><span class=\"viewcode-link\"><span class=\"pre\">[source]</span></span></a><a class=\"headerlink\" href=\"#dagster_mysql.MySQLScheduleStorage\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>MySQL-backed run storage.</p>\n<p>Users should not directly instantiate this class; it is instantiated by internal machinery when\n<code class=\"docutils literal notranslate\"><span class=\"pre\">dagit</span></code> and <code class=\"docutils literal notranslate\"><span class=\"pre\">dagster-graphql</span></code> load, based on the values in the <code class=\"docutils literal notranslate\"><span class=\"pre\">dagster.yaml</span></code> file in\n<code class=\"docutils literal notranslate\"><span class=\"pre\">$DAGSTER_HOME</span></code>. Configuration of this class should be done by setting values in that file.</p>\n<div class=\"literal-block-wrapper docutils container\" id=\"id3\">\n<div class=\"code-block-caption\"><span class=\"caption-text\">dagster.yaml</span><a class=\"headerlink\" href=\"#id3\" title=\"Permalink to this code\">\u00b6</a></div>\n<div class=\"highlight-YAML notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"nt\">schedule_storage</span><span class=\"p\">:</span><span class=\"w\"></span>\n<span class=\"w\"> </span><span class=\"nt\">module</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"l l-Scalar l-Scalar-Plain\">dagster_mysql.schedule_storage</span><span class=\"w\"></span>\n<span class=\"w\"> </span><span class=\"nt\">class</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"l l-Scalar l-Scalar-Plain\">MySQLScheduleStorage</span><span class=\"w\"></span>\n<span class=\"w\"> </span><span class=\"nt\">config</span><span class=\"p\">:</span><span class=\"w\"></span>\n<span class=\"w\">  </span><span class=\"nt\">mysql_db</span><span class=\"p\">:</span><span class=\"w\"></span>\n<span class=\"w\">   </span><span class=\"nt\">username</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"p p-Indicator\">{</span><span class=\"w\"> </span><span class=\"nv\">username</span><span class=\"w\"> </span><span class=\"p p-Indicator\">}</span><span class=\"w\"></span>\n<span class=\"w\">   </span><span class=\"nt\">password</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"p p-Indicator\">{</span><span class=\"w\"> </span><span class=\"nv\">password</span><span class=\"w\"> </span><span class=\"p p-Indicator\">}</span><span class=\"w\"></span>\n<span class=\"w\">   </span><span class=\"nt\">hostname</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"p p-Indicator\">{</span><span class=\"w\"> </span><span class=\"nv\">hostname</span><span class=\"w\"> </span><span class=\"p p-Indicator\">}</span><span class=\"w\"></span>\n<span class=\"w\">   </span><span class=\"nt\">db_name</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"p p-Indicator\">{</span><span class=\"w\"> </span><span class=\"nv\">db_name</span><span class=\"w\"> </span><span class=\"p p-Indicator\">}</span><span class=\"w\"></span>\n<span class=\"w\">   </span><span class=\"nt\">port</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"p p-Indicator\">{</span><span class=\"w\"> </span><span class=\"nv\">port</span><span class=\"w\"> </span><span class=\"p p-Indicator\">}</span><span class=\"w\"></span>\n</pre></div>\n</div>\n</div>\n<p>Note that the fields in this config are <a class=\"reference internal\" href=\"../../config#dagster.StringSource\" title=\"dagster.StringSource\"><code class=\"xref py py-class docutils literal notranslate\"><span class=\"pre\">StringSource</span></code></a> and\n<a class=\"reference internal\" href=\"../../config#dagster.IntSource\" title=\"dagster.IntSource\"><code class=\"xref py py-class docutils literal notranslate\"><span class=\"pre\">IntSource</span></code></a> and can be configured from environment variables.</p>\n</dd></dl>\n\n</div>\n", "current_page_name": "sections/api/apidocs/libraries/dagster-mysql", "customsidebar": null, "display_toc": false, "meta": null, "metatags": "", "next": {"link": "../dagster-pagerduty/", "title": "PagerDuty (dagster-pagerduty)"}, "page_source_suffix": ".rst", "parents": [], "prev": {"link": "../dagster-msteams/", "title": "Microsoft Teams (dagster-msteams)"}, "rellinks": [["genindex", "General Index", "I", "index"], ["py-modindex", "Python Module Index", "", "modules"], ["sections/api/apidocs/libraries/dagster-pagerduty", "PagerDuty (dagster-pagerduty)", "N", "next"], ["sections/api/apidocs/libraries/dagster-msteams", "Microsoft Teams (dagster-msteams)", "P", "previous"]], "sidebars": ["globaltoc.html", "searchbox.html"], "sourcename": "sections/api/apidocs/libraries/dagster-mysql.rst.txt", "title": "MySQL (dagster-mysql)", "toc": "<ul>\n<li><a class=\"reference internal\" href=\"#\">MySQL (dagster-mysql)</a></li>\n</ul>\n"}, "dagster-pagerduty": {"alabaster_version": "0.7.12", "body": "<div class=\"section\" id=\"pagerduty-dagster-pagerduty\">\n<h1>PagerDuty (dagster-pagerduty)<a class=\"headerlink\" href=\"#pagerduty-dagster-pagerduty\" title=\"Permalink to this headline\">\u00b6</a></h1>\n<p>This library provides an integration with PagerDuty, to support creating alerts from your Dagster\ncode.</p>\n<p>Presently, it provides a thin wrapper on the <a class=\"reference external\" href=\"https://v2.developer.pagerduty.com/docs/events-api-v2\">Events V2 API</a>.</p>\n</div>\n<div class=\"section\" id=\"getting-started\">\n<h1>Getting Started<a class=\"headerlink\" href=\"#getting-started\" title=\"Permalink to this headline\">\u00b6</a></h1>\n<p>You can install this library with:</p>\n<div class=\"highlight-default notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"n\">pip</span> <span class=\"n\">install</span> <span class=\"n\">dagster_pagerduty</span>\n</pre></div>\n</div>\n<p>To use this integration, you\u2019ll first need to create a PagerDuty integration. There are instructions\n<a class=\"reference external\" href=\"https://support.pagerduty.com/docs/services-and-integrations#section-events-api-v2\">here</a> for\ncreating a new PagerDuty service &amp; integration.</p>\n<p>As noted in the PagerDuty documentation, you\u2019ll find an integration key (also referred to as a\n\u201crouting key\u201d) on the Integrations tab for your new service. This key is used to authorize events\ncreated from the PagerDuty events API.</p>\n<p>Once your service/integration is created, you can provision a PagerDuty resource and issue PagerDuty\nalerts from within your ops.</p>\n<dl class=\"py data\">\n<dt id=\"dagster_pagerduty.pagerduty_resource\">\n<code class=\"sig-prename descclassname\"><span class=\"pre\">dagster_pagerduty.</span></code><code class=\"sig-name descname\"><span class=\"pre\">pagerduty_resource</span></code><em class=\"property\"> <span class=\"pre\">ResourceDefinition</span></em><a class=\"reference internal\" href=\"../../../../../_modules/dagster_pagerduty/resources#pagerduty_resource\"><span class=\"viewcode-link\"><span class=\"pre\">[source]</span></span></a><a class=\"headerlink\" href=\"#dagster_pagerduty.pagerduty_resource\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><div class=\"line-block\">\n<div class=\"line\"><br /></div>\n</div>\n<details class=\"summary-config-schema\">\n<summary>Config Schema:</summary><dl class=\"field-list simple\">\n<dt class=\"field-odd\">routing_key (String)</dt>\n<dd class=\"field-odd\"><p>The routing key provisions access to your PagerDuty service. You\nwill need to include the integration key for your new integration, as a\nrouting_key in the event payload.</p>\n</dd>\n</dl>\n</details><p>A resource for posting events (alerts) to PagerDuty.</p>\n<p>Example:</p>\n<div class=\"highlight-python notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"nd\">@op</span><span class=\"p\">(</span><span class=\"n\">required_resource_keys</span><span class=\"o\">=</span><span class=\"p\">{</span><span class=\"s1\">&#39;pagerduty&#39;</span><span class=\"p\">})</span>\n<span class=\"k\">def</span> <span class=\"nf\">pagerduty_op</span><span class=\"p\">(</span><span class=\"n\">context</span><span class=\"p\">):</span>\n    <span class=\"n\">context</span><span class=\"o\">.</span><span class=\"n\">resources</span><span class=\"o\">.</span><span class=\"n\">pagerduty</span><span class=\"o\">.</span><span class=\"n\">EventV2_create</span><span class=\"p\">(</span>\n        <span class=\"n\">summary</span><span class=\"o\">=</span><span class=\"s1\">&#39;alert from dagster&#39;</span>\n        <span class=\"n\">source</span><span class=\"o\">=</span><span class=\"s1\">&#39;localhost&#39;</span><span class=\"p\">,</span>\n        <span class=\"n\">severity</span><span class=\"o\">=</span><span class=\"s1\">&#39;error&#39;</span><span class=\"p\">,</span>\n        <span class=\"n\">event_action</span><span class=\"o\">=</span><span class=\"s1\">&#39;trigger&#39;</span><span class=\"p\">,</span>\n    <span class=\"p\">)</span>\n\n<span class=\"nd\">@job</span><span class=\"p\">(</span><span class=\"n\">resource_defs</span><span class=\"o\">=</span><span class=\"p\">{</span> <span class=\"s1\">&#39;pagerduty&#39;</span><span class=\"p\">:</span> <span class=\"n\">pagerduty_resource</span> <span class=\"p\">})</span>\n<span class=\"k\">def</span> <span class=\"nf\">pagerduty_test</span><span class=\"p\">():</span>\n    <span class=\"n\">pagerduty_op</span><span class=\"p\">()</span>\n\n<span class=\"n\">pagerduty_test</span><span class=\"o\">.</span><span class=\"n\">execute_in_process</span><span class=\"p\">(</span>\n    <span class=\"n\">run_config</span><span class=\"o\">=</span><span class=\"p\">{</span>\n        <span class=\"s2\">&quot;resources&quot;</span><span class=\"p\">:</span> <span class=\"p\">{</span>\n            <span class=\"s1\">&#39;pagerduty&#39;</span><span class=\"p\">:</span> <span class=\"p\">{</span><span class=\"s1\">&#39;config&#39;</span><span class=\"p\">:</span> <span class=\"p\">{</span><span class=\"s1\">&#39;routing_key&#39;</span><span class=\"p\">:</span> <span class=\"s1\">&#39;0123456789abcdef0123456789abcdef&#39;</span><span class=\"p\">}}</span>\n        <span class=\"p\">}</span>\n    <span class=\"p\">}</span>\n<span class=\"p\">)</span>\n</pre></div>\n</div>\n</dd></dl>\n\n</div>\n", "current_page_name": "sections/api/apidocs/libraries/dagster-pagerduty", "customsidebar": null, "display_toc": true, "meta": null, "metatags": "", "next": {"link": "../dagster-pandas/", "title": "Pandas (dagster-pandas)"}, "page_source_suffix": ".rst", "parents": [], "prev": {"link": "../dagster-mysql/", "title": "MySQL (dagster-mysql)"}, "rellinks": [["genindex", "General Index", "I", "index"], ["py-modindex", "Python Module Index", "", "modules"], ["sections/api/apidocs/libraries/dagster-pandas", "Pandas (dagster-pandas)", "N", "next"], ["sections/api/apidocs/libraries/dagster-mysql", "MySQL (dagster-mysql)", "P", "previous"]], "sidebars": ["globaltoc.html", "searchbox.html"], "sourcename": "sections/api/apidocs/libraries/dagster-pagerduty.rst.txt", "title": "PagerDuty (dagster-pagerduty)", "toc": "<ul>\n<li><a class=\"reference internal\" href=\"#\">PagerDuty (dagster-pagerduty)</a></li>\n<li><a class=\"reference internal\" href=\"#getting-started\">Getting Started</a></li>\n</ul>\n"}, "dagster-pandas": {"alabaster_version": "0.7.12", "body": "<div class=\"section\" id=\"pandas-dagster-pandas\">\n<h1>Pandas (dagster-pandas)<a class=\"headerlink\" href=\"#pandas-dagster-pandas\" title=\"Permalink to this headline\">\u00b6</a></h1>\n<p>The <cite>dagster_pandas</cite> library provides utilities for using pandas with Dagster and for implementing\nvalidation on pandas <cite>DataFrames</cite>. A good place to start with <cite>dagster_pandas</cite> is the <a class=\"reference external\" href=\"/overview/packages/dagster_pandas\">validation\nguide</a>.</p>\n<dl class=\"py function\">\n<dt id=\"dagster_pandas.create_dagster_pandas_dataframe_type\">\n<code class=\"sig-prename descclassname\"><span class=\"pre\">dagster_pandas.</span></code><code class=\"sig-name descname\"><span class=\"pre\">create_dagster_pandas_dataframe_type</span></code><span class=\"sig-paren\">(</span><em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">name</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">description</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">None</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">columns</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">None</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">event_metadata_fn</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">None</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">dataframe_constraints</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">None</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">loader</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">None</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">materializer</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">None</span></span></em><span class=\"sig-paren\">)</span><a class=\"reference internal\" href=\"../../../../../_modules/dagster_pandas/data_frame#create_dagster_pandas_dataframe_type\"><span class=\"viewcode-link\"><span class=\"pre\">[source]</span></span></a><a class=\"headerlink\" href=\"#dagster_pandas.create_dagster_pandas_dataframe_type\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Constructs a custom pandas dataframe dagster type.</p>\n<dl class=\"field-list simple\">\n<dt class=\"field-odd\">Parameters</dt>\n<dd class=\"field-odd\"><ul class=\"simple\">\n<li><p><strong>name</strong> (<a class=\"reference external\" href=\"https://docs.python.org/3/library/stdtypes.html#str\" title=\"(in Python v3.8)\"><em>str</em></a>) \u2013 Name of the dagster pandas type.</p></li>\n<li><p><strong>description</strong> (<em>Optional</em><em>[</em><a class=\"reference external\" href=\"https://docs.python.org/3/library/stdtypes.html#str\" title=\"(in Python v3.8)\"><em>str</em></a><em>]</em>) \u2013 A markdown-formatted string, displayed in tooling.</p></li>\n<li><p><strong>columns</strong> (<em>Optional</em><em>[</em><em>List</em><em>[</em><a class=\"reference internal\" href=\"#dagster_pandas.PandasColumn\" title=\"dagster_pandas.PandasColumn\"><em>PandasColumn</em></a><em>]</em><em>]</em>) \u2013 A list of <code class=\"xref py py-class docutils literal notranslate\"><span class=\"pre\">PandasColumn</span></code> objects\nwhich express dataframe column schemas and constraints.</p></li>\n<li><p><strong>event_metadata_fn</strong> (<em>Optional</em><em>[</em><em>Callable</em><em>[</em><em>[</em><em>]</em><em>, </em><em>Union</em><em>[</em><em>Dict</em><em>[</em><a class=\"reference external\" href=\"https://docs.python.org/3/library/stdtypes.html#str\" title=\"(in Python v3.8)\"><em>str</em></a><em>, </em><em>Union</em><em>[</em><a class=\"reference external\" href=\"https://docs.python.org/3/library/stdtypes.html#str\" title=\"(in Python v3.8)\"><em>str</em></a><em>, </em><a class=\"reference external\" href=\"https://docs.python.org/3/library/functions.html#float\" title=\"(in Python v3.8)\"><em>float</em></a><em>, </em><a class=\"reference external\" href=\"https://docs.python.org/3/library/functions.html#int\" title=\"(in Python v3.8)\"><em>int</em></a><em>, </em><em>Dict</em><em>, </em><a class=\"reference internal\" href=\"../../ops#dagster.MetadataValue\" title=\"dagster.MetadataValue\"><em>MetadataValue</em></a><em>]</em><em>]</em><em>, </em><em>List</em><em>[</em><a class=\"reference internal\" href=\"../../ops#dagster.MetadataEntry\" title=\"dagster.MetadataEntry\"><em>MetadataEntry</em></a><em>]</em><em>]</em><em>]</em><em>]</em>) \u2013 A callable which takes your dataframe and returns a dict with string label keys and\nMetadataValue values. Can optionally return a List[MetadataEntry].</p></li>\n<li><p><strong>dataframe_constraints</strong> (<em>Optional</em><em>[</em><em>List</em><em>[</em><em>DataFrameConstraint</em><em>]</em><em>]</em>) \u2013 A list of objects that inherit from\n<code class=\"xref py py-class docutils literal notranslate\"><span class=\"pre\">DataFrameConstraint</span></code>. This allows you to express dataframe-level constraints.</p></li>\n<li><p><strong>loader</strong> (<em>Optional</em><em>[</em><a class=\"reference internal\" href=\"../../types#dagster.DagsterTypeLoader\" title=\"dagster.DagsterTypeLoader\"><em>DagsterTypeLoader</em></a><em>]</em>) \u2013 An instance of a class that\ninherits from <a class=\"reference internal\" href=\"../../types#dagster.DagsterTypeLoader\" title=\"dagster.DagsterTypeLoader\"><code class=\"xref py py-class docutils literal notranslate\"><span class=\"pre\">DagsterTypeLoader</span></code></a>. If None, we will default\nto using <cite>dataframe_loader</cite>.</p></li>\n<li><p><strong>materializer</strong> (<em>Optional</em><em>[</em><a class=\"reference internal\" href=\"../../types#dagster.DagsterTypeMaterializer\" title=\"dagster.DagsterTypeMaterializer\"><em>DagsterTypeMaterializer</em></a><em>]</em>) \u2013 An instance of a class\nthat inherits from <a class=\"reference internal\" href=\"../../types#dagster.DagsterTypeMaterializer\" title=\"dagster.DagsterTypeMaterializer\"><code class=\"xref py py-class docutils literal notranslate\"><span class=\"pre\">DagsterTypeMaterializer</span></code></a>. If None, we will\ndefault to using <cite>dataframe_materializer</cite>.</p></li>\n</ul>\n</dd>\n</dl>\n</dd></dl>\n\n<dl class=\"py class\">\n<dt id=\"dagster_pandas.RowCountConstraint\">\n<em class=\"property\"><span class=\"pre\">class</span> </em><code class=\"sig-prename descclassname\"><span class=\"pre\">dagster_pandas.</span></code><code class=\"sig-name descname\"><span class=\"pre\">RowCountConstraint</span></code><span class=\"sig-paren\">(</span><em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">num_allowed_rows</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">error_tolerance</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">0</span></span></em><span class=\"sig-paren\">)</span><a class=\"reference internal\" href=\"../../../../../_modules/dagster_pandas/constraints#RowCountConstraint\"><span class=\"viewcode-link\"><span class=\"pre\">[source]</span></span></a><a class=\"headerlink\" href=\"#dagster_pandas.RowCountConstraint\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>A dataframe constraint that validates the expected count of rows.</p>\n<dl class=\"field-list simple\">\n<dt class=\"field-odd\">Parameters</dt>\n<dd class=\"field-odd\"><ul class=\"simple\">\n<li><p><strong>num_allowed_rows</strong> (<a class=\"reference external\" href=\"https://docs.python.org/3/library/functions.html#int\" title=\"(in Python v3.8)\"><em>int</em></a>) \u2013 The number of allowed rows in your dataframe.</p></li>\n<li><p><strong>error_tolerance</strong> (<em>Optional</em><em>[</em><a class=\"reference external\" href=\"https://docs.python.org/3/library/functions.html#int\" title=\"(in Python v3.8)\"><em>int</em></a><em>]</em>) \u2013 The acceptable threshold if you are not completely certain. Defaults to 0.</p></li>\n</ul>\n</dd>\n</dl>\n</dd></dl>\n\n<dl class=\"py class\">\n<dt id=\"dagster_pandas.StrictColumnsConstraint\">\n<em class=\"property\"><span class=\"pre\">class</span> </em><code class=\"sig-prename descclassname\"><span class=\"pre\">dagster_pandas.</span></code><code class=\"sig-name descname\"><span class=\"pre\">StrictColumnsConstraint</span></code><span class=\"sig-paren\">(</span><em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">strict_column_list</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">enforce_ordering</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">False</span></span></em><span class=\"sig-paren\">)</span><a class=\"reference internal\" href=\"../../../../../_modules/dagster_pandas/constraints#StrictColumnsConstraint\"><span class=\"viewcode-link\"><span class=\"pre\">[source]</span></span></a><a class=\"headerlink\" href=\"#dagster_pandas.StrictColumnsConstraint\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>A dataframe constraint that validates column existence and ordering.</p>\n<dl class=\"field-list simple\">\n<dt class=\"field-odd\">Parameters</dt>\n<dd class=\"field-odd\"><ul class=\"simple\">\n<li><p><strong>strict_column_list</strong> (<em>List</em><em>[</em><a class=\"reference external\" href=\"https://docs.python.org/3/library/stdtypes.html#str\" title=\"(in Python v3.8)\"><em>str</em></a><em>]</em>) \u2013 The exact list of columns that your dataframe must have.</p></li>\n<li><p><strong>enforce_ordering</strong> (<em>Optional</em><em>[</em><a class=\"reference external\" href=\"https://docs.python.org/3/library/functions.html#bool\" title=\"(in Python v3.8)\"><em>bool</em></a><em>]</em>) \u2013 If true, will enforce that the ordering of column names must match.\nDefault is False.</p></li>\n</ul>\n</dd>\n</dl>\n</dd></dl>\n\n<dl class=\"py class\">\n<dt id=\"dagster_pandas.PandasColumn\">\n<em class=\"property\"><span class=\"pre\">class</span> </em><code class=\"sig-prename descclassname\"><span class=\"pre\">dagster_pandas.</span></code><code class=\"sig-name descname\"><span class=\"pre\">PandasColumn</span></code><span class=\"sig-paren\">(</span><em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">name</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">constraints</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">None</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">is_required</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">None</span></span></em><span class=\"sig-paren\">)</span><a class=\"reference internal\" href=\"../../../../../_modules/dagster_pandas/validation#PandasColumn\"><span class=\"viewcode-link\"><span class=\"pre\">[source]</span></span></a><a class=\"headerlink\" href=\"#dagster_pandas.PandasColumn\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>The main API for expressing column level schemas and constraints for your custom dataframe\ntypes.</p>\n<dl class=\"field-list simple\">\n<dt class=\"field-odd\">Parameters</dt>\n<dd class=\"field-odd\"><ul class=\"simple\">\n<li><p><strong>name</strong> (<a class=\"reference external\" href=\"https://docs.python.org/3/library/stdtypes.html#str\" title=\"(in Python v3.8)\"><em>str</em></a>) \u2013 Name of the column. This must match up with the column name in the dataframe you\nexpect to receive.</p></li>\n<li><p><strong>is_required</strong> (<em>Optional</em><em>[</em><a class=\"reference external\" href=\"https://docs.python.org/3/library/functions.html#bool\" title=\"(in Python v3.8)\"><em>bool</em></a><em>]</em>) \u2013 Flag indicating the optional/required presence of the column.\nIf th column exists, the validate function will validate the column. Defaults to True.</p></li>\n<li><p><strong>constraints</strong> (<em>Optional</em><em>[</em><em>List</em><em>[</em><em>Constraint</em><em>]</em><em>]</em>) \u2013 List of constraint objects that indicate the\nvalidation rules for the pandas column.</p></li>\n</ul>\n</dd>\n</dl>\n<dl class=\"py method\">\n<dt id=\"dagster_pandas.PandasColumn.boolean_column\">\n<em class=\"property\"><span class=\"pre\">static</span> </em><code class=\"sig-name descname\"><span class=\"pre\">boolean_column</span></code><span class=\"sig-paren\">(</span><em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">name</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">non_nullable</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">False</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">unique</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">False</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">ignore_missing_vals</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">False</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">is_required</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">None</span></span></em><span class=\"sig-paren\">)</span><a class=\"reference internal\" href=\"../../../../../_modules/dagster_pandas/validation#PandasColumn.boolean_column\"><span class=\"viewcode-link\"><span class=\"pre\">[source]</span></span></a><a class=\"headerlink\" href=\"#dagster_pandas.PandasColumn.boolean_column\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Simple constructor for PandasColumns that expresses boolean constraints on boolean dtypes.</p>\n<dl class=\"field-list simple\">\n<dt class=\"field-odd\">Parameters</dt>\n<dd class=\"field-odd\"><ul class=\"simple\">\n<li><p><strong>name</strong> (<a class=\"reference external\" href=\"https://docs.python.org/3/library/stdtypes.html#str\" title=\"(in Python v3.8)\"><em>str</em></a>) \u2013 Name of the column. This must match up with the column name in the dataframe you\nexpect to receive.</p></li>\n<li><p><strong>non_nullable</strong> (<em>Optional</em><em>[</em><a class=\"reference external\" href=\"https://docs.python.org/3/library/functions.html#bool\" title=\"(in Python v3.8)\"><em>bool</em></a><em>]</em>) \u2013 If true, this column will enforce a constraint that all values in the column\nought to be non null values.</p></li>\n<li><p><strong>unique</strong> (<em>Optional</em><em>[</em><a class=\"reference external\" href=\"https://docs.python.org/3/library/functions.html#bool\" title=\"(in Python v3.8)\"><em>bool</em></a><em>]</em>) \u2013 If true, this column will enforce a uniqueness constraint on the column values.</p></li>\n<li><p><strong>ignore_missing_vals</strong> (<em>Optional</em><em>[</em><a class=\"reference external\" href=\"https://docs.python.org/3/library/functions.html#bool\" title=\"(in Python v3.8)\"><em>bool</em></a><em>]</em>) \u2013 A flag that is passed into most constraints. If true, the constraint will\nonly evaluate non-null data. Ignore_missing_vals and non_nullable cannot both be True.</p></li>\n<li><p><strong>is_required</strong> (<em>Optional</em><em>[</em><a class=\"reference external\" href=\"https://docs.python.org/3/library/functions.html#bool\" title=\"(in Python v3.8)\"><em>bool</em></a><em>]</em>) \u2013 Flag indicating the optional/required presence of the column.\nIf the column exists the validate function will validate the column. Default to True.</p></li>\n</ul>\n</dd>\n</dl>\n</dd></dl>\n\n<dl class=\"py method\">\n<dt id=\"dagster_pandas.PandasColumn.categorical_column\">\n<em class=\"property\"><span class=\"pre\">static</span> </em><code class=\"sig-name descname\"><span class=\"pre\">categorical_column</span></code><span class=\"sig-paren\">(</span><em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">name</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">categories</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">of_types</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">frozenset({'category',</span> <span class=\"pre\">'object'})</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">non_nullable</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">False</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">unique</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">False</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">ignore_missing_vals</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">False</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">is_required</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">None</span></span></em><span class=\"sig-paren\">)</span><a class=\"reference internal\" href=\"../../../../../_modules/dagster_pandas/validation#PandasColumn.categorical_column\"><span class=\"viewcode-link\"><span class=\"pre\">[source]</span></span></a><a class=\"headerlink\" href=\"#dagster_pandas.PandasColumn.categorical_column\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Simple constructor for PandasColumns that expresses categorical constraints on specified dtypes.</p>\n<dl class=\"field-list simple\">\n<dt class=\"field-odd\">Parameters</dt>\n<dd class=\"field-odd\"><ul class=\"simple\">\n<li><p><strong>name</strong> (<a class=\"reference external\" href=\"https://docs.python.org/3/library/stdtypes.html#str\" title=\"(in Python v3.8)\"><em>str</em></a>) \u2013 Name of the column. This must match up with the column name in the dataframe you\nexpect to receive.</p></li>\n<li><p><strong>categories</strong> (<em>List</em><em>[</em><em>Any</em><em>]</em>) \u2013 The valid set of buckets that all values in the column must match.</p></li>\n<li><p><strong>of_types</strong> (<em>Optional</em><em>[</em><em>Union</em><em>[</em><a class=\"reference external\" href=\"https://docs.python.org/3/library/stdtypes.html#str\" title=\"(in Python v3.8)\"><em>str</em></a><em>, </em><em>Set</em><em>[</em><a class=\"reference external\" href=\"https://docs.python.org/3/library/stdtypes.html#str\" title=\"(in Python v3.8)\"><em>str</em></a><em>]</em><em>]</em><em>]</em>) \u2013 The expected dtype[s] that your categories and values must\nabide by.</p></li>\n<li><p><strong>non_nullable</strong> (<em>Optional</em><em>[</em><a class=\"reference external\" href=\"https://docs.python.org/3/library/functions.html#bool\" title=\"(in Python v3.8)\"><em>bool</em></a><em>]</em>) \u2013 If true, this column will enforce a constraint that all values in\nthe column ought to be non null values.</p></li>\n<li><p><strong>unique</strong> (<em>Optional</em><em>[</em><a class=\"reference external\" href=\"https://docs.python.org/3/library/functions.html#bool\" title=\"(in Python v3.8)\"><em>bool</em></a><em>]</em>) \u2013 If true, this column will enforce a uniqueness constraint on the column values.</p></li>\n<li><p><strong>ignore_missing_vals</strong> (<em>Optional</em><em>[</em><a class=\"reference external\" href=\"https://docs.python.org/3/library/functions.html#bool\" title=\"(in Python v3.8)\"><em>bool</em></a><em>]</em>) \u2013 A flag that is passed into most constraints. If true, the\nconstraint will only evaluate non-null data. Ignore_missing_vals and non_nullable cannot both be True.</p></li>\n<li><p><strong>is_required</strong> (<em>Optional</em><em>[</em><a class=\"reference external\" href=\"https://docs.python.org/3/library/functions.html#bool\" title=\"(in Python v3.8)\"><em>bool</em></a><em>]</em>) \u2013 Flag indicating the optional/required presence of the column.\nIf the column exists the validate function will validate the column. Default to True.</p></li>\n</ul>\n</dd>\n</dl>\n</dd></dl>\n\n<dl class=\"py method\">\n<dt id=\"dagster_pandas.PandasColumn.datetime_column\">\n<em class=\"property\"><span class=\"pre\">static</span> </em><code class=\"sig-name descname\"><span class=\"pre\">datetime_column</span></code><span class=\"sig-paren\">(</span><em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">name</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">min_datetime</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">Timestamp('1677-09-21</span> <span class=\"pre\">00:12:43.145224193')</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">max_datetime</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">Timestamp('2262-04-11</span> <span class=\"pre\">23:47:16.854775807')</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">non_nullable</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">False</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">unique</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">False</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">ignore_missing_vals</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">False</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">is_required</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">None</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">tz</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">None</span></span></em><span class=\"sig-paren\">)</span><a class=\"reference internal\" href=\"../../../../../_modules/dagster_pandas/validation#PandasColumn.datetime_column\"><span class=\"viewcode-link\"><span class=\"pre\">[source]</span></span></a><a class=\"headerlink\" href=\"#dagster_pandas.PandasColumn.datetime_column\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Simple constructor for PandasColumns that expresses datetime constraints on \u2018datetime64[ns]\u2019 dtypes.</p>\n<dl class=\"field-list simple\">\n<dt class=\"field-odd\">Parameters</dt>\n<dd class=\"field-odd\"><ul class=\"simple\">\n<li><p><strong>name</strong> (<a class=\"reference external\" href=\"https://docs.python.org/3/library/stdtypes.html#str\" title=\"(in Python v3.8)\"><em>str</em></a>) \u2013 Name of the column. This must match up with the column name in the dataframe you\nexpect to receive.</p></li>\n<li><p><strong>min_datetime</strong> (<em>Optional</em><em>[</em><em>Union</em><em>[</em><a class=\"reference external\" href=\"https://docs.python.org/3/library/functions.html#int\" title=\"(in Python v3.8)\"><em>int</em></a><em>,</em><a class=\"reference external\" href=\"https://docs.python.org/3/library/functions.html#float\" title=\"(in Python v3.8)\"><em>float</em></a><em>]</em><em>]</em>) \u2013 The lower bound for values you expect in this column.\nDefaults to pandas.Timestamp.min.</p></li>\n<li><p><strong>max_datetime</strong> (<em>Optional</em><em>[</em><em>Union</em><em>[</em><a class=\"reference external\" href=\"https://docs.python.org/3/library/functions.html#int\" title=\"(in Python v3.8)\"><em>int</em></a><em>,</em><a class=\"reference external\" href=\"https://docs.python.org/3/library/functions.html#float\" title=\"(in Python v3.8)\"><em>float</em></a><em>]</em><em>]</em>) \u2013 The upper bound for values you expect in this column.\nDefaults to pandas.Timestamp.max.</p></li>\n<li><p><strong>non_nullable</strong> (<em>Optional</em><em>[</em><a class=\"reference external\" href=\"https://docs.python.org/3/library/functions.html#bool\" title=\"(in Python v3.8)\"><em>bool</em></a><em>]</em>) \u2013 If true, this column will enforce a constraint that all values in the column\nought to be non null values.</p></li>\n<li><p><strong>unique</strong> (<em>Optional</em><em>[</em><a class=\"reference external\" href=\"https://docs.python.org/3/library/functions.html#bool\" title=\"(in Python v3.8)\"><em>bool</em></a><em>]</em>) \u2013 If true, this column will enforce a uniqueness constraint on the column values.</p></li>\n<li><p><strong>ignore_missing_vals</strong> (<em>Optional</em><em>[</em><a class=\"reference external\" href=\"https://docs.python.org/3/library/functions.html#bool\" title=\"(in Python v3.8)\"><em>bool</em></a><em>]</em>) \u2013 A flag that is passed into most constraints. If true, the constraint will\nonly evaluate non-null data. Ignore_missing_vals and non_nullable cannot both be True.</p></li>\n<li><p><strong>is_required</strong> (<em>Optional</em><em>[</em><a class=\"reference external\" href=\"https://docs.python.org/3/library/functions.html#bool\" title=\"(in Python v3.8)\"><em>bool</em></a><em>]</em>) \u2013 Flag indicating the optional/required presence of the column.\nIf the column exists the validate function will validate the column. Default to True.</p></li>\n<li><p><strong>tz</strong> (<em>Optional</em><em>[</em><a class=\"reference external\" href=\"https://docs.python.org/3/library/stdtypes.html#str\" title=\"(in Python v3.8)\"><em>str</em></a><em>]</em>) \u2013 Required timezone for values eg: tz=\u2019UTC\u2019, tz=\u2019Europe/Dublin\u2019, tz=\u2019US/Eastern\u2019.\nDefaults to None, meaning naive datetime values.</p></li>\n</ul>\n</dd>\n</dl>\n</dd></dl>\n\n<dl class=\"py method\">\n<dt id=\"dagster_pandas.PandasColumn.exists\">\n<em class=\"property\"><span class=\"pre\">static</span> </em><code class=\"sig-name descname\"><span class=\"pre\">exists</span></code><span class=\"sig-paren\">(</span><em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">name</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">non_nullable</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">False</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">unique</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">False</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">ignore_missing_vals</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">False</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">is_required</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">None</span></span></em><span class=\"sig-paren\">)</span><a class=\"reference internal\" href=\"../../../../../_modules/dagster_pandas/validation#PandasColumn.exists\"><span class=\"viewcode-link\"><span class=\"pre\">[source]</span></span></a><a class=\"headerlink\" href=\"#dagster_pandas.PandasColumn.exists\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Simple constructor for PandasColumns that expresses existence constraints.</p>\n<dl class=\"field-list simple\">\n<dt class=\"field-odd\">Parameters</dt>\n<dd class=\"field-odd\"><ul class=\"simple\">\n<li><p><strong>name</strong> (<a class=\"reference external\" href=\"https://docs.python.org/3/library/stdtypes.html#str\" title=\"(in Python v3.8)\"><em>str</em></a>) \u2013 Name of the column. This must match up with the column name in the dataframe you\nexpect to receive.</p></li>\n<li><p><strong>non_nullable</strong> (<em>Optional</em><em>[</em><a class=\"reference external\" href=\"https://docs.python.org/3/library/functions.html#bool\" title=\"(in Python v3.8)\"><em>bool</em></a><em>]</em>) \u2013 If true, this column will enforce a constraint that all values in the column\nought to be non null values.</p></li>\n<li><p><strong>unique</strong> (<em>Optional</em><em>[</em><a class=\"reference external\" href=\"https://docs.python.org/3/library/functions.html#bool\" title=\"(in Python v3.8)\"><em>bool</em></a><em>]</em>) \u2013 If true, this column will enforce a uniqueness constraint on the column values.</p></li>\n<li><p><strong>ignore_missing_vals</strong> (<em>Optional</em><em>[</em><a class=\"reference external\" href=\"https://docs.python.org/3/library/functions.html#bool\" title=\"(in Python v3.8)\"><em>bool</em></a><em>]</em>) \u2013 A flag that is passed into most constraints. If true, the constraint will\nonly evaluate non-null data. Ignore_missing_vals and non_nullable cannot both be True.</p></li>\n<li><p><strong>is_required</strong> (<em>Optional</em><em>[</em><a class=\"reference external\" href=\"https://docs.python.org/3/library/functions.html#bool\" title=\"(in Python v3.8)\"><em>bool</em></a><em>]</em>) \u2013 Flag indicating the optional/required presence of the column.\nIf the column exists the validate function will validate the column. Default to True.</p></li>\n</ul>\n</dd>\n</dl>\n</dd></dl>\n\n<dl class=\"py method\">\n<dt id=\"dagster_pandas.PandasColumn.float_column\">\n<em class=\"property\"><span class=\"pre\">static</span> </em><code class=\"sig-name descname\"><span class=\"pre\">float_column</span></code><span class=\"sig-paren\">(</span><em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">name</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">min_value</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">-</span> <span class=\"pre\">inf</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">max_value</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">inf</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">non_nullable</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">False</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">unique</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">False</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">ignore_missing_vals</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">False</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">is_required</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">None</span></span></em><span class=\"sig-paren\">)</span><a class=\"reference internal\" href=\"../../../../../_modules/dagster_pandas/validation#PandasColumn.float_column\"><span class=\"viewcode-link\"><span class=\"pre\">[source]</span></span></a><a class=\"headerlink\" href=\"#dagster_pandas.PandasColumn.float_column\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Simple constructor for PandasColumns that expresses numeric constraints on float dtypes.</p>\n<dl class=\"field-list simple\">\n<dt class=\"field-odd\">Parameters</dt>\n<dd class=\"field-odd\"><ul class=\"simple\">\n<li><p><strong>name</strong> (<a class=\"reference external\" href=\"https://docs.python.org/3/library/stdtypes.html#str\" title=\"(in Python v3.8)\"><em>str</em></a>) \u2013 Name of the column. This must match up with the column name in the dataframe you\nexpect to receive.</p></li>\n<li><p><strong>min_value</strong> (<em>Optional</em><em>[</em><em>Union</em><em>[</em><a class=\"reference external\" href=\"https://docs.python.org/3/library/functions.html#int\" title=\"(in Python v3.8)\"><em>int</em></a><em>,</em><a class=\"reference external\" href=\"https://docs.python.org/3/library/functions.html#float\" title=\"(in Python v3.8)\"><em>float</em></a><em>]</em><em>]</em>) \u2013 The lower bound for values you expect in this column. Defaults to -float(\u2018inf\u2019)</p></li>\n<li><p><strong>max_value</strong> (<em>Optional</em><em>[</em><em>Union</em><em>[</em><a class=\"reference external\" href=\"https://docs.python.org/3/library/functions.html#int\" title=\"(in Python v3.8)\"><em>int</em></a><em>,</em><a class=\"reference external\" href=\"https://docs.python.org/3/library/functions.html#float\" title=\"(in Python v3.8)\"><em>float</em></a><em>]</em><em>]</em>) \u2013 The upper bound for values you expect in this column. Defaults to float(\u2018inf\u2019)</p></li>\n<li><p><strong>non_nullable</strong> (<em>Optional</em><em>[</em><a class=\"reference external\" href=\"https://docs.python.org/3/library/functions.html#bool\" title=\"(in Python v3.8)\"><em>bool</em></a><em>]</em>) \u2013 If true, this column will enforce a constraint that all values in the column\nought to be non null values.</p></li>\n<li><p><strong>unique</strong> (<em>Optional</em><em>[</em><a class=\"reference external\" href=\"https://docs.python.org/3/library/functions.html#bool\" title=\"(in Python v3.8)\"><em>bool</em></a><em>]</em>) \u2013 If true, this column will enforce a uniqueness constraint on the column values.</p></li>\n<li><p><strong>ignore_missing_vals</strong> (<em>Optional</em><em>[</em><a class=\"reference external\" href=\"https://docs.python.org/3/library/functions.html#bool\" title=\"(in Python v3.8)\"><em>bool</em></a><em>]</em>) \u2013 A flag that is passed into most constraints. If true, the constraint will\nonly evaluate non-null data. Ignore_missing_vals and non_nullable cannot both be True.</p></li>\n<li><p><strong>is_required</strong> (<em>Optional</em><em>[</em><a class=\"reference external\" href=\"https://docs.python.org/3/library/functions.html#bool\" title=\"(in Python v3.8)\"><em>bool</em></a><em>]</em>) \u2013 Flag indicating the optional/required presence of the column.\nIf the column exists the validate function will validate the column. Default to True.</p></li>\n</ul>\n</dd>\n</dl>\n</dd></dl>\n\n<dl class=\"py method\">\n<dt id=\"dagster_pandas.PandasColumn.integer_column\">\n<em class=\"property\"><span class=\"pre\">static</span> </em><code class=\"sig-name descname\"><span class=\"pre\">integer_column</span></code><span class=\"sig-paren\">(</span><em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">name</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">min_value</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">-</span> <span class=\"pre\">inf</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">max_value</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">inf</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">non_nullable</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">False</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">unique</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">False</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">ignore_missing_vals</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">False</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">is_required</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">None</span></span></em><span class=\"sig-paren\">)</span><a class=\"reference internal\" href=\"../../../../../_modules/dagster_pandas/validation#PandasColumn.integer_column\"><span class=\"viewcode-link\"><span class=\"pre\">[source]</span></span></a><a class=\"headerlink\" href=\"#dagster_pandas.PandasColumn.integer_column\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Simple constructor for PandasColumns that expresses numeric constraints on integer dtypes.</p>\n<dl class=\"field-list simple\">\n<dt class=\"field-odd\">Parameters</dt>\n<dd class=\"field-odd\"><ul class=\"simple\">\n<li><p><strong>name</strong> (<a class=\"reference external\" href=\"https://docs.python.org/3/library/stdtypes.html#str\" title=\"(in Python v3.8)\"><em>str</em></a>) \u2013 Name of the column. This must match up with the column name in the dataframe you\nexpect to receive.</p></li>\n<li><p><strong>min_value</strong> (<em>Optional</em><em>[</em><em>Union</em><em>[</em><a class=\"reference external\" href=\"https://docs.python.org/3/library/functions.html#int\" title=\"(in Python v3.8)\"><em>int</em></a><em>,</em><a class=\"reference external\" href=\"https://docs.python.org/3/library/functions.html#float\" title=\"(in Python v3.8)\"><em>float</em></a><em>]</em><em>]</em>) \u2013 The lower bound for values you expect in this column. Defaults to -float(\u2018inf\u2019)</p></li>\n<li><p><strong>max_value</strong> (<em>Optional</em><em>[</em><em>Union</em><em>[</em><a class=\"reference external\" href=\"https://docs.python.org/3/library/functions.html#int\" title=\"(in Python v3.8)\"><em>int</em></a><em>,</em><a class=\"reference external\" href=\"https://docs.python.org/3/library/functions.html#float\" title=\"(in Python v3.8)\"><em>float</em></a><em>]</em><em>]</em>) \u2013 The upper bound for values you expect in this column. Defaults to float(\u2018inf\u2019)</p></li>\n<li><p><strong>non_nullable</strong> (<em>Optional</em><em>[</em><a class=\"reference external\" href=\"https://docs.python.org/3/library/functions.html#bool\" title=\"(in Python v3.8)\"><em>bool</em></a><em>]</em>) \u2013 If true, this column will enforce a constraint that all values in the column\nought to be non null values.</p></li>\n<li><p><strong>unique</strong> (<em>Optional</em><em>[</em><a class=\"reference external\" href=\"https://docs.python.org/3/library/functions.html#bool\" title=\"(in Python v3.8)\"><em>bool</em></a><em>]</em>) \u2013 If true, this column will enforce a uniqueness constraint on the column values.</p></li>\n<li><p><strong>ignore_missing_vals</strong> (<em>Optional</em><em>[</em><a class=\"reference external\" href=\"https://docs.python.org/3/library/functions.html#bool\" title=\"(in Python v3.8)\"><em>bool</em></a><em>]</em>) \u2013 A flag that is passed into most constraints. If true, the constraint will\nonly evaluate non-null data. Ignore_missing_vals and non_nullable cannot both be True.</p></li>\n<li><p><strong>is_required</strong> (<em>Optional</em><em>[</em><a class=\"reference external\" href=\"https://docs.python.org/3/library/functions.html#bool\" title=\"(in Python v3.8)\"><em>bool</em></a><em>]</em>) \u2013 Flag indicating the optional/required presence of the column.\nIf the column exists the validate function will validate the column. Default to True.</p></li>\n</ul>\n</dd>\n</dl>\n</dd></dl>\n\n<dl class=\"py method\">\n<dt id=\"dagster_pandas.PandasColumn.numeric_column\">\n<em class=\"property\"><span class=\"pre\">static</span> </em><code class=\"sig-name descname\"><span class=\"pre\">numeric_column</span></code><span class=\"sig-paren\">(</span><em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">name</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">min_value</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">-</span> <span class=\"pre\">inf</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">max_value</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">inf</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">non_nullable</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">False</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">unique</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">False</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">ignore_missing_vals</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">False</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">is_required</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">None</span></span></em><span class=\"sig-paren\">)</span><a class=\"reference internal\" href=\"../../../../../_modules/dagster_pandas/validation#PandasColumn.numeric_column\"><span class=\"viewcode-link\"><span class=\"pre\">[source]</span></span></a><a class=\"headerlink\" href=\"#dagster_pandas.PandasColumn.numeric_column\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Simple constructor for PandasColumns that expresses numeric constraints numeric dtypes.</p>\n<dl class=\"field-list simple\">\n<dt class=\"field-odd\">Parameters</dt>\n<dd class=\"field-odd\"><ul class=\"simple\">\n<li><p><strong>name</strong> (<a class=\"reference external\" href=\"https://docs.python.org/3/library/stdtypes.html#str\" title=\"(in Python v3.8)\"><em>str</em></a>) \u2013 Name of the column. This must match up with the column name in the dataframe you\nexpect to receive.</p></li>\n<li><p><strong>min_value</strong> (<em>Optional</em><em>[</em><em>Union</em><em>[</em><a class=\"reference external\" href=\"https://docs.python.org/3/library/functions.html#int\" title=\"(in Python v3.8)\"><em>int</em></a><em>,</em><a class=\"reference external\" href=\"https://docs.python.org/3/library/functions.html#float\" title=\"(in Python v3.8)\"><em>float</em></a><em>]</em><em>]</em>) \u2013 The lower bound for values you expect in this column. Defaults to -float(\u2018inf\u2019)</p></li>\n<li><p><strong>max_value</strong> (<em>Optional</em><em>[</em><em>Union</em><em>[</em><a class=\"reference external\" href=\"https://docs.python.org/3/library/functions.html#int\" title=\"(in Python v3.8)\"><em>int</em></a><em>,</em><a class=\"reference external\" href=\"https://docs.python.org/3/library/functions.html#float\" title=\"(in Python v3.8)\"><em>float</em></a><em>]</em><em>]</em>) \u2013 The upper bound for values you expect in this column. Defaults to float(\u2018inf\u2019)</p></li>\n<li><p><strong>non_nullable</strong> (<em>Optional</em><em>[</em><a class=\"reference external\" href=\"https://docs.python.org/3/library/functions.html#bool\" title=\"(in Python v3.8)\"><em>bool</em></a><em>]</em>) \u2013 If true, this column will enforce a constraint that all values in the column\nought to be non null values.</p></li>\n<li><p><strong>unique</strong> (<em>Optional</em><em>[</em><a class=\"reference external\" href=\"https://docs.python.org/3/library/functions.html#bool\" title=\"(in Python v3.8)\"><em>bool</em></a><em>]</em>) \u2013 If true, this column will enforce a uniqueness constraint on the column values.</p></li>\n<li><p><strong>ignore_missing_vals</strong> (<em>Optional</em><em>[</em><a class=\"reference external\" href=\"https://docs.python.org/3/library/functions.html#bool\" title=\"(in Python v3.8)\"><em>bool</em></a><em>]</em>) \u2013 A flag that is passed into most constraints. If true, the constraint will\nonly evaluate non-null data. Ignore_missing_vals and non_nullable cannot both be True.</p></li>\n<li><p><strong>is_required</strong> (<em>Optional</em><em>[</em><a class=\"reference external\" href=\"https://docs.python.org/3/library/functions.html#bool\" title=\"(in Python v3.8)\"><em>bool</em></a><em>]</em>) \u2013 Flag indicating the optional/required presence of the column.\nIf the column exists the validate function will validate the column. Default to True.</p></li>\n</ul>\n</dd>\n</dl>\n</dd></dl>\n\n<dl class=\"py method\">\n<dt id=\"dagster_pandas.PandasColumn.string_column\">\n<em class=\"property\"><span class=\"pre\">static</span> </em><code class=\"sig-name descname\"><span class=\"pre\">string_column</span></code><span class=\"sig-paren\">(</span><em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">name</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">non_nullable</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">False</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">unique</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">False</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">ignore_missing_vals</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">False</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">is_required</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">None</span></span></em><span class=\"sig-paren\">)</span><a class=\"reference internal\" href=\"../../../../../_modules/dagster_pandas/validation#PandasColumn.string_column\"><span class=\"viewcode-link\"><span class=\"pre\">[source]</span></span></a><a class=\"headerlink\" href=\"#dagster_pandas.PandasColumn.string_column\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Simple constructor for PandasColumns that expresses constraints on string dtypes.</p>\n<dl class=\"field-list simple\">\n<dt class=\"field-odd\">Parameters</dt>\n<dd class=\"field-odd\"><ul class=\"simple\">\n<li><p><strong>name</strong> (<a class=\"reference external\" href=\"https://docs.python.org/3/library/stdtypes.html#str\" title=\"(in Python v3.8)\"><em>str</em></a>) \u2013 Name of the column. This must match up with the column name in the dataframe you\nexpect to receive.</p></li>\n<li><p><strong>non_nullable</strong> (<em>Optional</em><em>[</em><a class=\"reference external\" href=\"https://docs.python.org/3/library/functions.html#bool\" title=\"(in Python v3.8)\"><em>bool</em></a><em>]</em>) \u2013 If true, this column will enforce a constraint that all values in the column\nought to be non null values.</p></li>\n<li><p><strong>unique</strong> (<em>Optional</em><em>[</em><a class=\"reference external\" href=\"https://docs.python.org/3/library/functions.html#bool\" title=\"(in Python v3.8)\"><em>bool</em></a><em>]</em>) \u2013 If true, this column will enforce a uniqueness constraint on the column values.</p></li>\n<li><p><strong>ignore_missing_vals</strong> (<em>Optional</em><em>[</em><a class=\"reference external\" href=\"https://docs.python.org/3/library/functions.html#bool\" title=\"(in Python v3.8)\"><em>bool</em></a><em>]</em>) \u2013 A flag that is passed into most constraints. If true, the constraint will\nonly evaluate non-null data. Ignore_missing_vals and non_nullable cannot both be True.</p></li>\n<li><p><strong>is_required</strong> (<em>Optional</em><em>[</em><a class=\"reference external\" href=\"https://docs.python.org/3/library/functions.html#bool\" title=\"(in Python v3.8)\"><em>bool</em></a><em>]</em>) \u2013 Flag indicating the optional/required presence of the column.\nIf the column exists the validate function will validate the column. Default to True.</p></li>\n</ul>\n</dd>\n</dl>\n</dd></dl>\n\n</dd></dl>\n\n<dl class=\"py data\">\n<dt id=\"dagster_pandas.DataFrame\">\n<code class=\"sig-prename descclassname\"><span class=\"pre\">dagster_pandas.</span></code><code class=\"sig-name descname\"><span class=\"pre\">DataFrame</span></code><em class=\"property\"> <span class=\"pre\">=</span> <span class=\"pre\">&lt;dagster.core.types.dagster_type.DagsterType</span> <span class=\"pre\">object&gt;</span></em><a class=\"headerlink\" href=\"#dagster_pandas.DataFrame\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Define a type in dagster. These can be used in the inputs and outputs of ops.</p>\n<dl class=\"field-list simple\">\n<dt class=\"field-odd\">Parameters</dt>\n<dd class=\"field-odd\"><ul class=\"simple\">\n<li><p><strong>type_check_fn</strong> (<em>Callable</em><em>[</em><em>[</em><a class=\"reference internal\" href=\"../../execution#dagster.TypeCheckContext\" title=\"dagster.TypeCheckContext\"><em>TypeCheckContext</em></a><em>, </em><em>Any</em><em>]</em><em>, </em><em>[</em><em>Union</em><em>[</em><a class=\"reference external\" href=\"https://docs.python.org/3/library/functions.html#bool\" title=\"(in Python v3.8)\"><em>bool</em></a><em>, </em><a class=\"reference internal\" href=\"../../ops#dagster.TypeCheck\" title=\"dagster.TypeCheck\"><em>TypeCheck</em></a><em>]</em><em>]</em><em>]</em>) \u2013 The function that defines the type check. It takes the value flowing\nthrough the input or output of the op. If it passes, return either\n<code class=\"docutils literal notranslate\"><span class=\"pre\">True</span></code> or a <a class=\"reference internal\" href=\"../../ops#dagster.TypeCheck\" title=\"dagster.TypeCheck\"><code class=\"xref py py-class docutils literal notranslate\"><span class=\"pre\">TypeCheck</span></code></a> with <code class=\"docutils literal notranslate\"><span class=\"pre\">success</span></code> set to <code class=\"docutils literal notranslate\"><span class=\"pre\">True</span></code>. If it fails,\nreturn either <code class=\"docutils literal notranslate\"><span class=\"pre\">False</span></code> or a <a class=\"reference internal\" href=\"../../ops#dagster.TypeCheck\" title=\"dagster.TypeCheck\"><code class=\"xref py py-class docutils literal notranslate\"><span class=\"pre\">TypeCheck</span></code></a> with <code class=\"docutils literal notranslate\"><span class=\"pre\">success</span></code> set to <code class=\"docutils literal notranslate\"><span class=\"pre\">False</span></code>.\nThe first argument must be named <code class=\"docutils literal notranslate\"><span class=\"pre\">context</span></code> (or, if unused, <code class=\"docutils literal notranslate\"><span class=\"pre\">_</span></code>, <code class=\"docutils literal notranslate\"><span class=\"pre\">_context</span></code>, or <code class=\"docutils literal notranslate\"><span class=\"pre\">context_</span></code>).\nUse <code class=\"docutils literal notranslate\"><span class=\"pre\">required_resource_keys</span></code> for access to resources.</p></li>\n<li><p><strong>key</strong> (<em>Optional</em><em>[</em><a class=\"reference external\" href=\"https://docs.python.org/3/library/stdtypes.html#str\" title=\"(in Python v3.8)\"><em>str</em></a><em>]</em>) \u2013 <p>The unique key to identify types programmatically.\nThe key property always has a value. If you omit key to the argument\nto the init function, it instead receives the value of <code class=\"docutils literal notranslate\"><span class=\"pre\">name</span></code>. If\nneither <code class=\"docutils literal notranslate\"><span class=\"pre\">key</span></code> nor <code class=\"docutils literal notranslate\"><span class=\"pre\">name</span></code> is provided, a <code class=\"docutils literal notranslate\"><span class=\"pre\">CheckError</span></code> is thrown.</p>\n<p>In the case of a generic type such as <code class=\"docutils literal notranslate\"><span class=\"pre\">List</span></code> or <code class=\"docutils literal notranslate\"><span class=\"pre\">Optional</span></code>, this is\ngenerated programmatically based on the type parameters.</p>\n<p>For most use cases, name should be set and the key argument should\nnot be specified.</p>\n</p></li>\n<li><p><strong>name</strong> (<em>Optional</em><em>[</em><a class=\"reference external\" href=\"https://docs.python.org/3/library/stdtypes.html#str\" title=\"(in Python v3.8)\"><em>str</em></a><em>]</em>) \u2013 A unique name given by a user. If <code class=\"docutils literal notranslate\"><span class=\"pre\">key</span></code> is <code class=\"docutils literal notranslate\"><span class=\"pre\">None</span></code>, <code class=\"docutils literal notranslate\"><span class=\"pre\">key</span></code>\nbecomes this value. Name is not given in a case where the user does\nnot specify a unique name for this type, such as a generic class.</p></li>\n<li><p><strong>description</strong> (<em>Optional</em><em>[</em><a class=\"reference external\" href=\"https://docs.python.org/3/library/stdtypes.html#str\" title=\"(in Python v3.8)\"><em>str</em></a><em>]</em>) \u2013 A markdown-formatted string, displayed in tooling.</p></li>\n<li><p><strong>loader</strong> (<em>Optional</em><em>[</em><a class=\"reference internal\" href=\"../../types#dagster.DagsterTypeLoader\" title=\"dagster.DagsterTypeLoader\"><em>DagsterTypeLoader</em></a><em>]</em>) \u2013 An instance of a class that\ninherits from <a class=\"reference internal\" href=\"../../types#dagster.DagsterTypeLoader\" title=\"dagster.DagsterTypeLoader\"><code class=\"xref py py-class docutils literal notranslate\"><span class=\"pre\">DagsterTypeLoader</span></code></a> and can map config data to a value of\nthis type. Specify this argument if you will need to shim values of this type using the\nconfig machinery. As a rule, you should use the\n<a class=\"reference internal\" href=\"../../types#dagster.dagster_type_loader\" title=\"dagster.dagster_type_loader\"><code class=\"xref py py-func docutils literal notranslate\"><span class=\"pre\">&#64;dagster_type_loader</span></code></a> decorator to construct\nthese arguments.</p></li>\n<li><p><strong>materializer</strong> (<em>Optional</em><em>[</em><a class=\"reference internal\" href=\"../../types#dagster.DagsterTypeMaterializer\" title=\"dagster.DagsterTypeMaterializer\"><em>DagsterTypeMaterializer</em></a><em>]</em>) \u2013 An instance of a class\nthat inherits from <a class=\"reference internal\" href=\"../../types#dagster.DagsterTypeMaterializer\" title=\"dagster.DagsterTypeMaterializer\"><code class=\"xref py py-class docutils literal notranslate\"><span class=\"pre\">DagsterTypeMaterializer</span></code></a> and can persist values of\nthis type. As a rule, you should use the\n<a class=\"reference internal\" href=\"../../types#dagster.dagster_type_materializer\" title=\"dagster.dagster_type_materializer\"><code class=\"xref py py-func docutils literal notranslate\"><span class=\"pre\">&#64;dagster_type_materializer</span></code></a>\ndecorator to construct these arguments.</p></li>\n<li><p><strong>required_resource_keys</strong> (<em>Optional</em><em>[</em><em>Set</em><em>[</em><a class=\"reference external\" href=\"https://docs.python.org/3/library/stdtypes.html#str\" title=\"(in Python v3.8)\"><em>str</em></a><em>]</em><em>]</em>) \u2013 Resource keys required by the <code class=\"docutils literal notranslate\"><span class=\"pre\">type_check_fn</span></code>.</p></li>\n<li><p><strong>is_builtin</strong> (<a class=\"reference external\" href=\"https://docs.python.org/3/library/functions.html#bool\" title=\"(in Python v3.8)\"><em>bool</em></a>) \u2013 Defaults to False. This is used by tools to display or\nfilter built-in types (such as <code class=\"xref py py-class docutils literal notranslate\"><span class=\"pre\">String</span></code>, <code class=\"xref py py-class docutils literal notranslate\"><span class=\"pre\">Int</span></code>) to visually distinguish\nthem from user-defined types. Meant for internal use.</p></li>\n<li><p><strong>kind</strong> (<em>DagsterTypeKind</em>) \u2013 Defaults to None. This is used to determine the kind of runtime type\nfor InputDefinition and OutputDefinition type checking.</p></li>\n<li><p><strong>typing_type</strong> \u2013 Defaults to None. A valid python typing type (e.g. Optional[List[int]]) for the\nvalue contained within the DagsterType. Meant for internal use.</p></li>\n</ul>\n</dd>\n</dl>\n</dd></dl>\n\n</div>\n", "current_page_name": "sections/api/apidocs/libraries/dagster-pandas", "customsidebar": null, "display_toc": false, "meta": null, "metatags": "", "next": {"link": "../dagster-papertrail/", "title": "Papertrail (dagster-papertrail)"}, "page_source_suffix": ".rst", "parents": [], "prev": {"link": "../dagster-pagerduty/", "title": "PagerDuty (dagster-pagerduty)"}, "rellinks": [["genindex", "General Index", "I", "index"], ["py-modindex", "Python Module Index", "", "modules"], ["sections/api/apidocs/libraries/dagster-papertrail", "Papertrail (dagster-papertrail)", "N", "next"], ["sections/api/apidocs/libraries/dagster-pagerduty", "PagerDuty (dagster-pagerduty)", "P", "previous"]], "sidebars": ["globaltoc.html", "searchbox.html"], "sourcename": "sections/api/apidocs/libraries/dagster-pandas.rst.txt", "title": "Pandas (dagster-pandas)", "toc": "<ul>\n<li><a class=\"reference internal\" href=\"#\">Pandas (dagster-pandas)</a></li>\n</ul>\n"}, "dagster-papertrail": {"alabaster_version": "0.7.12", "body": "<div class=\"section\" id=\"papertrail-dagster-papertrail\">\n<h1>Papertrail (dagster-papertrail)<a class=\"headerlink\" href=\"#papertrail-dagster-papertrail\" title=\"Permalink to this headline\">\u00b6</a></h1>\n<p>This library provides an integration with <a class=\"reference external\" href=\"https://papertrailapp.com\">Papertrail</a> for logging.</p>\n<p>You can easily set up your Dagster job to log to Papertrail. You\u2019ll need an active Papertrail\naccount, and have your papertrail URL and port handy.</p>\n<dl class=\"py data\">\n<dt id=\"dagster_papertrail.papertrail_logger\">\n<code class=\"sig-prename descclassname\"><span class=\"pre\">dagster_papertrail.</span></code><code class=\"sig-name descname\"><span class=\"pre\">papertrail_logger</span></code><em class=\"property\"> <span class=\"pre\">LoggerDefinition</span></em><a class=\"headerlink\" href=\"#dagster_papertrail.papertrail_logger\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Core class for defining loggers.</p>\n<p>Loggers are job-scoped logging handlers, which will be automatically invoked whenever\ndagster messages are logged from within a job.</p>\n<dl class=\"field-list simple\">\n<dt class=\"field-odd\">Parameters</dt>\n<dd class=\"field-odd\"><ul class=\"simple\">\n<li><p><strong>logger_fn</strong> (<em>Callable</em><em>[</em><em>[</em><a class=\"reference internal\" href=\"../../loggers#dagster.InitLoggerContext\" title=\"dagster.InitLoggerContext\"><em>InitLoggerContext</em></a><em>]</em><em>, </em><a class=\"reference external\" href=\"https://docs.python.org/3/library/logging.html#logging.Logger\" title=\"(in Python v3.8)\"><em>logging.Logger</em></a><em>]</em>) \u2013 User-provided function to\ninstantiate the logger. This logger will be automatically invoked whenever the methods\non <code class=\"docutils literal notranslate\"><span class=\"pre\">context.log</span></code> are called from within job/pipeline compute logic.</p></li>\n<li><p><strong>config_schema</strong> (<em>Optional</em><em>[</em><a class=\"reference internal\" href=\"../../config#dagster.ConfigSchema\" title=\"dagster.ConfigSchema\"><em>ConfigSchema</em></a><em>]</em>) \u2013 The schema for the config. Configuration data available in\n<cite>init_context.logger_config</cite>. If not set, Dagster will accept any config provided.</p></li>\n<li><p><strong>description</strong> (<em>Optional</em><em>[</em><a class=\"reference external\" href=\"https://docs.python.org/3/library/stdtypes.html#str\" title=\"(in Python v3.8)\"><em>str</em></a><em>]</em>) \u2013 A human-readable description of this logger.</p></li>\n</ul>\n</dd>\n</dl>\n</dd></dl>\n\n</div>\n", "current_page_name": "sections/api/apidocs/libraries/dagster-papertrail", "customsidebar": null, "display_toc": false, "meta": null, "metatags": "", "next": {"link": "../dagster-postgres/", "title": "PostgreSQL (dagster-postgres)"}, "page_source_suffix": ".rst", "parents": [], "prev": {"link": "../dagster-pandas/", "title": "Pandas (dagster-pandas)"}, "rellinks": [["genindex", "General Index", "I", "index"], ["py-modindex", "Python Module Index", "", "modules"], ["sections/api/apidocs/libraries/dagster-postgres", "PostgreSQL (dagster-postgres)", "N", "next"], ["sections/api/apidocs/libraries/dagster-pandas", "Pandas (dagster-pandas)", "P", "previous"]], "sidebars": ["globaltoc.html", "searchbox.html"], "sourcename": "sections/api/apidocs/libraries/dagster-papertrail.rst.txt", "title": "Papertrail (dagster-papertrail)", "toc": "<ul>\n<li><a class=\"reference internal\" href=\"#\">Papertrail (dagster-papertrail)</a></li>\n</ul>\n"}, "dagster-postgres": {"alabaster_version": "0.7.12", "body": "<div class=\"section\" id=\"postgresql-dagster-postgres\">\n<h1>PostgreSQL (dagster-postgres)<a class=\"headerlink\" href=\"#postgresql-dagster-postgres\" title=\"Permalink to this headline\">\u00b6</a></h1>\n<dl class=\"py data\">\n<dt id=\"dagster_postgres.PostgresEventLogStorage\">\n<code class=\"sig-prename descclassname\"><span class=\"pre\">dagster_postgres.</span></code><code class=\"sig-name descname\"><span class=\"pre\">PostgresEventLogStorage</span></code><em class=\"property\"> <span class=\"pre\">=</span> <span class=\"pre\">&lt;class</span> <span class=\"pre\">'dagster_postgres.event_log.event_log.PostgresEventLogStorage'&gt;</span></em><a class=\"reference internal\" href=\"../../../../../_modules/dagster_postgres/event_log/event_log#PostgresEventLogStorage\"><span class=\"viewcode-link\"><span class=\"pre\">[source]</span></span></a><a class=\"headerlink\" href=\"#dagster_postgres.PostgresEventLogStorage\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><div class=\"line-block\">\n<div class=\"line\"><br /></div>\n</div>\n<details class=\"summary-config-schema\">\n<summary>Config Schema:</summary><dl class=\"field-list\">\n<dt class=\"field-odd\">postgres_url (dagster.StringSource, optional)</dt>\n<dd class=\"field-odd\"><p></p></dd>\n<dt class=\"field-even\">postgres_db (strict dict, optional)</dt>\n<dd class=\"field-even\"><details class=\"summary-config-schema\">\n<summary>Config Schema:</summary><dl class=\"field-list\">\n<dt class=\"field-odd\">username (dagster.StringSource)</dt>\n<dd class=\"field-odd\"><p></p></dd>\n<dt class=\"field-even\">password (dagster.StringSource)</dt>\n<dd class=\"field-even\"><p></p></dd>\n<dt class=\"field-odd\">hostname (dagster.StringSource)</dt>\n<dd class=\"field-odd\"><p></p></dd>\n<dt class=\"field-even\">db_name (dagster.StringSource)</dt>\n<dd class=\"field-even\"><p></p></dd>\n<dt class=\"field-odd\">port (dagster.IntSource, optional)</dt>\n<dd class=\"field-odd\"><p><strong>Default Value:</strong> 5432</p>\n</dd>\n<dt class=\"field-even\">params (permissive dict, optional)</dt>\n<dd class=\"field-even\"><details class=\"summary-default-value\">\n<summary>Default Value:</summary><div class=\"highlight-javascript notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"p\">{}</span>\n</pre></div>\n</div>\n</details></dd>\n<dt class=\"field-odd\">scheme (dagster.StringSource, optional)</dt>\n<dd class=\"field-odd\"><p><strong>Default Value:</strong> \u2018postgresql\u2019</p>\n</dd>\n</dl>\n</details></dd>\n<dt class=\"field-even\">should_autocreate_tables (Bool, optional)</dt>\n<dd class=\"field-even\"><p><strong>Default Value:</strong> True</p>\n</dd>\n</dl>\n</details><p>Postgres-backed event log storage.</p>\n<p>Users should not directly instantiate this class; it is instantiated by internal machinery when\n<code class=\"docutils literal notranslate\"><span class=\"pre\">dagit</span></code> and <code class=\"docutils literal notranslate\"><span class=\"pre\">dagster-graphql</span></code> load, based on the values in the <code class=\"docutils literal notranslate\"><span class=\"pre\">dagster.yaml</span></code> file in\n<code class=\"docutils literal notranslate\"><span class=\"pre\">$DAGSTER_HOME</span></code>. Configuration of this class should be done by setting values in that file.</p>\n<p>To use Postgres for event log storage, you can add a block such as the following to your\n<code class=\"docutils literal notranslate\"><span class=\"pre\">dagster.yaml</span></code>:</p>\n<div class=\"literal-block-wrapper docutils container\" id=\"id1\">\n<div class=\"code-block-caption\"><span class=\"caption-text\">dagster.yaml</span><a class=\"headerlink\" href=\"#id1\" title=\"Permalink to this code\">\u00b6</a></div>\n<div class=\"highlight-YAML notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"nt\">event_log_storage</span><span class=\"p\">:</span><span class=\"w\"></span>\n<span class=\"w\">  </span><span class=\"nt\">module</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"l l-Scalar l-Scalar-Plain\">dagster_postgres.event_log</span><span class=\"w\"></span>\n<span class=\"w\">  </span><span class=\"nt\">class</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"l l-Scalar l-Scalar-Plain\">PostgresEventLogStorage</span><span class=\"w\"></span>\n<span class=\"w\">  </span><span class=\"nt\">config</span><span class=\"p\">:</span><span class=\"w\"></span>\n<span class=\"w\">    </span><span class=\"nt\">postgres_db</span><span class=\"p\">:</span><span class=\"w\"></span>\n<span class=\"w\">      </span><span class=\"nt\">username</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"p p-Indicator\">{</span><span class=\"w\"> </span><span class=\"nv\">username</span><span class=\"w\"> </span><span class=\"p p-Indicator\">}</span><span class=\"w\"></span>\n<span class=\"w\">      </span><span class=\"nt\">password</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"p p-Indicator\">{</span><span class=\"w\"> </span><span class=\"nv\">password</span><span class=\"w\"> </span><span class=\"p p-Indicator\">}</span><span class=\"w\"></span>\n<span class=\"w\">      </span><span class=\"nt\">hostname</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"p p-Indicator\">{</span><span class=\"w\"> </span><span class=\"nv\">hostname</span><span class=\"w\"> </span><span class=\"p p-Indicator\">}</span><span class=\"w\"></span>\n<span class=\"w\">      </span><span class=\"nt\">db_name</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"p p-Indicator\">{</span><span class=\"w\"> </span><span class=\"nv\">db_name</span><span class=\"w\"> </span><span class=\"p p-Indicator\">}</span><span class=\"w\"></span>\n<span class=\"w\">      </span><span class=\"nt\">port</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"p p-Indicator\">{</span><span class=\"w\"> </span><span class=\"nv\">port</span><span class=\"w\"> </span><span class=\"p p-Indicator\">}</span><span class=\"w\"></span>\n</pre></div>\n</div>\n</div>\n<p>Note that the fields in this config are <a class=\"reference internal\" href=\"../../config#dagster.StringSource\" title=\"dagster.StringSource\"><code class=\"xref py py-class docutils literal notranslate\"><span class=\"pre\">StringSource</span></code></a> and\n<a class=\"reference internal\" href=\"../../config#dagster.IntSource\" title=\"dagster.IntSource\"><code class=\"xref py py-class docutils literal notranslate\"><span class=\"pre\">IntSource</span></code></a> and can be configured from environment variables.</p>\n</dd></dl>\n\n<dl class=\"py data\">\n<dt id=\"dagster_postgres.PostgresRunStorage\">\n<code class=\"sig-prename descclassname\"><span class=\"pre\">dagster_postgres.</span></code><code class=\"sig-name descname\"><span class=\"pre\">PostgresRunStorage</span></code><em class=\"property\"> <span class=\"pre\">=</span> <span class=\"pre\">&lt;class</span> <span class=\"pre\">'dagster_postgres.run_storage.run_storage.PostgresRunStorage'&gt;</span></em><a class=\"reference internal\" href=\"../../../../../_modules/dagster_postgres/run_storage/run_storage#PostgresRunStorage\"><span class=\"viewcode-link\"><span class=\"pre\">[source]</span></span></a><a class=\"headerlink\" href=\"#dagster_postgres.PostgresRunStorage\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><div class=\"line-block\">\n<div class=\"line\"><br /></div>\n</div>\n<details class=\"summary-config-schema\">\n<summary>Config Schema:</summary><dl class=\"field-list\">\n<dt class=\"field-odd\">postgres_url (dagster.StringSource, optional)</dt>\n<dd class=\"field-odd\"><p></p></dd>\n<dt class=\"field-even\">postgres_db (strict dict, optional)</dt>\n<dd class=\"field-even\"><details class=\"summary-config-schema\">\n<summary>Config Schema:</summary><dl class=\"field-list\">\n<dt class=\"field-odd\">username (dagster.StringSource)</dt>\n<dd class=\"field-odd\"><p></p></dd>\n<dt class=\"field-even\">password (dagster.StringSource)</dt>\n<dd class=\"field-even\"><p></p></dd>\n<dt class=\"field-odd\">hostname (dagster.StringSource)</dt>\n<dd class=\"field-odd\"><p></p></dd>\n<dt class=\"field-even\">db_name (dagster.StringSource)</dt>\n<dd class=\"field-even\"><p></p></dd>\n<dt class=\"field-odd\">port (dagster.IntSource, optional)</dt>\n<dd class=\"field-odd\"><p><strong>Default Value:</strong> 5432</p>\n</dd>\n<dt class=\"field-even\">params (permissive dict, optional)</dt>\n<dd class=\"field-even\"><details class=\"summary-default-value\">\n<summary>Default Value:</summary><div class=\"highlight-javascript notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"p\">{}</span>\n</pre></div>\n</div>\n</details></dd>\n<dt class=\"field-odd\">scheme (dagster.StringSource, optional)</dt>\n<dd class=\"field-odd\"><p><strong>Default Value:</strong> \u2018postgresql\u2019</p>\n</dd>\n</dl>\n</details></dd>\n<dt class=\"field-even\">should_autocreate_tables (Bool, optional)</dt>\n<dd class=\"field-even\"><p><strong>Default Value:</strong> True</p>\n</dd>\n</dl>\n</details><p>Postgres-backed run storage.</p>\n<p>Users should not directly instantiate this class; it is instantiated by internal machinery when\n<code class=\"docutils literal notranslate\"><span class=\"pre\">dagit</span></code> and <code class=\"docutils literal notranslate\"><span class=\"pre\">dagster-graphql</span></code> load, based on the values in the <code class=\"docutils literal notranslate\"><span class=\"pre\">dagster.yaml</span></code> file in\n<code class=\"docutils literal notranslate\"><span class=\"pre\">$DAGSTER_HOME</span></code>. Configuration of this class should be done by setting values in that file.</p>\n<p>To use Postgres for run storage, you can add a block such as the following to your\n<code class=\"docutils literal notranslate\"><span class=\"pre\">dagster.yaml</span></code>:</p>\n<div class=\"literal-block-wrapper docutils container\" id=\"id2\">\n<div class=\"code-block-caption\"><span class=\"caption-text\">dagster.yaml</span><a class=\"headerlink\" href=\"#id2\" title=\"Permalink to this code\">\u00b6</a></div>\n<div class=\"highlight-YAML notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"nt\">run_storage</span><span class=\"p\">:</span><span class=\"w\"></span>\n<span class=\"w\">  </span><span class=\"nt\">module</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"l l-Scalar l-Scalar-Plain\">dagster_postgres.run_storage</span><span class=\"w\"></span>\n<span class=\"w\">  </span><span class=\"nt\">class</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"l l-Scalar l-Scalar-Plain\">PostgresRunStorage</span><span class=\"w\"></span>\n<span class=\"w\">  </span><span class=\"nt\">config</span><span class=\"p\">:</span><span class=\"w\"></span>\n<span class=\"w\">    </span><span class=\"nt\">postgres_db</span><span class=\"p\">:</span><span class=\"w\"></span>\n<span class=\"w\">      </span><span class=\"nt\">username</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"p p-Indicator\">{</span><span class=\"w\"> </span><span class=\"nv\">username</span><span class=\"w\"> </span><span class=\"p p-Indicator\">}</span><span class=\"w\"></span>\n<span class=\"w\">      </span><span class=\"nt\">password</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"p p-Indicator\">{</span><span class=\"w\"> </span><span class=\"nv\">password</span><span class=\"w\"> </span><span class=\"p p-Indicator\">}</span><span class=\"w\"></span>\n<span class=\"w\">      </span><span class=\"nt\">hostname</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"p p-Indicator\">{</span><span class=\"w\"> </span><span class=\"nv\">hostname</span><span class=\"w\"> </span><span class=\"p p-Indicator\">}</span><span class=\"w\"></span>\n<span class=\"w\">      </span><span class=\"nt\">db_name</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"p p-Indicator\">{</span><span class=\"w\"> </span><span class=\"nv\">db_name</span><span class=\"w\"> </span><span class=\"p p-Indicator\">}</span><span class=\"w\"></span>\n<span class=\"w\">      </span><span class=\"nt\">port</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"p p-Indicator\">{</span><span class=\"w\"> </span><span class=\"nv\">port</span><span class=\"w\"> </span><span class=\"p p-Indicator\">}</span><span class=\"w\"></span>\n</pre></div>\n</div>\n</div>\n<p>Note that the fields in this config are <a class=\"reference internal\" href=\"../../config#dagster.StringSource\" title=\"dagster.StringSource\"><code class=\"xref py py-class docutils literal notranslate\"><span class=\"pre\">StringSource</span></code></a> and\n<a class=\"reference internal\" href=\"../../config#dagster.IntSource\" title=\"dagster.IntSource\"><code class=\"xref py py-class docutils literal notranslate\"><span class=\"pre\">IntSource</span></code></a> and can be configured from environment variables.</p>\n</dd></dl>\n\n<dl class=\"py data\">\n<dt id=\"dagster_postgres.PostgresScheduleStorage\">\n<code class=\"sig-prename descclassname\"><span class=\"pre\">dagster_postgres.</span></code><code class=\"sig-name descname\"><span class=\"pre\">PostgresScheduleStorage</span></code><em class=\"property\"> <span class=\"pre\">=</span> <span class=\"pre\">&lt;class</span> <span class=\"pre\">'dagster_postgres.schedule_storage.schedule_storage.PostgresScheduleStorage'&gt;</span></em><a class=\"reference internal\" href=\"../../../../../_modules/dagster_postgres/schedule_storage/schedule_storage#PostgresScheduleStorage\"><span class=\"viewcode-link\"><span class=\"pre\">[source]</span></span></a><a class=\"headerlink\" href=\"#dagster_postgres.PostgresScheduleStorage\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><div class=\"line-block\">\n<div class=\"line\"><br /></div>\n</div>\n<details class=\"summary-config-schema\">\n<summary>Config Schema:</summary><dl class=\"field-list\">\n<dt class=\"field-odd\">postgres_url (dagster.StringSource, optional)</dt>\n<dd class=\"field-odd\"><p></p></dd>\n<dt class=\"field-even\">postgres_db (strict dict, optional)</dt>\n<dd class=\"field-even\"><details class=\"summary-config-schema\">\n<summary>Config Schema:</summary><dl class=\"field-list\">\n<dt class=\"field-odd\">username (dagster.StringSource)</dt>\n<dd class=\"field-odd\"><p></p></dd>\n<dt class=\"field-even\">password (dagster.StringSource)</dt>\n<dd class=\"field-even\"><p></p></dd>\n<dt class=\"field-odd\">hostname (dagster.StringSource)</dt>\n<dd class=\"field-odd\"><p></p></dd>\n<dt class=\"field-even\">db_name (dagster.StringSource)</dt>\n<dd class=\"field-even\"><p></p></dd>\n<dt class=\"field-odd\">port (dagster.IntSource, optional)</dt>\n<dd class=\"field-odd\"><p><strong>Default Value:</strong> 5432</p>\n</dd>\n<dt class=\"field-even\">params (permissive dict, optional)</dt>\n<dd class=\"field-even\"><details class=\"summary-default-value\">\n<summary>Default Value:</summary><div class=\"highlight-javascript notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"p\">{}</span>\n</pre></div>\n</div>\n</details></dd>\n<dt class=\"field-odd\">scheme (dagster.StringSource, optional)</dt>\n<dd class=\"field-odd\"><p><strong>Default Value:</strong> \u2018postgresql\u2019</p>\n</dd>\n</dl>\n</details></dd>\n<dt class=\"field-even\">should_autocreate_tables (Bool, optional)</dt>\n<dd class=\"field-even\"><p><strong>Default Value:</strong> True</p>\n</dd>\n</dl>\n</details><p>Postgres-backed run storage.</p>\n<p>Users should not directly instantiate this class; it is instantiated by internal machinery when\n<code class=\"docutils literal notranslate\"><span class=\"pre\">dagit</span></code> and <code class=\"docutils literal notranslate\"><span class=\"pre\">dagster-graphql</span></code> load, based on the values in the <code class=\"docutils literal notranslate\"><span class=\"pre\">dagster.yaml</span></code> file in\n<code class=\"docutils literal notranslate\"><span class=\"pre\">$DAGSTER_HOME</span></code>. Configuration of this class should be done by setting values in that file.</p>\n<p>To use Postgres for schedule storage, you can add a block such as the following to your\n<code class=\"docutils literal notranslate\"><span class=\"pre\">dagster.yaml</span></code>:</p>\n<div class=\"literal-block-wrapper docutils container\" id=\"id3\">\n<div class=\"code-block-caption\"><span class=\"caption-text\">dagster.yaml</span><a class=\"headerlink\" href=\"#id3\" title=\"Permalink to this code\">\u00b6</a></div>\n<div class=\"highlight-YAML notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"nt\">schedule_storage</span><span class=\"p\">:</span><span class=\"w\"></span>\n<span class=\"w\">  </span><span class=\"nt\">module</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"l l-Scalar l-Scalar-Plain\">dagster_postgres.schedule_storage</span><span class=\"w\"></span>\n<span class=\"w\">  </span><span class=\"nt\">class</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"l l-Scalar l-Scalar-Plain\">PostgresScheduleStorage</span><span class=\"w\"></span>\n<span class=\"w\">  </span><span class=\"nt\">config</span><span class=\"p\">:</span><span class=\"w\"></span>\n<span class=\"w\">    </span><span class=\"nt\">postgres_db</span><span class=\"p\">:</span><span class=\"w\"></span>\n<span class=\"w\">      </span><span class=\"nt\">username</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"p p-Indicator\">{</span><span class=\"w\"> </span><span class=\"nv\">username</span><span class=\"w\"> </span><span class=\"p p-Indicator\">}</span><span class=\"w\"></span>\n<span class=\"w\">      </span><span class=\"nt\">password</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"p p-Indicator\">{</span><span class=\"w\"> </span><span class=\"nv\">password</span><span class=\"w\"> </span><span class=\"p p-Indicator\">}</span><span class=\"w\"></span>\n<span class=\"w\">      </span><span class=\"nt\">hostname</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"p p-Indicator\">{</span><span class=\"w\"> </span><span class=\"nv\">hostname</span><span class=\"w\"> </span><span class=\"p p-Indicator\">}</span><span class=\"w\"></span>\n<span class=\"w\">      </span><span class=\"nt\">db_name</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"p p-Indicator\">{</span><span class=\"w\"> </span><span class=\"nv\">db_name</span><span class=\"w\"> </span><span class=\"p p-Indicator\">}</span><span class=\"w\"></span>\n<span class=\"w\">      </span><span class=\"nt\">port</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"p p-Indicator\">{</span><span class=\"w\"> </span><span class=\"nv\">port</span><span class=\"w\"> </span><span class=\"p p-Indicator\">}</span><span class=\"w\"></span>\n</pre></div>\n</div>\n</div>\n<p>Note that the fields in this config are <a class=\"reference internal\" href=\"../../config#dagster.StringSource\" title=\"dagster.StringSource\"><code class=\"xref py py-class docutils literal notranslate\"><span class=\"pre\">StringSource</span></code></a> and\n<a class=\"reference internal\" href=\"../../config#dagster.IntSource\" title=\"dagster.IntSource\"><code class=\"xref py py-class docutils literal notranslate\"><span class=\"pre\">IntSource</span></code></a> and can be configured from environment variables.</p>\n</dd></dl>\n\n</div>\n", "current_page_name": "sections/api/apidocs/libraries/dagster-postgres", "customsidebar": null, "display_toc": false, "meta": null, "metatags": "", "next": {"link": "../dagster-prometheus/", "title": "Prometheus (dagster-prometheus)"}, "page_source_suffix": ".rst", "parents": [], "prev": {"link": "../dagster-papertrail/", "title": "Papertrail (dagster-papertrail)"}, "rellinks": [["genindex", "General Index", "I", "index"], ["py-modindex", "Python Module Index", "", "modules"], ["sections/api/apidocs/libraries/dagster-prometheus", "Prometheus (dagster-prometheus)", "N", "next"], ["sections/api/apidocs/libraries/dagster-papertrail", "Papertrail (dagster-papertrail)", "P", "previous"]], "sidebars": ["globaltoc.html", "searchbox.html"], "sourcename": "sections/api/apidocs/libraries/dagster-postgres.rst.txt", "title": "PostgreSQL (dagster-postgres)", "toc": "<ul>\n<li><a class=\"reference internal\" href=\"#\">PostgreSQL (dagster-postgres)</a></li>\n</ul>\n"}, "dagster-prometheus": {"alabaster_version": "0.7.12", "body": "<div class=\"section\" id=\"prometheus-dagster-prometheus\">\n<h1>Prometheus (dagster-prometheus)<a class=\"headerlink\" href=\"#prometheus-dagster-prometheus\" title=\"Permalink to this headline\">\u00b6</a></h1>\n<dl class=\"py class\">\n<dt id=\"dagster_prometheus.resources.PrometheusResource\">\n<em class=\"property\"><span class=\"pre\">class</span> </em><code class=\"sig-prename descclassname\"><span class=\"pre\">dagster_prometheus.resources.</span></code><code class=\"sig-name descname\"><span class=\"pre\">PrometheusResource</span></code><span class=\"sig-paren\">(</span><em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">gateway</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">timeout</span></span></em><span class=\"sig-paren\">)</span><a class=\"reference internal\" href=\"../../../../../_modules/dagster_prometheus/resources#PrometheusResource\"><span class=\"viewcode-link\"><span class=\"pre\">[source]</span></span></a><a class=\"headerlink\" href=\"#dagster_prometheus.resources.PrometheusResource\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Integrates with Prometheus via the prometheus_client library.</p>\n</dd></dl>\n\n<dl class=\"py data\">\n<dt id=\"dagster_prometheus.prometheus_resource\">\n<code class=\"sig-prename descclassname\"><span class=\"pre\">dagster_prometheus.</span></code><code class=\"sig-name descname\"><span class=\"pre\">prometheus_resource</span></code><em class=\"property\"> <span class=\"pre\">ResourceDefinition</span></em><a class=\"reference internal\" href=\"../../../../../_modules/dagster_prometheus/resources#prometheus_resource\"><span class=\"viewcode-link\"><span class=\"pre\">[source]</span></span></a><a class=\"headerlink\" href=\"#dagster_prometheus.prometheus_resource\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd></dd></dl>\n\n</div>\n", "current_page_name": "sections/api/apidocs/libraries/dagster-prometheus", "customsidebar": null, "display_toc": false, "meta": null, "metatags": "", "next": {"link": "../dagster-pyspark/", "title": "Pyspark (dagster-pyspark)"}, "page_source_suffix": ".rst", "parents": [], "prev": {"link": "../dagster-postgres/", "title": "PostgreSQL (dagster-postgres)"}, "rellinks": [["genindex", "General Index", "I", "index"], ["py-modindex", "Python Module Index", "", "modules"], ["sections/api/apidocs/libraries/dagster-pyspark", "Pyspark (dagster-pyspark)", "N", "next"], ["sections/api/apidocs/libraries/dagster-postgres", "PostgreSQL (dagster-postgres)", "P", "previous"]], "sidebars": ["globaltoc.html", "searchbox.html"], "sourcename": "sections/api/apidocs/libraries/dagster-prometheus.rst.txt", "title": "Prometheus (dagster-prometheus)", "toc": "<ul>\n<li><a class=\"reference internal\" href=\"#\">Prometheus (dagster-prometheus)</a></li>\n</ul>\n"}, "dagster-pyspark": {"alabaster_version": "0.7.12", "body": "<div class=\"section\" id=\"pyspark-dagster-pyspark\">\n<h1>Pyspark (dagster-pyspark)<a class=\"headerlink\" href=\"#pyspark-dagster-pyspark\" title=\"Permalink to this headline\">\u00b6</a></h1>\n<dl class=\"py data\">\n<dt id=\"dagster_pyspark.pyspark_resource\">\n<code class=\"sig-prename descclassname\"><span class=\"pre\">dagster_pyspark.</span></code><code class=\"sig-name descname\"><span class=\"pre\">pyspark_resource</span></code><em class=\"property\"> <span class=\"pre\">=</span> <span class=\"pre\">&lt;dagster.core.definitions.resource_definition.ResourceDefinition</span> <span class=\"pre\">object&gt;</span></em><a class=\"reference internal\" href=\"../../../../../_modules/dagster_pyspark/resources#pyspark_resource\"><span class=\"viewcode-link\"><span class=\"pre\">[source]</span></span></a><a class=\"headerlink\" href=\"#dagster_pyspark.pyspark_resource\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><div class=\"line-block\">\n<div class=\"line\"><br /></div>\n</div>\n<details class=\"summary-config-schema\">\n<summary>Config Schema:</summary><dl class=\"field-list\">\n<dt class=\"field-odd\">spark_conf (permissive dict, optional)</dt>\n<dd class=\"field-odd\"><details class=\"summary-default-value\">\n<summary>Default Value:</summary><div class=\"highlight-javascript notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"p\">{</span>\n    <span class=\"s2\">&quot;spark&quot;</span><span class=\"o\">:</span> <span class=\"p\">{</span>\n        <span class=\"s2\">&quot;app&quot;</span><span class=\"o\">:</span> <span class=\"p\">{},</span>\n        <span class=\"s2\">&quot;driver&quot;</span><span class=\"o\">:</span> <span class=\"p\">{</span>\n            <span class=\"s2\">&quot;blockManager&quot;</span><span class=\"o\">:</span> <span class=\"p\">{}</span>\n        <span class=\"p\">},</span>\n        <span class=\"s2\">&quot;executor&quot;</span><span class=\"o\">:</span> <span class=\"p\">{</span>\n            <span class=\"s2\">&quot;pyspark&quot;</span><span class=\"o\">:</span> <span class=\"p\">{},</span>\n            <span class=\"s2\">&quot;logs&quot;</span><span class=\"o\">:</span> <span class=\"p\">{</span>\n                <span class=\"s2\">&quot;rolling&quot;</span><span class=\"o\">:</span> <span class=\"p\">{</span>\n                    <span class=\"s2\">&quot;time&quot;</span><span class=\"o\">:</span> <span class=\"p\">{}</span>\n                <span class=\"p\">}</span>\n            <span class=\"p\">}</span>\n        <span class=\"p\">},</span>\n        <span class=\"s2\">&quot;local&quot;</span><span class=\"o\">:</span> <span class=\"p\">{},</span>\n        <span class=\"s2\">&quot;submit&quot;</span><span class=\"o\">:</span> <span class=\"p\">{},</span>\n        <span class=\"s2\">&quot;log&quot;</span><span class=\"o\">:</span> <span class=\"p\">{},</span>\n        <span class=\"s2\">&quot;redaction&quot;</span><span class=\"o\">:</span> <span class=\"p\">{},</span>\n        <span class=\"s2\">&quot;python&quot;</span><span class=\"o\">:</span> <span class=\"p\">{</span>\n            <span class=\"s2\">&quot;profile&quot;</span><span class=\"o\">:</span> <span class=\"p\">{},</span>\n            <span class=\"s2\">&quot;worker&quot;</span><span class=\"o\">:</span> <span class=\"p\">{}</span>\n        <span class=\"p\">},</span>\n        <span class=\"s2\">&quot;files&quot;</span><span class=\"o\">:</span> <span class=\"p\">{},</span>\n        <span class=\"s2\">&quot;jars&quot;</span><span class=\"o\">:</span> <span class=\"p\">{},</span>\n        <span class=\"s2\">&quot;pyspark&quot;</span><span class=\"o\">:</span> <span class=\"p\">{</span>\n            <span class=\"s2\">&quot;driver&quot;</span><span class=\"o\">:</span> <span class=\"p\">{}</span>\n        <span class=\"p\">},</span>\n        <span class=\"s2\">&quot;reducer&quot;</span><span class=\"o\">:</span> <span class=\"p\">{},</span>\n        <span class=\"s2\">&quot;shuffle&quot;</span><span class=\"o\">:</span> <span class=\"p\">{</span>\n            <span class=\"s2\">&quot;file&quot;</span><span class=\"o\">:</span> <span class=\"p\">{},</span>\n            <span class=\"s2\">&quot;io&quot;</span><span class=\"o\">:</span> <span class=\"p\">{},</span>\n            <span class=\"s2\">&quot;service&quot;</span><span class=\"o\">:</span> <span class=\"p\">{</span>\n                <span class=\"s2\">&quot;index&quot;</span><span class=\"o\">:</span> <span class=\"p\">{</span>\n                    <span class=\"s2\">&quot;cache&quot;</span><span class=\"o\">:</span> <span class=\"p\">{}</span>\n                <span class=\"p\">}</span>\n            <span class=\"p\">},</span>\n            <span class=\"s2\">&quot;sort&quot;</span><span class=\"o\">:</span> <span class=\"p\">{},</span>\n            <span class=\"s2\">&quot;spill&quot;</span><span class=\"o\">:</span> <span class=\"p\">{},</span>\n            <span class=\"s2\">&quot;registration&quot;</span><span class=\"o\">:</span> <span class=\"p\">{}</span>\n        <span class=\"p\">},</span>\n        <span class=\"s2\">&quot;eventLog&quot;</span><span class=\"o\">:</span> <span class=\"p\">{</span>\n            <span class=\"s2\">&quot;logBlockUpdates&quot;</span><span class=\"o\">:</span> <span class=\"p\">{},</span>\n            <span class=\"s2\">&quot;longForm&quot;</span><span class=\"o\">:</span> <span class=\"p\">{},</span>\n            <span class=\"s2\">&quot;buffer&quot;</span><span class=\"o\">:</span> <span class=\"p\">{}</span>\n        <span class=\"p\">},</span>\n        <span class=\"s2\">&quot;ui&quot;</span><span class=\"o\">:</span> <span class=\"p\">{</span>\n            <span class=\"s2\">&quot;dagGraph&quot;</span><span class=\"o\">:</span> <span class=\"p\">{},</span>\n            <span class=\"s2\">&quot;liveUpdate&quot;</span><span class=\"o\">:</span> <span class=\"p\">{}</span>\n        <span class=\"p\">},</span>\n        <span class=\"s2\">&quot;worker&quot;</span><span class=\"o\">:</span> <span class=\"p\">{</span>\n            <span class=\"s2\">&quot;ui&quot;</span><span class=\"o\">:</span> <span class=\"p\">{}</span>\n        <span class=\"p\">},</span>\n        <span class=\"s2\">&quot;sql&quot;</span><span class=\"o\">:</span> <span class=\"p\">{</span>\n            <span class=\"s2\">&quot;ui&quot;</span><span class=\"o\">:</span> <span class=\"p\">{}</span>\n        <span class=\"p\">},</span>\n        <span class=\"s2\">&quot;streaming&quot;</span><span class=\"o\">:</span> <span class=\"p\">{</span>\n            <span class=\"s2\">&quot;ui&quot;</span><span class=\"o\">:</span> <span class=\"p\">{},</span>\n            <span class=\"s2\">&quot;backpressure&quot;</span><span class=\"o\">:</span> <span class=\"p\">{},</span>\n            <span class=\"s2\">&quot;receiver&quot;</span><span class=\"o\">:</span> <span class=\"p\">{</span>\n                <span class=\"s2\">&quot;writeAheadLog&quot;</span><span class=\"o\">:</span> <span class=\"p\">{}</span>\n            <span class=\"p\">},</span>\n            <span class=\"s2\">&quot;kafka&quot;</span><span class=\"o\">:</span> <span class=\"p\">{},</span>\n            <span class=\"s2\">&quot;driver&quot;</span><span class=\"o\">:</span> <span class=\"p\">{</span>\n                <span class=\"s2\">&quot;writeAheadLog&quot;</span><span class=\"o\">:</span> <span class=\"p\">{}</span>\n            <span class=\"p\">}</span>\n        <span class=\"p\">},</span>\n        <span class=\"s2\">&quot;broadcast&quot;</span><span class=\"o\">:</span> <span class=\"p\">{},</span>\n        <span class=\"s2\">&quot;io&quot;</span><span class=\"o\">:</span> <span class=\"p\">{</span>\n            <span class=\"s2\">&quot;compression&quot;</span><span class=\"o\">:</span> <span class=\"p\">{</span>\n                <span class=\"s2\">&quot;lz4&quot;</span><span class=\"o\">:</span> <span class=\"p\">{},</span>\n                <span class=\"s2\">&quot;snappy&quot;</span><span class=\"o\">:</span> <span class=\"p\">{},</span>\n                <span class=\"s2\">&quot;zstd&quot;</span><span class=\"o\">:</span> <span class=\"p\">{}</span>\n            <span class=\"p\">}</span>\n        <span class=\"p\">},</span>\n        <span class=\"s2\">&quot;kryo&quot;</span><span class=\"o\">:</span> <span class=\"p\">{},</span>\n        <span class=\"s2\">&quot;kryoserializer&quot;</span><span class=\"o\">:</span> <span class=\"p\">{</span>\n            <span class=\"s2\">&quot;buffer&quot;</span><span class=\"o\">:</span> <span class=\"p\">{}</span>\n        <span class=\"p\">},</span>\n        <span class=\"s2\">&quot;rdd&quot;</span><span class=\"o\">:</span> <span class=\"p\">{},</span>\n        <span class=\"s2\">&quot;serializer&quot;</span><span class=\"o\">:</span> <span class=\"p\">{},</span>\n        <span class=\"s2\">&quot;memory&quot;</span><span class=\"o\">:</span> <span class=\"p\">{</span>\n            <span class=\"s2\">&quot;offHeap&quot;</span><span class=\"o\">:</span> <span class=\"p\">{}</span>\n        <span class=\"p\">},</span>\n        <span class=\"s2\">&quot;storage&quot;</span><span class=\"o\">:</span> <span class=\"p\">{</span>\n            <span class=\"s2\">&quot;replication&quot;</span><span class=\"o\">:</span> <span class=\"p\">{}</span>\n        <span class=\"p\">},</span>\n        <span class=\"s2\">&quot;cleaner&quot;</span><span class=\"o\">:</span> <span class=\"p\">{</span>\n            <span class=\"s2\">&quot;periodicGC&quot;</span><span class=\"o\">:</span> <span class=\"p\">{},</span>\n            <span class=\"s2\">&quot;referenceTracking&quot;</span><span class=\"o\">:</span> <span class=\"p\">{</span>\n                <span class=\"s2\">&quot;blocking&quot;</span><span class=\"o\">:</span> <span class=\"p\">{}</span>\n            <span class=\"p\">}</span>\n        <span class=\"p\">},</span>\n        <span class=\"s2\">&quot;default&quot;</span><span class=\"o\">:</span> <span class=\"p\">{},</span>\n        <span class=\"s2\">&quot;hadoop&quot;</span><span class=\"o\">:</span> <span class=\"p\">{</span>\n            <span class=\"s2\">&quot;mapreduce&quot;</span><span class=\"o\">:</span> <span class=\"p\">{</span>\n                <span class=\"s2\">&quot;fileoutputcommitter&quot;</span><span class=\"o\">:</span> <span class=\"p\">{</span>\n                    <span class=\"s2\">&quot;algorithm&quot;</span><span class=\"o\">:</span> <span class=\"p\">{}</span>\n                <span class=\"p\">}</span>\n            <span class=\"p\">}</span>\n        <span class=\"p\">},</span>\n        <span class=\"s2\">&quot;rpc&quot;</span><span class=\"o\">:</span> <span class=\"p\">{</span>\n            <span class=\"s2\">&quot;message&quot;</span><span class=\"o\">:</span> <span class=\"p\">{},</span>\n            <span class=\"s2\">&quot;retry&quot;</span><span class=\"o\">:</span> <span class=\"p\">{}</span>\n        <span class=\"p\">},</span>\n        <span class=\"s2\">&quot;blockManager&quot;</span><span class=\"o\">:</span> <span class=\"p\">{},</span>\n        <span class=\"s2\">&quot;network&quot;</span><span class=\"o\">:</span> <span class=\"p\">{},</span>\n        <span class=\"s2\">&quot;port&quot;</span><span class=\"o\">:</span> <span class=\"p\">{},</span>\n        <span class=\"s2\">&quot;core&quot;</span><span class=\"o\">:</span> <span class=\"p\">{</span>\n            <span class=\"s2\">&quot;connection&quot;</span><span class=\"o\">:</span> <span class=\"p\">{</span>\n                <span class=\"s2\">&quot;ack&quot;</span><span class=\"o\">:</span> <span class=\"p\">{</span>\n                    <span class=\"s2\">&quot;wait&quot;</span><span class=\"o\">:</span> <span class=\"p\">{}</span>\n                <span class=\"p\">}</span>\n            <span class=\"p\">}</span>\n        <span class=\"p\">},</span>\n        <span class=\"s2\">&quot;cores&quot;</span><span class=\"o\">:</span> <span class=\"p\">{},</span>\n        <span class=\"s2\">&quot;locality&quot;</span><span class=\"o\">:</span> <span class=\"p\">{</span>\n            <span class=\"s2\">&quot;wait&quot;</span><span class=\"o\">:</span> <span class=\"p\">{}</span>\n        <span class=\"p\">},</span>\n        <span class=\"s2\">&quot;scheduler&quot;</span><span class=\"o\">:</span> <span class=\"p\">{</span>\n            <span class=\"s2\">&quot;revive&quot;</span><span class=\"o\">:</span> <span class=\"p\">{},</span>\n            <span class=\"s2\">&quot;listenerbus&quot;</span><span class=\"o\">:</span> <span class=\"p\">{</span>\n                <span class=\"s2\">&quot;eventqueue&quot;</span><span class=\"o\">:</span> <span class=\"p\">{}</span>\n            <span class=\"p\">}</span>\n        <span class=\"p\">},</span>\n        <span class=\"s2\">&quot;blacklist&quot;</span><span class=\"o\">:</span> <span class=\"p\">{</span>\n            <span class=\"s2\">&quot;task&quot;</span><span class=\"o\">:</span> <span class=\"p\">{},</span>\n            <span class=\"s2\">&quot;stage&quot;</span><span class=\"o\">:</span> <span class=\"p\">{},</span>\n            <span class=\"s2\">&quot;application&quot;</span><span class=\"o\">:</span> <span class=\"p\">{</span>\n                <span class=\"s2\">&quot;fetchFailure&quot;</span><span class=\"o\">:</span> <span class=\"p\">{}</span>\n            <span class=\"p\">}</span>\n        <span class=\"p\">},</span>\n        <span class=\"s2\">&quot;speculation&quot;</span><span class=\"o\">:</span> <span class=\"p\">{},</span>\n        <span class=\"s2\">&quot;task&quot;</span><span class=\"o\">:</span> <span class=\"p\">{</span>\n            <span class=\"s2\">&quot;reaper&quot;</span><span class=\"o\">:</span> <span class=\"p\">{}</span>\n        <span class=\"p\">},</span>\n        <span class=\"s2\">&quot;stage&quot;</span><span class=\"o\">:</span> <span class=\"p\">{},</span>\n        <span class=\"s2\">&quot;dynamicAllocation&quot;</span><span class=\"o\">:</span> <span class=\"p\">{},</span>\n        <span class=\"s2\">&quot;r&quot;</span><span class=\"o\">:</span> <span class=\"p\">{</span>\n            <span class=\"s2\">&quot;driver&quot;</span><span class=\"o\">:</span> <span class=\"p\">{},</span>\n            <span class=\"s2\">&quot;shell&quot;</span><span class=\"o\">:</span> <span class=\"p\">{}</span>\n        <span class=\"p\">},</span>\n        <span class=\"s2\">&quot;graphx&quot;</span><span class=\"o\">:</span> <span class=\"p\">{</span>\n            <span class=\"s2\">&quot;pregel&quot;</span><span class=\"o\">:</span> <span class=\"p\">{}</span>\n        <span class=\"p\">},</span>\n        <span class=\"s2\">&quot;deploy&quot;</span><span class=\"o\">:</span> <span class=\"p\">{</span>\n            <span class=\"s2\">&quot;zookeeper&quot;</span><span class=\"o\">:</span> <span class=\"p\">{}</span>\n        <span class=\"p\">}</span>\n    <span class=\"p\">}</span>\n<span class=\"p\">}</span>\n</pre></div>\n</div>\n</details><details class=\"summary-config-schema\">\n<summary>Config Schema:</summary><dl class=\"field-list\">\n<dt class=\"field-odd\">spark (permissive dict, optional)</dt>\n<dd class=\"field-odd\"><details class=\"summary-default-value\">\n<summary>Default Value:</summary><div class=\"highlight-javascript notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"p\">{</span>\n    <span class=\"s2\">&quot;app&quot;</span><span class=\"o\">:</span> <span class=\"p\">{},</span>\n    <span class=\"s2\">&quot;driver&quot;</span><span class=\"o\">:</span> <span class=\"p\">{</span>\n        <span class=\"s2\">&quot;blockManager&quot;</span><span class=\"o\">:</span> <span class=\"p\">{}</span>\n    <span class=\"p\">},</span>\n    <span class=\"s2\">&quot;executor&quot;</span><span class=\"o\">:</span> <span class=\"p\">{</span>\n        <span class=\"s2\">&quot;pyspark&quot;</span><span class=\"o\">:</span> <span class=\"p\">{},</span>\n        <span class=\"s2\">&quot;logs&quot;</span><span class=\"o\">:</span> <span class=\"p\">{</span>\n            <span class=\"s2\">&quot;rolling&quot;</span><span class=\"o\">:</span> <span class=\"p\">{</span>\n                <span class=\"s2\">&quot;time&quot;</span><span class=\"o\">:</span> <span class=\"p\">{}</span>\n            <span class=\"p\">}</span>\n        <span class=\"p\">}</span>\n    <span class=\"p\">},</span>\n    <span class=\"s2\">&quot;local&quot;</span><span class=\"o\">:</span> <span class=\"p\">{},</span>\n    <span class=\"s2\">&quot;submit&quot;</span><span class=\"o\">:</span> <span class=\"p\">{},</span>\n    <span class=\"s2\">&quot;log&quot;</span><span class=\"o\">:</span> <span class=\"p\">{},</span>\n    <span class=\"s2\">&quot;redaction&quot;</span><span class=\"o\">:</span> <span class=\"p\">{},</span>\n    <span class=\"s2\">&quot;python&quot;</span><span class=\"o\">:</span> <span class=\"p\">{</span>\n        <span class=\"s2\">&quot;profile&quot;</span><span class=\"o\">:</span> <span class=\"p\">{},</span>\n        <span class=\"s2\">&quot;worker&quot;</span><span class=\"o\">:</span> <span class=\"p\">{}</span>\n    <span class=\"p\">},</span>\n    <span class=\"s2\">&quot;files&quot;</span><span class=\"o\">:</span> <span class=\"p\">{},</span>\n    <span class=\"s2\">&quot;jars&quot;</span><span class=\"o\">:</span> <span class=\"p\">{},</span>\n    <span class=\"s2\">&quot;pyspark&quot;</span><span class=\"o\">:</span> <span class=\"p\">{</span>\n        <span class=\"s2\">&quot;driver&quot;</span><span class=\"o\">:</span> <span class=\"p\">{}</span>\n    <span class=\"p\">},</span>\n    <span class=\"s2\">&quot;reducer&quot;</span><span class=\"o\">:</span> <span class=\"p\">{},</span>\n    <span class=\"s2\">&quot;shuffle&quot;</span><span class=\"o\">:</span> <span class=\"p\">{</span>\n        <span class=\"s2\">&quot;file&quot;</span><span class=\"o\">:</span> <span class=\"p\">{},</span>\n        <span class=\"s2\">&quot;io&quot;</span><span class=\"o\">:</span> <span class=\"p\">{},</span>\n        <span class=\"s2\">&quot;service&quot;</span><span class=\"o\">:</span> <span class=\"p\">{</span>\n            <span class=\"s2\">&quot;index&quot;</span><span class=\"o\">:</span> <span class=\"p\">{</span>\n                <span class=\"s2\">&quot;cache&quot;</span><span class=\"o\">:</span> <span class=\"p\">{}</span>\n            <span class=\"p\">}</span>\n        <span class=\"p\">},</span>\n        <span class=\"s2\">&quot;sort&quot;</span><span class=\"o\">:</span> <span class=\"p\">{},</span>\n        <span class=\"s2\">&quot;spill&quot;</span><span class=\"o\">:</span> <span class=\"p\">{},</span>\n        <span class=\"s2\">&quot;registration&quot;</span><span class=\"o\">:</span> <span class=\"p\">{}</span>\n    <span class=\"p\">},</span>\n    <span class=\"s2\">&quot;eventLog&quot;</span><span class=\"o\">:</span> <span class=\"p\">{</span>\n        <span class=\"s2\">&quot;logBlockUpdates&quot;</span><span class=\"o\">:</span> <span class=\"p\">{},</span>\n        <span class=\"s2\">&quot;longForm&quot;</span><span class=\"o\">:</span> <span class=\"p\">{},</span>\n        <span class=\"s2\">&quot;buffer&quot;</span><span class=\"o\">:</span> <span class=\"p\">{}</span>\n    <span class=\"p\">},</span>\n    <span class=\"s2\">&quot;ui&quot;</span><span class=\"o\">:</span> <span class=\"p\">{</span>\n        <span class=\"s2\">&quot;dagGraph&quot;</span><span class=\"o\">:</span> <span class=\"p\">{},</span>\n        <span class=\"s2\">&quot;liveUpdate&quot;</span><span class=\"o\">:</span> <span class=\"p\">{}</span>\n    <span class=\"p\">},</span>\n    <span class=\"s2\">&quot;worker&quot;</span><span class=\"o\">:</span> <span class=\"p\">{</span>\n        <span class=\"s2\">&quot;ui&quot;</span><span class=\"o\">:</span> <span class=\"p\">{}</span>\n    <span class=\"p\">},</span>\n    <span class=\"s2\">&quot;sql&quot;</span><span class=\"o\">:</span> <span class=\"p\">{</span>\n        <span class=\"s2\">&quot;ui&quot;</span><span class=\"o\">:</span> <span class=\"p\">{}</span>\n    <span class=\"p\">},</span>\n    <span class=\"s2\">&quot;streaming&quot;</span><span class=\"o\">:</span> <span class=\"p\">{</span>\n        <span class=\"s2\">&quot;ui&quot;</span><span class=\"o\">:</span> <span class=\"p\">{},</span>\n        <span class=\"s2\">&quot;backpressure&quot;</span><span class=\"o\">:</span> <span class=\"p\">{},</span>\n        <span class=\"s2\">&quot;receiver&quot;</span><span class=\"o\">:</span> <span class=\"p\">{</span>\n            <span class=\"s2\">&quot;writeAheadLog&quot;</span><span class=\"o\">:</span> <span class=\"p\">{}</span>\n        <span class=\"p\">},</span>\n        <span class=\"s2\">&quot;kafka&quot;</span><span class=\"o\">:</span> <span class=\"p\">{},</span>\n        <span class=\"s2\">&quot;driver&quot;</span><span class=\"o\">:</span> <span class=\"p\">{</span>\n            <span class=\"s2\">&quot;writeAheadLog&quot;</span><span class=\"o\">:</span> <span class=\"p\">{}</span>\n        <span class=\"p\">}</span>\n    <span class=\"p\">},</span>\n    <span class=\"s2\">&quot;broadcast&quot;</span><span class=\"o\">:</span> <span class=\"p\">{},</span>\n    <span class=\"s2\">&quot;io&quot;</span><span class=\"o\">:</span> <span class=\"p\">{</span>\n        <span class=\"s2\">&quot;compression&quot;</span><span class=\"o\">:</span> <span class=\"p\">{</span>\n            <span class=\"s2\">&quot;lz4&quot;</span><span class=\"o\">:</span> <span class=\"p\">{},</span>\n            <span class=\"s2\">&quot;snappy&quot;</span><span class=\"o\">:</span> <span class=\"p\">{},</span>\n            <span class=\"s2\">&quot;zstd&quot;</span><span class=\"o\">:</span> <span class=\"p\">{}</span>\n        <span class=\"p\">}</span>\n    <span class=\"p\">},</span>\n    <span class=\"s2\">&quot;kryo&quot;</span><span class=\"o\">:</span> <span class=\"p\">{},</span>\n    <span class=\"s2\">&quot;kryoserializer&quot;</span><span class=\"o\">:</span> <span class=\"p\">{</span>\n        <span class=\"s2\">&quot;buffer&quot;</span><span class=\"o\">:</span> <span class=\"p\">{}</span>\n    <span class=\"p\">},</span>\n    <span class=\"s2\">&quot;rdd&quot;</span><span class=\"o\">:</span> <span class=\"p\">{},</span>\n    <span class=\"s2\">&quot;serializer&quot;</span><span class=\"o\">:</span> <span class=\"p\">{},</span>\n    <span class=\"s2\">&quot;memory&quot;</span><span class=\"o\">:</span> <span class=\"p\">{</span>\n        <span class=\"s2\">&quot;offHeap&quot;</span><span class=\"o\">:</span> <span class=\"p\">{}</span>\n    <span class=\"p\">},</span>\n    <span class=\"s2\">&quot;storage&quot;</span><span class=\"o\">:</span> <span class=\"p\">{</span>\n        <span class=\"s2\">&quot;replication&quot;</span><span class=\"o\">:</span> <span class=\"p\">{}</span>\n    <span class=\"p\">},</span>\n    <span class=\"s2\">&quot;cleaner&quot;</span><span class=\"o\">:</span> <span class=\"p\">{</span>\n        <span class=\"s2\">&quot;periodicGC&quot;</span><span class=\"o\">:</span> <span class=\"p\">{},</span>\n        <span class=\"s2\">&quot;referenceTracking&quot;</span><span class=\"o\">:</span> <span class=\"p\">{</span>\n            <span class=\"s2\">&quot;blocking&quot;</span><span class=\"o\">:</span> <span class=\"p\">{}</span>\n        <span class=\"p\">}</span>\n    <span class=\"p\">},</span>\n    <span class=\"s2\">&quot;default&quot;</span><span class=\"o\">:</span> <span class=\"p\">{},</span>\n    <span class=\"s2\">&quot;hadoop&quot;</span><span class=\"o\">:</span> <span class=\"p\">{</span>\n        <span class=\"s2\">&quot;mapreduce&quot;</span><span class=\"o\">:</span> <span class=\"p\">{</span>\n            <span class=\"s2\">&quot;fileoutputcommitter&quot;</span><span class=\"o\">:</span> <span class=\"p\">{</span>\n                <span class=\"s2\">&quot;algorithm&quot;</span><span class=\"o\">:</span> <span class=\"p\">{}</span>\n            <span class=\"p\">}</span>\n        <span class=\"p\">}</span>\n    <span class=\"p\">},</span>\n    <span class=\"s2\">&quot;rpc&quot;</span><span class=\"o\">:</span> <span class=\"p\">{</span>\n        <span class=\"s2\">&quot;message&quot;</span><span class=\"o\">:</span> <span class=\"p\">{},</span>\n        <span class=\"s2\">&quot;retry&quot;</span><span class=\"o\">:</span> <span class=\"p\">{}</span>\n    <span class=\"p\">},</span>\n    <span class=\"s2\">&quot;blockManager&quot;</span><span class=\"o\">:</span> <span class=\"p\">{},</span>\n    <span class=\"s2\">&quot;network&quot;</span><span class=\"o\">:</span> <span class=\"p\">{},</span>\n    <span class=\"s2\">&quot;port&quot;</span><span class=\"o\">:</span> <span class=\"p\">{},</span>\n    <span class=\"s2\">&quot;core&quot;</span><span class=\"o\">:</span> <span class=\"p\">{</span>\n        <span class=\"s2\">&quot;connection&quot;</span><span class=\"o\">:</span> <span class=\"p\">{</span>\n            <span class=\"s2\">&quot;ack&quot;</span><span class=\"o\">:</span> <span class=\"p\">{</span>\n                <span class=\"s2\">&quot;wait&quot;</span><span class=\"o\">:</span> <span class=\"p\">{}</span>\n            <span class=\"p\">}</span>\n        <span class=\"p\">}</span>\n    <span class=\"p\">},</span>\n    <span class=\"s2\">&quot;cores&quot;</span><span class=\"o\">:</span> <span class=\"p\">{},</span>\n    <span class=\"s2\">&quot;locality&quot;</span><span class=\"o\">:</span> <span class=\"p\">{</span>\n        <span class=\"s2\">&quot;wait&quot;</span><span class=\"o\">:</span> <span class=\"p\">{}</span>\n    <span class=\"p\">},</span>\n    <span class=\"s2\">&quot;scheduler&quot;</span><span class=\"o\">:</span> <span class=\"p\">{</span>\n        <span class=\"s2\">&quot;revive&quot;</span><span class=\"o\">:</span> <span class=\"p\">{},</span>\n        <span class=\"s2\">&quot;listenerbus&quot;</span><span class=\"o\">:</span> <span class=\"p\">{</span>\n            <span class=\"s2\">&quot;eventqueue&quot;</span><span class=\"o\">:</span> <span class=\"p\">{}</span>\n        <span class=\"p\">}</span>\n    <span class=\"p\">},</span>\n    <span class=\"s2\">&quot;blacklist&quot;</span><span class=\"o\">:</span> <span class=\"p\">{</span>\n        <span class=\"s2\">&quot;task&quot;</span><span class=\"o\">:</span> <span class=\"p\">{},</span>\n        <span class=\"s2\">&quot;stage&quot;</span><span class=\"o\">:</span> <span class=\"p\">{},</span>\n        <span class=\"s2\">&quot;application&quot;</span><span class=\"o\">:</span> <span class=\"p\">{</span>\n            <span class=\"s2\">&quot;fetchFailure&quot;</span><span class=\"o\">:</span> <span class=\"p\">{}</span>\n        <span class=\"p\">}</span>\n    <span class=\"p\">},</span>\n    <span class=\"s2\">&quot;speculation&quot;</span><span class=\"o\">:</span> <span class=\"p\">{},</span>\n    <span class=\"s2\">&quot;task&quot;</span><span class=\"o\">:</span> <span class=\"p\">{</span>\n        <span class=\"s2\">&quot;reaper&quot;</span><span class=\"o\">:</span> <span class=\"p\">{}</span>\n    <span class=\"p\">},</span>\n    <span class=\"s2\">&quot;stage&quot;</span><span class=\"o\">:</span> <span class=\"p\">{},</span>\n    <span class=\"s2\">&quot;dynamicAllocation&quot;</span><span class=\"o\">:</span> <span class=\"p\">{},</span>\n    <span class=\"s2\">&quot;r&quot;</span><span class=\"o\">:</span> <span class=\"p\">{</span>\n        <span class=\"s2\">&quot;driver&quot;</span><span class=\"o\">:</span> <span class=\"p\">{},</span>\n        <span class=\"s2\">&quot;shell&quot;</span><span class=\"o\">:</span> <span class=\"p\">{}</span>\n    <span class=\"p\">},</span>\n    <span class=\"s2\">&quot;graphx&quot;</span><span class=\"o\">:</span> <span class=\"p\">{</span>\n        <span class=\"s2\">&quot;pregel&quot;</span><span class=\"o\">:</span> <span class=\"p\">{}</span>\n    <span class=\"p\">},</span>\n    <span class=\"s2\">&quot;deploy&quot;</span><span class=\"o\">:</span> <span class=\"p\">{</span>\n        <span class=\"s2\">&quot;zookeeper&quot;</span><span class=\"o\">:</span> <span class=\"p\">{}</span>\n    <span class=\"p\">}</span>\n<span class=\"p\">}</span>\n</pre></div>\n</div>\n</details><details class=\"summary-config-schema\">\n<summary>Config Schema:</summary><dl class=\"field-list\">\n<dt class=\"field-odd\">app (permissive dict, optional)</dt>\n<dd class=\"field-odd\"><details class=\"summary-default-value\">\n<summary>Default Value:</summary><div class=\"highlight-javascript notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"p\">{}</span>\n</pre></div>\n</div>\n</details><details class=\"summary-config-schema\">\n<summary>Config Schema:</summary><dl class=\"field-list simple\">\n<dt class=\"field-odd\">name (dagster.StringSource, optional)</dt>\n<dd class=\"field-odd\"><p>Application Properties: The name of your application. This will appear in the UI and in log data.</p>\n</dd>\n</dl>\n</details></dd>\n<dt class=\"field-even\">driver (permissive dict, optional)</dt>\n<dd class=\"field-even\"><details class=\"summary-default-value\">\n<summary>Default Value:</summary><div class=\"highlight-javascript notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"p\">{</span>\n    <span class=\"s2\">&quot;blockManager&quot;</span><span class=\"o\">:</span> <span class=\"p\">{}</span>\n<span class=\"p\">}</span>\n</pre></div>\n</div>\n</details><details class=\"summary-config-schema\">\n<summary>Config Schema:</summary><dl class=\"field-list\">\n<dt class=\"field-odd\">cores (dagster.IntSource, optional)</dt>\n<dd class=\"field-odd\"><p>Application Properties: Number of cores to use for the driver process, only in cluster mode.</p>\n</dd>\n<dt class=\"field-even\">maxResultSize (dagster.StringSource, optional)</dt>\n<dd class=\"field-even\"><p>Application Properties: Limit of total size of serialized results of all partitions for each Spark action (e.g. collect) in bytes. Should be at least 1M, or 0 for unlimited. Jobs will be aborted if the total size is above this limit. Having a high limit may cause out-of-memory errors in driver (depends on spark.driver.memory and memory overhead of objects in JVM). Setting a proper limit can protect the driver from out-of-memory errors.</p>\n</dd>\n<dt class=\"field-odd\">memory (dagster.StringSource, optional)</dt>\n<dd class=\"field-odd\"><p>Application Properties: Amount of memory to use for the driver process, i.e. where SparkContext is initialized, in the same format as JVM memory strings with a size unit suffix (\u201ck\u201d, \u201cm\u201d, \u201cg\u201d or \u201ct\u201d) (e.g. 512m, 2g). Note: In client mode, this config must not be set through the SparkConf directly in your application, because the driver JVM has already started at that point. Instead, please set this through the \u2013driver-memory command line option or in your default properties file.</p>\n</dd>\n<dt class=\"field-even\">memoryOverhead (dagster.StringSource, optional)</dt>\n<dd class=\"field-even\"><p>Application Properties: The amount of off-heap memory to be allocated per driver in cluster mode, in MiB unless otherwise specified. This is memory that accounts for things like VM overheads, interned strings, other native overheads, etc. This tends to grow with the container size (typically 6-10%). This option is currently supported on YARN and Kubernetes.</p>\n</dd>\n<dt class=\"field-odd\">supervise (Bool, optional)</dt>\n<dd class=\"field-odd\"><p>Application Properties: If true, restarts the driver automatically if it fails with a non-zero exit status. Only has effect in Spark standalone mode or Mesos cluster deploy mode.</p>\n</dd>\n<dt class=\"field-even\">extraClassPath (dagster.StringSource, optional)</dt>\n<dd class=\"field-even\"><p>Runtime Environment: Extra classpath entries to prepend to the classpath of the driver. Note: In client mode, this config must not be set through the SparkConf directly in your application, because the driver JVM has already started at that point. Instead, please set this through the \u2013driver-class-path command line option or in your default properties file.</p>\n</dd>\n<dt class=\"field-odd\">extraJavaOptions (dagster.StringSource, optional)</dt>\n<dd class=\"field-odd\"><p>Runtime Environment: A string of extra JVM options to pass to the driver. For instance, GC settings or other logging. Note that it is illegal to set maximum heap size (-Xmx) settings with this option. Maximum heap size settings can be set with spark.driver.memory in the cluster mode and through the \u2013driver-memory command line option in the client mode. Note: In client mode, this config must not be set through the SparkConf directly in your application, because the driver JVM has already started at that point. Instead, please set this through the \u2013driver-java-options command line option or in your default properties file.</p>\n</dd>\n<dt class=\"field-even\">extraLibraryPath (dagster.StringSource, optional)</dt>\n<dd class=\"field-even\"><p>Runtime Environment: Set a special library path to use when launching the driver JVM. Note: In client mode, this config must not be set through the SparkConf directly in your application, because the driver JVM has already started at that point. Instead, please set this through the \u2013driver-library-path command line option or in your default properties file.</p>\n</dd>\n<dt class=\"field-odd\">userClassPathFirst (Bool, optional)</dt>\n<dd class=\"field-odd\"><p>Runtime Environment: (Experimental) Whether to give user-added jars precedence over Spark\u2019s own jars when loading classes in the driver. This feature can be used to mitigate conflicts between Spark\u2019s dependencies and user dependencies. It is currently an experimental feature. This is used in cluster mode only.</p>\n</dd>\n<dt class=\"field-even\">blockManager (permissive dict, optional)</dt>\n<dd class=\"field-even\"><details class=\"summary-default-value\">\n<summary>Default Value:</summary><div class=\"highlight-javascript notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"p\">{}</span>\n</pre></div>\n</div>\n</details><details class=\"summary-config-schema\">\n<summary>Config Schema:</summary><dl class=\"field-list simple\">\n<dt class=\"field-odd\">port (dagster.StringSource, optional)</dt>\n<dd class=\"field-odd\"><p>Networking: Driver-specific port for the block manager to listen on, for cases where it cannot use the same configuration as executors.</p>\n</dd>\n</dl>\n</details></dd>\n<dt class=\"field-even\">bindAddress (dagster.StringSource, optional)</dt>\n<dd class=\"field-even\"><p>Networking: Hostname or IP address where to bind listening sockets. This config overrides the SPARK_LOCAL_IP environment variable (see below). It also allows a different address from the local one to be advertised to executors or external systems. This is useful, for example, when running containers with bridged networking. For this to properly work, the different ports used by the driver (RPC, block manager and UI) need to be forwarded from the container\u2019s host.</p>\n</dd>\n<dt class=\"field-odd\">host (dagster.StringSource, optional)</dt>\n<dd class=\"field-odd\"><p>Networking: Hostname or IP address for the driver. This is used for communicating with the executors and the standalone Master.</p>\n</dd>\n<dt class=\"field-even\">port (dagster.StringSource, optional)</dt>\n<dd class=\"field-even\"><p>Networking: Port for the driver to listen on. This is used for communicating with the executors and the standalone Master.</p>\n</dd>\n</dl>\n</details></dd>\n<dt class=\"field-odd\">executor (permissive dict, optional)</dt>\n<dd class=\"field-odd\"><details class=\"summary-default-value\">\n<summary>Default Value:</summary><div class=\"highlight-javascript notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"p\">{</span>\n    <span class=\"s2\">&quot;pyspark&quot;</span><span class=\"o\">:</span> <span class=\"p\">{},</span>\n    <span class=\"s2\">&quot;logs&quot;</span><span class=\"o\">:</span> <span class=\"p\">{</span>\n        <span class=\"s2\">&quot;rolling&quot;</span><span class=\"o\">:</span> <span class=\"p\">{</span>\n            <span class=\"s2\">&quot;time&quot;</span><span class=\"o\">:</span> <span class=\"p\">{}</span>\n        <span class=\"p\">}</span>\n    <span class=\"p\">}</span>\n<span class=\"p\">}</span>\n</pre></div>\n</div>\n</details><details class=\"summary-config-schema\">\n<summary>Config Schema:</summary><dl class=\"field-list\">\n<dt class=\"field-odd\">memory (dagster.StringSource, optional)</dt>\n<dd class=\"field-odd\"><p>Application Properties: Amount of memory to use per executor process, in the same format as JVM memory strings with a size unit suffix (\u201ck\u201d, \u201cm\u201d, \u201cg\u201d or \u201ct\u201d) (e.g. 512m, 2g).</p>\n</dd>\n<dt class=\"field-even\">pyspark (permissive dict, optional)</dt>\n<dd class=\"field-even\"><details class=\"summary-default-value\">\n<summary>Default Value:</summary><div class=\"highlight-javascript notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"p\">{}</span>\n</pre></div>\n</div>\n</details><details class=\"summary-config-schema\">\n<summary>Config Schema:</summary><dl class=\"field-list simple\">\n<dt class=\"field-odd\">memory (dagster.StringSource, optional)</dt>\n<dd class=\"field-odd\"><p>Application Properties: The amount of memory to be allocated to PySpark in each executor, in MiB unless otherwise specified. If set, PySpark memory for an executor will be limited to this amount. If not set, Spark will not limit Python\u2019s memory use and it is up to the application to avoid exceeding the overhead memory space shared with other non-JVM processes. When PySpark is run in YARN or Kubernetes, this memory is added to executor resource requests.</p>\n</dd>\n</dl>\n</details></dd>\n<dt class=\"field-even\">memoryOverhead (dagster.StringSource, optional)</dt>\n<dd class=\"field-even\"><p>Application Properties: The amount of off-heap memory to be allocated per executor, in MiB unless otherwise specified. This is memory that accounts for things like VM overheads, interned strings, other native overheads, etc. This tends to grow with the executor size (typically 6-10%). This option is currently supported on YARN and Kubernetes.</p>\n</dd>\n<dt class=\"field-odd\">extraClassPath (dagster.StringSource, optional)</dt>\n<dd class=\"field-odd\"><p>Runtime Environment: Extra classpath entries to prepend to the classpath of executors. This exists primarily for backwards-compatibility with older versions of Spark. Users typically should not need to set this option.</p>\n</dd>\n<dt class=\"field-even\">extraJavaOptions (dagster.StringSource, optional)</dt>\n<dd class=\"field-even\"><p>Runtime Environment: A string of extra JVM options to pass to executors. For instance, GC settings or other logging. Note that it is illegal to set Spark properties or maximum heap size (-Xmx) settings with this option. Spark properties should be set using a SparkConf object or the spark-defaults.conf file used with the spark-submit script. Maximum heap size settings can be set with spark.executor.memory. The following symbols, if present will be interpolated: {{APP_ID}} will be replaced by application ID and {{EXECUTOR_ID}} will be replaced by executor ID. For example, to enable verbose gc logging to a file named for the executor ID of the app in /tmp, pass a \u2018value\u2019 of: -verbose:gc -Xloggc:/tmp/{{APP_ID}}-{{EXECUTOR_ID}}.gc</p>\n</dd>\n<dt class=\"field-odd\">extraLibraryPath (dagster.StringSource, optional)</dt>\n<dd class=\"field-odd\"><p>Runtime Environment: Set a special library path to use when launching executor JVM\u2019s.</p>\n</dd>\n<dt class=\"field-even\">logs (permissive dict, optional)</dt>\n<dd class=\"field-even\"><details class=\"summary-default-value\">\n<summary>Default Value:</summary><div class=\"highlight-javascript notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"p\">{</span>\n    <span class=\"s2\">&quot;rolling&quot;</span><span class=\"o\">:</span> <span class=\"p\">{</span>\n        <span class=\"s2\">&quot;time&quot;</span><span class=\"o\">:</span> <span class=\"p\">{}</span>\n    <span class=\"p\">}</span>\n<span class=\"p\">}</span>\n</pre></div>\n</div>\n</details><details class=\"summary-config-schema\">\n<summary>Config Schema:</summary><dl class=\"field-list\">\n<dt class=\"field-odd\">rolling (permissive dict, optional)</dt>\n<dd class=\"field-odd\"><details class=\"summary-default-value\">\n<summary>Default Value:</summary><div class=\"highlight-javascript notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"p\">{</span>\n    <span class=\"s2\">&quot;time&quot;</span><span class=\"o\">:</span> <span class=\"p\">{}</span>\n<span class=\"p\">}</span>\n</pre></div>\n</div>\n</details><details class=\"summary-config-schema\">\n<summary>Config Schema:</summary><dl class=\"field-list\">\n<dt class=\"field-odd\">maxRetainedFiles (dagster.IntSource, optional)</dt>\n<dd class=\"field-odd\"><p>Runtime Environment: Sets the number of latest rolling log files that are going to be retained by the system. Older log files will be deleted. Disabled by default.</p>\n</dd>\n<dt class=\"field-even\">enableCompression (Bool, optional)</dt>\n<dd class=\"field-even\"><p>Runtime Environment: Enable executor log compression. If it is enabled, the rolled executor logs will be compressed. Disabled by default.</p>\n</dd>\n<dt class=\"field-odd\">maxSize (dagster.IntSource, optional)</dt>\n<dd class=\"field-odd\"><p>Runtime Environment: Set the max size of the file in bytes by which the executor logs will be rolled over. Rolling is disabled by default. See spark.executor.logs.rolling.maxRetainedFiles for automatic cleaning of old logs.</p>\n</dd>\n<dt class=\"field-even\">strategy (dagster.StringSource, optional)</dt>\n<dd class=\"field-even\"><p>Runtime Environment: Set the strategy of rolling of executor logs. By default it is disabled. It can be set to \u201ctime\u201d (time-based rolling) or \u201csize\u201d (size-based rolling). For \u201ctime\u201d, use spark.executor.logs.rolling.time.interval to set the rolling interval. For \u201csize\u201d, use spark.executor.logs.rolling.maxSize to set the maximum file size for rolling.</p>\n</dd>\n<dt class=\"field-odd\">time (permissive dict, optional)</dt>\n<dd class=\"field-odd\"><details class=\"summary-default-value\">\n<summary>Default Value:</summary><div class=\"highlight-javascript notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"p\">{}</span>\n</pre></div>\n</div>\n</details><details class=\"summary-config-schema\">\n<summary>Config Schema:</summary><dl class=\"field-list simple\">\n<dt class=\"field-odd\">interval (dagster.StringSource, optional)</dt>\n<dd class=\"field-odd\"><p>Runtime Environment: Set the time interval by which the executor logs will be rolled over. Rolling is disabled by default. Valid values are daily, hourly, minutely or any interval in seconds. See spark.executor.logs.rolling.maxRetainedFiles for automatic cleaning of old logs.</p>\n</dd>\n</dl>\n</details></dd>\n</dl>\n</details></dd>\n</dl>\n</details></dd>\n<dt class=\"field-even\">userClassPathFirst (Bool, optional)</dt>\n<dd class=\"field-even\"><p>Runtime Environment: (Experimental) Same functionality as spark.driver.userClassPathFirst, but applied to executor instances.</p>\n</dd>\n<dt class=\"field-odd\">cores (dagster.IntSource, optional)</dt>\n<dd class=\"field-odd\"><p>Execution Behavior: The number of cores to use on each executor. In standalone and Mesos coarse-grained modes, for more detail, see this description.</p>\n</dd>\n<dt class=\"field-even\">heartbeatInterval (dagster.StringSource, optional)</dt>\n<dd class=\"field-even\"><p>Execution Behavior: Interval between each executor\u2019s heartbeats to the driver. Heartbeats let the driver know that the executor is still alive and update it with metrics for in-progress tasks. spark.executor.heartbeatInterval should be significantly less than spark.network.timeout</p>\n</dd>\n</dl>\n</details></dd>\n<dt class=\"field-odd\">extraListeners (dagster.StringSource, optional)</dt>\n<dd class=\"field-odd\"><p>Application Properties: A comma-separated list of classes that implement SparkListener; when initializing SparkContext, instances of these classes will be created and registered with Spark\u2019s listener bus. If a class has a single-argument constructor that accepts a SparkConf, that constructor will be called; otherwise, a zero-argument constructor will be called. If no valid constructor can be found, the SparkContext creation will fail with an exception.</p>\n</dd>\n<dt class=\"field-even\">local (permissive dict, optional)</dt>\n<dd class=\"field-even\"><details class=\"summary-default-value\">\n<summary>Default Value:</summary><div class=\"highlight-javascript notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"p\">{}</span>\n</pre></div>\n</div>\n</details><details class=\"summary-config-schema\">\n<summary>Config Schema:</summary><dl class=\"field-list simple\">\n<dt class=\"field-odd\">dir (dagster.StringSource, optional)</dt>\n<dd class=\"field-odd\"><p>Application Properties: Directory to use for \u201cscratch\u201d space in Spark, including map output files and RDDs that get stored on disk. This should be on a fast, local disk in your system. It can also be a comma-separated list of multiple directories on different disks. NOTE: In Spark 1.0 and later this will be overridden by SPARK_LOCAL_DIRS (Standalone), MESOS_SANDBOX (Mesos) or LOCAL_DIRS (YARN) environment variables set by the cluster manager.</p>\n</dd>\n</dl>\n</details></dd>\n<dt class=\"field-even\">logConf (Bool, optional)</dt>\n<dd class=\"field-even\"><p>Application Properties: Logs the effective SparkConf as INFO when a SparkContext is started.</p>\n</dd>\n<dt class=\"field-odd\">master (dagster.StringSource, optional)</dt>\n<dd class=\"field-odd\"><p>Application Properties: The cluster manager to connect to. See the list of allowed master URL\u2019s.</p>\n</dd>\n<dt class=\"field-even\">submit (permissive dict, optional)</dt>\n<dd class=\"field-even\"><details class=\"summary-default-value\">\n<summary>Default Value:</summary><div class=\"highlight-javascript notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"p\">{}</span>\n</pre></div>\n</div>\n</details><details class=\"summary-config-schema\">\n<summary>Config Schema:</summary><dl class=\"field-list simple\">\n<dt class=\"field-odd\">deployMode (dagster.StringSource, optional)</dt>\n<dd class=\"field-odd\"><p>Application Properties: The deploy mode of Spark driver program, either \u201cclient\u201d or \u201ccluster\u201d, Which means to launch driver program locally (\u201cclient\u201d) or remotely (\u201ccluster\u201d) on one of the nodes inside the cluster.</p>\n</dd>\n<dt class=\"field-even\">pyFiles (dagster.StringSource, optional)</dt>\n<dd class=\"field-even\"><p>Runtime Environment: Comma-separated list of .zip, .egg, or .py files to place on the PYTHONPATH for Python apps. Globs are allowed.</p>\n</dd>\n</dl>\n</details></dd>\n<dt class=\"field-odd\">log (permissive dict, optional)</dt>\n<dd class=\"field-odd\"><details class=\"summary-default-value\">\n<summary>Default Value:</summary><div class=\"highlight-javascript notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"p\">{}</span>\n</pre></div>\n</div>\n</details><details class=\"summary-config-schema\">\n<summary>Config Schema:</summary><dl class=\"field-list simple\">\n<dt class=\"field-odd\">callerContext (dagster.StringSource, optional)</dt>\n<dd class=\"field-odd\"><p>Application Properties: Application information that will be written into Yarn RM log/HDFS audit log when running on Yarn/HDFS. Its length depends on the Hadoop configuration hadoop.caller.context.max.size. It should be concise, and typically can have up to 50 characters.</p>\n</dd>\n</dl>\n</details></dd>\n<dt class=\"field-even\">redaction (permissive dict, optional)</dt>\n<dd class=\"field-even\"><details class=\"summary-default-value\">\n<summary>Default Value:</summary><div class=\"highlight-javascript notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"p\">{}</span>\n</pre></div>\n</div>\n</details><details class=\"summary-config-schema\">\n<summary>Config Schema:</summary><dl class=\"field-list simple\">\n<dt class=\"field-odd\">regex (dagster.StringSource, optional)</dt>\n<dd class=\"field-odd\"><p>Runtime Environment: Regex to decide which Spark configuration properties and environment variables in driver and executor environments contain sensitive information. When this regex matches a property key or value, the value is redacted from the environment UI and various logs like YARN and event logs.</p>\n</dd>\n</dl>\n</details></dd>\n<dt class=\"field-even\">python (permissive dict, optional)</dt>\n<dd class=\"field-even\"><details class=\"summary-default-value\">\n<summary>Default Value:</summary><div class=\"highlight-javascript notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"p\">{</span>\n    <span class=\"s2\">&quot;profile&quot;</span><span class=\"o\">:</span> <span class=\"p\">{},</span>\n    <span class=\"s2\">&quot;worker&quot;</span><span class=\"o\">:</span> <span class=\"p\">{}</span>\n<span class=\"p\">}</span>\n</pre></div>\n</div>\n</details><details class=\"summary-config-schema\">\n<summary>Config Schema:</summary><dl class=\"field-list\">\n<dt class=\"field-odd\">profile (permissive dict, optional)</dt>\n<dd class=\"field-odd\"><details class=\"summary-default-value\">\n<summary>Default Value:</summary><div class=\"highlight-javascript notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"p\">{}</span>\n</pre></div>\n</div>\n</details><details class=\"summary-config-schema\">\n<summary>Config Schema:</summary><dl class=\"field-list simple\">\n<dt class=\"field-odd\">root (Bool, optional)</dt>\n<dd class=\"field-odd\"><p>Runtime Environment: Enable profiling in Python worker, the profile result will show up by sc.show_profiles(), or it will be displayed before the driver exits. It also can be dumped into disk by sc.dump_profiles(path). If some of the profile results had been displayed manually, they will not be displayed automatically before driver exiting. By default the pyspark.profiler.BasicProfiler will be used, but this can be overridden by passing a profiler class in as a parameter to the SparkContext constructor.</p>\n</dd>\n<dt class=\"field-even\">dump (dagster.StringSource, optional)</dt>\n<dd class=\"field-even\"><p>Runtime Environment: The directory which is used to dump the profile result before driver exiting. The results will be dumped as separated file for each RDD. They can be loaded by ptats.Stats(). If this is specified, the profile result will not be displayed automatically.</p>\n</dd>\n</dl>\n</details></dd>\n<dt class=\"field-odd\">worker (permissive dict, optional)</dt>\n<dd class=\"field-odd\"><details class=\"summary-default-value\">\n<summary>Default Value:</summary><div class=\"highlight-javascript notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"p\">{}</span>\n</pre></div>\n</div>\n</details><details class=\"summary-config-schema\">\n<summary>Config Schema:</summary><dl class=\"field-list simple\">\n<dt class=\"field-odd\">memory (dagster.StringSource, optional)</dt>\n<dd class=\"field-odd\"><p>Runtime Environment: Amount of memory to use per python worker process during aggregation, in the same format as JVM memory strings with a size unit suffix (\u201ck\u201d, \u201cm\u201d, \u201cg\u201d or \u201ct\u201d) (e.g. 512m, 2g). If the memory used during aggregation goes above this amount, it will spill the data into disks.</p>\n</dd>\n<dt class=\"field-even\">reuse (Bool, optional)</dt>\n<dd class=\"field-even\"><p>Runtime Environment: Reuse Python worker or not. If yes, it will use a fixed number of Python workers, does not need to fork() a Python process for every task. It will be very useful if there is large broadcast, then the broadcast will not be needed to transferred from JVM to Python worker for every task.</p>\n</dd>\n</dl>\n</details></dd>\n</dl>\n</details></dd>\n<dt class=\"field-odd\">files (permissive dict, optional)</dt>\n<dd class=\"field-odd\"><details class=\"summary-default-value\">\n<summary>Default Value:</summary><div class=\"highlight-javascript notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"p\">{}</span>\n</pre></div>\n</div>\n</details><details class=\"summary-config-schema\">\n<summary>Config Schema:</summary><dl class=\"field-list simple\">\n<dt class=\"field-odd\">root (dagster.StringSource, optional)</dt>\n<dd class=\"field-odd\"><p>Runtime Environment: Comma-separated list of files to be placed in the working directory of each executor. Globs are allowed.</p>\n</dd>\n<dt class=\"field-even\">fetchTimeout (dagster.StringSource, optional)</dt>\n<dd class=\"field-even\"><p>Execution Behavior: Communication timeout to use when fetching files added through SparkContext.addFile() from the driver.</p>\n</dd>\n<dt class=\"field-odd\">useFetchCache (Bool, optional)</dt>\n<dd class=\"field-odd\"><p>Execution Behavior: If set to true (default), file fetching will use a local cache that is shared by executors that belong to the same application, which can improve task launching performance when running many executors on the same host. If set to false, these caching optimizations will be disabled and all executors will fetch their own copies of files. This optimization may be disabled in order to use Spark local directories that reside on NFS filesystems (see SPARK-6313 for more details).</p>\n</dd>\n<dt class=\"field-even\">overwrite (Bool, optional)</dt>\n<dd class=\"field-even\"><p>Execution Behavior: Whether to overwrite files added through SparkContext.addFile() when the target file exists and its contents do not match those of the source.</p>\n</dd>\n<dt class=\"field-odd\">maxPartitionBytes (dagster.IntSource, optional)</dt>\n<dd class=\"field-odd\"><p>Execution Behavior: The maximum number of bytes to pack into a single partition when reading files.</p>\n</dd>\n<dt class=\"field-even\">openCostInBytes (dagster.IntSource, optional)</dt>\n<dd class=\"field-even\"><p>Execution Behavior: The estimated cost to open a file, measured by the number of bytes could be scanned at the same time. This is used when putting multiple files into a partition. It is better to overestimate, then the partitions with small files will be faster than partitions with bigger files.</p>\n</dd>\n</dl>\n</details></dd>\n<dt class=\"field-odd\">jars (permissive dict, optional)</dt>\n<dd class=\"field-odd\"><details class=\"summary-default-value\">\n<summary>Default Value:</summary><div class=\"highlight-javascript notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"p\">{}</span>\n</pre></div>\n</div>\n</details><details class=\"summary-config-schema\">\n<summary>Config Schema:</summary><dl class=\"field-list simple\">\n<dt class=\"field-odd\">root (dagster.StringSource, optional)</dt>\n<dd class=\"field-odd\"><p>Runtime Environment: Comma-separated list of jars to include on the driver and executor classpaths. Globs are allowed.</p>\n</dd>\n<dt class=\"field-even\">packages (dagster.StringSource, optional)</dt>\n<dd class=\"field-even\"><p>Runtime Environment: Comma-separated list of Maven coordinates of jars to include on the driver and executor classpaths. The coordinates should be groupId:artifactId:version. If spark.jars.ivySettings is given artifacts will be resolved according to the configuration in the file, otherwise artifacts will be searched for in the local maven repo, then maven central and finally any additional remote repositories given by the command-line option \u2013repositories. For more details, see Advanced Dependency Management.</p>\n</dd>\n<dt class=\"field-odd\">excludes (dagster.StringSource, optional)</dt>\n<dd class=\"field-odd\"><p>Runtime Environment: Comma-separated list of groupId:artifactId, to exclude while resolving the dependencies provided in spark.jars.packages to avoid dependency conflicts.</p>\n</dd>\n<dt class=\"field-even\">ivy (dagster.StringSource, optional)</dt>\n<dd class=\"field-even\"><p>Runtime Environment: Path to specify the Ivy user directory, used for the local Ivy cache and package files from spark.jars.packages. This will override the Ivy property ivy.default.ivy.user.dir which defaults to ~/.ivy2.</p>\n</dd>\n<dt class=\"field-odd\">ivySettings (dagster.StringSource, optional)</dt>\n<dd class=\"field-odd\"><p>Runtime Environment: Path to an Ivy settings file to customize resolution of jars specified using spark.jars.packages instead of the built-in defaults, such as maven central. Additional repositories given by the command-line option \u2013repositories or spark.jars.repositories will also be included. Useful for allowing Spark to resolve artifacts from behind a firewall e.g. via an in-house artifact server like Artifactory. Details on the settings file format can be found at <a class=\"reference external\" href=\"http://ant.apache.org/ivy/history/latest-milestone/settings.html\">http://ant.apache.org/ivy/history/latest-milestone/settings.html</a></p>\n</dd>\n<dt class=\"field-even\">repositories (dagster.StringSource, optional)</dt>\n<dd class=\"field-even\"><p>Runtime Environment: Comma-separated list of additional remote repositories to search for the maven coordinates given with \u2013packages or spark.jars.packages.</p>\n</dd>\n</dl>\n</details></dd>\n<dt class=\"field-odd\">pyspark (permissive dict, optional)</dt>\n<dd class=\"field-odd\"><details class=\"summary-default-value\">\n<summary>Default Value:</summary><div class=\"highlight-javascript notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"p\">{</span>\n    <span class=\"s2\">&quot;driver&quot;</span><span class=\"o\">:</span> <span class=\"p\">{}</span>\n<span class=\"p\">}</span>\n</pre></div>\n</div>\n</details><details class=\"summary-config-schema\">\n<summary>Config Schema:</summary><dl class=\"field-list\">\n<dt class=\"field-odd\">driver (permissive dict, optional)</dt>\n<dd class=\"field-odd\"><details class=\"summary-default-value\">\n<summary>Default Value:</summary><div class=\"highlight-javascript notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"p\">{}</span>\n</pre></div>\n</div>\n</details><details class=\"summary-config-schema\">\n<summary>Config Schema:</summary><dl class=\"field-list simple\">\n<dt class=\"field-odd\">python (dagster.StringSource, optional)</dt>\n<dd class=\"field-odd\"><p>Runtime Environment: Python binary executable to use for PySpark in driver. (default is spark.pyspark.python)</p>\n</dd>\n</dl>\n</details></dd>\n<dt class=\"field-even\">python (dagster.StringSource, optional)</dt>\n<dd class=\"field-even\"><p>Runtime Environment: Python binary executable to use for PySpark in both driver and executors.</p>\n</dd>\n</dl>\n</details></dd>\n<dt class=\"field-odd\">reducer (permissive dict, optional)</dt>\n<dd class=\"field-odd\"><details class=\"summary-default-value\">\n<summary>Default Value:</summary><div class=\"highlight-javascript notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"p\">{}</span>\n</pre></div>\n</div>\n</details><details class=\"summary-config-schema\">\n<summary>Config Schema:</summary><dl class=\"field-list simple\">\n<dt class=\"field-odd\">maxSizeInFlight (dagster.StringSource, optional)</dt>\n<dd class=\"field-odd\"><p>Shuffle Behavior: Maximum size of map outputs to fetch simultaneously from each reduce task, in MiB unless otherwise specified. Since each output requires us to create a buffer to receive it, this represents a fixed memory overhead per reduce task, so keep it small unless you have a large amount of memory.</p>\n</dd>\n<dt class=\"field-even\">maxReqsInFlight (dagster.IntSource, optional)</dt>\n<dd class=\"field-even\"><p>Shuffle Behavior: This configuration limits the number of remote requests to fetch blocks at any given point. When the number of hosts in the cluster increase, it might lead to very large number of inbound connections to one or more nodes, causing the workers to fail under load. By allowing it to limit the number of fetch requests, this scenario can be mitigated.</p>\n</dd>\n<dt class=\"field-odd\">maxBlocksInFlightPerAddress (dagster.IntSource, optional)</dt>\n<dd class=\"field-odd\"><p>Shuffle Behavior: This configuration limits the number of remote blocks being fetched per reduce task from a given host port. When a large number of blocks are being requested from a given address in a single fetch or simultaneously, this could crash the serving executor or Node Manager. This is especially useful to reduce the load on the Node Manager when external shuffle is enabled. You can mitigate this issue by setting it to a lower value.</p>\n</dd>\n</dl>\n</details></dd>\n<dt class=\"field-even\">maxRemoteBlockSizeFetchToMem (dagster.IntSource, optional)</dt>\n<dd class=\"field-even\"><p>Shuffle Behavior: The remote block will be fetched to disk when size of the block is above this threshold in bytes. This is to avoid a giant request that takes too much memory. By default, this is only enabled for blocks &gt; 2GB, as those cannot be fetched directly into memory, no matter what resources are available. But it can be turned down to a much lower value (eg. 200m) to avoid using too much memory on smaller blocks as well. Note this configuration will affect both shuffle fetch and block manager remote block fetch. For users who enabled external shuffle service, this feature can only be used when external shuffle service is newer than Spark 2.2.</p>\n</dd>\n<dt class=\"field-odd\">shuffle (permissive dict, optional)</dt>\n<dd class=\"field-odd\"><details class=\"summary-default-value\">\n<summary>Default Value:</summary><div class=\"highlight-javascript notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"p\">{</span>\n    <span class=\"s2\">&quot;file&quot;</span><span class=\"o\">:</span> <span class=\"p\">{},</span>\n    <span class=\"s2\">&quot;io&quot;</span><span class=\"o\">:</span> <span class=\"p\">{},</span>\n    <span class=\"s2\">&quot;service&quot;</span><span class=\"o\">:</span> <span class=\"p\">{</span>\n        <span class=\"s2\">&quot;index&quot;</span><span class=\"o\">:</span> <span class=\"p\">{</span>\n            <span class=\"s2\">&quot;cache&quot;</span><span class=\"o\">:</span> <span class=\"p\">{}</span>\n        <span class=\"p\">}</span>\n    <span class=\"p\">},</span>\n    <span class=\"s2\">&quot;sort&quot;</span><span class=\"o\">:</span> <span class=\"p\">{},</span>\n    <span class=\"s2\">&quot;spill&quot;</span><span class=\"o\">:</span> <span class=\"p\">{},</span>\n    <span class=\"s2\">&quot;registration&quot;</span><span class=\"o\">:</span> <span class=\"p\">{}</span>\n<span class=\"p\">}</span>\n</pre></div>\n</div>\n</details><details class=\"summary-config-schema\">\n<summary>Config Schema:</summary><dl class=\"field-list\">\n<dt class=\"field-odd\">compress (Bool, optional)</dt>\n<dd class=\"field-odd\"><p>Shuffle Behavior: Whether to compress map output files. Generally a good idea. Compression will use spark.io.compression.codec.</p>\n</dd>\n<dt class=\"field-even\">file (permissive dict, optional)</dt>\n<dd class=\"field-even\"><details class=\"summary-default-value\">\n<summary>Default Value:</summary><div class=\"highlight-javascript notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"p\">{}</span>\n</pre></div>\n</div>\n</details><details class=\"summary-config-schema\">\n<summary>Config Schema:</summary><dl class=\"field-list simple\">\n<dt class=\"field-odd\">buffer (dagster.StringSource, optional)</dt>\n<dd class=\"field-odd\"><p>Shuffle Behavior: Size of the in-memory buffer for each shuffle file output stream, in KiB unless otherwise specified. These buffers reduce the number of disk seeks and system calls made in creating intermediate shuffle files.</p>\n</dd>\n</dl>\n</details></dd>\n<dt class=\"field-even\">io (permissive dict, optional)</dt>\n<dd class=\"field-even\"><details class=\"summary-default-value\">\n<summary>Default Value:</summary><div class=\"highlight-javascript notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"p\">{}</span>\n</pre></div>\n</div>\n</details><details class=\"summary-config-schema\">\n<summary>Config Schema:</summary><dl class=\"field-list simple\">\n<dt class=\"field-odd\">maxRetries (dagster.IntSource, optional)</dt>\n<dd class=\"field-odd\"><p>Shuffle Behavior: (Netty only) Fetches that fail due to IO-related exceptions are automatically retried if this is set to a non-zero value. This retry logic helps stabilize large shuffles in the face of long GC pauses or transient network connectivity issues.</p>\n</dd>\n<dt class=\"field-even\">numConnectionsPerPeer (dagster.IntSource, optional)</dt>\n<dd class=\"field-even\"><p>Shuffle Behavior: (Netty only) Connections between hosts are reused in order to reduce connection buildup for large clusters. For clusters with many hard disks and few hosts, this may result in insufficient concurrency to saturate all disks, and so users may consider increasing this value.</p>\n</dd>\n<dt class=\"field-odd\">preferDirectBufs (Bool, optional)</dt>\n<dd class=\"field-odd\"><p>Shuffle Behavior: (Netty only) Off-heap buffers are used to reduce garbage collection during shuffle and cache block transfer. For environments where off-heap memory is tightly limited, users may wish to turn this off to force all allocations from Netty to be on-heap.</p>\n</dd>\n<dt class=\"field-even\">retryWait (dagster.StringSource, optional)</dt>\n<dd class=\"field-even\"><p>Shuffle Behavior: (Netty only) How long to wait between retries of fetches. The maximum delay caused by retrying is 15 seconds by default, calculated as maxRetries * retryWait.</p>\n</dd>\n</dl>\n</details></dd>\n<dt class=\"field-odd\">service (permissive dict, optional)</dt>\n<dd class=\"field-odd\"><details class=\"summary-default-value\">\n<summary>Default Value:</summary><div class=\"highlight-javascript notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"p\">{</span>\n    <span class=\"s2\">&quot;index&quot;</span><span class=\"o\">:</span> <span class=\"p\">{</span>\n        <span class=\"s2\">&quot;cache&quot;</span><span class=\"o\">:</span> <span class=\"p\">{}</span>\n    <span class=\"p\">}</span>\n<span class=\"p\">}</span>\n</pre></div>\n</div>\n</details><details class=\"summary-config-schema\">\n<summary>Config Schema:</summary><dl class=\"field-list\">\n<dt class=\"field-odd\">enabled (Bool, optional)</dt>\n<dd class=\"field-odd\"><p>Shuffle Behavior: Enables the external shuffle service. This service preserves the shuffle files written by executors so the executors can be safely removed. This must be enabled if spark.dynamicAllocation.enabled is \u201ctrue\u201d. The external shuffle service must be set up in order to enable it. See dynamic allocation configuration and setup documentation for more information.</p>\n</dd>\n<dt class=\"field-even\">port (dagster.IntSource, optional)</dt>\n<dd class=\"field-even\"><p>Shuffle Behavior: Port on which the external shuffle service will run.</p>\n</dd>\n<dt class=\"field-odd\">index (permissive dict, optional)</dt>\n<dd class=\"field-odd\"><details class=\"summary-default-value\">\n<summary>Default Value:</summary><div class=\"highlight-javascript notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"p\">{</span>\n    <span class=\"s2\">&quot;cache&quot;</span><span class=\"o\">:</span> <span class=\"p\">{}</span>\n<span class=\"p\">}</span>\n</pre></div>\n</div>\n</details><details class=\"summary-config-schema\">\n<summary>Config Schema:</summary><dl class=\"field-list\">\n<dt class=\"field-odd\">cache (permissive dict, optional)</dt>\n<dd class=\"field-odd\"><details class=\"summary-default-value\">\n<summary>Default Value:</summary><div class=\"highlight-javascript notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"p\">{}</span>\n</pre></div>\n</div>\n</details><details class=\"summary-config-schema\">\n<summary>Config Schema:</summary><dl class=\"field-list simple\">\n<dt class=\"field-odd\">size (dagster.StringSource, optional)</dt>\n<dd class=\"field-odd\"><p>Shuffle Behavior: Cache entries limited to the specified memory footprint in bytes.</p>\n</dd>\n</dl>\n</details></dd>\n</dl>\n</details></dd>\n</dl>\n</details></dd>\n<dt class=\"field-even\">maxChunksBeingTransferred (dagster.IntSource, optional)</dt>\n<dd class=\"field-even\"><p>Shuffle Behavior: The max number of chunks allowed to be transferred at the same time on shuffle service. Note that new incoming connections will be closed when the max number is hit. The client will retry according to the shuffle retry configs (see spark.shuffle.io.maxRetries and spark.shuffle.io.retryWait), if those limits are reached the task will fail with fetch failure.</p>\n</dd>\n<dt class=\"field-odd\">sort (permissive dict, optional)</dt>\n<dd class=\"field-odd\"><details class=\"summary-default-value\">\n<summary>Default Value:</summary><div class=\"highlight-javascript notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"p\">{}</span>\n</pre></div>\n</div>\n</details><details class=\"summary-config-schema\">\n<summary>Config Schema:</summary><dl class=\"field-list simple\">\n<dt class=\"field-odd\">bypassMergeThreshold (dagster.IntSource, optional)</dt>\n<dd class=\"field-odd\"><p>Shuffle Behavior: (Advanced) In the sort-based shuffle manager, avoid merge-sorting data if there is no map-side aggregation and there are at most this many reduce partitions.</p>\n</dd>\n</dl>\n</details></dd>\n<dt class=\"field-even\">spill (permissive dict, optional)</dt>\n<dd class=\"field-even\"><details class=\"summary-default-value\">\n<summary>Default Value:</summary><div class=\"highlight-javascript notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"p\">{}</span>\n</pre></div>\n</div>\n</details><details class=\"summary-config-schema\">\n<summary>Config Schema:</summary><dl class=\"field-list simple\">\n<dt class=\"field-odd\">compress (Bool, optional)</dt>\n<dd class=\"field-odd\"><p>Shuffle Behavior: Whether to compress data spilled during shuffles. Compression will use spark.io.compression.codec.</p>\n</dd>\n</dl>\n</details></dd>\n<dt class=\"field-even\">accurateBlockThreshold (dagster.IntSource, optional)</dt>\n<dd class=\"field-even\"><p>Shuffle Behavior: Threshold in bytes above which the size of shuffle blocks in HighlyCompressedMapStatus is accurately recorded. This helps to prevent OOM by avoiding underestimating shuffle block size when fetch shuffle blocks.</p>\n</dd>\n<dt class=\"field-odd\">registration (permissive dict, optional)</dt>\n<dd class=\"field-odd\"><details class=\"summary-default-value\">\n<summary>Default Value:</summary><div class=\"highlight-javascript notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"p\">{}</span>\n</pre></div>\n</div>\n</details><details class=\"summary-config-schema\">\n<summary>Config Schema:</summary><dl class=\"field-list simple\">\n<dt class=\"field-odd\">timeout (dagster.IntSource, optional)</dt>\n<dd class=\"field-odd\"><p>Shuffle Behavior: Timeout in milliseconds for registration to the external shuffle service.</p>\n</dd>\n<dt class=\"field-even\">maxAttempts (dagster.IntSource, optional)</dt>\n<dd class=\"field-even\"><p>Shuffle Behavior: When we fail to register to the external shuffle service, we will retry for maxAttempts times.</p>\n</dd>\n</dl>\n</details></dd>\n<dt class=\"field-odd\">memoryFraction (Float, optional)</dt>\n<dd class=\"field-odd\"><p>Memory Management: (deprecated) This is read only if spark.memory.useLegacyMode is enabled. Fraction of Java heap to use for aggregation and cogroups during shuffles. At any given time, the collective size of all in-memory maps used for shuffles is bounded by this limit, beyond which the contents will begin to spill to disk. If spills are often, consider increasing this value at the expense of spark.storage.memoryFraction.</p>\n</dd>\n</dl>\n</details></dd>\n<dt class=\"field-even\">eventLog (permissive dict, optional)</dt>\n<dd class=\"field-even\"><details class=\"summary-default-value\">\n<summary>Default Value:</summary><div class=\"highlight-javascript notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"p\">{</span>\n    <span class=\"s2\">&quot;logBlockUpdates&quot;</span><span class=\"o\">:</span> <span class=\"p\">{},</span>\n    <span class=\"s2\">&quot;longForm&quot;</span><span class=\"o\">:</span> <span class=\"p\">{},</span>\n    <span class=\"s2\">&quot;buffer&quot;</span><span class=\"o\">:</span> <span class=\"p\">{}</span>\n<span class=\"p\">}</span>\n</pre></div>\n</div>\n</details><details class=\"summary-config-schema\">\n<summary>Config Schema:</summary><dl class=\"field-list\">\n<dt class=\"field-odd\">logBlockUpdates (permissive dict, optional)</dt>\n<dd class=\"field-odd\"><details class=\"summary-default-value\">\n<summary>Default Value:</summary><div class=\"highlight-javascript notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"p\">{}</span>\n</pre></div>\n</div>\n</details><details class=\"summary-config-schema\">\n<summary>Config Schema:</summary><dl class=\"field-list simple\">\n<dt class=\"field-odd\">enabled (dagster.StringSource, optional)</dt>\n<dd class=\"field-odd\"><p>Spark UI: Whether to log events for every block update, if spark.eventLog.enabled is true. *Warning*: This will increase the size of the event log considerably.</p>\n</dd>\n</dl>\n</details></dd>\n<dt class=\"field-even\">longForm (permissive dict, optional)</dt>\n<dd class=\"field-even\"><details class=\"summary-default-value\">\n<summary>Default Value:</summary><div class=\"highlight-javascript notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"p\">{}</span>\n</pre></div>\n</div>\n</details><details class=\"summary-config-schema\">\n<summary>Config Schema:</summary><dl class=\"field-list simple\">\n<dt class=\"field-odd\">enabled (dagster.StringSource, optional)</dt>\n<dd class=\"field-odd\"><p>Spark UI: If true, use the long form of call sites in the event log. Otherwise use the short form.</p>\n</dd>\n</dl>\n</details></dd>\n<dt class=\"field-even\">compress (dagster.StringSource, optional)</dt>\n<dd class=\"field-even\"><p>Spark UI: Whether to compress logged events, if spark.eventLog.enabled is true. Compression will use spark.io.compression.codec.</p>\n</dd>\n<dt class=\"field-odd\">dir (dagster.StringSource, optional)</dt>\n<dd class=\"field-odd\"><p>Spark UI: Base directory in which Spark events are logged, if spark.eventLog.enabled is true. Within this base directory, Spark creates a sub-directory for each application, and logs the events specific to the application in this directory. Users may want to set this to a unified location like an HDFS directory so history files can be read by the history server.</p>\n</dd>\n<dt class=\"field-even\">enabled (dagster.StringSource, optional)</dt>\n<dd class=\"field-even\"><p>Spark UI: Whether to log Spark events, useful for reconstructing the Web UI after the application has finished.</p>\n</dd>\n<dt class=\"field-odd\">overwrite (dagster.StringSource, optional)</dt>\n<dd class=\"field-odd\"><p>Spark UI: Whether to overwrite any existing files.</p>\n</dd>\n<dt class=\"field-even\">buffer (permissive dict, optional)</dt>\n<dd class=\"field-even\"><details class=\"summary-default-value\">\n<summary>Default Value:</summary><div class=\"highlight-javascript notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"p\">{}</span>\n</pre></div>\n</div>\n</details><details class=\"summary-config-schema\">\n<summary>Config Schema:</summary><dl class=\"field-list simple\">\n<dt class=\"field-odd\">kb (dagster.StringSource, optional)</dt>\n<dd class=\"field-odd\"><p>Spark UI: Buffer size to use when writing to output streams, in KiB unless otherwise specified.</p>\n</dd>\n</dl>\n</details></dd>\n</dl>\n</details></dd>\n<dt class=\"field-even\">ui (permissive dict, optional)</dt>\n<dd class=\"field-even\"><details class=\"summary-default-value\">\n<summary>Default Value:</summary><div class=\"highlight-javascript notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"p\">{</span>\n    <span class=\"s2\">&quot;dagGraph&quot;</span><span class=\"o\">:</span> <span class=\"p\">{},</span>\n    <span class=\"s2\">&quot;liveUpdate&quot;</span><span class=\"o\">:</span> <span class=\"p\">{}</span>\n<span class=\"p\">}</span>\n</pre></div>\n</div>\n</details><details class=\"summary-config-schema\">\n<summary>Config Schema:</summary><dl class=\"field-list\">\n<dt class=\"field-odd\">dagGraph (permissive dict, optional)</dt>\n<dd class=\"field-odd\"><details class=\"summary-default-value\">\n<summary>Default Value:</summary><div class=\"highlight-javascript notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"p\">{}</span>\n</pre></div>\n</div>\n</details><details class=\"summary-config-schema\">\n<summary>Config Schema:</summary><dl class=\"field-list simple\">\n<dt class=\"field-odd\">retainedRootRDDs (dagster.StringSource, optional)</dt>\n<dd class=\"field-odd\"><p>Spark UI: How many DAG graph nodes the Spark UI and status APIs remember before garbage collecting.</p>\n</dd>\n</dl>\n</details></dd>\n<dt class=\"field-even\">enabled (dagster.StringSource, optional)</dt>\n<dd class=\"field-even\"><p>Spark UI: Whether to run the web UI for the Spark application.</p>\n</dd>\n<dt class=\"field-odd\">killEnabled (dagster.StringSource, optional)</dt>\n<dd class=\"field-odd\"><p>Spark UI: Allows jobs and stages to be killed from the web UI.</p>\n</dd>\n<dt class=\"field-even\">liveUpdate (permissive dict, optional)</dt>\n<dd class=\"field-even\"><details class=\"summary-default-value\">\n<summary>Default Value:</summary><div class=\"highlight-javascript notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"p\">{}</span>\n</pre></div>\n</div>\n</details><details class=\"summary-config-schema\">\n<summary>Config Schema:</summary><dl class=\"field-list simple\">\n<dt class=\"field-odd\">period (dagster.StringSource, optional)</dt>\n<dd class=\"field-odd\"><p>Spark UI: How often to update live entities. -1 means \u201cnever update\u201d when replaying applications, meaning only the last write will happen. For live applications, this avoids a few operations that we can live without when rapidly processing incoming task events.</p>\n</dd>\n</dl>\n</details></dd>\n<dt class=\"field-even\">port (dagster.StringSource, optional)</dt>\n<dd class=\"field-even\"><p>Spark UI: Port for your application\u2019s dashboard, which shows memory and workload data.</p>\n</dd>\n<dt class=\"field-odd\">retainedJobs (dagster.StringSource, optional)</dt>\n<dd class=\"field-odd\"><p>Spark UI: How many jobs the Spark UI and status APIs remember before garbage collecting. This is a target maximum, and fewer elements may be retained in some circumstances.</p>\n</dd>\n<dt class=\"field-even\">retainedStages (dagster.StringSource, optional)</dt>\n<dd class=\"field-even\"><p>Spark UI: How many stages the Spark UI and status APIs remember before garbage collecting. This is a target maximum, and fewer elements may be retained in some circumstances.</p>\n</dd>\n<dt class=\"field-odd\">retainedTasks (dagster.StringSource, optional)</dt>\n<dd class=\"field-odd\"><p>Spark UI: How many tasks the Spark UI and status APIs remember before garbage collecting. This is a target maximum, and fewer elements may be retained in some circumstances.</p>\n</dd>\n<dt class=\"field-even\">reverseProxy (dagster.StringSource, optional)</dt>\n<dd class=\"field-even\"><p>Spark UI: Enable running Spark Master as reverse proxy for worker and application UIs. In this mode, Spark master will reverse proxy the worker and application UIs to enable access without requiring direct access to their hosts. Use it with caution, as worker and application UI will not be accessible directly, you will only be able to access them through spark master/proxy public URL. This setting affects all the workers and application UIs running in the cluster and must be set on all the workers, drivers and masters.</p>\n</dd>\n<dt class=\"field-odd\">reverseProxyUrl (dagster.StringSource, optional)</dt>\n<dd class=\"field-odd\"><p>Spark UI: This is the URL where your proxy is running. This URL is for proxy which is running in front of Spark Master. This is useful when running proxy for authentication e.g. OAuth proxy. Make sure this is a complete URL including scheme (http/https) and port to reach your proxy.</p>\n</dd>\n<dt class=\"field-even\">showConsoleProgress (dagster.StringSource, optional)</dt>\n<dd class=\"field-even\"><p>Spark UI: Show the progress bar in the console. The progress bar shows the progress of stages that run for longer than 500ms. If multiple stages run at the same time, multiple progress bars will be displayed on the same line.</p>\n</dd>\n<dt class=\"field-odd\">retainedDeadExecutors (dagster.StringSource, optional)</dt>\n<dd class=\"field-odd\"><p>Spark UI: How many dead executors the Spark UI and status APIs remember before garbage collecting.</p>\n</dd>\n<dt class=\"field-even\">filters (dagster.StringSource, optional)</dt>\n<dd class=\"field-even\"><p>Spark UI: Comma separated list of filter class names to apply to the Spark Web UI. The filter should be a standard javax servlet Filter. Filter parameters can also be specified in the configuration, by setting config entries of the form spark.&lt;class name of filter&gt;.param.&lt;param name&gt;=&lt;value&gt; For example: spark.ui.filters=com.test.filter1 spark.com.test.filter1.param.name1=foo spark.com.test.filter1.param.name2=bar</p>\n</dd>\n</dl>\n</details></dd>\n<dt class=\"field-odd\">worker (permissive dict, optional)</dt>\n<dd class=\"field-odd\"><details class=\"summary-default-value\">\n<summary>Default Value:</summary><div class=\"highlight-javascript notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"p\">{</span>\n    <span class=\"s2\">&quot;ui&quot;</span><span class=\"o\">:</span> <span class=\"p\">{}</span>\n<span class=\"p\">}</span>\n</pre></div>\n</div>\n</details><details class=\"summary-config-schema\">\n<summary>Config Schema:</summary><dl class=\"field-list\">\n<dt class=\"field-odd\">ui (permissive dict, optional)</dt>\n<dd class=\"field-odd\"><details class=\"summary-default-value\">\n<summary>Default Value:</summary><div class=\"highlight-javascript notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"p\">{}</span>\n</pre></div>\n</div>\n</details><details class=\"summary-config-schema\">\n<summary>Config Schema:</summary><dl class=\"field-list simple\">\n<dt class=\"field-odd\">retainedExecutors (dagster.StringSource, optional)</dt>\n<dd class=\"field-odd\"><p>Spark UI: How many finished executors the Spark UI and status APIs remember before garbage collecting.</p>\n</dd>\n<dt class=\"field-even\">retainedDrivers (dagster.StringSource, optional)</dt>\n<dd class=\"field-even\"><p>Spark UI: How many finished drivers the Spark UI and status APIs remember before garbage collecting.</p>\n</dd>\n</dl>\n</details></dd>\n</dl>\n</details></dd>\n<dt class=\"field-odd\">sql (permissive dict, optional)</dt>\n<dd class=\"field-odd\"><details class=\"summary-default-value\">\n<summary>Default Value:</summary><div class=\"highlight-javascript notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"p\">{</span>\n    <span class=\"s2\">&quot;ui&quot;</span><span class=\"o\">:</span> <span class=\"p\">{}</span>\n<span class=\"p\">}</span>\n</pre></div>\n</div>\n</details><details class=\"summary-config-schema\">\n<summary>Config Schema:</summary><dl class=\"field-list\">\n<dt class=\"field-odd\">ui (permissive dict, optional)</dt>\n<dd class=\"field-odd\"><details class=\"summary-default-value\">\n<summary>Default Value:</summary><div class=\"highlight-javascript notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"p\">{}</span>\n</pre></div>\n</div>\n</details><details class=\"summary-config-schema\">\n<summary>Config Schema:</summary><dl class=\"field-list simple\">\n<dt class=\"field-odd\">retainedExecutions (dagster.StringSource, optional)</dt>\n<dd class=\"field-odd\"><p>Spark UI: How many finished executions the Spark UI and status APIs remember before garbage collecting.</p>\n</dd>\n</dl>\n</details></dd>\n</dl>\n</details></dd>\n<dt class=\"field-even\">streaming (permissive dict, optional)</dt>\n<dd class=\"field-even\"><details class=\"summary-default-value\">\n<summary>Default Value:</summary><div class=\"highlight-javascript notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"p\">{</span>\n    <span class=\"s2\">&quot;ui&quot;</span><span class=\"o\">:</span> <span class=\"p\">{},</span>\n    <span class=\"s2\">&quot;backpressure&quot;</span><span class=\"o\">:</span> <span class=\"p\">{},</span>\n    <span class=\"s2\">&quot;receiver&quot;</span><span class=\"o\">:</span> <span class=\"p\">{</span>\n        <span class=\"s2\">&quot;writeAheadLog&quot;</span><span class=\"o\">:</span> <span class=\"p\">{}</span>\n    <span class=\"p\">},</span>\n    <span class=\"s2\">&quot;kafka&quot;</span><span class=\"o\">:</span> <span class=\"p\">{},</span>\n    <span class=\"s2\">&quot;driver&quot;</span><span class=\"o\">:</span> <span class=\"p\">{</span>\n        <span class=\"s2\">&quot;writeAheadLog&quot;</span><span class=\"o\">:</span> <span class=\"p\">{}</span>\n    <span class=\"p\">}</span>\n<span class=\"p\">}</span>\n</pre></div>\n</div>\n</details><details class=\"summary-config-schema\">\n<summary>Config Schema:</summary><dl class=\"field-list\">\n<dt class=\"field-odd\">ui (permissive dict, optional)</dt>\n<dd class=\"field-odd\"><details class=\"summary-default-value\">\n<summary>Default Value:</summary><div class=\"highlight-javascript notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"p\">{}</span>\n</pre></div>\n</div>\n</details><details class=\"summary-config-schema\">\n<summary>Config Schema:</summary><dl class=\"field-list simple\">\n<dt class=\"field-odd\">retainedBatches (dagster.StringSource, optional)</dt>\n<dd class=\"field-odd\"><p>Spark Streaming: How many batches the Spark Streaming UI and status APIs remember before garbage collecting.</p>\n</dd>\n</dl>\n</details></dd>\n<dt class=\"field-even\">backpressure (permissive dict, optional)</dt>\n<dd class=\"field-even\"><details class=\"summary-default-value\">\n<summary>Default Value:</summary><div class=\"highlight-javascript notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"p\">{}</span>\n</pre></div>\n</div>\n</details><details class=\"summary-config-schema\">\n<summary>Config Schema:</summary><dl class=\"field-list simple\">\n<dt class=\"field-odd\">enabled (dagster.StringSource, optional)</dt>\n<dd class=\"field-odd\"><p>Spark Streaming: Enables or disables Spark Streaming\u2019s internal backpressure mechanism (since 1.5). This enables the Spark Streaming to control the receiving rate based on the current batch scheduling delays and processing times so that the system receives only as fast as the system can process. Internally, this dynamically sets the maximum receiving rate of receivers. This rate is upper bounded by the values spark.streaming.receiver.maxRate and spark.streaming.kafka.maxRatePerPartition if they are set (see below).</p>\n</dd>\n<dt class=\"field-even\">initialRate (dagster.StringSource, optional)</dt>\n<dd class=\"field-even\"><p>Spark Streaming: This is the initial maximum receiving rate at which each receiver will receive data for the first batch when the backpressure mechanism is enabled.</p>\n</dd>\n</dl>\n</details></dd>\n<dt class=\"field-odd\">blockInterval (dagster.StringSource, optional)</dt>\n<dd class=\"field-odd\"><p>Spark Streaming: Interval at which data received by Spark Streaming receivers is chunked into blocks of data before storing them in Spark. Minimum recommended - 50 ms. See the performance tuning section in the Spark Streaming programing guide for more details.</p>\n</dd>\n<dt class=\"field-even\">receiver (permissive dict, optional)</dt>\n<dd class=\"field-even\"><details class=\"summary-default-value\">\n<summary>Default Value:</summary><div class=\"highlight-javascript notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"p\">{</span>\n    <span class=\"s2\">&quot;writeAheadLog&quot;</span><span class=\"o\">:</span> <span class=\"p\">{}</span>\n<span class=\"p\">}</span>\n</pre></div>\n</div>\n</details><details class=\"summary-config-schema\">\n<summary>Config Schema:</summary><dl class=\"field-list\">\n<dt class=\"field-odd\">maxRate (dagster.StringSource, optional)</dt>\n<dd class=\"field-odd\"><p>Spark Streaming: Maximum rate (number of records per second) at which each receiver will receive data. Effectively, each stream will consume at most this number of records per second. Setting this configuration to 0 or a negative number will put no limit on the rate. See the deployment guide in the Spark Streaming programing guide for mode details.</p>\n</dd>\n<dt class=\"field-even\">writeAheadLog (permissive dict, optional)</dt>\n<dd class=\"field-even\"><details class=\"summary-default-value\">\n<summary>Default Value:</summary><div class=\"highlight-javascript notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"p\">{}</span>\n</pre></div>\n</div>\n</details><details class=\"summary-config-schema\">\n<summary>Config Schema:</summary><dl class=\"field-list simple\">\n<dt class=\"field-odd\">enable (dagster.StringSource, optional)</dt>\n<dd class=\"field-odd\"><p>Spark Streaming: Enable write-ahead logs for receivers. All the input data received through receivers will be saved to write-ahead logs that will allow it to be recovered after driver failures. See the deployment guide in the Spark Streaming programing guide for more details.</p>\n</dd>\n<dt class=\"field-even\">closeFileAfterWrite (dagster.StringSource, optional)</dt>\n<dd class=\"field-even\"><p>Spark Streaming: Whether to close the file after writing a write-ahead log record on the receivers. Set this to \u2018true\u2019 when you want to use S3 (or any file system that does not support flushing) for the data WAL on the receivers.</p>\n</dd>\n</dl>\n</details></dd>\n</dl>\n</details></dd>\n<dt class=\"field-odd\">unpersist (dagster.StringSource, optional)</dt>\n<dd class=\"field-odd\"><p>Spark Streaming: Force RDDs generated and persisted by Spark Streaming to be automatically unpersisted from Spark\u2019s memory. The raw input data received by Spark Streaming is also automatically cleared. Setting this to false will allow the raw data and persisted RDDs to be accessible outside the streaming application as they will not be cleared automatically. But it comes at the cost of higher memory usage in Spark.</p>\n</dd>\n<dt class=\"field-even\">stopGracefullyOnShutdown (dagster.StringSource, optional)</dt>\n<dd class=\"field-even\"><p>Spark Streaming: If true, Spark shuts down the StreamingContext gracefully on JVM shutdown rather than immediately.</p>\n</dd>\n<dt class=\"field-odd\">kafka (permissive dict, optional)</dt>\n<dd class=\"field-odd\"><details class=\"summary-default-value\">\n<summary>Default Value:</summary><div class=\"highlight-javascript notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"p\">{}</span>\n</pre></div>\n</div>\n</details><details class=\"summary-config-schema\">\n<summary>Config Schema:</summary><dl class=\"field-list simple\">\n<dt class=\"field-odd\">maxRatePerPartition (dagster.StringSource, optional)</dt>\n<dd class=\"field-odd\"><p>Spark Streaming: Maximum rate (number of records per second) at which data will be read from each Kafka partition when using the new Kafka direct stream API. See the Kafka Integration guide for more details.</p>\n</dd>\n<dt class=\"field-even\">minRatePerPartition (dagster.StringSource, optional)</dt>\n<dd class=\"field-even\"><p>Spark Streaming: Minimum rate (number of records per second) at which data will be read from each Kafka partition when using the new Kafka direct stream API.</p>\n</dd>\n<dt class=\"field-odd\">maxRetries (dagster.StringSource, optional)</dt>\n<dd class=\"field-odd\"><p>Spark Streaming: Maximum number of consecutive retries the driver will make in order to find the latest offsets on the leader of each partition (a default value of 1 means that the driver will make a maximum of 2 attempts). Only applies to the new Kafka direct stream API.</p>\n</dd>\n</dl>\n</details></dd>\n<dt class=\"field-even\">driver (permissive dict, optional)</dt>\n<dd class=\"field-even\"><details class=\"summary-default-value\">\n<summary>Default Value:</summary><div class=\"highlight-javascript notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"p\">{</span>\n    <span class=\"s2\">&quot;writeAheadLog&quot;</span><span class=\"o\">:</span> <span class=\"p\">{}</span>\n<span class=\"p\">}</span>\n</pre></div>\n</div>\n</details><details class=\"summary-config-schema\">\n<summary>Config Schema:</summary><dl class=\"field-list\">\n<dt class=\"field-odd\">writeAheadLog (permissive dict, optional)</dt>\n<dd class=\"field-odd\"><details class=\"summary-default-value\">\n<summary>Default Value:</summary><div class=\"highlight-javascript notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"p\">{}</span>\n</pre></div>\n</div>\n</details><details class=\"summary-config-schema\">\n<summary>Config Schema:</summary><dl class=\"field-list simple\">\n<dt class=\"field-odd\">closeFileAfterWrite (dagster.StringSource, optional)</dt>\n<dd class=\"field-odd\"><p>Spark Streaming: Whether to close the file after writing a write-ahead log record on the driver. Set this to \u2018true\u2019 when you want to use S3 (or any file system that does not support flushing) for the metadata WAL on the driver.</p>\n</dd>\n</dl>\n</details></dd>\n</dl>\n</details></dd>\n</dl>\n</details></dd>\n<dt class=\"field-even\">broadcast (permissive dict, optional)</dt>\n<dd class=\"field-even\"><details class=\"summary-default-value\">\n<summary>Default Value:</summary><div class=\"highlight-javascript notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"p\">{}</span>\n</pre></div>\n</div>\n</details><details class=\"summary-config-schema\">\n<summary>Config Schema:</summary><dl class=\"field-list simple\">\n<dt class=\"field-odd\">compress (dagster.StringSource, optional)</dt>\n<dd class=\"field-odd\"><p>Compression and Serialization: Whether to compress broadcast variables before sending them. Generally a good idea. Compression will use spark.io.compression.codec.</p>\n</dd>\n<dt class=\"field-even\">blockSize (dagster.StringSource, optional)</dt>\n<dd class=\"field-even\"><p>Execution Behavior: Size of each piece of a block for TorrentBroadcastFactory, in KiB unless otherwise specified. Too large a value decreases parallelism during broadcast (makes it slower); however, if it is too small, BlockManager might take a performance hit.</p>\n</dd>\n<dt class=\"field-odd\">checksum (dagster.StringSource, optional)</dt>\n<dd class=\"field-odd\"><p>Execution Behavior: Whether to enable checksum for broadcast. If enabled, broadcasts will include a checksum, which can help detect corrupted blocks, at the cost of computing and sending a little more data. It\u2019s possible to disable it if the network has other mechanisms to guarantee data won\u2019t be corrupted during broadcast.</p>\n</dd>\n</dl>\n</details></dd>\n<dt class=\"field-even\">io (permissive dict, optional)</dt>\n<dd class=\"field-even\"><details class=\"summary-default-value\">\n<summary>Default Value:</summary><div class=\"highlight-javascript notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"p\">{</span>\n    <span class=\"s2\">&quot;compression&quot;</span><span class=\"o\">:</span> <span class=\"p\">{</span>\n        <span class=\"s2\">&quot;lz4&quot;</span><span class=\"o\">:</span> <span class=\"p\">{},</span>\n        <span class=\"s2\">&quot;snappy&quot;</span><span class=\"o\">:</span> <span class=\"p\">{},</span>\n        <span class=\"s2\">&quot;zstd&quot;</span><span class=\"o\">:</span> <span class=\"p\">{}</span>\n    <span class=\"p\">}</span>\n<span class=\"p\">}</span>\n</pre></div>\n</div>\n</details><details class=\"summary-config-schema\">\n<summary>Config Schema:</summary><dl class=\"field-list\">\n<dt class=\"field-odd\">compression (permissive dict, optional)</dt>\n<dd class=\"field-odd\"><details class=\"summary-default-value\">\n<summary>Default Value:</summary><div class=\"highlight-javascript notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"p\">{</span>\n    <span class=\"s2\">&quot;lz4&quot;</span><span class=\"o\">:</span> <span class=\"p\">{},</span>\n    <span class=\"s2\">&quot;snappy&quot;</span><span class=\"o\">:</span> <span class=\"p\">{},</span>\n    <span class=\"s2\">&quot;zstd&quot;</span><span class=\"o\">:</span> <span class=\"p\">{}</span>\n<span class=\"p\">}</span>\n</pre></div>\n</div>\n</details><details class=\"summary-config-schema\">\n<summary>Config Schema:</summary><dl class=\"field-list\">\n<dt class=\"field-odd\">codec (dagster.StringSource, optional)</dt>\n<dd class=\"field-odd\"><p>Compression and Serialization: The codec used to compress internal data such as RDD partitions, event log, broadcast variables and shuffle outputs. By default, Spark provides four codecs: lz4, lzf, snappy, and zstd. You can also use fully qualified class names to specify the codec, e.g. org.apache.spark.io.LZ4CompressionCodec, org.apache.spark.io.LZFCompressionCodec, org.apache.spark.io.SnappyCompressionCodec, and org.apache.spark.io.ZStdCompressionCodec.</p>\n</dd>\n<dt class=\"field-even\">lz4 (permissive dict, optional)</dt>\n<dd class=\"field-even\"><details class=\"summary-default-value\">\n<summary>Default Value:</summary><div class=\"highlight-javascript notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"p\">{}</span>\n</pre></div>\n</div>\n</details><details class=\"summary-config-schema\">\n<summary>Config Schema:</summary><dl class=\"field-list simple\">\n<dt class=\"field-odd\">blockSize (dagster.StringSource, optional)</dt>\n<dd class=\"field-odd\"><p>Compression and Serialization: Block size in bytes used in LZ4 compression, in the case when LZ4 compression codec is used. Lowering this block size will also lower shuffle memory usage when LZ4 is used.</p>\n</dd>\n</dl>\n</details></dd>\n<dt class=\"field-even\">snappy (permissive dict, optional)</dt>\n<dd class=\"field-even\"><details class=\"summary-default-value\">\n<summary>Default Value:</summary><div class=\"highlight-javascript notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"p\">{}</span>\n</pre></div>\n</div>\n</details><details class=\"summary-config-schema\">\n<summary>Config Schema:</summary><dl class=\"field-list simple\">\n<dt class=\"field-odd\">blockSize (dagster.StringSource, optional)</dt>\n<dd class=\"field-odd\"><p>Compression and Serialization: Block size in bytes used in Snappy compression, in the case when Snappy compression codec is used. Lowering this block size will also lower shuffle memory usage when Snappy is used.</p>\n</dd>\n</dl>\n</details></dd>\n<dt class=\"field-even\">zstd (permissive dict, optional)</dt>\n<dd class=\"field-even\"><details class=\"summary-default-value\">\n<summary>Default Value:</summary><div class=\"highlight-javascript notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"p\">{}</span>\n</pre></div>\n</div>\n</details><details class=\"summary-config-schema\">\n<summary>Config Schema:</summary><dl class=\"field-list simple\">\n<dt class=\"field-odd\">level (dagster.StringSource, optional)</dt>\n<dd class=\"field-odd\"><p>Compression and Serialization: Compression level for Zstd compression codec. Increasing the compression level will result in better compression at the expense of more CPU and memory.</p>\n</dd>\n<dt class=\"field-even\">bufferSize (dagster.StringSource, optional)</dt>\n<dd class=\"field-even\"><p>Compression and Serialization: Buffer size in bytes used in Zstd compression, in the case when Zstd compression codec is used. Lowering this size will lower the shuffle memory usage when Zstd is used, but it might increase the compression cost because of excessive JNI call overhead.</p>\n</dd>\n</dl>\n</details></dd>\n</dl>\n</details></dd>\n</dl>\n</details></dd>\n<dt class=\"field-odd\">kryo (permissive dict, optional)</dt>\n<dd class=\"field-odd\"><details class=\"summary-default-value\">\n<summary>Default Value:</summary><div class=\"highlight-javascript notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"p\">{}</span>\n</pre></div>\n</div>\n</details><details class=\"summary-config-schema\">\n<summary>Config Schema:</summary><dl class=\"field-list simple\">\n<dt class=\"field-odd\">classesToRegister (dagster.StringSource, optional)</dt>\n<dd class=\"field-odd\"><p>Compression and Serialization: If you use Kryo serialization, give a comma-separated list of custom class names to register with Kryo. See the tuning guide for more details.</p>\n</dd>\n<dt class=\"field-even\">referenceTracking (dagster.StringSource, optional)</dt>\n<dd class=\"field-even\"><p>Compression and Serialization: Whether to track references to the same object when serializing data with Kryo, which is necessary if your object graphs have loops and useful for efficiency if they contain multiple copies of the same object. Can be disabled to improve performance if you know this is not the case.</p>\n</dd>\n<dt class=\"field-odd\">registrationRequired (dagster.StringSource, optional)</dt>\n<dd class=\"field-odd\"><p>Compression and Serialization: Whether to require registration with Kryo. If set to \u2018true\u2019, Kryo will throw an exception if an unregistered class is serialized. If set to false (the default), Kryo will write unregistered class names along with each object. Writing class names can cause significant performance overhead, so enabling this option can enforce strictly that a user has not omitted classes from registration.</p>\n</dd>\n<dt class=\"field-even\">registrator (dagster.StringSource, optional)</dt>\n<dd class=\"field-even\"><p>Compression and Serialization: If you use Kryo serialization, give a comma-separated list of classes that register your custom classes with Kryo. This property is useful if you need to register your classes in a custom way, e.g. to specify a custom field serializer. Otherwise spark.kryo.classesToRegister is simpler. It should be set to classes that extend KryoRegistrator. See the tuning guide for more details.</p>\n</dd>\n<dt class=\"field-odd\">unsafe (dagster.StringSource, optional)</dt>\n<dd class=\"field-odd\"><p>Compression and Serialization: Whether to use unsafe based Kryo serializer. Can be substantially faster by using Unsafe Based IO.</p>\n</dd>\n</dl>\n</details></dd>\n<dt class=\"field-even\">kryoserializer (permissive dict, optional)</dt>\n<dd class=\"field-even\"><details class=\"summary-default-value\">\n<summary>Default Value:</summary><div class=\"highlight-javascript notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"p\">{</span>\n    <span class=\"s2\">&quot;buffer&quot;</span><span class=\"o\">:</span> <span class=\"p\">{}</span>\n<span class=\"p\">}</span>\n</pre></div>\n</div>\n</details><details class=\"summary-config-schema\">\n<summary>Config Schema:</summary><dl class=\"field-list\">\n<dt class=\"field-odd\">buffer (permissive dict, optional)</dt>\n<dd class=\"field-odd\"><details class=\"summary-default-value\">\n<summary>Default Value:</summary><div class=\"highlight-javascript notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"p\">{}</span>\n</pre></div>\n</div>\n</details><details class=\"summary-config-schema\">\n<summary>Config Schema:</summary><dl class=\"field-list simple\">\n<dt class=\"field-odd\">root (dagster.StringSource, optional)</dt>\n<dd class=\"field-odd\"><p>Compression and Serialization: Initial size of Kryo\u2019s serialization buffer, in KiB unless otherwise specified. Note that there will be one buffer per core on each worker. This buffer will grow up to spark.kryoserializer.buffer.max if needed.</p>\n</dd>\n<dt class=\"field-even\">max (dagster.StringSource, optional)</dt>\n<dd class=\"field-even\"><p>Compression and Serialization: Maximum allowable size of Kryo serialization buffer, in MiB unless otherwise specified. This must be larger than any object you attempt to serialize and must be less than 2048m. Increase this if you get a \u201cbuffer limit exceeded\u201d exception inside Kryo.</p>\n</dd>\n</dl>\n</details></dd>\n</dl>\n</details></dd>\n<dt class=\"field-odd\">rdd (permissive dict, optional)</dt>\n<dd class=\"field-odd\"><details class=\"summary-default-value\">\n<summary>Default Value:</summary><div class=\"highlight-javascript notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"p\">{}</span>\n</pre></div>\n</div>\n</details><details class=\"summary-config-schema\">\n<summary>Config Schema:</summary><dl class=\"field-list simple\">\n<dt class=\"field-odd\">compress (dagster.StringSource, optional)</dt>\n<dd class=\"field-odd\"><p>Compression and Serialization: Whether to compress serialized RDD partitions (e.g. for StorageLevel.MEMORY_ONLY_SER in Java and Scala or StorageLevel.MEMORY_ONLY in Python). Can save substantial space at the cost of some extra CPU time. Compression will use spark.io.compression.codec.</p>\n</dd>\n</dl>\n</details></dd>\n<dt class=\"field-even\">serializer (permissive dict, optional)</dt>\n<dd class=\"field-even\"><details class=\"summary-default-value\">\n<summary>Default Value:</summary><div class=\"highlight-javascript notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"p\">{}</span>\n</pre></div>\n</div>\n</details><details class=\"summary-config-schema\">\n<summary>Config Schema:</summary><dl class=\"field-list simple\">\n<dt class=\"field-odd\">root (dagster.StringSource, optional)</dt>\n<dd class=\"field-odd\"><p>Compression and Serialization: Class to use for serializing objects that will be sent over the network or need to be cached in serialized form. The default of Java serialization works with any Serializable Java object but is quite slow, so we recommend using org.apache.spark.serializer.KryoSerializer and configuring Kryo serialization when speed is necessary. Can be any subclass of org.apache.spark.Serializer.</p>\n</dd>\n<dt class=\"field-even\">objectStreamReset (dagster.StringSource, optional)</dt>\n<dd class=\"field-even\"><p>Compression and Serialization: When serializing using org.apache.spark.serializer.JavaSerializer, the serializer caches objects to prevent writing redundant data, however that stops garbage collection of those objects. By calling \u2018reset\u2019 you flush that info from the serializer, and allow old objects to be collected. To turn off this periodic reset set it to -1. By default it will reset the serializer every 100 objects.</p>\n</dd>\n</dl>\n</details></dd>\n<dt class=\"field-odd\">memory (permissive dict, optional)</dt>\n<dd class=\"field-odd\"><details class=\"summary-default-value\">\n<summary>Default Value:</summary><div class=\"highlight-javascript notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"p\">{</span>\n    <span class=\"s2\">&quot;offHeap&quot;</span><span class=\"o\">:</span> <span class=\"p\">{}</span>\n<span class=\"p\">}</span>\n</pre></div>\n</div>\n</details><details class=\"summary-config-schema\">\n<summary>Config Schema:</summary><dl class=\"field-list\">\n<dt class=\"field-odd\">fraction (Float, optional)</dt>\n<dd class=\"field-odd\"><p>Memory Management: Fraction of (heap space - 300MB) used for execution and storage. The lower this is, the more frequently spills and cached data eviction occur. The purpose of this config is to set aside memory for internal metadata, user data structures, and imprecise size estimation in the case of sparse, unusually large records. Leaving this at the default value is recommended. For more detail, including important information about correctly tuning JVM garbage collection when increasing this value, see this description.</p>\n</dd>\n<dt class=\"field-even\">storageFraction (Float, optional)</dt>\n<dd class=\"field-even\"><p>Memory Management: Amount of storage memory immune to eviction, expressed as a fraction of the size of the region set aside by spark.memory.fraction. The higher this is, the less working memory may be available to execution and tasks may spill to disk more often. Leaving this at the default value is recommended. For more detail, see this description.</p>\n</dd>\n<dt class=\"field-odd\">offHeap (permissive dict, optional)</dt>\n<dd class=\"field-odd\"><details class=\"summary-default-value\">\n<summary>Default Value:</summary><div class=\"highlight-javascript notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"p\">{}</span>\n</pre></div>\n</div>\n</details><details class=\"summary-config-schema\">\n<summary>Config Schema:</summary><dl class=\"field-list simple\">\n<dt class=\"field-odd\">enabled (Bool, optional)</dt>\n<dd class=\"field-odd\"><p>Memory Management: If true, Spark will attempt to use off-heap memory for certain operations. If off-heap memory use is enabled, then spark.memory.offHeap.size must be positive.</p>\n</dd>\n<dt class=\"field-even\">size (dagster.IntSource, optional)</dt>\n<dd class=\"field-even\"><p>Memory Management: The absolute amount of memory in bytes which can be used for off-heap allocation. This setting has no impact on heap memory usage, so if your executors\u2019 total memory consumption must fit within some hard limit then be sure to shrink your JVM heap size accordingly. This must be set to a positive value when spark.memory.offHeap.enabled=true.</p>\n</dd>\n</dl>\n</details></dd>\n<dt class=\"field-odd\">useLegacyMode (Bool, optional)</dt>\n<dd class=\"field-odd\"><p>Memory Management: Whether to enable the legacy memory management mode used in Spark 1.5 and before. The legacy mode rigidly partitions the heap space into fixed-size regions, potentially leading to excessive spilling if the application was not tuned. The following deprecated memory fraction configurations are not read unless this is enabled: spark.shuffle.memoryFraction spark.storage.memoryFraction spark.storage.unrollFraction</p>\n</dd>\n</dl>\n</details></dd>\n<dt class=\"field-even\">storage (permissive dict, optional)</dt>\n<dd class=\"field-even\"><details class=\"summary-default-value\">\n<summary>Default Value:</summary><div class=\"highlight-javascript notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"p\">{</span>\n    <span class=\"s2\">&quot;replication&quot;</span><span class=\"o\">:</span> <span class=\"p\">{}</span>\n<span class=\"p\">}</span>\n</pre></div>\n</div>\n</details><details class=\"summary-config-schema\">\n<summary>Config Schema:</summary><dl class=\"field-list\">\n<dt class=\"field-odd\">memoryFraction (Float, optional)</dt>\n<dd class=\"field-odd\"><p>Memory Management: (deprecated) This is read only if spark.memory.useLegacyMode is enabled. Fraction of Java heap to use for Spark\u2019s memory cache. This should not be larger than the \u201cold\u201d generation of objects in the JVM, which by default is given 0.6 of the heap, but you can increase it if you configure your own old generation size.</p>\n</dd>\n<dt class=\"field-even\">unrollFraction (Float, optional)</dt>\n<dd class=\"field-even\"><p>Memory Management: (deprecated) This is read only if spark.memory.useLegacyMode is enabled. Fraction of spark.storage.memoryFraction to use for unrolling blocks in memory. This is dynamically allocated by dropping existing blocks when there is not enough free storage space to unroll the new block in its entirety.</p>\n</dd>\n<dt class=\"field-odd\">replication (permissive dict, optional)</dt>\n<dd class=\"field-odd\"><details class=\"summary-default-value\">\n<summary>Default Value:</summary><div class=\"highlight-javascript notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"p\">{}</span>\n</pre></div>\n</div>\n</details><details class=\"summary-config-schema\">\n<summary>Config Schema:</summary><dl class=\"field-list simple\">\n<dt class=\"field-odd\">proactive (Bool, optional)</dt>\n<dd class=\"field-odd\"><p>Memory Management: Enables proactive block replication for RDD blocks. Cached RDD block replicas lost due to executor failures are replenished if there are any existing available replicas. This tries to get the replication level of the block to the initial number.</p>\n</dd>\n</dl>\n</details></dd>\n<dt class=\"field-even\">memoryMapThreshold (dagster.StringSource, optional)</dt>\n<dd class=\"field-even\"><p>Execution Behavior: Size in bytes of a block above which Spark memory maps when reading a block from disk. This prevents Spark from memory mapping very small blocks. In general, memory mapping has high overhead for blocks close to or below the page size of the operating system.</p>\n</dd>\n</dl>\n</details></dd>\n<dt class=\"field-odd\">cleaner (permissive dict, optional)</dt>\n<dd class=\"field-odd\"><details class=\"summary-default-value\">\n<summary>Default Value:</summary><div class=\"highlight-javascript notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"p\">{</span>\n    <span class=\"s2\">&quot;periodicGC&quot;</span><span class=\"o\">:</span> <span class=\"p\">{},</span>\n    <span class=\"s2\">&quot;referenceTracking&quot;</span><span class=\"o\">:</span> <span class=\"p\">{</span>\n        <span class=\"s2\">&quot;blocking&quot;</span><span class=\"o\">:</span> <span class=\"p\">{}</span>\n    <span class=\"p\">}</span>\n<span class=\"p\">}</span>\n</pre></div>\n</div>\n</details><details class=\"summary-config-schema\">\n<summary>Config Schema:</summary><dl class=\"field-list\">\n<dt class=\"field-odd\">periodicGC (permissive dict, optional)</dt>\n<dd class=\"field-odd\"><details class=\"summary-default-value\">\n<summary>Default Value:</summary><div class=\"highlight-javascript notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"p\">{}</span>\n</pre></div>\n</div>\n</details><details class=\"summary-config-schema\">\n<summary>Config Schema:</summary><dl class=\"field-list simple\">\n<dt class=\"field-odd\">interval (dagster.StringSource, optional)</dt>\n<dd class=\"field-odd\"><p>Memory Management: Controls how often to trigger a garbage collection. This context cleaner triggers cleanups only when weak references are garbage collected. In long-running applications with large driver JVMs, where there is little memory pressure on the driver, this may happen very occasionally or not at all. Not cleaning at all may lead to executors running out of disk space after a while.</p>\n</dd>\n</dl>\n</details></dd>\n<dt class=\"field-even\">referenceTracking (permissive dict, optional)</dt>\n<dd class=\"field-even\"><details class=\"summary-default-value\">\n<summary>Default Value:</summary><div class=\"highlight-javascript notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"p\">{</span>\n    <span class=\"s2\">&quot;blocking&quot;</span><span class=\"o\">:</span> <span class=\"p\">{}</span>\n<span class=\"p\">}</span>\n</pre></div>\n</div>\n</details><details class=\"summary-config-schema\">\n<summary>Config Schema:</summary><dl class=\"field-list\">\n<dt class=\"field-odd\">root (Bool, optional)</dt>\n<dd class=\"field-odd\"><p>Memory Management: Enables or disables context cleaning.</p>\n</dd>\n<dt class=\"field-even\">blocking (permissive dict, optional)</dt>\n<dd class=\"field-even\"><details class=\"summary-default-value\">\n<summary>Default Value:</summary><div class=\"highlight-javascript notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"p\">{}</span>\n</pre></div>\n</div>\n</details><details class=\"summary-config-schema\">\n<summary>Config Schema:</summary><dl class=\"field-list simple\">\n<dt class=\"field-odd\">root (Bool, optional)</dt>\n<dd class=\"field-odd\"><p>Memory Management: Controls whether the cleaning thread should block on cleanup tasks (other than shuffle, which is controlled by spark.cleaner.referenceTracking.blocking.shuffle Spark property).</p>\n</dd>\n<dt class=\"field-even\">shuffle (Bool, optional)</dt>\n<dd class=\"field-even\"><p>Memory Management: Controls whether the cleaning thread should block on shuffle cleanup tasks.</p>\n</dd>\n</dl>\n</details></dd>\n<dt class=\"field-odd\">cleanCheckpoints (Bool, optional)</dt>\n<dd class=\"field-odd\"><p>Memory Management: Controls whether to clean checkpoint files if the reference is out of scope.</p>\n</dd>\n</dl>\n</details></dd>\n</dl>\n</details></dd>\n<dt class=\"field-even\">default (permissive dict, optional)</dt>\n<dd class=\"field-even\"><details class=\"summary-default-value\">\n<summary>Default Value:</summary><div class=\"highlight-javascript notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"p\">{}</span>\n</pre></div>\n</div>\n</details><details class=\"summary-config-schema\">\n<summary>Config Schema:</summary><dl class=\"field-list simple\">\n<dt class=\"field-odd\">parallelism (dagster.IntSource, optional)</dt>\n<dd class=\"field-odd\"><p>Execution Behavior: Default number of partitions in RDDs returned by transformations like join, reduceByKey, and parallelize when not set by user.</p>\n</dd>\n</dl>\n</details></dd>\n<dt class=\"field-even\">hadoop (permissive dict, optional)</dt>\n<dd class=\"field-even\"><details class=\"summary-default-value\">\n<summary>Default Value:</summary><div class=\"highlight-javascript notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"p\">{</span>\n    <span class=\"s2\">&quot;mapreduce&quot;</span><span class=\"o\">:</span> <span class=\"p\">{</span>\n        <span class=\"s2\">&quot;fileoutputcommitter&quot;</span><span class=\"o\">:</span> <span class=\"p\">{</span>\n            <span class=\"s2\">&quot;algorithm&quot;</span><span class=\"o\">:</span> <span class=\"p\">{}</span>\n        <span class=\"p\">}</span>\n    <span class=\"p\">}</span>\n<span class=\"p\">}</span>\n</pre></div>\n</div>\n</details><details class=\"summary-config-schema\">\n<summary>Config Schema:</summary><dl class=\"field-list\">\n<dt class=\"field-odd\">cloneConf (Bool, optional)</dt>\n<dd class=\"field-odd\"><p>Execution Behavior: If set to true, clones a new Hadoop Configuration object for each task. This option should be enabled to work around Configuration thread-safety issues (see SPARK-2546 for more details). This is disabled by default in order to avoid unexpected performance regressions for jobs that are not affected by these issues.</p>\n</dd>\n<dt class=\"field-even\">validateOutputSpecs (Bool, optional)</dt>\n<dd class=\"field-even\"><p>Execution Behavior: If set to true, validates the output specification (e.g. checking if the output directory already exists) used in saveAsHadoopFile and other variants. This can be disabled to silence exceptions due to pre-existing output directories. We recommend that users do not disable this except if trying to achieve compatibility with previous versions of Spark. Simply use Hadoop\u2019s FileSystem API to delete output directories by hand. This setting is ignored for jobs generated through Spark Streaming\u2019s StreamingContext, since data may need to be rewritten to pre-existing output directories during checkpoint recovery.</p>\n</dd>\n<dt class=\"field-odd\">mapreduce (permissive dict, optional)</dt>\n<dd class=\"field-odd\"><details class=\"summary-default-value\">\n<summary>Default Value:</summary><div class=\"highlight-javascript notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"p\">{</span>\n    <span class=\"s2\">&quot;fileoutputcommitter&quot;</span><span class=\"o\">:</span> <span class=\"p\">{</span>\n        <span class=\"s2\">&quot;algorithm&quot;</span><span class=\"o\">:</span> <span class=\"p\">{}</span>\n    <span class=\"p\">}</span>\n<span class=\"p\">}</span>\n</pre></div>\n</div>\n</details><details class=\"summary-config-schema\">\n<summary>Config Schema:</summary><dl class=\"field-list\">\n<dt class=\"field-odd\">fileoutputcommitter (permissive dict, optional)</dt>\n<dd class=\"field-odd\"><details class=\"summary-default-value\">\n<summary>Default Value:</summary><div class=\"highlight-javascript notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"p\">{</span>\n    <span class=\"s2\">&quot;algorithm&quot;</span><span class=\"o\">:</span> <span class=\"p\">{}</span>\n<span class=\"p\">}</span>\n</pre></div>\n</div>\n</details><details class=\"summary-config-schema\">\n<summary>Config Schema:</summary><dl class=\"field-list\">\n<dt class=\"field-odd\">algorithm (permissive dict, optional)</dt>\n<dd class=\"field-odd\"><details class=\"summary-default-value\">\n<summary>Default Value:</summary><div class=\"highlight-javascript notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"p\">{}</span>\n</pre></div>\n</div>\n</details><details class=\"summary-config-schema\">\n<summary>Config Schema:</summary><dl class=\"field-list simple\">\n<dt class=\"field-odd\">version (dagster.IntSource, optional)</dt>\n<dd class=\"field-odd\"><p>Execution Behavior: The file output committer algorithm version, valid algorithm version number: 1 or 2. Version 2 may have better performance, but version 1 may handle failures better in certain situations, as per MAPREDUCE-4815.</p>\n</dd>\n</dl>\n</details></dd>\n</dl>\n</details></dd>\n</dl>\n</details></dd>\n</dl>\n</details></dd>\n<dt class=\"field-even\">rpc (permissive dict, optional)</dt>\n<dd class=\"field-even\"><details class=\"summary-default-value\">\n<summary>Default Value:</summary><div class=\"highlight-javascript notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"p\">{</span>\n    <span class=\"s2\">&quot;message&quot;</span><span class=\"o\">:</span> <span class=\"p\">{},</span>\n    <span class=\"s2\">&quot;retry&quot;</span><span class=\"o\">:</span> <span class=\"p\">{}</span>\n<span class=\"p\">}</span>\n</pre></div>\n</div>\n</details><details class=\"summary-config-schema\">\n<summary>Config Schema:</summary><dl class=\"field-list\">\n<dt class=\"field-odd\">message (permissive dict, optional)</dt>\n<dd class=\"field-odd\"><details class=\"summary-default-value\">\n<summary>Default Value:</summary><div class=\"highlight-javascript notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"p\">{}</span>\n</pre></div>\n</div>\n</details><details class=\"summary-config-schema\">\n<summary>Config Schema:</summary><dl class=\"field-list simple\">\n<dt class=\"field-odd\">maxSize (dagster.StringSource, optional)</dt>\n<dd class=\"field-odd\"><p>Networking: Maximum message size (in MB) to allow in \u201ccontrol plane\u201d communication; generally only applies to map output size information sent between executors and the driver. Increase this if you are running jobs with many thousands of map and reduce tasks and see messages about the RPC message size.</p>\n</dd>\n</dl>\n</details></dd>\n<dt class=\"field-even\">numRetries (dagster.StringSource, optional)</dt>\n<dd class=\"field-even\"><p>Networking: Number of times to retry before an RPC task gives up. An RPC task will run at most times of this number.</p>\n</dd>\n<dt class=\"field-odd\">retry (permissive dict, optional)</dt>\n<dd class=\"field-odd\"><details class=\"summary-default-value\">\n<summary>Default Value:</summary><div class=\"highlight-javascript notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"p\">{}</span>\n</pre></div>\n</div>\n</details><details class=\"summary-config-schema\">\n<summary>Config Schema:</summary><dl class=\"field-list simple\">\n<dt class=\"field-odd\">wait (dagster.StringSource, optional)</dt>\n<dd class=\"field-odd\"><p>Networking: Duration for an RPC ask operation to wait before retrying.</p>\n</dd>\n</dl>\n</details></dd>\n<dt class=\"field-even\">askTimeout (dagster.StringSource, optional)</dt>\n<dd class=\"field-even\"><p>Networking: Duration for an RPC ask operation to wait before timing out.</p>\n</dd>\n<dt class=\"field-odd\">lookupTimeout (dagster.StringSource, optional)</dt>\n<dd class=\"field-odd\"><p>Networking: Duration for an RPC remote endpoint lookup operation to wait before timing out.</p>\n</dd>\n</dl>\n</details></dd>\n<dt class=\"field-even\">blockManager (permissive dict, optional)</dt>\n<dd class=\"field-even\"><details class=\"summary-default-value\">\n<summary>Default Value:</summary><div class=\"highlight-javascript notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"p\">{}</span>\n</pre></div>\n</div>\n</details><details class=\"summary-config-schema\">\n<summary>Config Schema:</summary><dl class=\"field-list simple\">\n<dt class=\"field-odd\">port (dagster.StringSource, optional)</dt>\n<dd class=\"field-odd\"><p>Networking: Port for all block managers to listen on. These exist on both the driver and the executors.</p>\n</dd>\n</dl>\n</details></dd>\n<dt class=\"field-even\">network (permissive dict, optional)</dt>\n<dd class=\"field-even\"><details class=\"summary-default-value\">\n<summary>Default Value:</summary><div class=\"highlight-javascript notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"p\">{}</span>\n</pre></div>\n</div>\n</details><details class=\"summary-config-schema\">\n<summary>Config Schema:</summary><dl class=\"field-list simple\">\n<dt class=\"field-odd\">timeout (dagster.StringSource, optional)</dt>\n<dd class=\"field-odd\"><p>Networking: Default timeout for all network interactions. This config will be used in place of spark.core.connection.ack.wait.timeout, spark.storage.blockManagerSlaveTimeoutMs, spark.shuffle.io.connectionTimeout, spark.rpc.askTimeout or spark.rpc.lookupTimeout if they are not configured.</p>\n</dd>\n</dl>\n</details></dd>\n<dt class=\"field-even\">port (permissive dict, optional)</dt>\n<dd class=\"field-even\"><details class=\"summary-default-value\">\n<summary>Default Value:</summary><div class=\"highlight-javascript notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"p\">{}</span>\n</pre></div>\n</div>\n</details><details class=\"summary-config-schema\">\n<summary>Config Schema:</summary><dl class=\"field-list simple\">\n<dt class=\"field-odd\">maxRetries (dagster.StringSource, optional)</dt>\n<dd class=\"field-odd\"><p>Networking: Maximum number of retries when binding to a port before giving up. When a port is given a specific value (non 0), each subsequent retry will increment the port used in the previous attempt by 1 before retrying. This essentially allows it to try a range of ports from the start port specified to port + maxRetries.</p>\n</dd>\n</dl>\n</details></dd>\n<dt class=\"field-even\">core (permissive dict, optional)</dt>\n<dd class=\"field-even\"><details class=\"summary-default-value\">\n<summary>Default Value:</summary><div class=\"highlight-javascript notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"p\">{</span>\n    <span class=\"s2\">&quot;connection&quot;</span><span class=\"o\">:</span> <span class=\"p\">{</span>\n        <span class=\"s2\">&quot;ack&quot;</span><span class=\"o\">:</span> <span class=\"p\">{</span>\n            <span class=\"s2\">&quot;wait&quot;</span><span class=\"o\">:</span> <span class=\"p\">{}</span>\n        <span class=\"p\">}</span>\n    <span class=\"p\">}</span>\n<span class=\"p\">}</span>\n</pre></div>\n</div>\n</details><details class=\"summary-config-schema\">\n<summary>Config Schema:</summary><dl class=\"field-list\">\n<dt class=\"field-odd\">connection (permissive dict, optional)</dt>\n<dd class=\"field-odd\"><details class=\"summary-default-value\">\n<summary>Default Value:</summary><div class=\"highlight-javascript notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"p\">{</span>\n    <span class=\"s2\">&quot;ack&quot;</span><span class=\"o\">:</span> <span class=\"p\">{</span>\n        <span class=\"s2\">&quot;wait&quot;</span><span class=\"o\">:</span> <span class=\"p\">{}</span>\n    <span class=\"p\">}</span>\n<span class=\"p\">}</span>\n</pre></div>\n</div>\n</details><details class=\"summary-config-schema\">\n<summary>Config Schema:</summary><dl class=\"field-list\">\n<dt class=\"field-odd\">ack (permissive dict, optional)</dt>\n<dd class=\"field-odd\"><details class=\"summary-default-value\">\n<summary>Default Value:</summary><div class=\"highlight-javascript notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"p\">{</span>\n    <span class=\"s2\">&quot;wait&quot;</span><span class=\"o\">:</span> <span class=\"p\">{}</span>\n<span class=\"p\">}</span>\n</pre></div>\n</div>\n</details><details class=\"summary-config-schema\">\n<summary>Config Schema:</summary><dl class=\"field-list\">\n<dt class=\"field-odd\">wait (permissive dict, optional)</dt>\n<dd class=\"field-odd\"><details class=\"summary-default-value\">\n<summary>Default Value:</summary><div class=\"highlight-javascript notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"p\">{}</span>\n</pre></div>\n</div>\n</details><details class=\"summary-config-schema\">\n<summary>Config Schema:</summary><dl class=\"field-list simple\">\n<dt class=\"field-odd\">timeout (dagster.StringSource, optional)</dt>\n<dd class=\"field-odd\"><p>Networking: How long for the connection to wait for ack to occur before timing out and giving up. To avoid unwilling timeout caused by long pause like GC, you can set larger value.</p>\n</dd>\n</dl>\n</details></dd>\n</dl>\n</details></dd>\n</dl>\n</details></dd>\n</dl>\n</details></dd>\n<dt class=\"field-even\">cores (permissive dict, optional)</dt>\n<dd class=\"field-even\"><details class=\"summary-default-value\">\n<summary>Default Value:</summary><div class=\"highlight-javascript notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"p\">{}</span>\n</pre></div>\n</div>\n</details><details class=\"summary-config-schema\">\n<summary>Config Schema:</summary><dl class=\"field-list simple\">\n<dt class=\"field-odd\">max (dagster.StringSource, optional)</dt>\n<dd class=\"field-odd\"><p>Scheduling: When running on a standalone deploy cluster or a Mesos cluster in \u201ccoarse-grained\u201d sharing mode, the maximum amount of CPU cores to request for the application from across the cluster (not from each machine). If not set, the default will be spark.deploy.defaultCores on Spark\u2019s standalone cluster manager, or infinite (all available cores) on Mesos.</p>\n</dd>\n</dl>\n</details></dd>\n<dt class=\"field-even\">locality (permissive dict, optional)</dt>\n<dd class=\"field-even\"><details class=\"summary-default-value\">\n<summary>Default Value:</summary><div class=\"highlight-javascript notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"p\">{</span>\n    <span class=\"s2\">&quot;wait&quot;</span><span class=\"o\">:</span> <span class=\"p\">{}</span>\n<span class=\"p\">}</span>\n</pre></div>\n</div>\n</details><details class=\"summary-config-schema\">\n<summary>Config Schema:</summary><dl class=\"field-list\">\n<dt class=\"field-odd\">wait (permissive dict, optional)</dt>\n<dd class=\"field-odd\"><details class=\"summary-default-value\">\n<summary>Default Value:</summary><div class=\"highlight-javascript notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"p\">{}</span>\n</pre></div>\n</div>\n</details><details class=\"summary-config-schema\">\n<summary>Config Schema:</summary><dl class=\"field-list simple\">\n<dt class=\"field-odd\">root (dagster.StringSource, optional)</dt>\n<dd class=\"field-odd\"><p>Scheduling: How long to wait to launch a data-local task before giving up and launching it on a less-local node. The same wait will be used to step through multiple locality levels (process-local, node-local, rack-local and then any). It is also possible to customize the waiting time for each level by setting spark.locality.wait.node, etc. You should increase this setting if your tasks are long and see poor locality, but the default usually works well.</p>\n</dd>\n<dt class=\"field-even\">node (dagster.StringSource, optional)</dt>\n<dd class=\"field-even\"><p>Scheduling: Customize the locality wait for node locality. For example, you can set this to 0 to skip node locality and search immediately for rack locality (if your cluster has rack information).</p>\n</dd>\n<dt class=\"field-odd\">process (dagster.StringSource, optional)</dt>\n<dd class=\"field-odd\"><p>Scheduling: Customize the locality wait for process locality. This affects tasks that attempt to access cached data in a particular executor process.</p>\n</dd>\n<dt class=\"field-even\">rack (dagster.StringSource, optional)</dt>\n<dd class=\"field-even\"><p>Scheduling: Customize the locality wait for rack locality.</p>\n</dd>\n</dl>\n</details></dd>\n</dl>\n</details></dd>\n<dt class=\"field-odd\">scheduler (permissive dict, optional)</dt>\n<dd class=\"field-odd\"><details class=\"summary-default-value\">\n<summary>Default Value:</summary><div class=\"highlight-javascript notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"p\">{</span>\n    <span class=\"s2\">&quot;revive&quot;</span><span class=\"o\">:</span> <span class=\"p\">{},</span>\n    <span class=\"s2\">&quot;listenerbus&quot;</span><span class=\"o\">:</span> <span class=\"p\">{</span>\n        <span class=\"s2\">&quot;eventqueue&quot;</span><span class=\"o\">:</span> <span class=\"p\">{}</span>\n    <span class=\"p\">}</span>\n<span class=\"p\">}</span>\n</pre></div>\n</div>\n</details><details class=\"summary-config-schema\">\n<summary>Config Schema:</summary><dl class=\"field-list\">\n<dt class=\"field-odd\">maxRegisteredResourcesWaitingTime (dagster.StringSource, optional)</dt>\n<dd class=\"field-odd\"><p>Scheduling: Maximum amount of time to wait for resources to register before scheduling begins.</p>\n</dd>\n<dt class=\"field-even\">minRegisteredResourcesRatio (dagster.StringSource, optional)</dt>\n<dd class=\"field-even\"><p>Scheduling: The minimum ratio of registered resources (registered resources / total expected resources) (resources are executors in yarn mode and Kubernetes mode, CPU cores in standalone mode and Mesos coarse-grained mode [\u2018spark.cores.max\u2019 value is total expected resources for Mesos coarse-grained mode] ) to wait for before scheduling begins. Specified as a double between 0.0 and 1.0. Regardless of whether the minimum ratio of resources has been reached, the maximum amount of time it will wait before scheduling begins is controlled by config spark.scheduler.maxRegisteredResourcesWaitingTime.</p>\n</dd>\n<dt class=\"field-odd\">mode (dagster.StringSource, optional)</dt>\n<dd class=\"field-odd\"><p>Scheduling: The scheduling mode between jobs submitted to the same SparkContext. Can be set to FAIR to use fair sharing instead of queueing jobs one after another. Useful for multi-user services.</p>\n</dd>\n<dt class=\"field-even\">revive (permissive dict, optional)</dt>\n<dd class=\"field-even\"><details class=\"summary-default-value\">\n<summary>Default Value:</summary><div class=\"highlight-javascript notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"p\">{}</span>\n</pre></div>\n</div>\n</details><details class=\"summary-config-schema\">\n<summary>Config Schema:</summary><dl class=\"field-list simple\">\n<dt class=\"field-odd\">interval (dagster.StringSource, optional)</dt>\n<dd class=\"field-odd\"><p>Scheduling: The interval length for the scheduler to revive the worker resource offers to run tasks.</p>\n</dd>\n</dl>\n</details></dd>\n<dt class=\"field-even\">listenerbus (permissive dict, optional)</dt>\n<dd class=\"field-even\"><details class=\"summary-default-value\">\n<summary>Default Value:</summary><div class=\"highlight-javascript notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"p\">{</span>\n    <span class=\"s2\">&quot;eventqueue&quot;</span><span class=\"o\">:</span> <span class=\"p\">{}</span>\n<span class=\"p\">}</span>\n</pre></div>\n</div>\n</details><details class=\"summary-config-schema\">\n<summary>Config Schema:</summary><dl class=\"field-list\">\n<dt class=\"field-odd\">eventqueue (permissive dict, optional)</dt>\n<dd class=\"field-odd\"><details class=\"summary-default-value\">\n<summary>Default Value:</summary><div class=\"highlight-javascript notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"p\">{}</span>\n</pre></div>\n</div>\n</details><details class=\"summary-config-schema\">\n<summary>Config Schema:</summary><dl class=\"field-list simple\">\n<dt class=\"field-odd\">capacity (dagster.StringSource, optional)</dt>\n<dd class=\"field-odd\"><p>Scheduling: Capacity for event queue in Spark listener bus, must be greater than 0. Consider increasing value (e.g. 20000) if listener events are dropped. Increasing this value may result in the driver using more memory.</p>\n</dd>\n</dl>\n</details></dd>\n</dl>\n</details></dd>\n</dl>\n</details></dd>\n<dt class=\"field-even\">blacklist (permissive dict, optional)</dt>\n<dd class=\"field-even\"><details class=\"summary-default-value\">\n<summary>Default Value:</summary><div class=\"highlight-javascript notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"p\">{</span>\n    <span class=\"s2\">&quot;task&quot;</span><span class=\"o\">:</span> <span class=\"p\">{},</span>\n    <span class=\"s2\">&quot;stage&quot;</span><span class=\"o\">:</span> <span class=\"p\">{},</span>\n    <span class=\"s2\">&quot;application&quot;</span><span class=\"o\">:</span> <span class=\"p\">{</span>\n        <span class=\"s2\">&quot;fetchFailure&quot;</span><span class=\"o\">:</span> <span class=\"p\">{}</span>\n    <span class=\"p\">}</span>\n<span class=\"p\">}</span>\n</pre></div>\n</div>\n</details><details class=\"summary-config-schema\">\n<summary>Config Schema:</summary><dl class=\"field-list\">\n<dt class=\"field-odd\">enabled (dagster.StringSource, optional)</dt>\n<dd class=\"field-odd\"><p>Scheduling: If set to \u201ctrue\u201d, prevent Spark from scheduling tasks on executors that have been blacklisted due to too many task failures. The blacklisting algorithm can be further controlled by the other \u201cspark.blacklist\u201d configuration options.</p>\n</dd>\n<dt class=\"field-even\">timeout (dagster.StringSource, optional)</dt>\n<dd class=\"field-even\"><p>Scheduling: (Experimental) How long a node or executor is blacklisted for the entire application, before it is unconditionally removed from the blacklist to attempt running new tasks.</p>\n</dd>\n<dt class=\"field-odd\">task (permissive dict, optional)</dt>\n<dd class=\"field-odd\"><details class=\"summary-default-value\">\n<summary>Default Value:</summary><div class=\"highlight-javascript notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"p\">{}</span>\n</pre></div>\n</div>\n</details><details class=\"summary-config-schema\">\n<summary>Config Schema:</summary><dl class=\"field-list simple\">\n<dt class=\"field-odd\">maxTaskAttemptsPerExecutor (dagster.StringSource, optional)</dt>\n<dd class=\"field-odd\"><p>Scheduling: (Experimental) For a given task, how many times it can be retried on one executor before the executor is blacklisted for that task.</p>\n</dd>\n<dt class=\"field-even\">maxTaskAttemptsPerNode (dagster.StringSource, optional)</dt>\n<dd class=\"field-even\"><p>Scheduling: (Experimental) For a given task, how many times it can be retried on one node, before the entire node is blacklisted for that task.</p>\n</dd>\n</dl>\n</details></dd>\n<dt class=\"field-odd\">stage (permissive dict, optional)</dt>\n<dd class=\"field-odd\"><details class=\"summary-default-value\">\n<summary>Default Value:</summary><div class=\"highlight-javascript notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"p\">{}</span>\n</pre></div>\n</div>\n</details><details class=\"summary-config-schema\">\n<summary>Config Schema:</summary><dl class=\"field-list simple\">\n<dt class=\"field-odd\">maxFailedTasksPerExecutor (dagster.StringSource, optional)</dt>\n<dd class=\"field-odd\"><p>Scheduling: (Experimental) How many different tasks must fail on one executor, within one stage, before the executor is blacklisted for that stage.</p>\n</dd>\n<dt class=\"field-even\">maxFailedExecutorsPerNode (dagster.StringSource, optional)</dt>\n<dd class=\"field-even\"><p>Scheduling: (Experimental) How many different executors are marked as blacklisted for a given stage, before the entire node is marked as failed for the stage.</p>\n</dd>\n</dl>\n</details></dd>\n<dt class=\"field-odd\">application (permissive dict, optional)</dt>\n<dd class=\"field-odd\"><details class=\"summary-default-value\">\n<summary>Default Value:</summary><div class=\"highlight-javascript notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"p\">{</span>\n    <span class=\"s2\">&quot;fetchFailure&quot;</span><span class=\"o\">:</span> <span class=\"p\">{}</span>\n<span class=\"p\">}</span>\n</pre></div>\n</div>\n</details><details class=\"summary-config-schema\">\n<summary>Config Schema:</summary><dl class=\"field-list\">\n<dt class=\"field-odd\">maxFailedTasksPerExecutor (dagster.StringSource, optional)</dt>\n<dd class=\"field-odd\"><p>Scheduling: (Experimental) How many different tasks must fail on one executor, in successful task sets, before the executor is blacklisted for the entire application. Blacklisted executors will be automatically added back to the pool of available resources after the timeout specified by spark.blacklist.timeout. Note that with dynamic allocation, though, the executors may get marked as idle and be reclaimed by the cluster manager.</p>\n</dd>\n<dt class=\"field-even\">maxFailedExecutorsPerNode (dagster.StringSource, optional)</dt>\n<dd class=\"field-even\"><p>Scheduling: (Experimental) How many different executors must be blacklisted for the entire application, before the node is blacklisted for the entire application. Blacklisted nodes will be automatically added back to the pool of available resources after the timeout specified by spark.blacklist.timeout. Note that with dynamic allocation, though, the executors on the node may get marked as idle and be reclaimed by the cluster manager.</p>\n</dd>\n<dt class=\"field-odd\">fetchFailure (permissive dict, optional)</dt>\n<dd class=\"field-odd\"><details class=\"summary-default-value\">\n<summary>Default Value:</summary><div class=\"highlight-javascript notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"p\">{}</span>\n</pre></div>\n</div>\n</details><details class=\"summary-config-schema\">\n<summary>Config Schema:</summary><dl class=\"field-list simple\">\n<dt class=\"field-odd\">enabled (dagster.StringSource, optional)</dt>\n<dd class=\"field-odd\"><p>Scheduling: (Experimental) If set to \u201ctrue\u201d, Spark will blacklist the executor immediately when a fetch failure happens. If external shuffle service is enabled, then the whole node will be blacklisted.</p>\n</dd>\n</dl>\n</details></dd>\n</dl>\n</details></dd>\n<dt class=\"field-even\">killBlacklistedExecutors (dagster.StringSource, optional)</dt>\n<dd class=\"field-even\"><p>Scheduling: (Experimental) If set to \u201ctrue\u201d, allow Spark to automatically kill the executors when they are blacklisted on fetch failure or blacklisted for the entire application, as controlled by spark.blacklist.application.*. Note that, when an entire node is added to the blacklist, all of the executors on that node will be killed.</p>\n</dd>\n</dl>\n</details></dd>\n<dt class=\"field-odd\">speculation (permissive dict, optional)</dt>\n<dd class=\"field-odd\"><details class=\"summary-default-value\">\n<summary>Default Value:</summary><div class=\"highlight-javascript notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"p\">{}</span>\n</pre></div>\n</div>\n</details><details class=\"summary-config-schema\">\n<summary>Config Schema:</summary><dl class=\"field-list simple\">\n<dt class=\"field-odd\">root (dagster.StringSource, optional)</dt>\n<dd class=\"field-odd\"><p>Scheduling: If set to \u201ctrue\u201d, performs speculative execution of tasks. This means if one or more tasks are running slowly in a stage, they will be re-launched.</p>\n</dd>\n<dt class=\"field-even\">interval (dagster.StringSource, optional)</dt>\n<dd class=\"field-even\"><p>Scheduling: How often Spark will check for tasks to speculate.</p>\n</dd>\n<dt class=\"field-odd\">multiplier (dagster.StringSource, optional)</dt>\n<dd class=\"field-odd\"><p>Scheduling: How many times slower a task is than the median to be considered for speculation.</p>\n</dd>\n<dt class=\"field-even\">quantile (dagster.StringSource, optional)</dt>\n<dd class=\"field-even\"><p>Scheduling: Fraction of tasks which must be complete before speculation is enabled for a particular stage.</p>\n</dd>\n</dl>\n</details></dd>\n<dt class=\"field-odd\">task (permissive dict, optional)</dt>\n<dd class=\"field-odd\"><details class=\"summary-default-value\">\n<summary>Default Value:</summary><div class=\"highlight-javascript notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"p\">{</span>\n    <span class=\"s2\">&quot;reaper&quot;</span><span class=\"o\">:</span> <span class=\"p\">{}</span>\n<span class=\"p\">}</span>\n</pre></div>\n</div>\n</details><details class=\"summary-config-schema\">\n<summary>Config Schema:</summary><dl class=\"field-list\">\n<dt class=\"field-odd\">cpus (dagster.StringSource, optional)</dt>\n<dd class=\"field-odd\"><p>Scheduling: Number of cores to allocate for each task.</p>\n</dd>\n<dt class=\"field-even\">maxFailures (dagster.StringSource, optional)</dt>\n<dd class=\"field-even\"><p>Scheduling: Number of failures of any particular task before giving up on the job. The total number of failures spread across different tasks will not cause the job to fail; a particular task has to fail this number of attempts. Should be greater than or equal to 1. Number of allowed retries = this value - 1.</p>\n</dd>\n<dt class=\"field-odd\">reaper (permissive dict, optional)</dt>\n<dd class=\"field-odd\"><details class=\"summary-default-value\">\n<summary>Default Value:</summary><div class=\"highlight-javascript notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"p\">{}</span>\n</pre></div>\n</div>\n</details><details class=\"summary-config-schema\">\n<summary>Config Schema:</summary><dl class=\"field-list simple\">\n<dt class=\"field-odd\">enabled (dagster.StringSource, optional)</dt>\n<dd class=\"field-odd\"><p>Scheduling: Enables monitoring of killed / interrupted tasks. When set to true, any task which is killed will be monitored by the executor until that task actually finishes executing. See the other spark.task.reaper.* configurations for details on how to control the exact behavior of this monitoring. When set to false (the default), task killing will use an older code path which lacks such monitoring.</p>\n</dd>\n<dt class=\"field-even\">pollingInterval (dagster.StringSource, optional)</dt>\n<dd class=\"field-even\"><p>Scheduling: When spark.task.reaper.enabled = true, this setting controls the frequency at which executors will poll the status of killed tasks. If a killed task is still running when polled then a warning will be logged and, by default, a thread-dump of the task will be logged (this thread dump can be disabled via the spark.task.reaper.threadDump setting, which is documented below).</p>\n</dd>\n<dt class=\"field-odd\">threadDump (dagster.StringSource, optional)</dt>\n<dd class=\"field-odd\"><p>Scheduling: When spark.task.reaper.enabled = true, this setting controls whether task thread dumps are logged during periodic polling of killed tasks. Set this to false to disable collection of thread dumps.</p>\n</dd>\n<dt class=\"field-even\">killTimeout (dagster.StringSource, optional)</dt>\n<dd class=\"field-even\"><p>Scheduling: When spark.task.reaper.enabled = true, this setting specifies a timeout after which the executor JVM will kill itself if a killed task has not stopped running. The default value, -1, disables this mechanism and prevents the executor from self-destructing. The purpose of this setting is to act as a safety-net to prevent runaway noncancellable tasks from rendering an executor unusable.</p>\n</dd>\n</dl>\n</details></dd>\n</dl>\n</details></dd>\n<dt class=\"field-odd\">stage (permissive dict, optional)</dt>\n<dd class=\"field-odd\"><details class=\"summary-default-value\">\n<summary>Default Value:</summary><div class=\"highlight-javascript notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"p\">{}</span>\n</pre></div>\n</div>\n</details><details class=\"summary-config-schema\">\n<summary>Config Schema:</summary><dl class=\"field-list simple\">\n<dt class=\"field-odd\">maxConsecutiveAttempts (dagster.StringSource, optional)</dt>\n<dd class=\"field-odd\"><p>Scheduling: Number of consecutive stage attempts allowed before a stage is aborted.</p>\n</dd>\n</dl>\n</details></dd>\n<dt class=\"field-even\">dynamicAllocation (permissive dict, optional)</dt>\n<dd class=\"field-even\"><details class=\"summary-default-value\">\n<summary>Default Value:</summary><div class=\"highlight-javascript notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"p\">{}</span>\n</pre></div>\n</div>\n</details><details class=\"summary-config-schema\">\n<summary>Config Schema:</summary><dl class=\"field-list simple\">\n<dt class=\"field-odd\">enabled (dagster.StringSource, optional)</dt>\n<dd class=\"field-odd\"><p>Dynamic Allocation: Whether to use dynamic resource allocation, which scales the number of executors registered with this application up and down based on the workload. For more detail, see the description here. This requires spark.shuffle.service.enabled to be set. The following configurations are also relevant: spark.dynamicAllocation.minExecutors, spark.dynamicAllocation.maxExecutors, and spark.dynamicAllocation.initialExecutors spark.dynamicAllocation.executorAllocationRatio</p>\n</dd>\n<dt class=\"field-even\">executorIdleTimeout (dagster.StringSource, optional)</dt>\n<dd class=\"field-even\"><p>Dynamic Allocation: If dynamic allocation is enabled and an executor has been idle for more than this duration, the executor will be removed. For more detail, see this description.</p>\n</dd>\n<dt class=\"field-odd\">cachedExecutorIdleTimeout (dagster.StringSource, optional)</dt>\n<dd class=\"field-odd\"><p>Dynamic Allocation: If dynamic allocation is enabled and an executor which has cached data blocks has been idle for more than this duration, the executor will be removed. For more details, see this description.</p>\n</dd>\n<dt class=\"field-even\">initialExecutors (dagster.StringSource, optional)</dt>\n<dd class=\"field-even\"><p>Dynamic Allocation: Initial number of executors to run if dynamic allocation is enabled. If <cite>\u2013num-executors</cite> (or <cite>spark.executor.instances</cite>) is set and larger than this value, it will be used as the initial number of executors.</p>\n</dd>\n<dt class=\"field-odd\">maxExecutors (dagster.StringSource, optional)</dt>\n<dd class=\"field-odd\"><p>Dynamic Allocation: Upper bound for the number of executors if dynamic allocation is enabled.</p>\n</dd>\n<dt class=\"field-even\">minExecutors (dagster.StringSource, optional)</dt>\n<dd class=\"field-even\"><p>Dynamic Allocation: Lower bound for the number of executors if dynamic allocation is enabled.</p>\n</dd>\n<dt class=\"field-odd\">executorAllocationRatio (dagster.StringSource, optional)</dt>\n<dd class=\"field-odd\"><p>Dynamic Allocation: By default, the dynamic allocation will request enough executors to maximize the parallelism according to the number of tasks to process. While this minimizes the latency of the job, with small tasks this setting can waste a lot of resources due to executor allocation overhead, as some executor might not even do any work. This setting allows to set a ratio that will be used to reduce the number of executors w.r.t. full parallelism. Defaults to 1.0 to give maximum parallelism. 0.5 will divide the target number of executors by 2 The target number of executors computed by the dynamicAllocation can still be overridden by the spark.dynamicAllocation.minExecutors and spark.dynamicAllocation.maxExecutors settings</p>\n</dd>\n<dt class=\"field-even\">schedulerBacklogTimeout (dagster.StringSource, optional)</dt>\n<dd class=\"field-even\"><p>Dynamic Allocation: If dynamic allocation is enabled and there have been pending tasks backlogged for more than this duration, new executors will be requested. For more detail, see this description.</p>\n</dd>\n<dt class=\"field-odd\">sustainedSchedulerBacklogTimeout (dagster.StringSource, optional)</dt>\n<dd class=\"field-odd\"><p>Dynamic Allocation: Same as spark.dynamicAllocation.schedulerBacklogTimeout, but used only for subsequent executor requests. For more detail, see this description.</p>\n</dd>\n</dl>\n</details></dd>\n<dt class=\"field-even\">r (permissive dict, optional)</dt>\n<dd class=\"field-even\"><details class=\"summary-default-value\">\n<summary>Default Value:</summary><div class=\"highlight-javascript notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"p\">{</span>\n    <span class=\"s2\">&quot;driver&quot;</span><span class=\"o\">:</span> <span class=\"p\">{},</span>\n    <span class=\"s2\">&quot;shell&quot;</span><span class=\"o\">:</span> <span class=\"p\">{}</span>\n<span class=\"p\">}</span>\n</pre></div>\n</div>\n</details><details class=\"summary-config-schema\">\n<summary>Config Schema:</summary><dl class=\"field-list\">\n<dt class=\"field-odd\">numRBackendThreads (dagster.StringSource, optional)</dt>\n<dd class=\"field-odd\"><p>SparkR: Number of threads used by RBackend to handle RPC calls from SparkR package.</p>\n</dd>\n<dt class=\"field-even\">command (dagster.StringSource, optional)</dt>\n<dd class=\"field-even\"><p>SparkR: Executable for executing R scripts in cluster modes for both driver and workers.</p>\n</dd>\n<dt class=\"field-odd\">driver (permissive dict, optional)</dt>\n<dd class=\"field-odd\"><details class=\"summary-default-value\">\n<summary>Default Value:</summary><div class=\"highlight-javascript notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"p\">{}</span>\n</pre></div>\n</div>\n</details><details class=\"summary-config-schema\">\n<summary>Config Schema:</summary><dl class=\"field-list simple\">\n<dt class=\"field-odd\">command (dagster.StringSource, optional)</dt>\n<dd class=\"field-odd\"><p>SparkR: Executable for executing R scripts in client modes for driver. Ignored in cluster modes.</p>\n</dd>\n</dl>\n</details></dd>\n<dt class=\"field-even\">shell (permissive dict, optional)</dt>\n<dd class=\"field-even\"><details class=\"summary-default-value\">\n<summary>Default Value:</summary><div class=\"highlight-javascript notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"p\">{}</span>\n</pre></div>\n</div>\n</details><details class=\"summary-config-schema\">\n<summary>Config Schema:</summary><dl class=\"field-list simple\">\n<dt class=\"field-odd\">command (dagster.StringSource, optional)</dt>\n<dd class=\"field-odd\"><p>SparkR: Executable for executing sparkR shell in client modes for driver. Ignored in cluster modes. It is the same as environment variable SPARKR_DRIVER_R, but take precedence over it. spark.r.shell.command is used for sparkR shell while spark.r.driver.command is used for running R script.</p>\n</dd>\n</dl>\n</details></dd>\n<dt class=\"field-even\">backendConnectionTimeout (dagster.StringSource, optional)</dt>\n<dd class=\"field-even\"><p>SparkR: Connection timeout set by R process on its connection to RBackend in seconds.</p>\n</dd>\n<dt class=\"field-odd\">heartBeatInterval (dagster.StringSource, optional)</dt>\n<dd class=\"field-odd\"><p>SparkR: Interval for heartbeats sent from SparkR backend to R process to prevent connection timeout.</p>\n</dd>\n</dl>\n</details></dd>\n<dt class=\"field-even\">graphx (permissive dict, optional)</dt>\n<dd class=\"field-even\"><details class=\"summary-default-value\">\n<summary>Default Value:</summary><div class=\"highlight-javascript notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"p\">{</span>\n    <span class=\"s2\">&quot;pregel&quot;</span><span class=\"o\">:</span> <span class=\"p\">{}</span>\n<span class=\"p\">}</span>\n</pre></div>\n</div>\n</details><details class=\"summary-config-schema\">\n<summary>Config Schema:</summary><dl class=\"field-list\">\n<dt class=\"field-odd\">pregel (permissive dict, optional)</dt>\n<dd class=\"field-odd\"><details class=\"summary-default-value\">\n<summary>Default Value:</summary><div class=\"highlight-javascript notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"p\">{}</span>\n</pre></div>\n</div>\n</details><details class=\"summary-config-schema\">\n<summary>Config Schema:</summary><dl class=\"field-list simple\">\n<dt class=\"field-odd\">checkpointInterval (dagster.StringSource, optional)</dt>\n<dd class=\"field-odd\"><p>GraphX: Checkpoint interval for graph and message in Pregel. It used to avoid stackOverflowError due to long lineage chains after lots of iterations. The checkpoint is disabled by default.</p>\n</dd>\n</dl>\n</details></dd>\n</dl>\n</details></dd>\n<dt class=\"field-even\">deploy (permissive dict, optional)</dt>\n<dd class=\"field-even\"><details class=\"summary-default-value\">\n<summary>Default Value:</summary><div class=\"highlight-javascript notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"p\">{</span>\n    <span class=\"s2\">&quot;zookeeper&quot;</span><span class=\"o\">:</span> <span class=\"p\">{}</span>\n<span class=\"p\">}</span>\n</pre></div>\n</div>\n</details><details class=\"summary-config-schema\">\n<summary>Config Schema:</summary><dl class=\"field-list\">\n<dt class=\"field-odd\">recoveryMode (dagster.StringSource, optional)</dt>\n<dd class=\"field-odd\"><p>Deploy: The recovery mode setting to recover submitted Spark jobs with cluster mode when it failed and relaunches. This is only applicable for cluster mode when running with Standalone or Mesos.</p>\n</dd>\n<dt class=\"field-even\">zookeeper (permissive dict, optional)</dt>\n<dd class=\"field-even\"><details class=\"summary-default-value\">\n<summary>Default Value:</summary><div class=\"highlight-javascript notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"p\">{}</span>\n</pre></div>\n</div>\n</details><details class=\"summary-config-schema\">\n<summary>Config Schema:</summary><dl class=\"field-list simple\">\n<dt class=\"field-odd\">url (dagster.StringSource, optional)</dt>\n<dd class=\"field-odd\"><p>Deploy: When <cite>spark.deploy.recoveryMode</cite> is set to ZOOKEEPER, this configuration is used to set the zookeeper URL to connect to.</p>\n</dd>\n<dt class=\"field-even\">dir (dagster.StringSource, optional)</dt>\n<dd class=\"field-even\"><p>Deploy: When <cite>spark.deploy.recoveryMode</cite> is set to ZOOKEEPER, this configuration is used to set the zookeeper directory to store recovery state.</p>\n</dd>\n</dl>\n</details></dd>\n</dl>\n</details></dd>\n</dl>\n</details></dd>\n</dl>\n</details></dd>\n</dl>\n</details><p>This resource provides access to a PySpark SparkSession for executing PySpark code within Dagster.</p>\n<p>Example:</p>\n<div class=\"highlight-python notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"nd\">@op</span><span class=\"p\">(</span><span class=\"n\">required_resource_keys</span><span class=\"o\">=</span><span class=\"p\">{</span><span class=\"s2\">&quot;pyspark&quot;</span><span class=\"p\">})</span>\n<span class=\"k\">def</span> <span class=\"nf\">my_op</span><span class=\"p\">(</span><span class=\"n\">context</span><span class=\"p\">):</span>\n    <span class=\"n\">spark_session</span> <span class=\"o\">=</span> <span class=\"n\">context</span><span class=\"o\">.</span><span class=\"n\">resources</span><span class=\"o\">.</span><span class=\"n\">pyspark</span><span class=\"o\">.</span><span class=\"n\">spark_session</span>\n    <span class=\"n\">dataframe</span> <span class=\"o\">=</span> <span class=\"n\">spark_session</span><span class=\"o\">.</span><span class=\"n\">read</span><span class=\"o\">.</span><span class=\"n\">json</span><span class=\"p\">(</span><span class=\"s2\">&quot;examples/src/main/resources/people.json&quot;</span><span class=\"p\">)</span>\n\n<span class=\"n\">my_pyspark_resource</span> <span class=\"o\">=</span> <span class=\"n\">pyspark_resource</span><span class=\"o\">.</span><span class=\"n\">configured</span><span class=\"p\">(</span>\n    <span class=\"p\">{</span><span class=\"s2\">&quot;spark_conf&quot;</span><span class=\"p\">:</span> <span class=\"p\">{</span><span class=\"s2\">&quot;spark.executor.memory&quot;</span><span class=\"p\">:</span> <span class=\"s2\">&quot;2g&quot;</span><span class=\"p\">}}</span>\n<span class=\"p\">)</span>\n\n<span class=\"nd\">@job</span><span class=\"p\">(</span><span class=\"n\">resource_defs</span><span class=\"o\">=</span><span class=\"p\">{</span><span class=\"s2\">&quot;pyspark&quot;</span><span class=\"p\">:</span> <span class=\"n\">my_pyspark_resource</span><span class=\"p\">})</span>\n<span class=\"k\">def</span> <span class=\"nf\">my_spark_job</span><span class=\"p\">():</span>\n    <span class=\"n\">my_op</span><span class=\"p\">()</span>\n</pre></div>\n</div>\n</dd></dl>\n\n</div>\n", "current_page_name": "sections/api/apidocs/libraries/dagster-pyspark", "customsidebar": null, "display_toc": false, "meta": null, "metatags": "", "next": {"link": "../dagster-shell/", "title": "Shell (dagster-shell)"}, "page_source_suffix": ".rst", "parents": [], "prev": {"link": "../dagster-prometheus/", "title": "Prometheus (dagster-prometheus)"}, "rellinks": [["genindex", "General Index", "I", "index"], ["py-modindex", "Python Module Index", "", "modules"], ["sections/api/apidocs/libraries/dagster-shell", "Shell (dagster-shell)", "N", "next"], ["sections/api/apidocs/libraries/dagster-prometheus", "Prometheus (dagster-prometheus)", "P", "previous"]], "sidebars": ["globaltoc.html", "searchbox.html"], "sourcename": "sections/api/apidocs/libraries/dagster-pyspark.rst.txt", "title": "Pyspark (dagster-pyspark)", "toc": "<ul>\n<li><a class=\"reference internal\" href=\"#\">Pyspark (dagster-pyspark)</a></li>\n</ul>\n"}, "dagster-shell": {"alabaster_version": "0.7.12", "body": "<div class=\"section\" id=\"shell-dagster-shell\">\n<h1>Shell (dagster-shell)<a class=\"headerlink\" href=\"#shell-dagster-shell\" title=\"Permalink to this headline\">\u00b6</a></h1>\n<p>The Dagster shell library provides op factories for executing inline shell scripts or script files.</p>\n</div>\n<div class=\"section\" id=\"apis\">\n<h1>APIs<a class=\"headerlink\" href=\"#apis\" title=\"Permalink to this headline\">\u00b6</a></h1>\n<dl class=\"py function\">\n<dt id=\"dagster_shell.create_shell_command_op\">\n<code class=\"sig-prename descclassname\"><span class=\"pre\">dagster_shell.</span></code><code class=\"sig-name descname\"><span class=\"pre\">create_shell_command_op</span></code><span class=\"sig-paren\">(</span><em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">shell_command</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">name</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">description</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">None</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">required_resource_keys</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">None</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">tags</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">None</span></span></em><span class=\"sig-paren\">)</span><a class=\"reference internal\" href=\"../../../../../_modules/dagster_shell/solids#create_shell_command_op\"><span class=\"viewcode-link\"><span class=\"pre\">[source]</span></span></a><a class=\"headerlink\" href=\"#dagster_shell.create_shell_command_op\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>This function is a factory that constructs ops to execute a shell command.</p>\n<p>Note that you can only use <code class=\"docutils literal notranslate\"><span class=\"pre\">shell_command_op</span></code> if you know the command you\u2019d like to execute\nat pipeline construction time. If you\u2019d like to construct shell commands dynamically during\npipeline execution and pass them between ops, you should use <code class=\"docutils literal notranslate\"><span class=\"pre\">shell_op</span></code> instead.</p>\n<p>Examples:</p>\n<div class=\"highlight-python notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"c1\"># pylint: disable=no-value-for-parameter</span>\n<span class=\"kn\">from</span> <span class=\"nn\">dagster_shell</span> <span class=\"kn\">import</span> <span class=\"n\">create_shell_command_op</span>\n\n<span class=\"kn\">from</span> <span class=\"nn\">dagster</span> <span class=\"kn\">import</span> <span class=\"n\">graph</span>\n\n\n<span class=\"nd\">@graph</span>\n<span class=\"k\">def</span> <span class=\"nf\">my_graph</span><span class=\"p\">():</span>\n    <span class=\"n\">a</span> <span class=\"o\">=</span> <span class=\"n\">create_shell_command_op</span><span class=\"p\">(</span><span class=\"s1\">&#39;echo &quot;hello, world!&quot;&#39;</span><span class=\"p\">,</span> <span class=\"n\">name</span><span class=\"o\">=</span><span class=\"s2\">&quot;a&quot;</span><span class=\"p\">)</span>\n    <span class=\"n\">a</span><span class=\"p\">()</span>\n</pre></div>\n</div>\n<dl class=\"field-list simple\">\n<dt class=\"field-odd\">Parameters</dt>\n<dd class=\"field-odd\"><ul class=\"simple\">\n<li><p><strong>shell_command</strong> (<a class=\"reference external\" href=\"https://docs.python.org/3/library/stdtypes.html#str\" title=\"(in Python v3.8)\"><em>str</em></a>) \u2013 The shell command that the constructed op will execute.</p></li>\n<li><p><strong>name</strong> (<a class=\"reference external\" href=\"https://docs.python.org/3/library/stdtypes.html#str\" title=\"(in Python v3.8)\"><em>str</em></a>) \u2013 The name of the constructed op.</p></li>\n<li><p><strong>description</strong> (<em>Optional</em><em>[</em><a class=\"reference external\" href=\"https://docs.python.org/3/library/stdtypes.html#str\" title=\"(in Python v3.8)\"><em>str</em></a><em>]</em>) \u2013 Human-readable description of this op.</p></li>\n<li><p><strong>required_resource_keys</strong> (<em>Optional</em><em>[</em><em>Set</em><em>[</em><a class=\"reference external\" href=\"https://docs.python.org/3/library/stdtypes.html#str\" title=\"(in Python v3.8)\"><em>str</em></a><em>]</em><em>]</em>) \u2013 Set of resource handles required by this op.\nSetting this ensures that resource spin up for the required resources will occur before\nthe shell command is executed.</p></li>\n<li><p><strong>tags</strong> (<em>Optional</em><em>[</em><em>Dict</em><em>[</em><a class=\"reference external\" href=\"https://docs.python.org/3/library/stdtypes.html#str\" title=\"(in Python v3.8)\"><em>str</em></a><em>, </em><em>Any</em><em>]</em><em>]</em>) \u2013 Arbitrary metadata for the op. Frameworks may\nexpect and require certain metadata to be attached to a op. Users should generally\nnot set metadata directly. Values that are not strings will be json encoded and must meet\nthe criteria that <cite>json.loads(json.dumps(value)) == value</cite>.</p></li>\n</ul>\n</dd>\n<dt class=\"field-even\">Raises</dt>\n<dd class=\"field-even\"><p><a class=\"reference internal\" href=\"../../ops#dagster.Failure\" title=\"dagster.Failure\"><strong>Failure</strong></a> \u2013 Raised when the shell command returns a non-zero exit code.</p>\n</dd>\n<dt class=\"field-odd\">Returns</dt>\n<dd class=\"field-odd\"><p>Returns the constructed op definition.</p>\n</dd>\n<dt class=\"field-even\">Return type</dt>\n<dd class=\"field-even\"><p><a class=\"reference internal\" href=\"../../ops#dagster.OpDefinition\" title=\"dagster.OpDefinition\">OpDefinition</a></p>\n</dd>\n</dl>\n</dd></dl>\n\n<dl class=\"py function\">\n<dt id=\"dagster_shell.create_shell_script_op\">\n<code class=\"sig-prename descclassname\"><span class=\"pre\">dagster_shell.</span></code><code class=\"sig-name descname\"><span class=\"pre\">create_shell_script_op</span></code><span class=\"sig-paren\">(</span><em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">shell_script_path</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">name</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">'create_shell_script_op'</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">input_defs</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">None</span></span></em>, <em class=\"sig-param\"><span class=\"o\"><span class=\"pre\">**</span></span><span class=\"n\"><span class=\"pre\">kwargs</span></span></em><span class=\"sig-paren\">)</span><a class=\"reference internal\" href=\"../../../../../_modules/dagster_shell/solids#create_shell_script_op\"><span class=\"viewcode-link\"><span class=\"pre\">[source]</span></span></a><a class=\"headerlink\" href=\"#dagster_shell.create_shell_script_op\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>This function is a factory which constructs an op that will execute a shell command read\nfrom a script file.</p>\n<p>Any kwargs passed to this function will be passed along to the underlying <a class=\"reference internal\" href=\"../../ops#dagster.op\" title=\"dagster.op\"><code class=\"xref py py-func docutils literal notranslate\"><span class=\"pre\">&#64;op</span></code></a> decorator. However, note that overriding <code class=\"docutils literal notranslate\"><span class=\"pre\">config</span></code> or <code class=\"docutils literal notranslate\"><span class=\"pre\">output_defs</span></code> is not\nsupported.</p>\n<p>You might consider using <a class=\"reference internal\" href=\"../../graphs#dagster.graph\" title=\"dagster.graph\"><code class=\"xref py py-func docutils literal notranslate\"><span class=\"pre\">&#64;graph</span></code></a> to wrap this op\nin the cases where you\u2019d like to configure the shell op with different config fields.</p>\n<p>Examples:</p>\n<div class=\"highlight-python notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"c1\"># pylint: disable=no-value-for-parameter</span>\n<span class=\"kn\">from</span> <span class=\"nn\">dagster_shell</span> <span class=\"kn\">import</span> <span class=\"n\">create_shell_script_op</span>\n\n<span class=\"kn\">from</span> <span class=\"nn\">dagster</span> <span class=\"kn\">import</span> <span class=\"n\">file_relative_path</span><span class=\"p\">,</span> <span class=\"n\">graph</span>\n\n\n<span class=\"nd\">@graph</span>\n<span class=\"k\">def</span> <span class=\"nf\">my_graph</span><span class=\"p\">():</span>\n    <span class=\"n\">a</span> <span class=\"o\">=</span> <span class=\"n\">create_shell_script_op</span><span class=\"p\">(</span><span class=\"n\">file_relative_path</span><span class=\"p\">(</span><span class=\"vm\">__file__</span><span class=\"p\">,</span> <span class=\"s2\">&quot;hello_world.sh&quot;</span><span class=\"p\">),</span> <span class=\"n\">name</span><span class=\"o\">=</span><span class=\"s2\">&quot;a&quot;</span><span class=\"p\">)</span>\n    <span class=\"n\">a</span><span class=\"p\">()</span>\n</pre></div>\n</div>\n<dl class=\"field-list simple\">\n<dt class=\"field-odd\">Parameters</dt>\n<dd class=\"field-odd\"><ul class=\"simple\">\n<li><p><strong>shell_script_path</strong> (<a class=\"reference external\" href=\"https://docs.python.org/3/library/stdtypes.html#str\" title=\"(in Python v3.8)\"><em>str</em></a>) \u2013 The script file to execute.</p></li>\n<li><p><strong>name</strong> (<a class=\"reference external\" href=\"https://docs.python.org/3/library/stdtypes.html#str\" title=\"(in Python v3.8)\"><em>str</em></a><em>, </em><em>optional</em>) \u2013 The name of this op. Defaults to \u201ccreate_shell_script_op\u201d.</p></li>\n<li><p><strong>input_defs</strong> (<em>List</em><em>[</em><a class=\"reference internal\" href=\"../../solids#dagster.InputDefinition\" title=\"dagster.InputDefinition\"><em>InputDefinition</em></a><em>]</em><em>, </em><em>optional</em>) \u2013 input definitions for the op. Defaults to\na single Nothing input.</p></li>\n</ul>\n</dd>\n<dt class=\"field-even\">Raises</dt>\n<dd class=\"field-even\"><p><a class=\"reference internal\" href=\"../../ops#dagster.Failure\" title=\"dagster.Failure\"><strong>Failure</strong></a> \u2013 Raised when the shell command returns a non-zero exit code.</p>\n</dd>\n<dt class=\"field-odd\">Returns</dt>\n<dd class=\"field-odd\"><p>Returns the constructed op definition.</p>\n</dd>\n<dt class=\"field-even\">Return type</dt>\n<dd class=\"field-even\"><p><a class=\"reference internal\" href=\"../../ops#dagster.OpDefinition\" title=\"dagster.OpDefinition\">OpDefinition</a></p>\n</dd>\n</dl>\n</dd></dl>\n\n<dl class=\"py function\">\n<dt id=\"dagster_shell.shell_op\">\n<code class=\"sig-prename descclassname\"><span class=\"pre\">dagster_shell.</span></code><code class=\"sig-name descname\"><span class=\"pre\">shell_op</span></code><span class=\"sig-paren\">(</span><em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">context</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">shell_command</span></span></em><span class=\"sig-paren\">)</span><a class=\"headerlink\" href=\"#dagster_shell.shell_op\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd></dd></dl>\n\n</div>\n<div class=\"section\" id=\"legacy-apis\">\n<h1>Legacy APIs<a class=\"headerlink\" href=\"#legacy-apis\" title=\"Permalink to this headline\">\u00b6</a></h1>\n<dl class=\"py function\">\n<dt id=\"dagster_shell.create_shell_command_solid\">\n<code class=\"sig-prename descclassname\"><span class=\"pre\">dagster_shell.</span></code><code class=\"sig-name descname\"><span class=\"pre\">create_shell_command_solid</span></code><span class=\"sig-paren\">(</span><em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">shell_command</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">name</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">description</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">None</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">required_resource_keys</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">None</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">tags</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">None</span></span></em><span class=\"sig-paren\">)</span><a class=\"reference internal\" href=\"../../../../../_modules/dagster_shell/solids#create_shell_command_solid\"><span class=\"viewcode-link\"><span class=\"pre\">[source]</span></span></a><a class=\"headerlink\" href=\"#dagster_shell.create_shell_command_solid\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>This function is a factory that constructs solids to execute a shell command.</p>\n<p>Note that you can only use <code class=\"docutils literal notranslate\"><span class=\"pre\">shell_command_solid</span></code> if you know the command you\u2019d like to execute\nat pipeline construction time. If you\u2019d like to construct shell commands dynamically during\npipeline execution and pass them between solids, you should use <code class=\"docutils literal notranslate\"><span class=\"pre\">shell_solid</span></code> instead.</p>\n<p>Examples:</p>\n<div class=\"highlight-python notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"c1\"># pylint: disable=no-value-for-parameter</span>\n<span class=\"kn\">from</span> <span class=\"nn\">dagster_shell</span> <span class=\"kn\">import</span> <span class=\"n\">create_shell_command_solid</span>\n\n<span class=\"kn\">from</span> <span class=\"nn\">dagster</span> <span class=\"kn\">import</span> <span class=\"n\">pipeline</span>\n\n\n<span class=\"nd\">@pipeline</span>\n<span class=\"k\">def</span> <span class=\"nf\">pipe</span><span class=\"p\">():</span>\n    <span class=\"n\">a</span> <span class=\"o\">=</span> <span class=\"n\">create_shell_command_solid</span><span class=\"p\">(</span><span class=\"s1\">&#39;echo &quot;hello, world!&quot;&#39;</span><span class=\"p\">,</span> <span class=\"n\">name</span><span class=\"o\">=</span><span class=\"s2\">&quot;a&quot;</span><span class=\"p\">)</span>\n    <span class=\"n\">a</span><span class=\"p\">()</span>\n</pre></div>\n</div>\n<dl class=\"field-list simple\">\n<dt class=\"field-odd\">Parameters</dt>\n<dd class=\"field-odd\"><ul class=\"simple\">\n<li><p><strong>shell_command</strong> (<a class=\"reference external\" href=\"https://docs.python.org/3/library/stdtypes.html#str\" title=\"(in Python v3.8)\"><em>str</em></a>) \u2013 The shell command that the constructed solid will execute.</p></li>\n<li><p><strong>name</strong> (<a class=\"reference external\" href=\"https://docs.python.org/3/library/stdtypes.html#str\" title=\"(in Python v3.8)\"><em>str</em></a>) \u2013 The name of the constructed solid.</p></li>\n<li><p><strong>description</strong> (<em>Optional</em><em>[</em><a class=\"reference external\" href=\"https://docs.python.org/3/library/stdtypes.html#str\" title=\"(in Python v3.8)\"><em>str</em></a><em>]</em>) \u2013 Human-readable description of this solid.</p></li>\n<li><p><strong>required_resource_keys</strong> (<em>Optional</em><em>[</em><em>Set</em><em>[</em><a class=\"reference external\" href=\"https://docs.python.org/3/library/stdtypes.html#str\" title=\"(in Python v3.8)\"><em>str</em></a><em>]</em><em>]</em>) \u2013 Set of resource handles required by this solid.\nSetting this ensures that resource spin up for the required resources will occur before\nthe shell command is executed.</p></li>\n<li><p><strong>tags</strong> (<em>Optional</em><em>[</em><em>Dict</em><em>[</em><a class=\"reference external\" href=\"https://docs.python.org/3/library/stdtypes.html#str\" title=\"(in Python v3.8)\"><em>str</em></a><em>, </em><em>Any</em><em>]</em><em>]</em>) \u2013 Arbitrary metadata for the solid. Frameworks may\nexpect and require certain metadata to be attached to a solid. Users should generally\nnot set metadata directly. Values that are not strings will be json encoded and must meet\nthe criteria that <cite>json.loads(json.dumps(value)) == value</cite>.</p></li>\n</ul>\n</dd>\n<dt class=\"field-even\">Raises</dt>\n<dd class=\"field-even\"><p><a class=\"reference internal\" href=\"../../ops#dagster.Failure\" title=\"dagster.Failure\"><strong>Failure</strong></a> \u2013 Raised when the shell command returns a non-zero exit code.</p>\n</dd>\n<dt class=\"field-odd\">Returns</dt>\n<dd class=\"field-odd\"><p>Returns the constructed solid definition.</p>\n</dd>\n<dt class=\"field-even\">Return type</dt>\n<dd class=\"field-even\"><p><a class=\"reference internal\" href=\"../../solids#dagster.SolidDefinition\" title=\"dagster.SolidDefinition\">SolidDefinition</a></p>\n</dd>\n</dl>\n</dd></dl>\n\n<dl class=\"py function\">\n<dt id=\"dagster_shell.create_shell_script_solid\">\n<code class=\"sig-prename descclassname\"><span class=\"pre\">dagster_shell.</span></code><code class=\"sig-name descname\"><span class=\"pre\">create_shell_script_solid</span></code><span class=\"sig-paren\">(</span><em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">shell_script_path</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">name</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">'create_shell_script_solid'</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">input_defs</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">None</span></span></em>, <em class=\"sig-param\"><span class=\"o\"><span class=\"pre\">**</span></span><span class=\"n\"><span class=\"pre\">kwargs</span></span></em><span class=\"sig-paren\">)</span><a class=\"reference internal\" href=\"../../../../../_modules/dagster_shell/solids#create_shell_script_solid\"><span class=\"viewcode-link\"><span class=\"pre\">[source]</span></span></a><a class=\"headerlink\" href=\"#dagster_shell.create_shell_script_solid\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>This function is a factory which constructs a solid that will execute a shell command read\nfrom a script file.</p>\n<p>Any kwargs passed to this function will be passed along to the underlying <a class=\"reference internal\" href=\"../../solids#dagster.solid\" title=\"dagster.solid\"><code class=\"xref py py-func docutils literal notranslate\"><span class=\"pre\">&#64;solid</span></code></a> decorator. However, note that overriding <code class=\"docutils literal notranslate\"><span class=\"pre\">config</span></code> or <code class=\"docutils literal notranslate\"><span class=\"pre\">output_defs</span></code> is not\nsupported.</p>\n<p>You might consider using <a class=\"reference internal\" href=\"../../solids#dagster.composite_solid\" title=\"dagster.composite_solid\"><code class=\"xref py py-func docutils literal notranslate\"><span class=\"pre\">&#64;composite_solid</span></code></a> to wrap this solid\nin the cases where you\u2019d like to configure the shell solid with different config fields.</p>\n<p>Examples:</p>\n<div class=\"highlight-python notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"c1\"># pylint: disable=no-value-for-parameter</span>\n<span class=\"kn\">from</span> <span class=\"nn\">dagster_shell</span> <span class=\"kn\">import</span> <span class=\"n\">create_shell_script_solid</span>\n\n<span class=\"kn\">from</span> <span class=\"nn\">dagster</span> <span class=\"kn\">import</span> <span class=\"n\">file_relative_path</span><span class=\"p\">,</span> <span class=\"n\">pipeline</span>\n\n\n<span class=\"nd\">@pipeline</span>\n<span class=\"k\">def</span> <span class=\"nf\">pipe</span><span class=\"p\">():</span>\n    <span class=\"n\">a</span> <span class=\"o\">=</span> <span class=\"n\">create_shell_script_solid</span><span class=\"p\">(</span><span class=\"n\">file_relative_path</span><span class=\"p\">(</span><span class=\"vm\">__file__</span><span class=\"p\">,</span> <span class=\"s2\">&quot;hello_world.sh&quot;</span><span class=\"p\">),</span> <span class=\"n\">name</span><span class=\"o\">=</span><span class=\"s2\">&quot;a&quot;</span><span class=\"p\">)</span>\n    <span class=\"n\">a</span><span class=\"p\">()</span>\n</pre></div>\n</div>\n<dl class=\"field-list simple\">\n<dt class=\"field-odd\">Parameters</dt>\n<dd class=\"field-odd\"><ul class=\"simple\">\n<li><p><strong>shell_script_path</strong> (<a class=\"reference external\" href=\"https://docs.python.org/3/library/stdtypes.html#str\" title=\"(in Python v3.8)\"><em>str</em></a>) \u2013 The script file to execute.</p></li>\n<li><p><strong>name</strong> (<a class=\"reference external\" href=\"https://docs.python.org/3/library/stdtypes.html#str\" title=\"(in Python v3.8)\"><em>str</em></a><em>, </em><em>optional</em>) \u2013 The name of this solid. Defaults to \u201ccreate_shell_script_solid\u201d.</p></li>\n<li><p><strong>input_defs</strong> (<em>List</em><em>[</em><a class=\"reference internal\" href=\"../../solids#dagster.InputDefinition\" title=\"dagster.InputDefinition\"><em>InputDefinition</em></a><em>]</em><em>, </em><em>optional</em>) \u2013 input definitions for the solid. Defaults to\na single Nothing input.</p></li>\n</ul>\n</dd>\n<dt class=\"field-even\">Raises</dt>\n<dd class=\"field-even\"><p><a class=\"reference internal\" href=\"../../ops#dagster.Failure\" title=\"dagster.Failure\"><strong>Failure</strong></a> \u2013 Raised when the shell command returns a non-zero exit code.</p>\n</dd>\n<dt class=\"field-odd\">Returns</dt>\n<dd class=\"field-odd\"><p>Returns the constructed solid definition.</p>\n</dd>\n<dt class=\"field-even\">Return type</dt>\n<dd class=\"field-even\"><p><a class=\"reference internal\" href=\"../../solids#dagster.SolidDefinition\" title=\"dagster.SolidDefinition\">SolidDefinition</a></p>\n</dd>\n</dl>\n</dd></dl>\n\n<dl class=\"py function\">\n<dt id=\"dagster_shell.shell_solid\">\n<code class=\"sig-prename descclassname\"><span class=\"pre\">dagster_shell.</span></code><code class=\"sig-name descname\"><span class=\"pre\">shell_solid</span></code><span class=\"sig-paren\">(</span><em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">context</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">shell_command</span></span></em><span class=\"sig-paren\">)</span><a class=\"headerlink\" href=\"#dagster_shell.shell_solid\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd></dd></dl>\n\n</div>\n", "current_page_name": "sections/api/apidocs/libraries/dagster-shell", "customsidebar": null, "display_toc": true, "meta": null, "metatags": "", "next": {"link": "../dagster-slack/", "title": "Slack (dagster-slack)"}, "page_source_suffix": ".rst", "parents": [], "prev": {"link": "../dagster-pyspark/", "title": "Pyspark (dagster-pyspark)"}, "rellinks": [["genindex", "General Index", "I", "index"], ["py-modindex", "Python Module Index", "", "modules"], ["sections/api/apidocs/libraries/dagster-slack", "Slack (dagster-slack)", "N", "next"], ["sections/api/apidocs/libraries/dagster-pyspark", "Pyspark (dagster-pyspark)", "P", "previous"]], "sidebars": ["globaltoc.html", "searchbox.html"], "sourcename": "sections/api/apidocs/libraries/dagster-shell.rst.txt", "title": "Shell (dagster-shell)", "toc": "<ul>\n<li><a class=\"reference internal\" href=\"#\">Shell (dagster-shell)</a></li>\n<li><a class=\"reference internal\" href=\"#apis\">APIs</a></li>\n<li><a class=\"reference internal\" href=\"#legacy-apis\">Legacy APIs</a></li>\n</ul>\n"}, "dagster-slack": {"alabaster_version": "0.7.12", "body": "<div class=\"section\" id=\"slack-dagster-slack\">\n<h1>Slack (dagster-slack)<a class=\"headerlink\" href=\"#slack-dagster-slack\" title=\"Permalink to this headline\">\u00b6</a></h1>\n<p><span class=\"raw-html-m2r\"><img src=\"https://user-images.githubusercontent.com/609349/57994610-c581f680-7a72-11e9-85cd-41fd649cc26d.png\" /></span></p>\n<div class=\"line-block\">\n<div class=\"line\"><br /></div>\n</div>\n<p>This library provides an integration with Slack, to support posting messages in your company\u2019s Slack workspace.</p>\n<div class=\"line-block\">\n<div class=\"line\"><br /></div>\n</div>\n<p>Presently, it provides a thin wrapper on the Slack client API <a class=\"reference external\" href=\"https://api.slack.com/methods/chat.postMessage\">chat.postMessage</a>.</p>\n<div class=\"line-block\">\n<div class=\"line\"><br /></div>\n</div>\n<p>To use this integration, you\u2019ll first need to create a Slack App for it.</p>\n<ol class=\"arabic\">\n<li><p><strong>Create App</strong>: Go to <a class=\"reference external\" href=\"https://api.slack.com/apps\">https://api.slack.com/apps</a> and click \u201cCreate New App\u201d:</p>\n<p><span class=\"raw-html-m2r\"><img width=200px src=\"https://user-images.githubusercontent.com/609349/57993925-d3824800-7a6f-11e9-8618-bdd1611f15a4.png\" /></span></p>\n</li>\n<li><p><strong>Install App</strong>: After creating an app, on the left-hand side of the app configuration, click \u201cBot Users\u201d, and then create a bot user. Then, click \u201cInstall App\u201d on the left hand side, and finally \u201cInstall App to Workspace\u201d.</p></li>\n<li><p><strong>Bot Token</strong>: Once finished, this will create a new bot token for your bot/workspace:</p>\n<p><span class=\"raw-html-m2r\"><img width=600px src=\"https://user-images.githubusercontent.com/609349/57994422-ed248f00-7a71-11e9-9cbc-f6869ed33315.png\" /></span></p>\n</li>\n</ol>\n<p>Copy this bot token and put it somewhere safe; see <a class=\"reference external\" href=\"https://api.slack.com/docs/oauth-safety\">Safely Storing Credentials</a> for more on this topic.</p>\n<dl class=\"py data\">\n<dt id=\"dagster_slack.slack_resource\">\n<code class=\"sig-prename descclassname\"><span class=\"pre\">dagster_slack.</span></code><code class=\"sig-name descname\"><span class=\"pre\">slack_resource</span></code><em class=\"property\"> <span class=\"pre\">ResourceDefinition</span></em><a class=\"reference internal\" href=\"../../../../../_modules/dagster_slack/resources#slack_resource\"><span class=\"viewcode-link\"><span class=\"pre\">[source]</span></span></a><a class=\"headerlink\" href=\"#dagster_slack.slack_resource\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>This resource is for connecting to Slack.</p>\n<p>The resource object is a <cite>slack_sdk.WebClient</cite>.</p>\n<p>By configuring this Slack resource, you can post messages to Slack from any Dagster op:</p>\n<p>Examples:</p>\n<div class=\"highlight-python notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"kn\">import</span> <span class=\"nn\">os</span>\n\n<span class=\"kn\">from</span> <span class=\"nn\">dagster</span> <span class=\"kn\">import</span> <span class=\"n\">job</span><span class=\"p\">,</span> <span class=\"n\">op</span>\n<span class=\"kn\">from</span> <span class=\"nn\">dagster_slack</span> <span class=\"kn\">import</span> <span class=\"n\">slack_resource</span>\n\n\n<span class=\"nd\">@op</span><span class=\"p\">(</span><span class=\"n\">required_resource_keys</span><span class=\"o\">=</span><span class=\"p\">{</span><span class=\"s1\">&#39;slack&#39;</span><span class=\"p\">})</span>\n<span class=\"k\">def</span> <span class=\"nf\">slack_op</span><span class=\"p\">(</span><span class=\"n\">context</span><span class=\"p\">):</span>\n    <span class=\"n\">context</span><span class=\"o\">.</span><span class=\"n\">resources</span><span class=\"o\">.</span><span class=\"n\">slack</span><span class=\"o\">.</span><span class=\"n\">chat_postMessage</span><span class=\"p\">(</span><span class=\"n\">channel</span><span class=\"o\">=</span><span class=\"s1\">&#39;#noise&#39;</span><span class=\"p\">,</span> <span class=\"n\">text</span><span class=\"o\">=</span><span class=\"s1\">&#39;:wave: hey there!&#39;</span><span class=\"p\">)</span>\n\n<span class=\"nd\">@job</span><span class=\"p\">(</span><span class=\"n\">resource_defs</span><span class=\"o\">=</span><span class=\"p\">{</span><span class=\"s1\">&#39;slack&#39;</span><span class=\"p\">:</span> <span class=\"n\">slack_resource</span><span class=\"p\">})</span>\n<span class=\"k\">def</span> <span class=\"nf\">slack_job</span><span class=\"p\">():</span>\n    <span class=\"n\">slack_op</span><span class=\"p\">()</span>\n\n<span class=\"n\">slack_job</span><span class=\"o\">.</span><span class=\"n\">execute_in_process</span><span class=\"p\">(</span>\n    <span class=\"n\">run_config</span><span class=\"o\">=</span><span class=\"p\">{</span><span class=\"s1\">&#39;resources&#39;</span><span class=\"p\">:</span> <span class=\"p\">{</span><span class=\"s1\">&#39;slack&#39;</span><span class=\"p\">:</span> <span class=\"p\">{</span><span class=\"s1\">&#39;config&#39;</span><span class=\"p\">:</span> <span class=\"p\">{</span><span class=\"s1\">&#39;token&#39;</span><span class=\"p\">:</span> <span class=\"n\">os</span><span class=\"o\">.</span><span class=\"n\">getenv</span><span class=\"p\">(</span><span class=\"s1\">&#39;SLACK_TOKEN&#39;</span><span class=\"p\">)}}}}</span>\n<span class=\"p\">)</span>\n</pre></div>\n</div>\n</dd></dl>\n\n<dl class=\"py data\">\n<dt id=\"dagster_slack.slack_on_failure\">\n<code class=\"sig-prename descclassname\"><span class=\"pre\">dagster_slack.</span></code><code class=\"sig-name descname\"><span class=\"pre\">slack_on_failure</span></code><em class=\"property\"> <span class=\"pre\">HookDefinition</span></em><a class=\"reference internal\" href=\"../../../../../_modules/dagster_slack/hooks#slack_on_failure\"><span class=\"viewcode-link\"><span class=\"pre\">[source]</span></span></a><a class=\"headerlink\" href=\"#dagster_slack.slack_on_failure\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Create a hook on step failure events that will message the given Slack channel.</p>\n<dl class=\"field-list simple\">\n<dt class=\"field-odd\">Parameters</dt>\n<dd class=\"field-odd\"><ul class=\"simple\">\n<li><p><strong>channel</strong> (<a class=\"reference external\" href=\"https://docs.python.org/3/library/stdtypes.html#str\" title=\"(in Python v3.8)\"><em>str</em></a>) \u2013 The channel to send the message to (e.g. \u201c#my_channel\u201d)</p></li>\n<li><p><strong>message_fn</strong> (<em>Optional</em><em>(</em><em>Callable</em><em>[</em><em>[</em><a class=\"reference internal\" href=\"../../hooks#dagster.HookContext\" title=\"dagster.HookContext\"><em>HookContext</em></a><em>]</em><em>, </em><a class=\"reference external\" href=\"https://docs.python.org/3/library/stdtypes.html#str\" title=\"(in Python v3.8)\"><em>str</em></a><em>]</em><em>)</em>) \u2013 Function which takes in the HookContext\noutputs the message you want to send.</p></li>\n<li><p><strong>dagit_base_url</strong> \u2013 (Optional[str]): The base url of your Dagit instance. Specify this to allow\nmessages to include deeplinks to the specific pipeline run that triggered the hook.</p></li>\n</ul>\n</dd>\n</dl>\n<p class=\"rubric\">Examples</p>\n<div class=\"highlight-python notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"nd\">@slack_on_failure</span><span class=\"p\">(</span><span class=\"s2\">&quot;#foo&quot;</span><span class=\"p\">,</span> <span class=\"n\">dagit_base_url</span><span class=\"o\">=</span><span class=\"s2\">&quot;http://localhost:3000&quot;</span><span class=\"p\">)</span>\n<span class=\"nd\">@job</span><span class=\"p\">(</span><span class=\"o\">...</span><span class=\"p\">)</span>\n<span class=\"k\">def</span> <span class=\"nf\">my_job</span><span class=\"p\">():</span>\n    <span class=\"k\">pass</span>\n</pre></div>\n</div>\n<div class=\"highlight-python notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"k\">def</span> <span class=\"nf\">my_message_fn</span><span class=\"p\">(</span><span class=\"n\">context</span><span class=\"p\">:</span> <span class=\"n\">HookContext</span><span class=\"p\">)</span> <span class=\"o\">-&gt;</span> <span class=\"nb\">str</span><span class=\"p\">:</span>\n    <span class=\"k\">return</span> <span class=\"sa\">f</span><span class=\"s2\">&quot;Op </span><span class=\"si\">{</span><span class=\"n\">context</span><span class=\"o\">.</span><span class=\"n\">op</span><span class=\"si\">}</span><span class=\"s2\"> failed!&quot;</span>\n\n<span class=\"nd\">@op</span>\n<span class=\"k\">def</span> <span class=\"nf\">an_op</span><span class=\"p\">(</span><span class=\"n\">context</span><span class=\"p\">):</span>\n    <span class=\"k\">pass</span>\n\n<span class=\"nd\">@job</span><span class=\"p\">(</span><span class=\"o\">...</span><span class=\"p\">)</span>\n<span class=\"k\">def</span> <span class=\"nf\">my_job</span><span class=\"p\">():</span>\n    <span class=\"n\">an_op</span><span class=\"o\">.</span><span class=\"n\">with_hooks</span><span class=\"p\">(</span><span class=\"n\">hook_defs</span><span class=\"o\">=</span><span class=\"p\">{</span><span class=\"n\">slack_on_failure</span><span class=\"p\">(</span><span class=\"s2\">&quot;#foo&quot;</span><span class=\"p\">,</span> <span class=\"n\">my_message_fn</span><span class=\"p\">)})</span>\n</pre></div>\n</div>\n</dd></dl>\n\n<dl class=\"py data\">\n<dt id=\"dagster_slack.slack_on_success\">\n<code class=\"sig-prename descclassname\"><span class=\"pre\">dagster_slack.</span></code><code class=\"sig-name descname\"><span class=\"pre\">slack_on_success</span></code><em class=\"property\"> <span class=\"pre\">HookDefinition</span></em><a class=\"reference internal\" href=\"../../../../../_modules/dagster_slack/hooks#slack_on_success\"><span class=\"viewcode-link\"><span class=\"pre\">[source]</span></span></a><a class=\"headerlink\" href=\"#dagster_slack.slack_on_success\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Create a hook on step success events that will message the given Slack channel.</p>\n<dl class=\"field-list simple\">\n<dt class=\"field-odd\">Parameters</dt>\n<dd class=\"field-odd\"><ul class=\"simple\">\n<li><p><strong>channel</strong> (<a class=\"reference external\" href=\"https://docs.python.org/3/library/stdtypes.html#str\" title=\"(in Python v3.8)\"><em>str</em></a>) \u2013 The channel to send the message to (e.g. \u201c#my_channel\u201d)</p></li>\n<li><p><strong>message_fn</strong> (<em>Optional</em><em>(</em><em>Callable</em><em>[</em><em>[</em><a class=\"reference internal\" href=\"../../hooks#dagster.HookContext\" title=\"dagster.HookContext\"><em>HookContext</em></a><em>]</em><em>, </em><a class=\"reference external\" href=\"https://docs.python.org/3/library/stdtypes.html#str\" title=\"(in Python v3.8)\"><em>str</em></a><em>]</em><em>)</em>) \u2013 Function which takes in the HookContext\noutputs the message you want to send.</p></li>\n<li><p><strong>dagit_base_url</strong> \u2013 (Optional[str]): The base url of your Dagit instance. Specify this to allow\nmessages to include deeplinks to the specific pipeline run that triggered the hook.</p></li>\n</ul>\n</dd>\n</dl>\n<p class=\"rubric\">Examples</p>\n<div class=\"highlight-python notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"nd\">@slack_on_success</span><span class=\"p\">(</span><span class=\"s2\">&quot;#foo&quot;</span><span class=\"p\">,</span> <span class=\"n\">dagit_base_url</span><span class=\"o\">=</span><span class=\"s2\">&quot;http://localhost:3000&quot;</span><span class=\"p\">)</span>\n<span class=\"nd\">@job</span><span class=\"p\">(</span><span class=\"o\">...</span><span class=\"p\">)</span>\n<span class=\"k\">def</span> <span class=\"nf\">my_job</span><span class=\"p\">():</span>\n    <span class=\"k\">pass</span>\n</pre></div>\n</div>\n<div class=\"highlight-python notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"k\">def</span> <span class=\"nf\">my_message_fn</span><span class=\"p\">(</span><span class=\"n\">context</span><span class=\"p\">:</span> <span class=\"n\">HookContext</span><span class=\"p\">)</span> <span class=\"o\">-&gt;</span> <span class=\"nb\">str</span><span class=\"p\">:</span>\n    <span class=\"k\">return</span> <span class=\"sa\">f</span><span class=\"s2\">&quot;Op </span><span class=\"si\">{</span><span class=\"n\">context</span><span class=\"o\">.</span><span class=\"n\">op</span><span class=\"si\">}</span><span class=\"s2\"> worked!&quot;</span>\n\n<span class=\"nd\">@op</span>\n<span class=\"k\">def</span> <span class=\"nf\">an_op</span><span class=\"p\">(</span><span class=\"n\">context</span><span class=\"p\">):</span>\n    <span class=\"k\">pass</span>\n\n<span class=\"nd\">@job</span><span class=\"p\">(</span><span class=\"o\">...</span><span class=\"p\">)</span>\n<span class=\"k\">def</span> <span class=\"nf\">my_job</span><span class=\"p\">():</span>\n    <span class=\"n\">an_op</span><span class=\"o\">.</span><span class=\"n\">with_hooks</span><span class=\"p\">(</span><span class=\"n\">hook_defs</span><span class=\"o\">=</span><span class=\"p\">{</span><span class=\"n\">slack_on_success</span><span class=\"p\">(</span><span class=\"s2\">&quot;#foo&quot;</span><span class=\"p\">,</span> <span class=\"n\">my_message_fn</span><span class=\"p\">)})</span>\n</pre></div>\n</div>\n</dd></dl>\n\n<dl class=\"py function\">\n<dt id=\"dagster_slack.make_slack_on_run_failure_sensor\">\n<code class=\"sig-prename descclassname\"><span class=\"pre\">dagster_slack.</span></code><code class=\"sig-name descname\"><span class=\"pre\">make_slack_on_run_failure_sensor</span></code><span class=\"sig-paren\">(</span><em class=\"sig-param\"><span class=\"pre\">channel</span></em>, <em class=\"sig-param\"><span class=\"pre\">slack_token</span></em>, <em class=\"sig-param\"><span class=\"pre\">text_fn=&lt;function</span> <span class=\"pre\">_default_failure_message_text_fn&gt;</span></em>, <em class=\"sig-param\"><span class=\"pre\">blocks_fn=None</span></em>, <em class=\"sig-param\"><span class=\"pre\">name=None</span></em>, <em class=\"sig-param\"><span class=\"pre\">dagit_base_url=None</span></em>, <em class=\"sig-param\"><span class=\"pre\">job_selection=None</span></em>, <em class=\"sig-param\"><span class=\"pre\">default_status=&lt;DefaultSensorStatus.STOPPED:</span> <span class=\"pre\">'STOPPED'&gt;</span></em><span class=\"sig-paren\">)</span><a class=\"reference internal\" href=\"../../../../../_modules/dagster_slack/sensors#make_slack_on_run_failure_sensor\"><span class=\"viewcode-link\"><span class=\"pre\">[source]</span></span></a><a class=\"headerlink\" href=\"#dagster_slack.make_slack_on_run_failure_sensor\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Create a sensor on job failures that will message the given Slack channel.</p>\n<dl class=\"field-list simple\">\n<dt class=\"field-odd\">Parameters</dt>\n<dd class=\"field-odd\"><ul class=\"simple\">\n<li><p><strong>channel</strong> (<a class=\"reference external\" href=\"https://docs.python.org/3/library/stdtypes.html#str\" title=\"(in Python v3.8)\"><em>str</em></a>) \u2013 The channel to send the message to (e.g. \u201c#my_channel\u201d)</p></li>\n<li><p><strong>slack_token</strong> (<a class=\"reference external\" href=\"https://docs.python.org/3/library/stdtypes.html#str\" title=\"(in Python v3.8)\"><em>str</em></a>) \u2013 The slack token.\nTokens are typically either user tokens or bot tokens. More in the Slack API\ndocumentation here: <a class=\"reference external\" href=\"https://api.slack.com/docs/token-types\">https://api.slack.com/docs/token-types</a></p></li>\n<li><p><strong>text_fn</strong> (<em>Optional</em><em>(</em><em>Callable</em><em>[</em><em>[</em><a class=\"reference internal\" href=\"../../schedules-sensors#dagster.RunFailureSensorContext\" title=\"dagster.RunFailureSensorContext\"><em>RunFailureSensorContext</em></a><em>]</em><em>, </em><a class=\"reference external\" href=\"https://docs.python.org/3/library/stdtypes.html#str\" title=\"(in Python v3.8)\"><em>str</em></a><em>]</em><em>)</em>) \u2013 Function which\ntakes in the <code class=\"docutils literal notranslate\"><span class=\"pre\">RunFailureSensorContext</span></code> and outputs the message you want to send.\nDefaults to a text message that contains error message, job name, and run ID.\nThe usage of the <cite>text_fn</cite> changes depending on whether you\u2019re using <cite>blocks_fn</cite>. If you\nare using <cite>blocks_fn</cite>, this is used as a fallback string to display in notifications. If\nyou aren\u2019t, this is the main body text of the message. It can be formatted as plain text,\nor with mrkdwn.\nSee more details in <a class=\"reference external\" href=\"https://api.slack.com/methods/chat.postMessage#text_usage\">https://api.slack.com/methods/chat.postMessage#text_usage</a></p></li>\n<li><p><strong>blocks_fn</strong> (<em>Callable</em><em>[</em><em>[</em><a class=\"reference internal\" href=\"../../schedules-sensors#dagster.RunFailureSensorContext\" title=\"dagster.RunFailureSensorContext\"><em>RunFailureSensorContext</em></a><em>]</em><em>, </em><em>List</em><em>[</em><em>Dict</em><em>]</em><em>]</em>) \u2013 Function which takes in\nthe <code class=\"docutils literal notranslate\"><span class=\"pre\">RunFailureSensorContext</span></code> and outputs the message blocks you want to send.\nSee information about Blocks in <a class=\"reference external\" href=\"https://api.slack.com/reference/block-kit/blocks\">https://api.slack.com/reference/block-kit/blocks</a></p></li>\n<li><p><strong>name</strong> \u2013 (Optional[str]): The name of the sensor. Defaults to \u201cslack_on_run_failure\u201d.</p></li>\n<li><p><strong>dagit_base_url</strong> \u2013 (Optional[str]): The base url of your Dagit instance. Specify this to allow\nmessages to include deeplinks to the failed job run.</p></li>\n<li><p><strong>job_selection</strong> (<em>Optional</em><em>[</em><em>List</em><em>[</em><em>Union</em><em>[</em><a class=\"reference internal\" href=\"../../pipeline#dagster.PipelineDefinition\" title=\"dagster.PipelineDefinition\"><em>PipelineDefinition</em></a><em>, </em><a class=\"reference internal\" href=\"../../graphs#dagster.GraphDefinition\" title=\"dagster.GraphDefinition\"><em>GraphDefinition</em></a><em>]</em><em>]</em><em>]</em>) \u2013 The jobs that\nwill be monitored by this failure sensor. Defaults to None, which means the alert will\nbe sent when any job in the repository fails.</p></li>\n<li><p><strong>default_status</strong> (<em>DefaultSensorStatus</em>) \u2013 Whether the sensor starts as running or not. The default\nstatus can be overridden from Dagit or via the GraphQL API.</p></li>\n</ul>\n</dd>\n</dl>\n<p class=\"rubric\">Examples</p>\n<div class=\"highlight-python notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"n\">slack_on_run_failure</span> <span class=\"o\">=</span> <span class=\"n\">make_slack_on_run_failure_sensor</span><span class=\"p\">(</span>\n    <span class=\"s2\">&quot;#my_channel&quot;</span><span class=\"p\">,</span>\n    <span class=\"n\">os</span><span class=\"o\">.</span><span class=\"n\">getenv</span><span class=\"p\">(</span><span class=\"s2\">&quot;MY_SLACK_TOKEN&quot;</span><span class=\"p\">)</span>\n<span class=\"p\">)</span>\n\n<span class=\"nd\">@repository</span>\n<span class=\"k\">def</span> <span class=\"nf\">my_repo</span><span class=\"p\">():</span>\n    <span class=\"k\">return</span> <span class=\"p\">[</span><span class=\"n\">my_job</span> <span class=\"o\">+</span> <span class=\"n\">slack_on_run_failure</span><span class=\"p\">]</span>\n</pre></div>\n</div>\n<div class=\"highlight-python notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"k\">def</span> <span class=\"nf\">my_message_fn</span><span class=\"p\">(</span><span class=\"n\">context</span><span class=\"p\">:</span> <span class=\"n\">RunFailureSensorContext</span><span class=\"p\">)</span> <span class=\"o\">-&gt;</span> <span class=\"nb\">str</span><span class=\"p\">:</span>\n    <span class=\"k\">return</span> <span class=\"p\">(</span>\n        <span class=\"sa\">f</span><span class=\"s2\">&quot;Job </span><span class=\"si\">{</span><span class=\"n\">context</span><span class=\"o\">.</span><span class=\"n\">pipeline_run</span><span class=\"o\">.</span><span class=\"n\">pipeline_name</span><span class=\"si\">}</span><span class=\"s2\"> failed!&quot;</span>\n        <span class=\"sa\">f</span><span class=\"s2\">&quot;Error: </span><span class=\"si\">{</span><span class=\"n\">context</span><span class=\"o\">.</span><span class=\"n\">failure_event</span><span class=\"o\">.</span><span class=\"n\">message</span><span class=\"si\">}</span><span class=\"s2\">&quot;</span>\n    <span class=\"p\">)</span>\n\n<span class=\"n\">slack_on_run_failure</span> <span class=\"o\">=</span> <span class=\"n\">make_slack_on_run_failure_sensor</span><span class=\"p\">(</span>\n    <span class=\"n\">channel</span><span class=\"o\">=</span><span class=\"s2\">&quot;#my_channel&quot;</span><span class=\"p\">,</span>\n    <span class=\"n\">slack_token</span><span class=\"o\">=</span><span class=\"n\">os</span><span class=\"o\">.</span><span class=\"n\">getenv</span><span class=\"p\">(</span><span class=\"s2\">&quot;MY_SLACK_TOKEN&quot;</span><span class=\"p\">),</span>\n    <span class=\"n\">message_fn</span><span class=\"o\">=</span><span class=\"n\">my_message_fn</span><span class=\"p\">,</span>\n    <span class=\"n\">dagit_base_url</span><span class=\"o\">=</span><span class=\"s2\">&quot;http://mycoolsite.com&quot;</span><span class=\"p\">,</span>\n<span class=\"p\">)</span>\n</pre></div>\n</div>\n</dd></dl>\n\n<dl class=\"py function\">\n<dt id=\"dagster_slack.make_slack_on_pipeline_failure_sensor\">\n<code class=\"sig-prename descclassname\"><span class=\"pre\">dagster_slack.</span></code><code class=\"sig-name descname\"><span class=\"pre\">make_slack_on_pipeline_failure_sensor</span></code><span class=\"sig-paren\">(</span><em class=\"sig-param\"><span class=\"pre\">channel</span></em>, <em class=\"sig-param\"><span class=\"pre\">slack_token</span></em>, <em class=\"sig-param\"><span class=\"pre\">text_fn=&lt;function</span> <span class=\"pre\">_default_failure_message_text_fn&gt;</span></em>, <em class=\"sig-param\"><span class=\"pre\">blocks_fn=None</span></em>, <em class=\"sig-param\"><span class=\"pre\">pipeline_selection=None</span></em>, <em class=\"sig-param\"><span class=\"pre\">name=None</span></em>, <em class=\"sig-param\"><span class=\"pre\">dagit_base_url=None</span></em>, <em class=\"sig-param\"><span class=\"pre\">default_status=&lt;DefaultSensorStatus.STOPPED:</span> <span class=\"pre\">'STOPPED'&gt;</span></em><span class=\"sig-paren\">)</span><a class=\"reference internal\" href=\"../../../../../_modules/dagster_slack/sensors#make_slack_on_pipeline_failure_sensor\"><span class=\"viewcode-link\"><span class=\"pre\">[source]</span></span></a><a class=\"headerlink\" href=\"#dagster_slack.make_slack_on_pipeline_failure_sensor\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Create a sensor on pipeline failures that will message the given Slack channel.</p>\n<dl class=\"field-list simple\">\n<dt class=\"field-odd\">Parameters</dt>\n<dd class=\"field-odd\"><ul class=\"simple\">\n<li><p><strong>channel</strong> (<a class=\"reference external\" href=\"https://docs.python.org/3/library/stdtypes.html#str\" title=\"(in Python v3.8)\"><em>str</em></a>) \u2013 The channel to send the message to (e.g. \u201c#my_channel\u201d)</p></li>\n<li><p><strong>slack_token</strong> (<a class=\"reference external\" href=\"https://docs.python.org/3/library/stdtypes.html#str\" title=\"(in Python v3.8)\"><em>str</em></a>) \u2013 The slack token.\nTokens are typically either user tokens or bot tokens. More in the Slack API\ndocumentation here: <a class=\"reference external\" href=\"https://api.slack.com/docs/token-types\">https://api.slack.com/docs/token-types</a></p></li>\n<li><p><strong>text_fn</strong> (<em>Optional</em><em>(</em><em>Callable</em><em>[</em><em>[</em><a class=\"reference internal\" href=\"../../schedules-sensors#dagster.PipelineFailureSensorContext\" title=\"dagster.PipelineFailureSensorContext\"><em>PipelineFailureSensorContext</em></a><em>]</em><em>, </em><a class=\"reference external\" href=\"https://docs.python.org/3/library/stdtypes.html#str\" title=\"(in Python v3.8)\"><em>str</em></a><em>]</em><em>)</em>) \u2013 Function which\ntakes in the <code class=\"docutils literal notranslate\"><span class=\"pre\">PipelineFailureSensorContext</span></code> and outputs the message you want to send.\nDefaults to a text message that contains error message, pipeline name, and run ID.\nThe usage of the <cite>text_fn</cite> changes depending on whether you\u2019re using <cite>blocks_fn</cite>. If you\nare using <cite>blocks_fn</cite>, this is used as a fallback string to display in notifications. If\nyou aren\u2019t, this is the main body text of the message. It can be formatted as plain text,\nor with mrkdwn.\nSee more details in <a class=\"reference external\" href=\"https://api.slack.com/methods/chat.postMessage#text_usage\">https://api.slack.com/methods/chat.postMessage#text_usage</a></p></li>\n<li><p><strong>blocks_fn</strong> (<em>Callable</em><em>[</em><em>[</em><a class=\"reference internal\" href=\"../../schedules-sensors#dagster.PipelineFailureSensorContext\" title=\"dagster.PipelineFailureSensorContext\"><em>PipelineFailureSensorContext</em></a><em>]</em><em>, </em><em>List</em><em>[</em><em>Dict</em><em>]</em><em>]</em>) \u2013 Function which takes in\nthe <code class=\"docutils literal notranslate\"><span class=\"pre\">PipelineFailureSensorContext</span></code> and outputs the message blocks you want to send.\nSee information about Blocks in <a class=\"reference external\" href=\"https://api.slack.com/reference/block-kit/blocks\">https://api.slack.com/reference/block-kit/blocks</a></p></li>\n<li><p><strong>pipeline_selection</strong> (<em>Optional</em><em>[</em><em>List</em><em>[</em><a class=\"reference external\" href=\"https://docs.python.org/3/library/stdtypes.html#str\" title=\"(in Python v3.8)\"><em>str</em></a><em>]</em><em>]</em>) \u2013 Names of the pipelines that will be monitored by\nthis failure sensor. Defaults to None, which means the alert will be sent when any\npipeline in the repository fails.</p></li>\n<li><p><strong>name</strong> \u2013 (Optional[str]): The name of the sensor. Defaults to \u201cslack_on_pipeline_failure\u201d.</p></li>\n<li><p><strong>dagit_base_url</strong> \u2013 (Optional[str]): The base url of your Dagit instance. Specify this to allow\nmessages to include deeplinks to the failed pipeline run.</p></li>\n<li><p><strong>default_status</strong> (<em>DefaultSensorStatus</em>) \u2013 Whether the sensor starts as running or not. The default\nstatus can be overridden from Dagit or via the GraphQL API.</p></li>\n</ul>\n</dd>\n</dl>\n<p class=\"rubric\">Examples</p>\n<div class=\"highlight-python notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"n\">slack_on_pipeline_failure</span> <span class=\"o\">=</span> <span class=\"n\">make_slack_on_pipeline_failure_sensor</span><span class=\"p\">(</span>\n    <span class=\"s2\">&quot;#my_channel&quot;</span><span class=\"p\">,</span>\n    <span class=\"n\">os</span><span class=\"o\">.</span><span class=\"n\">getenv</span><span class=\"p\">(</span><span class=\"s2\">&quot;MY_SLACK_TOKEN&quot;</span><span class=\"p\">)</span>\n<span class=\"p\">)</span>\n\n<span class=\"nd\">@repository</span>\n<span class=\"k\">def</span> <span class=\"nf\">my_repo</span><span class=\"p\">():</span>\n    <span class=\"k\">return</span> <span class=\"p\">[</span><span class=\"n\">my_pipeline</span> <span class=\"o\">+</span> <span class=\"n\">slack_on_pipeline_failure</span><span class=\"p\">]</span>\n</pre></div>\n</div>\n<div class=\"highlight-python notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"k\">def</span> <span class=\"nf\">my_message_fn</span><span class=\"p\">(</span><span class=\"n\">context</span><span class=\"p\">:</span> <span class=\"n\">PipelineFailureSensorContext</span><span class=\"p\">)</span> <span class=\"o\">-&gt;</span> <span class=\"nb\">str</span><span class=\"p\">:</span>\n    <span class=\"k\">return</span> <span class=\"s2\">&quot;Pipeline </span><span class=\"si\">{pipeline_name}</span><span class=\"s2\"> failed! Error: </span><span class=\"si\">{error}</span><span class=\"s2\">&quot;</span><span class=\"o\">.</span><span class=\"n\">format</span><span class=\"p\">(</span>\n        <span class=\"n\">pipeline_name</span><span class=\"o\">=</span><span class=\"n\">context</span><span class=\"o\">.</span><span class=\"n\">pipeline_run</span><span class=\"o\">.</span><span class=\"n\">pipeline_name</span><span class=\"p\">,</span>\n        <span class=\"n\">error</span><span class=\"o\">=</span><span class=\"n\">context</span><span class=\"o\">.</span><span class=\"n\">failure_event</span><span class=\"o\">.</span><span class=\"n\">message</span><span class=\"p\">,</span>\n    <span class=\"p\">)</span>\n\n<span class=\"n\">slack_on_pipeline_failure</span> <span class=\"o\">=</span> <span class=\"n\">make_slack_on_pipeline_failure_sensor</span><span class=\"p\">(</span>\n    <span class=\"n\">channel</span><span class=\"o\">=</span><span class=\"s2\">&quot;#my_channel&quot;</span><span class=\"p\">,</span>\n    <span class=\"n\">slack_token</span><span class=\"o\">=</span><span class=\"n\">os</span><span class=\"o\">.</span><span class=\"n\">getenv</span><span class=\"p\">(</span><span class=\"s2\">&quot;MY_SLACK_TOKEN&quot;</span><span class=\"p\">),</span>\n    <span class=\"n\">message_fn</span><span class=\"o\">=</span><span class=\"n\">my_message_fn</span><span class=\"p\">,</span>\n    <span class=\"n\">dagit_base_url</span><span class=\"o\">=</span><span class=\"s2\">&quot;http://mycoolsite.com&quot;</span><span class=\"p\">,</span>\n<span class=\"p\">)</span>\n</pre></div>\n</div>\n</dd></dl>\n\n</div>\n", "current_page_name": "sections/api/apidocs/libraries/dagster-slack", "customsidebar": null, "display_toc": false, "meta": null, "metatags": "", "next": {"link": "../dagster-snowflake/", "title": "Snowflake (dagster-snowflake)"}, "page_source_suffix": ".rst", "parents": [], "prev": {"link": "../dagster-shell/", "title": "Shell (dagster-shell)"}, "rellinks": [["genindex", "General Index", "I", "index"], ["py-modindex", "Python Module Index", "", "modules"], ["sections/api/apidocs/libraries/dagster-snowflake", "Snowflake (dagster-snowflake)", "N", "next"], ["sections/api/apidocs/libraries/dagster-shell", "Shell (dagster-shell)", "P", "previous"]], "sidebars": ["globaltoc.html", "searchbox.html"], "sourcename": "sections/api/apidocs/libraries/dagster-slack.rst.txt", "title": "Slack (dagster-slack)", "toc": "<ul>\n<li><a class=\"reference internal\" href=\"#\">Slack (dagster-slack)</a></li>\n</ul>\n"}, "dagster-snowflake": {"alabaster_version": "0.7.12", "body": "<div class=\"section\" id=\"snowflake-dagster-snowflake\">\n<h1>Snowflake (dagster-snowflake)<a class=\"headerlink\" href=\"#snowflake-dagster-snowflake\" title=\"Permalink to this headline\">\u00b6</a></h1>\n<p>This library provides an integration with the <a class=\"reference external\" href=\"https://www.snowflake.com/\">Snowflake</a> data\nwarehouse.</p>\n<p>To use this library, you should first ensure that you have an appropriate <a class=\"reference external\" href=\"https://docs.snowflake.net/manuals/user-guide/admin-user-management.html\">Snowflake user</a> configured to access\nyour data warehouse.</p>\n<dl class=\"py data\">\n<dt id=\"dagster_snowflake.snowflake_resource\">\n<code class=\"sig-prename descclassname\"><span class=\"pre\">dagster_snowflake.</span></code><code class=\"sig-name descname\"><span class=\"pre\">snowflake_resource</span></code><em class=\"property\"> <span class=\"pre\">ResourceDefinition</span></em><a class=\"reference internal\" href=\"../../../../../_modules/dagster_snowflake/resources#snowflake_resource\"><span class=\"viewcode-link\"><span class=\"pre\">[source]</span></span></a><a class=\"headerlink\" href=\"#dagster_snowflake.snowflake_resource\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><div class=\"line-block\">\n<div class=\"line\"><br /></div>\n</div>\n<details class=\"summary-config-schema\">\n<summary>Config Schema:</summary><dl class=\"field-list simple\">\n<dt class=\"field-odd\">account (dagster.StringSource, optional)</dt>\n<dd class=\"field-odd\"><p>Your Snowflake account name. For more details, see  <a class=\"reference external\" href=\"https://bit.ly/2FBL320\">https://bit.ly/2FBL320</a>.</p>\n</dd>\n<dt class=\"field-even\">user (dagster.StringSource)</dt>\n<dd class=\"field-even\"><p>User login name.</p>\n</dd>\n<dt class=\"field-odd\">password (dagster.StringSource)</dt>\n<dd class=\"field-odd\"><p>User password.</p>\n</dd>\n<dt class=\"field-even\">database (dagster.StringSource, optional)</dt>\n<dd class=\"field-even\"><p>Name of the default database to use. After login, you can use USE DATABASE  to change the database.</p>\n</dd>\n<dt class=\"field-odd\">schema (dagster.StringSource, optional)</dt>\n<dd class=\"field-odd\"><p>Name of the default schema to use. After login, you can use USE SCHEMA to change the schema.</p>\n</dd>\n<dt class=\"field-even\">role (dagster.StringSource, optional)</dt>\n<dd class=\"field-even\"><p>Name of the default role to use. After login, you can use USE ROLE to change  the role.</p>\n</dd>\n<dt class=\"field-odd\">warehouse (dagster.StringSource, optional)</dt>\n<dd class=\"field-odd\"><p>Name of the default warehouse to use. After login, you can use USE WAREHOUSE to change the role.</p>\n</dd>\n<dt class=\"field-even\">autocommit (Bool, optional)</dt>\n<dd class=\"field-even\"><p>None by default, which honors the Snowflake parameter AUTOCOMMIT. Set to True or False to enable or disable autocommit mode in the session, respectively.</p>\n</dd>\n<dt class=\"field-odd\">client_prefetch_threads (dagster.IntSource, optional)</dt>\n<dd class=\"field-odd\"><p>Number of threads used to download the results sets (4 by default). Increasing the value improves fetch performance but requires more memory.</p>\n</dd>\n<dt class=\"field-even\">client_session_keep_alive (dagster.StringSource, optional)</dt>\n<dd class=\"field-even\"><p>False by default. Set this to True to keep the session active indefinitely, even if there is no activity from the user. Make certain to call the close method to terminate the thread properly or the process may hang.</p>\n</dd>\n<dt class=\"field-odd\">login_timeout (dagster.IntSource, optional)</dt>\n<dd class=\"field-odd\"><p>Timeout in seconds for login. By default, 60 seconds. The login request gives up after the timeout length if the HTTP response is \u201csuccess\u201d.</p>\n</dd>\n<dt class=\"field-even\">network_timeout (dagster.IntSource, optional)</dt>\n<dd class=\"field-even\"><p>Timeout in seconds for all other operations. By default, none/infinite. A general request gives up after the timeout length if the HTTP response is not \u2018success\u2019.</p>\n</dd>\n<dt class=\"field-odd\">ocsp_response_cache_filename (dagster.StringSource, optional)</dt>\n<dd class=\"field-odd\"><p>URI for the OCSP response cache file.  By default, the OCSP response cache file is created in the cache directory.</p>\n</dd>\n<dt class=\"field-even\">validate_default_parameters (Bool, optional)</dt>\n<dd class=\"field-even\"><p>False by default. Raise an exception if either one of specified database, schema or warehouse doesn\u2019t exists if True.</p>\n</dd>\n<dt class=\"field-odd\">paramstyle (dagster.StringSource, optional)</dt>\n<dd class=\"field-odd\"><p>pyformat by default for client side binding. Specify qmark or numeric to change bind variable formats for server side binding.</p>\n</dd>\n<dt class=\"field-even\">timezone (dagster.StringSource, optional)</dt>\n<dd class=\"field-even\"><p>None by default, which honors the Snowflake parameter TIMEZONE. Set to a valid time zone (e.g. America/Los_Angeles) to set the session time zone.</p>\n</dd>\n<dt class=\"field-odd\">connector (dagster.StringSource, optional)</dt>\n<dd class=\"field-odd\"><p>Indicate alternative database connection engine. Permissible option is \u2018sqlalchemy\u2019 otherwise defaults to use the Snowflake Connector for Python.</p>\n</dd>\n<dt class=\"field-even\">cache_column_metadata (dagster.StringSource, optional)</dt>\n<dd class=\"field-even\"><p>Optional parameter when connector is set to sqlalchemy. Snowflake SQLAlchemy takes a flag cache_column_metadata=True such that all of column metadata for all tables are \u201ccached\u201d</p>\n</dd>\n<dt class=\"field-odd\">numpy (dagster.StringSource, optional)</dt>\n<dd class=\"field-odd\"><p>Optional parameter when connector is set to sqlalchemy. To enable fetching NumPy data types, add numpy=True to the connection parameters.</p>\n</dd>\n<dt class=\"field-even\">authenticator (dagster.StringSource, optional)</dt>\n<dd class=\"field-even\"><p>Optional parameter to specify the authentication mechanism to use.</p>\n</dd>\n</dl>\n</details><p>A resource for connecting to the Snowflake data warehouse.</p>\n<p>A simple example of loading data into Snowflake and subsequently querying that data is shown below:</p>\n<p>Examples:</p>\n<div class=\"highlight-python notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"kn\">from</span> <span class=\"nn\">dagster</span> <span class=\"kn\">import</span> <span class=\"n\">job</span><span class=\"p\">,</span> <span class=\"n\">op</span>\n<span class=\"kn\">from</span> <span class=\"nn\">dagster_snowflake</span> <span class=\"kn\">import</span> <span class=\"n\">snowflake_resource</span>\n\n<span class=\"nd\">@op</span><span class=\"p\">(</span><span class=\"n\">required_resource_keys</span><span class=\"o\">=</span><span class=\"p\">{</span><span class=\"s1\">&#39;snowflake&#39;</span><span class=\"p\">})</span>\n<span class=\"k\">def</span> <span class=\"nf\">get_one</span><span class=\"p\">(</span><span class=\"n\">context</span><span class=\"p\">):</span>\n    <span class=\"n\">context</span><span class=\"o\">.</span><span class=\"n\">resources</span><span class=\"o\">.</span><span class=\"n\">snowflake</span><span class=\"o\">.</span><span class=\"n\">execute_query</span><span class=\"p\">(</span><span class=\"s1\">&#39;SELECT 1&#39;</span><span class=\"p\">)</span>\n\n<span class=\"nd\">@job</span><span class=\"p\">(</span><span class=\"n\">resource_defs</span><span class=\"o\">=</span><span class=\"p\">{</span><span class=\"s1\">&#39;snowflake&#39;</span><span class=\"p\">:</span> <span class=\"n\">snowflake_resource</span><span class=\"p\">})</span>\n<span class=\"k\">def</span> <span class=\"nf\">my_snowflake_job</span><span class=\"p\">():</span>\n    <span class=\"n\">get_one</span><span class=\"p\">()</span>\n\n<span class=\"n\">my_snowflake_job</span><span class=\"o\">.</span><span class=\"n\">execute_in_process</span><span class=\"p\">(</span>\n    <span class=\"n\">run_config</span><span class=\"o\">=</span><span class=\"p\">{</span>\n        <span class=\"s1\">&#39;resources&#39;</span><span class=\"p\">:</span> <span class=\"p\">{</span>\n            <span class=\"s1\">&#39;snowflake&#39;</span><span class=\"p\">:</span> <span class=\"p\">{</span>\n                <span class=\"s1\">&#39;config&#39;</span><span class=\"p\">:</span> <span class=\"p\">{</span>\n                    <span class=\"s1\">&#39;account&#39;</span><span class=\"p\">:</span> <span class=\"p\">{</span><span class=\"s1\">&#39;env&#39;</span><span class=\"p\">:</span> <span class=\"s1\">&#39;SNOWFLAKE_ACCOUNT&#39;</span><span class=\"p\">},</span>\n                    <span class=\"s1\">&#39;user&#39;</span><span class=\"p\">:</span> <span class=\"p\">{</span><span class=\"s1\">&#39;env&#39;</span><span class=\"p\">:</span> <span class=\"s1\">&#39;SNOWFLAKE_USER&#39;</span><span class=\"p\">},</span>\n                    <span class=\"s1\">&#39;password&#39;</span><span class=\"p\">:</span> <span class=\"p\">{</span><span class=\"s1\">&#39;env&#39;</span><span class=\"p\">:</span> <span class=\"s1\">&#39;SNOWFLAKE_PASSWORD&#39;</span><span class=\"p\">},</span>\n                    <span class=\"s1\">&#39;database&#39;</span><span class=\"p\">:</span> <span class=\"p\">{</span><span class=\"s1\">&#39;env&#39;</span><span class=\"p\">:</span> <span class=\"s1\">&#39;SNOWFLAKE_DATABASE&#39;</span><span class=\"p\">},</span>\n                    <span class=\"s1\">&#39;schema&#39;</span><span class=\"p\">:</span> <span class=\"p\">{</span><span class=\"s1\">&#39;env&#39;</span><span class=\"p\">:</span> <span class=\"s1\">&#39;SNOWFLAKE_SCHEMA&#39;</span><span class=\"p\">},</span>\n                    <span class=\"s1\">&#39;warehouse&#39;</span><span class=\"p\">:</span> <span class=\"p\">{</span><span class=\"s1\">&#39;env&#39;</span><span class=\"p\">:</span> <span class=\"s1\">&#39;SNOWFLAKE_WAREHOUSE&#39;</span><span class=\"p\">},</span>\n                <span class=\"p\">}</span>\n            <span class=\"p\">}</span>\n        <span class=\"p\">}</span>\n    <span class=\"p\">}</span>\n<span class=\"p\">)</span>\n</pre></div>\n</div>\n</dd></dl>\n\n<dl class=\"py function\">\n<dt id=\"dagster_snowflake.build_snowflake_io_manager\">\n<code class=\"sig-prename descclassname\"><span class=\"pre\">dagster_snowflake.</span></code><code class=\"sig-name descname\"><span class=\"pre\">build_snowflake_io_manager</span></code><span class=\"sig-paren\">(</span><em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">type_handlers</span></span></em><span class=\"sig-paren\">)</span><a class=\"reference internal\" href=\"../../../../../_modules/dagster_snowflake/snowflake_io_manager#build_snowflake_io_manager\"><span class=\"viewcode-link\"><span class=\"pre\">[source]</span></span></a><a class=\"headerlink\" href=\"#dagster_snowflake.build_snowflake_io_manager\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Builds an IO manager definition that reads inputs from and writes outputs to Snowflake.</p>\n<dl class=\"field-list simple\">\n<dt class=\"field-odd\">Parameters</dt>\n<dd class=\"field-odd\"><p><strong>type_handlers</strong> (<em>Sequence</em><em>[</em><em>DbTypeHandler</em><em>]</em>) \u2013 Each handler defines how to translate between\nslices of Snowflake tables and an in-memory type - e.g. a Pandas DataFrame.</p>\n</dd>\n<dt class=\"field-even\">Returns</dt>\n<dd class=\"field-even\"><p>IOManagerDefinition</p>\n</dd>\n</dl>\n<p class=\"rubric\">Examples</p>\n<div class=\"highlight-python notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"kn\">from</span> <span class=\"nn\">dagster_snowflake</span> <span class=\"kn\">import</span> <span class=\"n\">build_snowflake_io_manager</span>\n<span class=\"kn\">from</span> <span class=\"nn\">dagster_snowflake_pandas</span> <span class=\"kn\">import</span> <span class=\"n\">SnowflakePandasTypeHandler</span>\n\n<span class=\"n\">snowflake_io_manager</span> <span class=\"o\">=</span> <span class=\"n\">build_snowflake_io_manager</span><span class=\"p\">([</span><span class=\"n\">SnowflakePandasTypeHandler</span><span class=\"p\">()])</span>\n\n<span class=\"nd\">@job</span><span class=\"p\">(</span><span class=\"n\">resource_defs</span><span class=\"o\">=</span><span class=\"p\">{</span><span class=\"s1\">&#39;io_manager&#39;</span><span class=\"p\">:</span> <span class=\"n\">snowflake_io_manager</span><span class=\"p\">})</span>\n<span class=\"k\">def</span> <span class=\"nf\">my_job</span><span class=\"p\">():</span>\n    <span class=\"o\">...</span>\n</pre></div>\n</div>\n</dd></dl>\n\n<dl class=\"py function\">\n<dt id=\"dagster_snowflake.snowflake_op_for_query\">\n<code class=\"sig-prename descclassname\"><span class=\"pre\">dagster_snowflake.</span></code><code class=\"sig-name descname\"><span class=\"pre\">snowflake_op_for_query</span></code><span class=\"sig-paren\">(</span><em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">sql</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">parameters</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">None</span></span></em><span class=\"sig-paren\">)</span><a class=\"reference internal\" href=\"../../../../../_modules/dagster_snowflake/solids#snowflake_op_for_query\"><span class=\"viewcode-link\"><span class=\"pre\">[source]</span></span></a><a class=\"headerlink\" href=\"#dagster_snowflake.snowflake_op_for_query\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>This function is an op factory that constructs an op to execute a snowflake query.</p>\n<p>Note that you can only use <cite>snowflake_op_for_query</cite> if you know the query you\u2019d like to\nexecute at graph construction time. If you\u2019d like to execute queries dynamically during\njob execution, you should manually execute those queries in your custom op using the\nsnowflake resource.</p>\n<dl class=\"field-list simple\">\n<dt class=\"field-odd\">Parameters</dt>\n<dd class=\"field-odd\"><ul class=\"simple\">\n<li><p><strong>sql</strong> (<a class=\"reference external\" href=\"https://docs.python.org/3/library/stdtypes.html#str\" title=\"(in Python v3.8)\"><em>str</em></a>) \u2013 The sql query that will execute against the provided snowflake resource.</p></li>\n<li><p><strong>parameters</strong> (<a class=\"reference external\" href=\"https://docs.python.org/3/library/stdtypes.html#dict\" title=\"(in Python v3.8)\"><em>dict</em></a>) \u2013 The parameters for the sql query.</p></li>\n</ul>\n</dd>\n<dt class=\"field-even\">Returns</dt>\n<dd class=\"field-even\"><p>Returns the constructed op definition.</p>\n</dd>\n<dt class=\"field-odd\">Return type</dt>\n<dd class=\"field-odd\"><p><a class=\"reference internal\" href=\"../../ops#dagster.OpDefinition\" title=\"dagster.OpDefinition\">OpDefinition</a></p>\n</dd>\n</dl>\n</dd></dl>\n\n<dl class=\"py class\">\n<dt id=\"dagster_snowflake.SnowflakeConnection\">\n<em class=\"property\"><span class=\"pre\">class</span> </em><code class=\"sig-prename descclassname\"><span class=\"pre\">dagster_snowflake.</span></code><code class=\"sig-name descname\"><span class=\"pre\">SnowflakeConnection</span></code><span class=\"sig-paren\">(</span><em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">config</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">log</span></span></em><span class=\"sig-paren\">)</span><a class=\"reference internal\" href=\"../../../../../_modules/dagster_snowflake/resources#SnowflakeConnection\"><span class=\"viewcode-link\"><span class=\"pre\">[source]</span></span></a><a class=\"headerlink\" href=\"#dagster_snowflake.SnowflakeConnection\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><dl class=\"py method\">\n<dt id=\"dagster_snowflake.SnowflakeConnection.execute_queries\">\n<code class=\"sig-name descname\"><span class=\"pre\">execute_queries</span></code><span class=\"sig-paren\">(</span><em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">sql_queries</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">parameters</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">None</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">fetch_results</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">False</span></span></em><span class=\"sig-paren\">)</span><a class=\"reference internal\" href=\"../../../../../_modules/dagster_snowflake/resources#SnowflakeConnection.execute_queries\"><span class=\"viewcode-link\"><span class=\"pre\">[source]</span></span></a><a class=\"headerlink\" href=\"#dagster_snowflake.SnowflakeConnection.execute_queries\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd></dd></dl>\n\n<dl class=\"py method\">\n<dt id=\"dagster_snowflake.SnowflakeConnection.execute_query\">\n<code class=\"sig-name descname\"><span class=\"pre\">execute_query</span></code><span class=\"sig-paren\">(</span><em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">sql</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">parameters</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">None</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">fetch_results</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">False</span></span></em><span class=\"sig-paren\">)</span><a class=\"reference internal\" href=\"../../../../../_modules/dagster_snowflake/resources#SnowflakeConnection.execute_query\"><span class=\"viewcode-link\"><span class=\"pre\">[source]</span></span></a><a class=\"headerlink\" href=\"#dagster_snowflake.SnowflakeConnection.execute_query\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd></dd></dl>\n\n<dl class=\"py method\">\n<dt id=\"dagster_snowflake.SnowflakeConnection.get_connection\">\n<code class=\"sig-name descname\"><span class=\"pre\">get_connection</span></code><span class=\"sig-paren\">(</span><em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">raw_conn</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">True</span></span></em><span class=\"sig-paren\">)</span><a class=\"reference internal\" href=\"../../../../../_modules/dagster_snowflake/resources#SnowflakeConnection.get_connection\"><span class=\"viewcode-link\"><span class=\"pre\">[source]</span></span></a><a class=\"headerlink\" href=\"#dagster_snowflake.SnowflakeConnection.get_connection\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd></dd></dl>\n\n<dl class=\"py method\">\n<dt id=\"dagster_snowflake.SnowflakeConnection.load_table_from_local_parquet\">\n<code class=\"sig-name descname\"><span class=\"pre\">load_table_from_local_parquet</span></code><span class=\"sig-paren\">(</span><em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">src</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">table</span></span></em><span class=\"sig-paren\">)</span><a class=\"reference internal\" href=\"../../../../../_modules/dagster_snowflake/resources#SnowflakeConnection.load_table_from_local_parquet\"><span class=\"viewcode-link\"><span class=\"pre\">[source]</span></span></a><a class=\"headerlink\" href=\"#dagster_snowflake.SnowflakeConnection.load_table_from_local_parquet\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd></dd></dl>\n\n</dd></dl>\n\n</div>\n", "current_page_name": "sections/api/apidocs/libraries/dagster-snowflake", "customsidebar": null, "display_toc": false, "meta": null, "metatags": "", "next": {"link": "../dagster-snowflake-pandas/", "title": "Snowflake with Pandas (dagster-snowflake-pandas)"}, "page_source_suffix": ".rst", "parents": [], "prev": {"link": "../dagster-slack/", "title": "Slack (dagster-slack)"}, "rellinks": [["genindex", "General Index", "I", "index"], ["py-modindex", "Python Module Index", "", "modules"], ["sections/api/apidocs/libraries/dagster-snowflake-pandas", "Snowflake with Pandas (dagster-snowflake-pandas)", "N", "next"], ["sections/api/apidocs/libraries/dagster-slack", "Slack (dagster-slack)", "P", "previous"]], "sidebars": ["globaltoc.html", "searchbox.html"], "sourcename": "sections/api/apidocs/libraries/dagster-snowflake.rst.txt", "title": "Snowflake (dagster-snowflake)", "toc": "<ul>\n<li><a class=\"reference internal\" href=\"#\">Snowflake (dagster-snowflake)</a></li>\n</ul>\n"}, "dagster-snowflake-pandas": {"alabaster_version": "0.7.12", "body": "<div class=\"section\" id=\"snowflake-with-pandas-dagster-snowflake-pandas\">\n<h1>Snowflake with Pandas (dagster-snowflake-pandas)<a class=\"headerlink\" href=\"#snowflake-with-pandas-dagster-snowflake-pandas\" title=\"Permalink to this headline\">\u00b6</a></h1>\n<p>This library provides an integration with the <a class=\"reference external\" href=\"https://www.snowflake.com/\">Snowflake</a> data\nwarehouse and Pandas data processing library.</p>\n<p>To use this library, you should first ensure that you have an appropriate <a class=\"reference external\" href=\"https://docs.snowflake.net/manuals/user-guide/admin-user-management.html\">Snowflake user</a> configured to access\nyour data warehouse.</p>\n<dl class=\"py class\">\n<dt id=\"dagster_snowflake_pandas.SnowflakePandasTypeHandler\">\n<em class=\"property\"><span class=\"pre\">class</span> </em><code class=\"sig-prename descclassname\"><span class=\"pre\">dagster_snowflake_pandas.</span></code><code class=\"sig-name descname\"><span class=\"pre\">SnowflakePandasTypeHandler</span></code><a class=\"reference internal\" href=\"../../../../../_modules/dagster_snowflake_pandas/snowflake_pandas_type_handler#SnowflakePandasTypeHandler\"><span class=\"viewcode-link\"><span class=\"pre\">[source]</span></span></a><a class=\"headerlink\" href=\"#dagster_snowflake_pandas.SnowflakePandasTypeHandler\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Defines how to translate between slices of Snowflake tables and Pandas DataFrames.</p>\n<p>Examples:</p>\n<div class=\"highlight-python notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"kn\">from</span> <span class=\"nn\">dagster_snowflake</span> <span class=\"kn\">import</span> <span class=\"n\">build_snowflake_io_manager</span>\n<span class=\"kn\">from</span> <span class=\"nn\">dagster_snowflake_pandas</span> <span class=\"kn\">import</span> <span class=\"n\">SnowflakePandasTypeHandler</span>\n\n<span class=\"n\">snowflake_io_manager</span> <span class=\"o\">=</span> <span class=\"n\">build_snowflake_io_manager</span><span class=\"p\">([</span><span class=\"n\">SnowflakePandasTypeHandler</span><span class=\"p\">()])</span>\n\n<span class=\"nd\">@job</span><span class=\"p\">(</span><span class=\"n\">resource_defs</span><span class=\"o\">=</span><span class=\"p\">{</span><span class=\"s1\">&#39;io_manager&#39;</span><span class=\"p\">:</span> <span class=\"n\">snowflake_io_manager</span><span class=\"p\">})</span>\n<span class=\"k\">def</span> <span class=\"nf\">my_job</span><span class=\"p\">():</span>\n    <span class=\"o\">...</span>\n</pre></div>\n</div>\n</dd></dl>\n\n</div>\n", "current_page_name": "sections/api/apidocs/libraries/dagster-snowflake-pandas", "customsidebar": null, "display_toc": false, "meta": null, "metatags": "", "next": {"link": "../dagster-spark/", "title": "Spark (dagster-spark)"}, "page_source_suffix": ".rst", "parents": [], "prev": {"link": "../dagster-snowflake/", "title": "Snowflake (dagster-snowflake)"}, "rellinks": [["genindex", "General Index", "I", "index"], ["py-modindex", "Python Module Index", "", "modules"], ["sections/api/apidocs/libraries/dagster-spark", "Spark (dagster-spark)", "N", "next"], ["sections/api/apidocs/libraries/dagster-snowflake", "Snowflake (dagster-snowflake)", "P", "previous"]], "sidebars": ["globaltoc.html", "searchbox.html"], "sourcename": "sections/api/apidocs/libraries/dagster-snowflake-pandas.rst.txt", "title": "Snowflake with Pandas (dagster-snowflake-pandas)", "toc": "<ul>\n<li><a class=\"reference internal\" href=\"#\">Snowflake with Pandas (dagster-snowflake-pandas)</a></li>\n</ul>\n"}, "dagster-spark": {"alabaster_version": "0.7.12", "body": "<div class=\"section\" id=\"spark-dagster-spark\">\n<h1>Spark (dagster-spark)<a class=\"headerlink\" href=\"#spark-dagster-spark\" title=\"Permalink to this headline\">\u00b6</a></h1>\n<dl class=\"py class\">\n<dt id=\"dagster_spark.SparkOpError\">\n<em class=\"property\"><span class=\"pre\">class</span> </em><code class=\"sig-prename descclassname\"><span class=\"pre\">dagster_spark.</span></code><code class=\"sig-name descname\"><span class=\"pre\">SparkOpError</span></code><a class=\"reference internal\" href=\"../../../../../_modules/dagster_spark/types#SparkOpError\"><span class=\"viewcode-link\"><span class=\"pre\">[source]</span></span></a><a class=\"headerlink\" href=\"#dagster_spark.SparkOpError\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd></dd></dl>\n\n<dl class=\"py function\">\n<dt id=\"dagster_spark.define_spark_config\">\n<code class=\"sig-prename descclassname\"><span class=\"pre\">dagster_spark.</span></code><code class=\"sig-name descname\"><span class=\"pre\">define_spark_config</span></code><span class=\"sig-paren\">(</span><span class=\"sig-paren\">)</span><a class=\"reference internal\" href=\"../../../../../_modules/dagster_spark/configs#define_spark_config\"><span class=\"viewcode-link\"><span class=\"pre\">[source]</span></span></a><a class=\"headerlink\" href=\"#dagster_spark.define_spark_config\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Spark configuration.</p>\n<dl class=\"simple\">\n<dt>See the Spark documentation for reference:</dt><dd><p><a class=\"reference external\" href=\"https://spark.apache.org/docs/latest/submitting-applications.html\">https://spark.apache.org/docs/latest/submitting-applications.html</a></p>\n</dd>\n</dl>\n</dd></dl>\n\n<dl class=\"py function\">\n<dt id=\"dagster_spark.create_spark_op\">\n<code class=\"sig-prename descclassname\"><span class=\"pre\">dagster_spark.</span></code><code class=\"sig-name descname\"><span class=\"pre\">create_spark_op</span></code><span class=\"sig-paren\">(</span><em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">name</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">main_class</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">description</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">None</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">required_resource_keys</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">frozenset({'spark'})</span></span></em><span class=\"sig-paren\">)</span><a class=\"reference internal\" href=\"../../../../../_modules/dagster_spark/ops#create_spark_op\"><span class=\"viewcode-link\"><span class=\"pre\">[source]</span></span></a><a class=\"headerlink\" href=\"#dagster_spark.create_spark_op\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd></dd></dl>\n\n<dl class=\"py function\">\n<dt id=\"dagster_spark.construct_spark_shell_command\">\n<code class=\"sig-prename descclassname\"><span class=\"pre\">dagster_spark.</span></code><code class=\"sig-name descname\"><span class=\"pre\">construct_spark_shell_command</span></code><span class=\"sig-paren\">(</span><em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">application_jar</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">main_class</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">master_url</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">None</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">spark_conf</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">None</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">deploy_mode</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">None</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">application_arguments</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">None</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">spark_home</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">None</span></span></em><span class=\"sig-paren\">)</span><a class=\"reference internal\" href=\"../../../../../_modules/dagster_spark/utils#construct_spark_shell_command\"><span class=\"viewcode-link\"><span class=\"pre\">[source]</span></span></a><a class=\"headerlink\" href=\"#dagster_spark.construct_spark_shell_command\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Constructs the spark-submit command for a Spark job.</p>\n</dd></dl>\n\n<dl class=\"py data\">\n<dt id=\"dagster_spark.spark_resource\">\n<code class=\"sig-prename descclassname\"><span class=\"pre\">dagster_spark.</span></code><code class=\"sig-name descname\"><span class=\"pre\">spark_resource</span></code><em class=\"property\"> <span class=\"pre\">ResourceDefinition</span></em><a class=\"reference internal\" href=\"../../../../../_modules/dagster_spark/resources#spark_resource\"><span class=\"viewcode-link\"><span class=\"pre\">[source]</span></span></a><a class=\"headerlink\" href=\"#dagster_spark.spark_resource\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><div class=\"line-block\">\n<div class=\"line\"><br /></div>\n</div>\n</dd></dl>\n\n</div>\n", "current_page_name": "sections/api/apidocs/libraries/dagster-spark", "customsidebar": null, "display_toc": false, "meta": null, "metatags": "", "next": {"link": "../dagster-ssh/", "title": "SSH / SFTP (dagster-ssh)"}, "page_source_suffix": ".rst", "parents": [], "prev": {"link": "../dagster-snowflake-pandas/", "title": "Snowflake with Pandas (dagster-snowflake-pandas)"}, "rellinks": [["genindex", "General Index", "I", "index"], ["py-modindex", "Python Module Index", "", "modules"], ["sections/api/apidocs/libraries/dagster-ssh", "SSH / SFTP (dagster-ssh)", "N", "next"], ["sections/api/apidocs/libraries/dagster-snowflake-pandas", "Snowflake with Pandas (dagster-snowflake-pandas)", "P", "previous"]], "sidebars": ["globaltoc.html", "searchbox.html"], "sourcename": "sections/api/apidocs/libraries/dagster-spark.rst.txt", "title": "Spark (dagster-spark)", "toc": "<ul>\n<li><a class=\"reference internal\" href=\"#\">Spark (dagster-spark)</a></li>\n</ul>\n"}, "dagster-ssh": {"alabaster_version": "0.7.12", "body": "<div class=\"section\" id=\"ssh-sftp-dagster-ssh\">\n<h1>SSH / SFTP (dagster-ssh)<a class=\"headerlink\" href=\"#ssh-sftp-dagster-ssh\" title=\"Permalink to this headline\">\u00b6</a></h1>\n<p>This library provides an integration with SSH and SFTP.</p>\n<dl class=\"py class\">\n<dt id=\"dagster_ssh.SSHResource\">\n<em class=\"property\"><span class=\"pre\">class</span> </em><code class=\"sig-prename descclassname\"><span class=\"pre\">dagster_ssh.</span></code><code class=\"sig-name descname\"><span class=\"pre\">SSHResource</span></code><span class=\"sig-paren\">(</span><em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">remote_host</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">remote_port</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">username</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">None</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">password</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">None</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">key_file</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">None</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">key_string</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">None</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">timeout</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">10</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">keepalive_interval</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">30</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">compress</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">True</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">no_host_key_check</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">True</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">allow_host_key_change</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">False</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">logger</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">None</span></span></em><span class=\"sig-paren\">)</span><a class=\"reference internal\" href=\"../../../../../_modules/dagster_ssh/resources#SSHResource\"><span class=\"viewcode-link\"><span class=\"pre\">[source]</span></span></a><a class=\"headerlink\" href=\"#dagster_ssh.SSHResource\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Resource for ssh remote execution using Paramiko.\nref: <a class=\"reference external\" href=\"https://github.com/paramiko/paramiko\">https://github.com/paramiko/paramiko</a></p>\n</dd></dl>\n\n<dl class=\"py data\">\n<dt id=\"dagster_ssh.ssh_resource\">\n<code class=\"sig-prename descclassname\"><span class=\"pre\">dagster_ssh.</span></code><code class=\"sig-name descname\"><span class=\"pre\">ssh_resource</span></code><em class=\"property\"> <span class=\"pre\">ResourceDefinition</span></em><a class=\"reference internal\" href=\"../../../../../_modules/dagster_ssh/resources#ssh_resource\"><span class=\"viewcode-link\"><span class=\"pre\">[source]</span></span></a><a class=\"headerlink\" href=\"#dagster_ssh.ssh_resource\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><div class=\"line-block\">\n<div class=\"line\"><br /></div>\n</div>\n<details class=\"summary-config-schema\">\n<summary>Config Schema:</summary><dl class=\"field-list\">\n<dt class=\"field-odd\">remote_host (dagster.StringSource)</dt>\n<dd class=\"field-odd\"><p>remote host to connect to</p>\n</dd>\n<dt class=\"field-even\">remote_port (Int, optional)</dt>\n<dd class=\"field-even\"><p>port of remote host to connect (Default is paramiko SSH_PORT)</p>\n<p><strong>Default Value:</strong> 22</p>\n</dd>\n<dt class=\"field-odd\">username (dagster.StringSource, optional)</dt>\n<dd class=\"field-odd\"><p>username to connect to the remote_host</p>\n</dd>\n<dt class=\"field-even\">password (dagster.StringSource, optional)</dt>\n<dd class=\"field-even\"><p>password of the username to connect to the remote_host</p>\n</dd>\n<dt class=\"field-odd\">key_file (dagster.StringSource, optional)</dt>\n<dd class=\"field-odd\"><p>key file to use to connect to the remote_host.</p>\n</dd>\n<dt class=\"field-even\">key_string (dagster.StringSource, optional)</dt>\n<dd class=\"field-even\"><p>key string to use to connect to remote_host</p>\n</dd>\n<dt class=\"field-odd\">timeout (Int, optional)</dt>\n<dd class=\"field-odd\"><p>timeout for the attempt to connect to the remote_host.</p>\n<p><strong>Default Value:</strong> 10</p>\n</dd>\n<dt class=\"field-even\">keepalive_interval (Int, optional)</dt>\n<dd class=\"field-even\"><p>send a keepalive packet to remote host every keepalive_interval seconds</p>\n<p><strong>Default Value:</strong> 30</p>\n</dd>\n<dt class=\"field-odd\">compress (Bool, optional)</dt>\n<dd class=\"field-odd\"><p><strong>Default Value:</strong> True</p>\n</dd>\n<dt class=\"field-even\">no_host_key_check (Bool, optional)</dt>\n<dd class=\"field-even\"><p><strong>Default Value:</strong> True</p>\n</dd>\n<dt class=\"field-odd\">allow_host_key_change (Bool, optional)</dt>\n<dd class=\"field-odd\"><p><strong>Default Value:</strong> False</p>\n</dd>\n</dl>\n</details></dd></dl>\n\n</div>\n", "current_page_name": "sections/api/apidocs/libraries/dagster-ssh", "customsidebar": null, "display_toc": false, "meta": null, "metatags": "", "next": {"link": "../dagster-twilio/", "title": "Twilio (dagster-twilio)"}, "page_source_suffix": ".rst", "parents": [], "prev": {"link": "../dagster-spark/", "title": "Spark (dagster-spark)"}, "rellinks": [["genindex", "General Index", "I", "index"], ["py-modindex", "Python Module Index", "", "modules"], ["sections/api/apidocs/libraries/dagster-twilio", "Twilio (dagster-twilio)", "N", "next"], ["sections/api/apidocs/libraries/dagster-spark", "Spark (dagster-spark)", "P", "previous"]], "sidebars": ["globaltoc.html", "searchbox.html"], "sourcename": "sections/api/apidocs/libraries/dagster-ssh.rst.txt", "title": "SSH / SFTP (dagster-ssh)", "toc": "<ul>\n<li><a class=\"reference internal\" href=\"#\">SSH / SFTP (dagster-ssh)</a></li>\n</ul>\n"}, "dagster-twilio": {"alabaster_version": "0.7.12", "body": "<div class=\"section\" id=\"twilio-dagster-twilio\">\n<h1>Twilio (dagster-twilio)<a class=\"headerlink\" href=\"#twilio-dagster-twilio\" title=\"Permalink to this headline\">\u00b6</a></h1>\n<p>This library provides an integration with Twilio.</p>\n<dl class=\"py data\">\n<dt id=\"dagster_twilio.twilio_resource\">\n<code class=\"sig-prename descclassname\"><span class=\"pre\">dagster_twilio.</span></code><code class=\"sig-name descname\"><span class=\"pre\">twilio_resource</span></code><em class=\"property\"> <span class=\"pre\">ResourceDefinition</span></em><a class=\"reference internal\" href=\"../../../../../_modules/dagster_twilio/resources#twilio_resource\"><span class=\"viewcode-link\"><span class=\"pre\">[source]</span></span></a><a class=\"headerlink\" href=\"#dagster_twilio.twilio_resource\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><div class=\"line-block\">\n<div class=\"line\"><br /></div>\n</div>\n<details class=\"summary-config-schema\">\n<summary>Config Schema:</summary><dl class=\"field-list simple\">\n<dt class=\"field-odd\">account_sid (dagster.StringSource)</dt>\n<dd class=\"field-odd\"><p>Twilio Account SID</p>\n</dd>\n<dt class=\"field-even\">auth_token (dagster.StringSource)</dt>\n<dd class=\"field-even\"><p>Twilio Auth Token</p>\n</dd>\n</dl>\n</details></dd></dl>\n\n</div>\n", "current_page_name": "sections/api/apidocs/libraries/dagster-twilio", "customsidebar": null, "display_toc": false, "meta": null, "metatags": "", "next": {"link": "../dagstermill/", "title": "Dagstermill"}, "page_source_suffix": ".rst", "parents": [], "prev": {"link": "../dagster-ssh/", "title": "SSH / SFTP (dagster-ssh)"}, "rellinks": [["genindex", "General Index", "I", "index"], ["py-modindex", "Python Module Index", "", "modules"], ["sections/api/apidocs/libraries/dagstermill", "Dagstermill", "N", "next"], ["sections/api/apidocs/libraries/dagster-ssh", "SSH / SFTP (dagster-ssh)", "P", "previous"]], "sidebars": ["globaltoc.html", "searchbox.html"], "sourcename": "sections/api/apidocs/libraries/dagster-twilio.rst.txt", "title": "Twilio (dagster-twilio)", "toc": "<ul>\n<li><a class=\"reference internal\" href=\"#\">Twilio (dagster-twilio)</a></li>\n</ul>\n"}, "dagstermill": {"alabaster_version": "0.7.12", "body": "<div class=\"section\" id=\"dagstermill\">\n<h1>Dagstermill<a class=\"headerlink\" href=\"#dagstermill\" title=\"Permalink to this headline\">\u00b6</a></h1>\n<dl class=\"py function\">\n<dt id=\"dagstermill.define_dagstermill_solid\">\n<code class=\"sig-prename descclassname\"><span class=\"pre\">dagstermill.</span></code><code class=\"sig-name descname\"><span class=\"pre\">define_dagstermill_solid</span></code><span class=\"sig-paren\">(</span><em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">name</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">notebook_path</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">input_defs</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">None</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">output_defs</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">None</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">config_schema</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">None</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">required_resource_keys</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">None</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">output_notebook</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">None</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">output_notebook_name</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">None</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">asset_key_prefix</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">None</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">description</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">None</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">tags</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">None</span></span></em><span class=\"sig-paren\">)</span><a class=\"reference internal\" href=\"../../../../../_modules/dagstermill/factory#define_dagstermill_solid\"><span class=\"viewcode-link\"><span class=\"pre\">[source]</span></span></a><a class=\"headerlink\" href=\"#dagstermill.define_dagstermill_solid\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Wrap a Jupyter notebook in a solid.</p>\n<dl class=\"field-list simple\">\n<dt class=\"field-odd\">Parameters</dt>\n<dd class=\"field-odd\"><ul class=\"simple\">\n<li><p><strong>name</strong> (<a class=\"reference external\" href=\"https://docs.python.org/3/library/stdtypes.html#str\" title=\"(in Python v3.8)\"><em>str</em></a>) \u2013 The name of the solid.</p></li>\n<li><p><strong>notebook_path</strong> (<a class=\"reference external\" href=\"https://docs.python.org/3/library/stdtypes.html#str\" title=\"(in Python v3.8)\"><em>str</em></a>) \u2013 Path to the backing notebook.</p></li>\n<li><p><strong>input_defs</strong> (<em>Optional</em><em>[</em><em>List</em><em>[</em><a class=\"reference internal\" href=\"../../solids#dagster.InputDefinition\" title=\"dagster.InputDefinition\"><em>InputDefinition</em></a><em>]</em><em>]</em>) \u2013 The solid\u2019s inputs.</p></li>\n<li><p><strong>output_defs</strong> (<em>Optional</em><em>[</em><em>List</em><em>[</em><a class=\"reference internal\" href=\"../../solids#dagster.OutputDefinition\" title=\"dagster.OutputDefinition\"><em>OutputDefinition</em></a><em>]</em><em>]</em>) \u2013 The solid\u2019s outputs. Your notebook should\ncall <a class=\"reference internal\" href=\"#dagstermill.yield_result\" title=\"dagstermill.yield_result\"><code class=\"xref py py-func docutils literal notranslate\"><span class=\"pre\">yield_result()</span></code></a> to yield each of these outputs.</p></li>\n<li><p><strong>required_resource_keys</strong> (<em>Optional</em><em>[</em><em>Set</em><em>[</em><a class=\"reference external\" href=\"https://docs.python.org/3/library/stdtypes.html#str\" title=\"(in Python v3.8)\"><em>str</em></a><em>]</em><em>]</em>) \u2013 The string names of any required resources.</p></li>\n<li><p><strong>output_notebook</strong> (<em>Optional</em><em>[</em><a class=\"reference external\" href=\"https://docs.python.org/3/library/stdtypes.html#str\" title=\"(in Python v3.8)\"><em>str</em></a><em>]</em>) \u2013 If set, will be used as the name of an injected output of\ntype <a class=\"reference internal\" href=\"../../types#dagster.FileHandle\" title=\"dagster.FileHandle\"><code class=\"xref py py-class docutils literal notranslate\"><span class=\"pre\">FileHandle</span></code></a> that will point to the executed notebook (in\naddition to the <a class=\"reference internal\" href=\"../../ops#dagster.AssetMaterialization\" title=\"dagster.AssetMaterialization\"><code class=\"xref py py-class docutils literal notranslate\"><span class=\"pre\">AssetMaterialization</span></code></a> that is always created). This\nrespects the <a class=\"reference internal\" href=\"../../internals#dagster.core.storage.file_manager.FileManager\" title=\"dagster.core.storage.file_manager.FileManager\"><code class=\"xref py py-class docutils literal notranslate\"><span class=\"pre\">FileManager</span></code></a> configured on\nthe pipeline resources via the \u201cfile_manager\u201d resource key, so, e.g.,\nif <a class=\"reference internal\" href=\"dagster-aws#dagster_aws.s3.s3_file_manager\" title=\"dagster_aws.s3.s3_file_manager\"><code class=\"xref py py-class docutils literal notranslate\"><span class=\"pre\">s3_file_manager</span></code></a> is configured, the output will be a :\npy:class:<cite>~dagster_aws.s3.S3FileHandle</cite>.</p></li>\n<li><p><strong>output_notebook_name</strong> \u2013 (Optional[str]): If set, will be used as the name of an injected output\nof type of <code class=\"xref py py-class docutils literal notranslate\"><span class=\"pre\">BufferedIOBase</span></code> that is the file object of the executed\nnotebook (in addition to the <a class=\"reference internal\" href=\"../../ops#dagster.AssetMaterialization\" title=\"dagster.AssetMaterialization\"><code class=\"xref py py-class docutils literal notranslate\"><span class=\"pre\">AssetMaterialization</span></code></a> that is always\ncreated). It allows the downstream solids to access the executed notebook via a file\nobject.</p></li>\n<li><p><strong>asset_key_prefix</strong> (<em>Optional</em><em>[</em><em>Union</em><em>[</em><em>List</em><em>[</em><a class=\"reference external\" href=\"https://docs.python.org/3/library/stdtypes.html#str\" title=\"(in Python v3.8)\"><em>str</em></a><em>]</em><em>, </em><a class=\"reference external\" href=\"https://docs.python.org/3/library/stdtypes.html#str\" title=\"(in Python v3.8)\"><em>str</em></a><em>]</em><em>]</em>) \u2013 If set, will be used to prefix the\nasset keys for materialized notebooks.</p></li>\n<li><p><strong>description</strong> (<em>Optional</em><em>[</em><a class=\"reference external\" href=\"https://docs.python.org/3/library/stdtypes.html#str\" title=\"(in Python v3.8)\"><em>str</em></a><em>]</em>) \u2013 If set, description used for solid.</p></li>\n<li><p><strong>tags</strong> (<em>Optional</em><em>[</em><em>Dict</em><em>[</em><a class=\"reference external\" href=\"https://docs.python.org/3/library/stdtypes.html#str\" title=\"(in Python v3.8)\"><em>str</em></a><em>, </em><a class=\"reference external\" href=\"https://docs.python.org/3/library/stdtypes.html#str\" title=\"(in Python v3.8)\"><em>str</em></a><em>]</em><em>]</em>) \u2013 If set, additional tags used to annotate solid.\nDagster uses the tag keys <cite>notebook_path</cite> and <cite>kind</cite>, which cannot be\noverwritten by the user.</p></li>\n</ul>\n</dd>\n<dt class=\"field-even\">Returns</dt>\n<dd class=\"field-even\"><p><a class=\"reference internal\" href=\"../../solids#dagster.SolidDefinition\" title=\"dagster.SolidDefinition\"><code class=\"xref py py-class docutils literal notranslate\"><span class=\"pre\">SolidDefinition</span></code></a></p>\n</dd>\n</dl>\n</dd></dl>\n\n<dl class=\"py function\">\n<dt id=\"dagstermill.define_dagstermill_op\">\n<code class=\"sig-prename descclassname\"><span class=\"pre\">dagstermill.</span></code><code class=\"sig-name descname\"><span class=\"pre\">define_dagstermill_op</span></code><span class=\"sig-paren\">(</span><em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">name</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">notebook_path</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">input_defs</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">None</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">output_defs</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">None</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">config_schema</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">None</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">required_resource_keys</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">None</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">output_notebook_name</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">None</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">asset_key_prefix</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">None</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">description</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">None</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">tags</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">None</span></span></em><span class=\"sig-paren\">)</span><a class=\"reference internal\" href=\"../../../../../_modules/dagstermill/factory#define_dagstermill_op\"><span class=\"viewcode-link\"><span class=\"pre\">[source]</span></span></a><a class=\"headerlink\" href=\"#dagstermill.define_dagstermill_op\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Wrap a Jupyter notebook in a solid.</p>\n<dl class=\"field-list simple\">\n<dt class=\"field-odd\">Parameters</dt>\n<dd class=\"field-odd\"><ul class=\"simple\">\n<li><p><strong>name</strong> (<a class=\"reference external\" href=\"https://docs.python.org/3/library/stdtypes.html#str\" title=\"(in Python v3.8)\"><em>str</em></a>) \u2013 The name of the solid.</p></li>\n<li><p><strong>notebook_path</strong> (<a class=\"reference external\" href=\"https://docs.python.org/3/library/stdtypes.html#str\" title=\"(in Python v3.8)\"><em>str</em></a>) \u2013 Path to the backing notebook.</p></li>\n<li><p><strong>input_defs</strong> (<em>Optional</em><em>[</em><em>List</em><em>[</em><a class=\"reference internal\" href=\"../../solids#dagster.InputDefinition\" title=\"dagster.InputDefinition\"><em>InputDefinition</em></a><em>]</em><em>]</em>) \u2013 The solid\u2019s inputs.</p></li>\n<li><p><strong>output_defs</strong> (<em>Optional</em><em>[</em><em>List</em><em>[</em><a class=\"reference internal\" href=\"../../solids#dagster.OutputDefinition\" title=\"dagster.OutputDefinition\"><em>OutputDefinition</em></a><em>]</em><em>]</em>) \u2013 The solid\u2019s outputs. Your notebook should\ncall <a class=\"reference internal\" href=\"#dagstermill.yield_result\" title=\"dagstermill.yield_result\"><code class=\"xref py py-func docutils literal notranslate\"><span class=\"pre\">yield_result()</span></code></a> to yield each of these outputs.</p></li>\n<li><p><strong>required_resource_keys</strong> (<em>Optional</em><em>[</em><em>Set</em><em>[</em><a class=\"reference external\" href=\"https://docs.python.org/3/library/stdtypes.html#str\" title=\"(in Python v3.8)\"><em>str</em></a><em>]</em><em>]</em>) \u2013 The string names of any required resources.</p></li>\n<li><p><strong>output_notebook_name</strong> \u2013 (Optional[str]): If set, will be used as the name of an injected output\nof type of <code class=\"xref py py-class docutils literal notranslate\"><span class=\"pre\">BufferedIOBase</span></code> that is the file object of the executed\nnotebook (in addition to the <a class=\"reference internal\" href=\"../../ops#dagster.AssetMaterialization\" title=\"dagster.AssetMaterialization\"><code class=\"xref py py-class docutils literal notranslate\"><span class=\"pre\">AssetMaterialization</span></code></a> that is always\ncreated). It allows the downstream solids to access the executed notebook via a file\nobject.</p></li>\n<li><p><strong>asset_key_prefix</strong> (<em>Optional</em><em>[</em><em>Union</em><em>[</em><em>List</em><em>[</em><a class=\"reference external\" href=\"https://docs.python.org/3/library/stdtypes.html#str\" title=\"(in Python v3.8)\"><em>str</em></a><em>]</em><em>, </em><a class=\"reference external\" href=\"https://docs.python.org/3/library/stdtypes.html#str\" title=\"(in Python v3.8)\"><em>str</em></a><em>]</em><em>]</em>) \u2013 If set, will be used to prefix the\nasset keys for materialized notebooks.</p></li>\n<li><p><strong>description</strong> (<em>Optional</em><em>[</em><a class=\"reference external\" href=\"https://docs.python.org/3/library/stdtypes.html#str\" title=\"(in Python v3.8)\"><em>str</em></a><em>]</em>) \u2013 If set, description used for solid.</p></li>\n<li><p><strong>tags</strong> (<em>Optional</em><em>[</em><em>Dict</em><em>[</em><a class=\"reference external\" href=\"https://docs.python.org/3/library/stdtypes.html#str\" title=\"(in Python v3.8)\"><em>str</em></a><em>, </em><a class=\"reference external\" href=\"https://docs.python.org/3/library/stdtypes.html#str\" title=\"(in Python v3.8)\"><em>str</em></a><em>]</em><em>]</em>) \u2013 If set, additional tags used to annotate solid.\nDagster uses the tag keys <cite>notebook_path</cite> and <cite>kind</cite>, which cannot be\noverwritten by the user.</p></li>\n</ul>\n</dd>\n<dt class=\"field-even\">Returns</dt>\n<dd class=\"field-even\"><p><a class=\"reference internal\" href=\"../../solids#dagster.SolidDefinition\" title=\"dagster.SolidDefinition\"><code class=\"xref py py-class docutils literal notranslate\"><span class=\"pre\">SolidDefinition</span></code></a></p>\n</dd>\n</dl>\n</dd></dl>\n\n<dl class=\"py function\">\n<dt id=\"dagstermill.local_output_notebook_io_manager\">\n<code class=\"sig-prename descclassname\"><span class=\"pre\">dagstermill.</span></code><code class=\"sig-name descname\"><span class=\"pre\">local_output_notebook_io_manager</span></code><span class=\"sig-paren\">(</span><em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">init_context</span></span></em><span class=\"sig-paren\">)</span><a class=\"reference internal\" href=\"../../../../../_modules/dagstermill/io_managers#local_output_notebook_io_manager\"><span class=\"viewcode-link\"><span class=\"pre\">[source]</span></span></a><a class=\"headerlink\" href=\"#dagstermill.local_output_notebook_io_manager\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Built-in IO Manager that handles output notebooks.</p>\n</dd></dl>\n\n<dl class=\"py function\">\n<dt id=\"dagstermill.get_context\">\n<code class=\"sig-prename descclassname\"><span class=\"pre\">dagstermill.</span></code><code class=\"sig-name descname\"><span class=\"pre\">get_context</span></code><span class=\"sig-paren\">(</span><em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">solid_config</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">None</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">mode_def</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">None</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">run_config</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">None</span></span></em><span class=\"sig-paren\">)</span><a class=\"headerlink\" href=\"#dagstermill.get_context\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Get a dagstermill execution context for interactive exploration and development.</p>\n<dl class=\"field-list simple\">\n<dt class=\"field-odd\">Parameters</dt>\n<dd class=\"field-odd\"><ul class=\"simple\">\n<li><p><strong>solid_config</strong> (<em>Optional</em><em>[</em><em>Any</em><em>]</em>) \u2013 If specified, this value will be made available on the\ncontext as its <code class=\"docutils literal notranslate\"><span class=\"pre\">solid_config</span></code> property.</p></li>\n<li><p><strong>mode_def</strong> (Optional[<a class=\"reference internal\" href=\"../../modes#dagster.ModeDefinition\" title=\"dagster.ModeDefinition\"><code class=\"xref py py-class docutils literal notranslate\"><span class=\"pre\">dagster.ModeDefinition</span></code></a>]) \u2013 If specified, defines the mode to\nuse to construct the context. Specify this if you would like a context constructed\nwith specific <code class=\"docutils literal notranslate\"><span class=\"pre\">resource_defs</span></code> or <code class=\"docutils literal notranslate\"><span class=\"pre\">logger_defs</span></code>. By default, an ephemeral mode\nwith a console logger will be constructed.</p></li>\n<li><p><strong>run_config</strong> (<em>Optional</em><em>[</em><a class=\"reference external\" href=\"https://docs.python.org/3/library/stdtypes.html#dict\" title=\"(in Python v3.8)\"><em>dict</em></a><em>]</em>) \u2013 The config dict with which to construct\nthe context.</p></li>\n</ul>\n</dd>\n<dt class=\"field-even\">Returns</dt>\n<dd class=\"field-even\"><p><a class=\"reference internal\" href=\"#dagstermill.DagstermillExecutionContext\" title=\"dagstermill.DagstermillExecutionContext\"><code class=\"xref py py-class docutils literal notranslate\"><span class=\"pre\">DagstermillExecutionContext</span></code></a></p>\n</dd>\n</dl>\n</dd></dl>\n\n<dl class=\"py function\">\n<dt id=\"dagstermill.yield_event\">\n<code class=\"sig-prename descclassname\"><span class=\"pre\">dagstermill.</span></code><code class=\"sig-name descname\"><span class=\"pre\">yield_event</span></code><span class=\"sig-paren\">(</span><em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">dagster_event</span></span></em><span class=\"sig-paren\">)</span><a class=\"headerlink\" href=\"#dagstermill.yield_event\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Yield a dagster event directly from notebook code.</p>\n<p>When called interactively or in development, returns its input.</p>\n<dl class=\"field-list simple\">\n<dt class=\"field-odd\">Parameters</dt>\n<dd class=\"field-odd\"><p><strong>dagster_event</strong> (Union[<a class=\"reference internal\" href=\"../../ops#dagster.AssetMaterialization\" title=\"dagster.AssetMaterialization\"><code class=\"xref py py-class docutils literal notranslate\"><span class=\"pre\">dagster.AssetMaterialization</span></code></a>, <a class=\"reference internal\" href=\"../../ops#dagster.ExpectationResult\" title=\"dagster.ExpectationResult\"><code class=\"xref py py-class docutils literal notranslate\"><span class=\"pre\">dagster.ExpectationResult</span></code></a>, <a class=\"reference internal\" href=\"../../ops#dagster.TypeCheck\" title=\"dagster.TypeCheck\"><code class=\"xref py py-class docutils literal notranslate\"><span class=\"pre\">dagster.TypeCheck</span></code></a>, <a class=\"reference internal\" href=\"../../ops#dagster.Failure\" title=\"dagster.Failure\"><code class=\"xref py py-class docutils literal notranslate\"><span class=\"pre\">dagster.Failure</span></code></a>, <a class=\"reference internal\" href=\"../../ops#dagster.RetryRequested\" title=\"dagster.RetryRequested\"><code class=\"xref py py-class docutils literal notranslate\"><span class=\"pre\">dagster.RetryRequested</span></code></a>]) \u2013 An event to yield back to Dagster.</p>\n</dd>\n</dl>\n</dd></dl>\n\n<dl class=\"py function\">\n<dt id=\"dagstermill.yield_result\">\n<code class=\"sig-prename descclassname\"><span class=\"pre\">dagstermill.</span></code><code class=\"sig-name descname\"><span class=\"pre\">yield_result</span></code><span class=\"sig-paren\">(</span><em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">value</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">output_name</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">'result'</span></span></em><span class=\"sig-paren\">)</span><a class=\"headerlink\" href=\"#dagstermill.yield_result\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Yield a result directly from notebook code.</p>\n<p>When called interactively or in development, returns its input.</p>\n<dl class=\"field-list simple\">\n<dt class=\"field-odd\">Parameters</dt>\n<dd class=\"field-odd\"><ul class=\"simple\">\n<li><p><strong>value</strong> (<em>Any</em>) \u2013 The value to yield.</p></li>\n<li><p><strong>output_name</strong> (<em>Optional</em><em>[</em><a class=\"reference external\" href=\"https://docs.python.org/3/library/stdtypes.html#str\" title=\"(in Python v3.8)\"><em>str</em></a><em>]</em>) \u2013 The name of the result to yield (default: <code class=\"docutils literal notranslate\"><span class=\"pre\">'result'</span></code>).</p></li>\n</ul>\n</dd>\n</dl>\n</dd></dl>\n\n<dl class=\"py class\">\n<dt id=\"dagstermill.DagstermillExecutionContext\">\n<em class=\"property\"><span class=\"pre\">class</span> </em><code class=\"sig-prename descclassname\"><span class=\"pre\">dagstermill.</span></code><code class=\"sig-name descname\"><span class=\"pre\">DagstermillExecutionContext</span></code><span class=\"sig-paren\">(</span><em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">pipeline_context</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">pipeline_def</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">resource_keys_to_init</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">solid_name</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">solid_handle</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">solid_config</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">None</span></span></em><span class=\"sig-paren\">)</span><a class=\"reference internal\" href=\"../../../../../_modules/dagstermill/context#DagstermillExecutionContext\"><span class=\"viewcode-link\"><span class=\"pre\">[source]</span></span></a><a class=\"headerlink\" href=\"#dagstermill.DagstermillExecutionContext\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Dagstermill-specific execution context.</p>\n<p>Do not initialize directly: use <a class=\"reference internal\" href=\"#dagstermill.get_context\" title=\"dagstermill.get_context\"><code class=\"xref py py-func docutils literal notranslate\"><span class=\"pre\">dagstermill.get_context()</span></code></a>.</p>\n<dl class=\"py method\">\n<dt id=\"dagstermill.DagstermillExecutionContext.get_tag\">\n<code class=\"sig-name descname\"><span class=\"pre\">get_tag</span></code><span class=\"sig-paren\">(</span><em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">key</span></span></em><span class=\"sig-paren\">)</span><a class=\"reference internal\" href=\"../../../../../_modules/dagstermill/context#DagstermillExecutionContext.get_tag\"><span class=\"viewcode-link\"><span class=\"pre\">[source]</span></span></a><a class=\"headerlink\" href=\"#dagstermill.DagstermillExecutionContext.get_tag\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Get a logging tag defined on the context.</p>\n<dl class=\"field-list simple\">\n<dt class=\"field-odd\">Parameters</dt>\n<dd class=\"field-odd\"><p><strong>key</strong> (<a class=\"reference external\" href=\"https://docs.python.org/3/library/stdtypes.html#str\" title=\"(in Python v3.8)\"><em>str</em></a>) \u2013 The key to get.</p>\n</dd>\n<dt class=\"field-even\">Returns</dt>\n<dd class=\"field-even\"><p>str</p>\n</dd>\n</dl>\n</dd></dl>\n\n<dl class=\"py method\">\n<dt id=\"dagstermill.DagstermillExecutionContext.has_tag\">\n<code class=\"sig-name descname\"><span class=\"pre\">has_tag</span></code><span class=\"sig-paren\">(</span><em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">key</span></span></em><span class=\"sig-paren\">)</span><a class=\"reference internal\" href=\"../../../../../_modules/dagstermill/context#DagstermillExecutionContext.has_tag\"><span class=\"viewcode-link\"><span class=\"pre\">[source]</span></span></a><a class=\"headerlink\" href=\"#dagstermill.DagstermillExecutionContext.has_tag\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Check if a logging tag is defined on the context.</p>\n<dl class=\"field-list simple\">\n<dt class=\"field-odd\">Parameters</dt>\n<dd class=\"field-odd\"><p><strong>key</strong> (<a class=\"reference external\" href=\"https://docs.python.org/3/library/stdtypes.html#str\" title=\"(in Python v3.8)\"><em>str</em></a>) \u2013 The key to check.</p>\n</dd>\n<dt class=\"field-even\">Returns</dt>\n<dd class=\"field-even\"><p>bool</p>\n</dd>\n</dl>\n</dd></dl>\n\n<dl class=\"py method\">\n<dt id=\"dagstermill.DagstermillExecutionContext.log\">\n<em class=\"property\"><span class=\"pre\">property</span> </em><code class=\"sig-name descname\"><span class=\"pre\">log</span></code><a class=\"headerlink\" href=\"#dagstermill.DagstermillExecutionContext.log\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>The log manager for the context.</p>\n<p>Call, e.g., <code class=\"docutils literal notranslate\"><span class=\"pre\">log.info()</span></code> to log messages through the Dagster machinery.</p>\n<dl class=\"field-list simple\">\n<dt class=\"field-odd\">Type</dt>\n<dd class=\"field-odd\"><p><a class=\"reference internal\" href=\"../../loggers#dagster.DagsterLogManager\" title=\"dagster.DagsterLogManager\"><code class=\"xref py py-class docutils literal notranslate\"><span class=\"pre\">dagster.DagsterLogManager</span></code></a></p>\n</dd>\n</dl>\n</dd></dl>\n\n<dl class=\"py method\">\n<dt id=\"dagstermill.DagstermillExecutionContext.logging_tags\">\n<em class=\"property\"><span class=\"pre\">property</span> </em><code class=\"sig-name descname\"><span class=\"pre\">logging_tags</span></code><a class=\"headerlink\" href=\"#dagstermill.DagstermillExecutionContext.logging_tags\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>The logging tags for the context.</p>\n<dl class=\"field-list simple\">\n<dt class=\"field-odd\">Type</dt>\n<dd class=\"field-odd\"><p><a class=\"reference external\" href=\"https://docs.python.org/3/library/stdtypes.html#dict\" title=\"(in Python v3.8)\">dict</a></p>\n</dd>\n</dl>\n</dd></dl>\n\n<dl class=\"py method\">\n<dt id=\"dagstermill.DagstermillExecutionContext.pipeline_def\">\n<em class=\"property\"><span class=\"pre\">property</span> </em><code class=\"sig-name descname\"><span class=\"pre\">pipeline_def</span></code><a class=\"headerlink\" href=\"#dagstermill.DagstermillExecutionContext.pipeline_def\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>The pipeline definition for the context.</p>\n<p>This will be a dagstermill-specific shim.</p>\n<dl class=\"field-list simple\">\n<dt class=\"field-odd\">Type</dt>\n<dd class=\"field-odd\"><p><a class=\"reference internal\" href=\"../../pipeline#dagster.PipelineDefinition\" title=\"dagster.PipelineDefinition\"><code class=\"xref py py-class docutils literal notranslate\"><span class=\"pre\">dagster.PipelineDefinition</span></code></a></p>\n</dd>\n</dl>\n</dd></dl>\n\n<dl class=\"py method\">\n<dt id=\"dagstermill.DagstermillExecutionContext.pipeline_run\">\n<em class=\"property\"><span class=\"pre\">property</span> </em><code class=\"sig-name descname\"><span class=\"pre\">pipeline_run</span></code><a class=\"headerlink\" href=\"#dagstermill.DagstermillExecutionContext.pipeline_run\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>The pipeline run for the context.</p>\n<dl class=\"field-list simple\">\n<dt class=\"field-odd\">Type</dt>\n<dd class=\"field-odd\"><p><a class=\"reference internal\" href=\"../../internals#dagster.PipelineRun\" title=\"dagster.PipelineRun\"><code class=\"xref py py-class docutils literal notranslate\"><span class=\"pre\">dagster.PipelineRun</span></code></a></p>\n</dd>\n</dl>\n</dd></dl>\n\n<dl class=\"py method\">\n<dt id=\"dagstermill.DagstermillExecutionContext.resolved_run_config\">\n<em class=\"property\"><span class=\"pre\">property</span> </em><code class=\"sig-name descname\"><span class=\"pre\">resolved_run_config</span></code><a class=\"headerlink\" href=\"#dagstermill.DagstermillExecutionContext.resolved_run_config\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>The resolved_run_config for the context</p>\n<dl class=\"field-list simple\">\n<dt class=\"field-odd\">Type</dt>\n<dd class=\"field-odd\"><p><code class=\"xref py py-class docutils literal notranslate\"><span class=\"pre\">dagster.ResolvedRunConfig</span></code></p>\n</dd>\n</dl>\n</dd></dl>\n\n<dl class=\"py method\">\n<dt id=\"dagstermill.DagstermillExecutionContext.resources\">\n<em class=\"property\"><span class=\"pre\">property</span> </em><code class=\"sig-name descname\"><span class=\"pre\">resources</span></code><a class=\"headerlink\" href=\"#dagstermill.DagstermillExecutionContext.resources\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>A dynamically-created type whose properties allow access to\nresources.</p>\n<dl class=\"field-list simple\">\n<dt class=\"field-odd\">Type</dt>\n<dd class=\"field-odd\"><p>collections.namedtuple</p>\n</dd>\n</dl>\n</dd></dl>\n\n<dl class=\"py method\">\n<dt id=\"dagstermill.DagstermillExecutionContext.run_config\">\n<em class=\"property\"><span class=\"pre\">property</span> </em><code class=\"sig-name descname\"><span class=\"pre\">run_config</span></code><a class=\"headerlink\" href=\"#dagstermill.DagstermillExecutionContext.run_config\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>The run_config for the context.</p>\n<dl class=\"field-list simple\">\n<dt class=\"field-odd\">Type</dt>\n<dd class=\"field-odd\"><p><a class=\"reference external\" href=\"https://docs.python.org/3/library/stdtypes.html#dict\" title=\"(in Python v3.8)\">dict</a></p>\n</dd>\n</dl>\n</dd></dl>\n\n<dl class=\"py method\">\n<dt id=\"dagstermill.DagstermillExecutionContext.run_id\">\n<em class=\"property\"><span class=\"pre\">property</span> </em><code class=\"sig-name descname\"><span class=\"pre\">run_id</span></code><a class=\"headerlink\" href=\"#dagstermill.DagstermillExecutionContext.run_id\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>The run_id for the context.</p>\n<dl class=\"field-list simple\">\n<dt class=\"field-odd\">Type</dt>\n<dd class=\"field-odd\"><p><a class=\"reference external\" href=\"https://docs.python.org/3/library/stdtypes.html#str\" title=\"(in Python v3.8)\">str</a></p>\n</dd>\n</dl>\n</dd></dl>\n\n<dl class=\"py method\">\n<dt id=\"dagstermill.DagstermillExecutionContext.solid\">\n<em class=\"property\"><span class=\"pre\">property</span> </em><code class=\"sig-name descname\"><span class=\"pre\">solid</span></code><a class=\"headerlink\" href=\"#dagstermill.DagstermillExecutionContext.solid\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>The solid for the context.</p>\n<p>In interactive contexts, this may be a dagstermill-specific shim, depending whether a\nsolid definition was passed to <code class=\"docutils literal notranslate\"><span class=\"pre\">dagstermill.get_context</span></code>.</p>\n<dl class=\"field-list simple\">\n<dt class=\"field-odd\">Type</dt>\n<dd class=\"field-odd\"><p><code class=\"xref py py-class docutils literal notranslate\"><span class=\"pre\">dagster.Node</span></code></p>\n</dd>\n</dl>\n</dd></dl>\n\n<dl class=\"py method\">\n<dt id=\"dagstermill.DagstermillExecutionContext.solid_config\">\n<em class=\"property\"><span class=\"pre\">property</span> </em><code class=\"sig-name descname\"><span class=\"pre\">solid_config</span></code><a class=\"headerlink\" href=\"#dagstermill.DagstermillExecutionContext.solid_config\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>A dynamically-created type whose properties allow access to\nsolid-specific config.</p>\n<dl class=\"field-list simple\">\n<dt class=\"field-odd\">Type</dt>\n<dd class=\"field-odd\"><p>collections.namedtuple</p>\n</dd>\n</dl>\n</dd></dl>\n\n<dl class=\"py method\">\n<dt id=\"dagstermill.DagstermillExecutionContext.solid_def\">\n<em class=\"property\"><span class=\"pre\">property</span> </em><code class=\"sig-name descname\"><span class=\"pre\">solid_def</span></code><a class=\"headerlink\" href=\"#dagstermill.DagstermillExecutionContext.solid_def\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>The solid definition for the context.</p>\n<p>In interactive contexts, this may be a dagstermill-specific shim, depending whether a\nsolid definition was passed to <code class=\"docutils literal notranslate\"><span class=\"pre\">dagstermill.get_context</span></code>.</p>\n<dl class=\"field-list simple\">\n<dt class=\"field-odd\">Type</dt>\n<dd class=\"field-odd\"><p><a class=\"reference internal\" href=\"../../solids#dagster.SolidDefinition\" title=\"dagster.SolidDefinition\"><code class=\"xref py py-class docutils literal notranslate\"><span class=\"pre\">dagster.SolidDefinition</span></code></a></p>\n</dd>\n</dl>\n</dd></dl>\n\n</dd></dl>\n\n<dl class=\"py class\">\n<dt id=\"dagstermill.DagstermillError\">\n<em class=\"property\"><span class=\"pre\">class</span> </em><code class=\"sig-prename descclassname\"><span class=\"pre\">dagstermill.</span></code><code class=\"sig-name descname\"><span class=\"pre\">DagstermillError</span></code><a class=\"reference internal\" href=\"../../../../../_modules/dagstermill/errors#DagstermillError\"><span class=\"viewcode-link\"><span class=\"pre\">[source]</span></span></a><a class=\"headerlink\" href=\"#dagstermill.DagstermillError\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Base class for errors raised by dagstermill.</p>\n</dd></dl>\n\n</div>\n", "current_page_name": "sections/api/apidocs/libraries/dagstermill", "customsidebar": null, "display_toc": false, "meta": null, "metatags": "", "next": {"link": "../dagster-graphql/", "title": "GraphQL (dagster-graphql)"}, "page_source_suffix": ".rst", "parents": [], "prev": {"link": "../dagster-twilio/", "title": "Twilio (dagster-twilio)"}, "rellinks": [["genindex", "General Index", "I", "index"], ["py-modindex", "Python Module Index", "", "modules"], ["sections/api/apidocs/libraries/dagster-graphql", "GraphQL (dagster-graphql)", "N", "next"], ["sections/api/apidocs/libraries/dagster-twilio", "Twilio (dagster-twilio)", "P", "previous"]], "sidebars": ["globaltoc.html", "searchbox.html"], "sourcename": "sections/api/apidocs/libraries/dagstermill.rst.txt", "title": "Dagstermill", "toc": "<ul>\n<li><a class=\"reference internal\" href=\"#\">Dagstermill</a></li>\n</ul>\n"}}, "loggers": {"alabaster_version": "0.7.12", "body": "<div class=\"section\" id=\"loggers\">\n<h1>Loggers<a class=\"headerlink\" href=\"#loggers\" title=\"Permalink to this headline\">\u00b6</a></h1>\n<div class=\"section\" id=\"built-in-loggers\">\n<h2>Built-in loggers<a class=\"headerlink\" href=\"#built-in-loggers\" title=\"Permalink to this headline\">\u00b6</a></h2>\n<dl class=\"py function\">\n<dt id=\"dagster.loggers.colored_console_logger\">\n<code class=\"sig-prename descclassname\"><span class=\"pre\">dagster.loggers.</span></code><code class=\"sig-name descname\"><span class=\"pre\">colored_console_logger</span></code><span class=\"sig-paren\">(</span><em class=\"sig-param\"><span class=\"o\"><span class=\"pre\">*</span></span><span class=\"n\"><span class=\"pre\">args</span></span></em>, <em class=\"sig-param\"><span class=\"o\"><span class=\"pre\">**</span></span><span class=\"n\"><span class=\"pre\">kwargs</span></span></em><span class=\"sig-paren\">)</span><a class=\"headerlink\" href=\"#dagster.loggers.colored_console_logger\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Core class for defining loggers.</p>\n<p>Loggers are job-scoped logging handlers, which will be automatically invoked whenever\ndagster messages are logged from within a job.</p>\n<dl class=\"field-list simple\">\n<dt class=\"field-odd\">Parameters</dt>\n<dd class=\"field-odd\"><ul class=\"simple\">\n<li><p><strong>logger_fn</strong> (<em>Callable</em><em>[</em><em>[</em><a class=\"reference internal\" href=\"#dagster.InitLoggerContext\" title=\"dagster.InitLoggerContext\"><em>InitLoggerContext</em></a><em>]</em><em>, </em><a class=\"reference external\" href=\"https://docs.python.org/3/library/logging.html#logging.Logger\" title=\"(in Python v3.8)\"><em>logging.Logger</em></a><em>]</em>) \u2013 User-provided function to\ninstantiate the logger. This logger will be automatically invoked whenever the methods\non <code class=\"docutils literal notranslate\"><span class=\"pre\">context.log</span></code> are called from within job/pipeline compute logic.</p></li>\n<li><p><strong>config_schema</strong> (<em>Optional</em><em>[</em><a class=\"reference internal\" href=\"config#dagster.ConfigSchema\" title=\"dagster.ConfigSchema\"><em>ConfigSchema</em></a><em>]</em>) \u2013 The schema for the config. Configuration data available in\n<cite>init_context.logger_config</cite>. If not set, Dagster will accept any config provided.</p></li>\n<li><p><strong>description</strong> (<em>Optional</em><em>[</em><a class=\"reference external\" href=\"https://docs.python.org/3/library/stdtypes.html#str\" title=\"(in Python v3.8)\"><em>str</em></a><em>]</em>) \u2013 A human-readable description of this logger.</p></li>\n</ul>\n</dd>\n</dl>\n</dd></dl>\n\n<dl class=\"py function\">\n<dt id=\"dagster.loggers.json_console_logger\">\n<code class=\"sig-prename descclassname\"><span class=\"pre\">dagster.loggers.</span></code><code class=\"sig-name descname\"><span class=\"pre\">json_console_logger</span></code><span class=\"sig-paren\">(</span><em class=\"sig-param\"><span class=\"o\"><span class=\"pre\">*</span></span><span class=\"n\"><span class=\"pre\">args</span></span></em>, <em class=\"sig-param\"><span class=\"o\"><span class=\"pre\">**</span></span><span class=\"n\"><span class=\"pre\">kwargs</span></span></em><span class=\"sig-paren\">)</span><a class=\"headerlink\" href=\"#dagster.loggers.json_console_logger\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Core class for defining loggers.</p>\n<p>Loggers are job-scoped logging handlers, which will be automatically invoked whenever\ndagster messages are logged from within a job.</p>\n<dl class=\"field-list simple\">\n<dt class=\"field-odd\">Parameters</dt>\n<dd class=\"field-odd\"><ul class=\"simple\">\n<li><p><strong>logger_fn</strong> (<em>Callable</em><em>[</em><em>[</em><a class=\"reference internal\" href=\"#dagster.InitLoggerContext\" title=\"dagster.InitLoggerContext\"><em>InitLoggerContext</em></a><em>]</em><em>, </em><a class=\"reference external\" href=\"https://docs.python.org/3/library/logging.html#logging.Logger\" title=\"(in Python v3.8)\"><em>logging.Logger</em></a><em>]</em>) \u2013 User-provided function to\ninstantiate the logger. This logger will be automatically invoked whenever the methods\non <code class=\"docutils literal notranslate\"><span class=\"pre\">context.log</span></code> are called from within job/pipeline compute logic.</p></li>\n<li><p><strong>config_schema</strong> (<em>Optional</em><em>[</em><a class=\"reference internal\" href=\"config#dagster.ConfigSchema\" title=\"dagster.ConfigSchema\"><em>ConfigSchema</em></a><em>]</em>) \u2013 The schema for the config. Configuration data available in\n<cite>init_context.logger_config</cite>. If not set, Dagster will accept any config provided.</p></li>\n<li><p><strong>description</strong> (<em>Optional</em><em>[</em><a class=\"reference external\" href=\"https://docs.python.org/3/library/stdtypes.html#str\" title=\"(in Python v3.8)\"><em>str</em></a><em>]</em>) \u2013 A human-readable description of this logger.</p></li>\n</ul>\n</dd>\n</dl>\n</dd></dl>\n\n</div>\n<div class=\"section\" id=\"logging-from-an-op\">\n<h2>Logging from an &#64;op<a class=\"headerlink\" href=\"#logging-from-an-op\" title=\"Permalink to this headline\">\u00b6</a></h2>\n<dl class=\"py class\">\n<dt id=\"dagster.DagsterLogManager\">\n<em class=\"property\"><span class=\"pre\">class</span> </em><code class=\"sig-prename descclassname\"><span class=\"pre\">dagster.</span></code><code class=\"sig-name descname\"><span class=\"pre\">DagsterLogManager</span></code><span class=\"sig-paren\">(</span><em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">dagster_handler</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">level</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">0</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">managed_loggers</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">None</span></span></em><span class=\"sig-paren\">)</span><a class=\"reference internal\" href=\"../../../../_modules/dagster/core/log_manager#DagsterLogManager\"><span class=\"viewcode-link\"><span class=\"pre\">[source]</span></span></a><a class=\"headerlink\" href=\"#dagster.DagsterLogManager\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Centralized dispatch for logging from user code.</p>\n<p>Handles the construction of uniform structured log messages and passes them through to the\nunderlying loggers/handlers.</p>\n<p>An instance of the log manager is made available to ops as <code class=\"docutils literal notranslate\"><span class=\"pre\">context.log</span></code>. Users should not\ninitialize instances of the log manager directly. To configure custom loggers, set the\n<code class=\"docutils literal notranslate\"><span class=\"pre\">logger_defs</span></code> argument in an <cite>&#64;job</cite> decorator or when calling the <cite>to_job()</cite> method on a\n<a class=\"reference internal\" href=\"graphs#dagster.GraphDefinition\" title=\"dagster.GraphDefinition\"><code class=\"xref py py-class docutils literal notranslate\"><span class=\"pre\">GraphDefinition</span></code></a>.</p>\n<p>The log manager inherits standard convenience methods like those exposed by the Python standard\nlibrary <a class=\"reference external\" href=\"https://docs.python.org/3/library/logging.html#module-logging\" title=\"(in Python v3.8)\"><code class=\"docutils literal notranslate\"><span class=\"pre\">logging</span></code></a> module (i.e., within the body of an op,\n<code class=\"docutils literal notranslate\"><span class=\"pre\">context.log.{debug,</span> <span class=\"pre\">info,</span> <span class=\"pre\">warning,</span> <span class=\"pre\">warn,</span> <span class=\"pre\">error,</span> <span class=\"pre\">critical,</span> <span class=\"pre\">fatal}</span></code>).</p>\n<p>The underlying integer API can also be called directly using, e.g.\n<code class=\"docutils literal notranslate\"><span class=\"pre\">context.log.log(5,</span> <span class=\"pre\">msg)</span></code>, and the log manager will delegate to the <code class=\"docutils literal notranslate\"><span class=\"pre\">log</span></code> method\ndefined on each of the loggers it manages.</p>\n<p>User-defined custom log levels are not supported, and calls to, e.g.,\n<code class=\"docutils literal notranslate\"><span class=\"pre\">context.log.trace</span></code> or <code class=\"docutils literal notranslate\"><span class=\"pre\">context.log.notice</span></code> will result in hard exceptions <strong>at runtime</strong>.</p>\n</dd></dl>\n\n</div>\n<div class=\"section\" id=\"defining-custom-loggers\">\n<h2>Defining custom loggers<a class=\"headerlink\" href=\"#defining-custom-loggers\" title=\"Permalink to this headline\">\u00b6</a></h2>\n<dl class=\"py function\">\n<dt id=\"dagster.logger\">\n<code class=\"sig-prename descclassname\"><span class=\"pre\">&#64;</span></code><code class=\"sig-prename descclassname\"><span class=\"pre\">dagster.</span></code><code class=\"sig-name descname\"><span class=\"pre\">logger</span></code><span class=\"sig-paren\">(</span><em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">config_schema</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">None</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">description</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">None</span></span></em><span class=\"sig-paren\">)</span><a class=\"reference internal\" href=\"../../../../_modules/dagster/core/definitions/logger_definition#logger\"><span class=\"viewcode-link\"><span class=\"pre\">[source]</span></span></a><a class=\"headerlink\" href=\"#dagster.logger\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Define a logger.</p>\n<p>The decorated function should accept an <a class=\"reference internal\" href=\"#dagster.InitLoggerContext\" title=\"dagster.InitLoggerContext\"><code class=\"xref py py-class docutils literal notranslate\"><span class=\"pre\">InitLoggerContext</span></code></a> and return an instance of\n<a class=\"reference external\" href=\"https://docs.python.org/3/library/logging.html#logging.Logger\" title=\"(in Python v3.8)\"><code class=\"docutils literal notranslate\"><span class=\"pre\">logging.Logger</span></code></a>. This function will become the <code class=\"docutils literal notranslate\"><span class=\"pre\">logger_fn</span></code> of an underlying\n<a class=\"reference internal\" href=\"#dagster.LoggerDefinition\" title=\"dagster.LoggerDefinition\"><code class=\"xref py py-class docutils literal notranslate\"><span class=\"pre\">LoggerDefinition</span></code></a>.</p>\n<dl class=\"field-list simple\">\n<dt class=\"field-odd\">Parameters</dt>\n<dd class=\"field-odd\"><ul class=\"simple\">\n<li><p><strong>config_schema</strong> (<em>Optional</em><em>[</em><a class=\"reference internal\" href=\"config#dagster.ConfigSchema\" title=\"dagster.ConfigSchema\"><em>ConfigSchema</em></a><em>]</em>) \u2013 The schema for the config. Configuration data available in\n<cite>init_context.logger_config</cite>. If not set, Dagster will accept any config provided.</p></li>\n<li><p><strong>description</strong> (<em>Optional</em><em>[</em><a class=\"reference external\" href=\"https://docs.python.org/3/library/stdtypes.html#str\" title=\"(in Python v3.8)\"><em>str</em></a><em>]</em>) \u2013 A human-readable description of the logger.</p></li>\n</ul>\n</dd>\n</dl>\n</dd></dl>\n\n<dl class=\"py class\">\n<dt id=\"dagster.LoggerDefinition\">\n<em class=\"property\"><span class=\"pre\">class</span> </em><code class=\"sig-prename descclassname\"><span class=\"pre\">dagster.</span></code><code class=\"sig-name descname\"><span class=\"pre\">LoggerDefinition</span></code><span class=\"sig-paren\">(</span><em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">logger_fn</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">config_schema</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">None</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">description</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">None</span></span></em><span class=\"sig-paren\">)</span><a class=\"reference internal\" href=\"../../../../_modules/dagster/core/definitions/logger_definition#LoggerDefinition\"><span class=\"viewcode-link\"><span class=\"pre\">[source]</span></span></a><a class=\"headerlink\" href=\"#dagster.LoggerDefinition\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Core class for defining loggers.</p>\n<p>Loggers are job-scoped logging handlers, which will be automatically invoked whenever\ndagster messages are logged from within a job.</p>\n<dl class=\"field-list simple\">\n<dt class=\"field-odd\">Parameters</dt>\n<dd class=\"field-odd\"><ul class=\"simple\">\n<li><p><strong>logger_fn</strong> (<em>Callable</em><em>[</em><em>[</em><a class=\"reference internal\" href=\"#dagster.InitLoggerContext\" title=\"dagster.InitLoggerContext\"><em>InitLoggerContext</em></a><em>]</em><em>, </em><a class=\"reference external\" href=\"https://docs.python.org/3/library/logging.html#logging.Logger\" title=\"(in Python v3.8)\"><em>logging.Logger</em></a><em>]</em>) \u2013 User-provided function to\ninstantiate the logger. This logger will be automatically invoked whenever the methods\non <code class=\"docutils literal notranslate\"><span class=\"pre\">context.log</span></code> are called from within job/pipeline compute logic.</p></li>\n<li><p><strong>config_schema</strong> (<em>Optional</em><em>[</em><a class=\"reference internal\" href=\"config#dagster.ConfigSchema\" title=\"dagster.ConfigSchema\"><em>ConfigSchema</em></a><em>]</em>) \u2013 The schema for the config. Configuration data available in\n<cite>init_context.logger_config</cite>. If not set, Dagster will accept any config provided.</p></li>\n<li><p><strong>description</strong> (<em>Optional</em><em>[</em><a class=\"reference external\" href=\"https://docs.python.org/3/library/stdtypes.html#str\" title=\"(in Python v3.8)\"><em>str</em></a><em>]</em>) \u2013 A human-readable description of this logger.</p></li>\n</ul>\n</dd>\n</dl>\n<dl class=\"py method\">\n<dt id=\"dagster.LoggerDefinition.configured\">\n<code class=\"sig-name descname\"><span class=\"pre\">configured</span></code><span class=\"sig-paren\">(</span><em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">config_or_config_fn</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">config_schema</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">None</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">description</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">None</span></span></em><span class=\"sig-paren\">)</span><a class=\"headerlink\" href=\"#dagster.LoggerDefinition.configured\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Wraps this object in an object of the same type that provides configuration to the inner\nobject.</p>\n<dl class=\"field-list simple\">\n<dt class=\"field-odd\">Parameters</dt>\n<dd class=\"field-odd\"><ul class=\"simple\">\n<li><p><strong>config_or_config_fn</strong> (<em>Union</em><em>[</em><em>Any</em><em>, </em><em>Callable</em><em>[</em><em>[</em><em>Any</em><em>]</em><em>, </em><em>Any</em><em>]</em><em>]</em>) \u2013 Either (1) Run configuration\nthat fully satisfies this object\u2019s config schema or (2) A function that accepts run\nconfiguration and returns run configuration that fully satisfies this object\u2019s\nconfig schema.  In the latter case, config_schema must be specified.  When\npassing a function, it\u2019s easiest to use <a class=\"reference internal\" href=\"config#dagster.configured\" title=\"dagster.configured\"><code class=\"xref py py-func docutils literal notranslate\"><span class=\"pre\">configured()</span></code></a>.</p></li>\n<li><p><strong>config_schema</strong> (<a class=\"reference internal\" href=\"config#dagster.ConfigSchema\" title=\"dagster.ConfigSchema\"><em>ConfigSchema</em></a>) \u2013 If config_or_config_fn is a function, the config schema\nthat its input must satisfy.</p></li>\n<li><p><strong>description</strong> (<em>Optional</em><em>[</em><a class=\"reference external\" href=\"https://docs.python.org/3/library/stdtypes.html#str\" title=\"(in Python v3.8)\"><em>str</em></a><em>]</em>) \u2013 Description of the new definition. If not specified,\ninherits the description of the definition being configured.</p></li>\n</ul>\n</dd>\n</dl>\n<p>Returns (ConfigurableDefinition): A configured version of this object.</p>\n</dd></dl>\n\n</dd></dl>\n\n<dl class=\"py class\">\n<dt id=\"dagster.InitLoggerContext\">\n<em class=\"property\"><span class=\"pre\">class</span> </em><code class=\"sig-prename descclassname\"><span class=\"pre\">dagster.</span></code><code class=\"sig-name descname\"><span class=\"pre\">InitLoggerContext</span></code><span class=\"sig-paren\">(</span><em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">logger_config</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">logger_def</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">None</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">pipeline_def</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">None</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">run_id</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">None</span></span></em><span class=\"sig-paren\">)</span><a class=\"reference internal\" href=\"../../../../_modules/dagster/core/execution/context/logger#InitLoggerContext\"><span class=\"viewcode-link\"><span class=\"pre\">[source]</span></span></a><a class=\"headerlink\" href=\"#dagster.InitLoggerContext\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Logger-specific initialization context.</p>\n<p>An instance of this class is made available as the first argument to the <code class=\"docutils literal notranslate\"><span class=\"pre\">logger_fn</span></code> decorated\nby <a class=\"reference internal\" href=\"#dagster.logger\" title=\"dagster.logger\"><code class=\"xref py py-func docutils literal notranslate\"><span class=\"pre\">&#64;logger</span></code></a> or set on a <a class=\"reference internal\" href=\"#dagster.LoggerDefinition\" title=\"dagster.LoggerDefinition\"><code class=\"xref py py-class docutils literal notranslate\"><span class=\"pre\">LoggerDefinition</span></code></a>.</p>\n<p>Users should not instantiate this class.</p>\n<dl class=\"py attribute\">\n<dt id=\"dagster.InitLoggerContext.logger_config\">\n<code class=\"sig-name descname\"><span class=\"pre\">logger_config</span></code><a class=\"headerlink\" href=\"#dagster.InitLoggerContext.logger_config\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>The configuration data provided by the run config. The\nschema for this data is defined by <code class=\"docutils literal notranslate\"><span class=\"pre\">config_schema</span></code> on the <a class=\"reference internal\" href=\"#dagster.LoggerDefinition\" title=\"dagster.LoggerDefinition\"><code class=\"xref py py-class docutils literal notranslate\"><span class=\"pre\">LoggerDefinition</span></code></a></p>\n<dl class=\"field-list simple\">\n<dt class=\"field-odd\">Type</dt>\n<dd class=\"field-odd\"><p>Any</p>\n</dd>\n</dl>\n</dd></dl>\n\n<dl class=\"py attribute\">\n<dt id=\"dagster.InitLoggerContext.pipeline_def\">\n<code class=\"sig-name descname\"><span class=\"pre\">pipeline_def</span></code><a class=\"headerlink\" href=\"#dagster.InitLoggerContext.pipeline_def\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>The pipeline/job definition currently being executed.</p>\n<dl class=\"field-list simple\">\n<dt class=\"field-odd\">Type</dt>\n<dd class=\"field-odd\"><p>Optional[<a class=\"reference internal\" href=\"pipeline#dagster.PipelineDefinition\" title=\"dagster.PipelineDefinition\">PipelineDefinition</a>]</p>\n</dd>\n</dl>\n</dd></dl>\n\n<dl class=\"py attribute\">\n<dt id=\"dagster.InitLoggerContext.logger_def\">\n<code class=\"sig-name descname\"><span class=\"pre\">logger_def</span></code><a class=\"headerlink\" href=\"#dagster.InitLoggerContext.logger_def\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>The logger definition for the logger being constructed.</p>\n<dl class=\"field-list simple\">\n<dt class=\"field-odd\">Type</dt>\n<dd class=\"field-odd\"><p>Optional[<a class=\"reference internal\" href=\"#dagster.LoggerDefinition\" title=\"dagster.LoggerDefinition\">LoggerDefinition</a>]</p>\n</dd>\n</dl>\n</dd></dl>\n\n<dl class=\"py attribute\">\n<dt id=\"dagster.InitLoggerContext.run_id\">\n<code class=\"sig-name descname\"><span class=\"pre\">run_id</span></code><a class=\"headerlink\" href=\"#dagster.InitLoggerContext.run_id\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>The ID for this run of the pipeline.</p>\n<dl class=\"field-list simple\">\n<dt class=\"field-odd\">Type</dt>\n<dd class=\"field-odd\"><p><a class=\"reference external\" href=\"https://docs.python.org/3/library/stdtypes.html#str\" title=\"(in Python v3.8)\">str</a></p>\n</dd>\n</dl>\n</dd></dl>\n\n</dd></dl>\n\n<dl class=\"py function\">\n<dt id=\"dagster.build_init_logger_context\">\n<code class=\"sig-prename descclassname\"><span class=\"pre\">dagster.</span></code><code class=\"sig-name descname\"><span class=\"pre\">build_init_logger_context</span></code><span class=\"sig-paren\">(</span><em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">logger_config</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">None</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">pipeline_def</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">None</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">job_def</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">None</span></span></em><span class=\"sig-paren\">)</span><a class=\"reference internal\" href=\"../../../../_modules/dagster/core/definitions/logger_definition#build_init_logger_context\"><span class=\"viewcode-link\"><span class=\"pre\">[source]</span></span></a><a class=\"headerlink\" href=\"#dagster.build_init_logger_context\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Builds logger initialization context from provided parameters.</p>\n<p>This function can be used to provide the context argument to the invocation of a logger\ndefinition.</p>\n<p>Note that you may only specify one of pipeline_def and job_def.</p>\n<dl class=\"field-list simple\">\n<dt class=\"field-odd\">Parameters</dt>\n<dd class=\"field-odd\"><ul class=\"simple\">\n<li><p><strong>logger_config</strong> (<em>Any</em>) \u2013 The config to provide during initialization of logger.</p></li>\n<li><p><strong>pipeline_def</strong> (<em>Optional</em><em>[</em><a class=\"reference internal\" href=\"pipeline#dagster.PipelineDefinition\" title=\"dagster.PipelineDefinition\"><em>PipelineDefinition</em></a><em>]</em>) \u2013 The pipeline definition that the logger will be\nused with.</p></li>\n<li><p><strong>job_def</strong> (<em>Optional</em><em>[</em><a class=\"reference internal\" href=\"jobs#dagster.JobDefinition\" title=\"dagster.JobDefinition\"><em>JobDefinition</em></a><em>]</em>) \u2013 The job definition that the logger will be used with.</p></li>\n</ul>\n</dd>\n</dl>\n<p class=\"rubric\">Examples</p>\n<div class=\"highlight-python notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"n\">context</span> <span class=\"o\">=</span> <span class=\"n\">build_init_logger_context</span><span class=\"p\">()</span>\n<span class=\"n\">logger_to_init</span><span class=\"p\">(</span><span class=\"n\">context</span><span class=\"p\">)</span>\n</pre></div>\n</div>\n</dd></dl>\n\n</div>\n</div>\n", "current_page_name": "sections/api/apidocs/loggers", "customsidebar": null, "display_toc": true, "meta": null, "metatags": "", "next": {"link": "../modes/", "title": "[Legacy] Modes"}, "page_source_suffix": ".rst", "parents": [], "prev": {"link": "../jobs/", "title": "Jobs"}, "rellinks": [["genindex", "General Index", "I", "index"], ["py-modindex", "Python Module Index", "", "modules"], ["sections/api/apidocs/modes", "[Legacy] Modes", "N", "next"], ["sections/api/apidocs/jobs", "Jobs", "P", "previous"]], "sidebars": ["globaltoc.html", "searchbox.html"], "sourcename": "sections/api/apidocs/loggers.rst.txt", "title": "Loggers", "toc": "<ul>\n<li><a class=\"reference internal\" href=\"#\">Loggers</a><ul>\n<li><a class=\"reference internal\" href=\"#built-in-loggers\">Built-in loggers</a></li>\n<li><a class=\"reference internal\" href=\"#logging-from-an-op\">Logging from an &#64;op</a></li>\n<li><a class=\"reference internal\" href=\"#defining-custom-loggers\">Defining custom loggers</a></li>\n</ul>\n</li>\n</ul>\n"}, "memoization": {"alabaster_version": "0.7.12", "body": "<div class=\"section\" id=\"versioning-and-memoization\">\n<h1>Versioning and Memoization<a class=\"headerlink\" href=\"#versioning-and-memoization\" title=\"Permalink to this headline\">\u00b6</a></h1>\n<p>Dagster allows for code versioning and memoization of previous outputs based upon that versioning.\nListed here are APIs related to versioning and memoization.</p>\n<div class=\"section\" id=\"versioning\">\n<h2>Versioning<a class=\"headerlink\" href=\"#versioning\" title=\"Permalink to this headline\">\u00b6</a></h2>\n<dl class=\"py class\">\n<dt id=\"dagster.VersionStrategy\">\n<em class=\"property\"><span class=\"pre\">class</span> </em><code class=\"sig-prename descclassname\"><span class=\"pre\">dagster.</span></code><code class=\"sig-name descname\"><span class=\"pre\">VersionStrategy</span></code><a class=\"reference internal\" href=\"../../../../_modules/dagster/core/definitions/version_strategy#VersionStrategy\"><span class=\"viewcode-link\"><span class=\"pre\">[source]</span></span></a><a class=\"headerlink\" href=\"#dagster.VersionStrategy\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Abstract class for defining a strategy to version solids and resources.</p>\n<p>When subclassing, <cite>get_solid_version</cite> must be implemented, and <cite>get_resource_version</cite> can be\noptionally implemented.</p>\n<p><cite>get_solid_version</cite> should ingest a SolidVersionContext, and <cite>get_resource_version</cite> should ingest a\nResourceVersionContext. From that,  each synthesize a unique string called a <cite>version</cite>, which will\nbe tagged to outputs of that solid in the pipeline. Providing a <cite>VersionStrategy</cite> instance to a\njob will enable memoization on that job, such that only steps whose outputs do not have an\nup-to-date version will run.</p>\n</dd></dl>\n\n<dl class=\"py class\">\n<dt id=\"dagster.SourceHashVersionStrategy\">\n<em class=\"property\"><span class=\"pre\">class</span> </em><code class=\"sig-prename descclassname\"><span class=\"pre\">dagster.</span></code><code class=\"sig-name descname\"><span class=\"pre\">SourceHashVersionStrategy</span></code><a class=\"reference internal\" href=\"../../../../_modules/dagster/core/definitions/version_strategy#SourceHashVersionStrategy\"><span class=\"viewcode-link\"><span class=\"pre\">[source]</span></span></a><a class=\"headerlink\" href=\"#dagster.SourceHashVersionStrategy\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd></dd></dl>\n\n</div>\n<div class=\"section\" id=\"memoization\">\n<h2>Memoization<a class=\"headerlink\" href=\"#memoization\" title=\"Permalink to this headline\">\u00b6</a></h2>\n<dl class=\"py class\">\n<dt id=\"dagster.MemoizableIOManager\">\n<em class=\"property\"><span class=\"pre\">class</span> </em><code class=\"sig-prename descclassname\"><span class=\"pre\">dagster.</span></code><code class=\"sig-name descname\"><span class=\"pre\">MemoizableIOManager</span></code><a class=\"reference internal\" href=\"../../../../_modules/dagster/core/storage/memoizable_io_manager#MemoizableIOManager\"><span class=\"viewcode-link\"><span class=\"pre\">[source]</span></span></a><a class=\"headerlink\" href=\"#dagster.MemoizableIOManager\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Base class for IO manager enabled to work with memoized execution. Users should implement\nthe <code class=\"docutils literal notranslate\"><span class=\"pre\">load_input</span></code> and <code class=\"docutils literal notranslate\"><span class=\"pre\">handle_output</span></code> methods described in the <code class=\"docutils literal notranslate\"><span class=\"pre\">IOManager</span></code> API, and the\n<code class=\"docutils literal notranslate\"><span class=\"pre\">has_output</span></code> method, which returns a boolean representing whether a data object can be found.</p>\n<dl class=\"py method\">\n<dt id=\"dagster.MemoizableIOManager.has_output\">\n<em class=\"property\"><span class=\"pre\">abstract</span> </em><code class=\"sig-name descname\"><span class=\"pre\">has_output</span></code><span class=\"sig-paren\">(</span><em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">context</span></span></em><span class=\"sig-paren\">)</span><a class=\"reference internal\" href=\"../../../../_modules/dagster/core/storage/memoizable_io_manager#MemoizableIOManager.has_output\"><span class=\"viewcode-link\"><span class=\"pre\">[source]</span></span></a><a class=\"headerlink\" href=\"#dagster.MemoizableIOManager.has_output\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>The user-defined method that returns whether data exists given the metadata.</p>\n<dl class=\"field-list simple\">\n<dt class=\"field-odd\">Parameters</dt>\n<dd class=\"field-odd\"><p><strong>context</strong> (<a class=\"reference internal\" href=\"io-managers#dagster.OutputContext\" title=\"dagster.OutputContext\"><em>OutputContext</em></a>) \u2013 The context of the step performing this check.</p>\n</dd>\n<dt class=\"field-even\">Returns</dt>\n<dd class=\"field-even\"><p>True if there is data present that matches the provided context. False otherwise.</p>\n</dd>\n<dt class=\"field-odd\">Return type</dt>\n<dd class=\"field-odd\"><p><a class=\"reference external\" href=\"https://docs.python.org/3/library/functions.html#bool\" title=\"(in Python v3.8)\">bool</a></p>\n</dd>\n</dl>\n</dd></dl>\n\n</dd></dl>\n\n<p>See also: <a class=\"reference internal\" href=\"io-managers#dagster.IOManager\" title=\"dagster.IOManager\"><code class=\"xref py py-class docutils literal notranslate\"><span class=\"pre\">dagster.IOManager</span></code></a>.</p>\n<dl class=\"py attribute\">\n<dt id=\"dagster.MEMOIZED_RUN_TAG\">\n<code class=\"sig-prename descclassname\"><span class=\"pre\">dagster.</span></code><code class=\"sig-name descname\"><span class=\"pre\">MEMOIZED_RUN_TAG</span></code><a class=\"headerlink\" href=\"#dagster.MEMOIZED_RUN_TAG\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Provide this tag to a run to toggle memoization on or off. <code class=\"docutils literal notranslate\"><span class=\"pre\">{MEMOIZED_RUN_TAG:</span> <span class=\"pre\">&quot;true&quot;}</span></code> toggles memoization on, while <code class=\"docutils literal notranslate\"><span class=\"pre\">{MEMOIZED_RUN_TAG:</span> <span class=\"pre\">&quot;false&quot;}</span></code> toggles memoization off.</p>\n</dd></dl>\n\n</div>\n</div>\n", "current_page_name": "sections/api/apidocs/memoization", "customsidebar": null, "display_toc": true, "meta": null, "metatags": "", "next": {"link": "../libraries/dagster-airbyte/", "title": "Airbyte (dagster-airbyte)"}, "page_source_suffix": ".rst", "parents": [], "prev": {"link": "../utilities/", "title": "Utilities"}, "rellinks": [["genindex", "General Index", "I", "index"], ["py-modindex", "Python Module Index", "", "modules"], ["sections/api/apidocs/libraries/dagster-airbyte", "Airbyte (dagster-airbyte)", "N", "next"], ["sections/api/apidocs/utilities", "Utilities", "P", "previous"]], "sidebars": ["globaltoc.html", "searchbox.html"], "sourcename": "sections/api/apidocs/memoization.rst.txt", "title": "Versioning and Memoization", "toc": "<ul>\n<li><a class=\"reference internal\" href=\"#\">Versioning and Memoization</a><ul>\n<li><a class=\"reference internal\" href=\"#versioning\">Versioning</a></li>\n<li><a class=\"reference internal\" href=\"#memoization\">Memoization</a></li>\n</ul>\n</li>\n</ul>\n"}, "modes": {"alabaster_version": "0.7.12", "body": "<div class=\"section\" id=\"legacy-modes\">\n<h1>[Legacy] Modes<a class=\"headerlink\" href=\"#legacy-modes\" title=\"Permalink to this headline\">\u00b6</a></h1>\n<p>Modes are only used in the creation of <cite>PipelineDefinition</cite> objects, which are now\ndeprecated in favor of <cite>JobDefinition</cite>.</p>\n<dl class=\"py class\">\n<dt id=\"dagster.ModeDefinition\">\n<em class=\"property\"><span class=\"pre\">class</span> </em><code class=\"sig-prename descclassname\"><span class=\"pre\">dagster.</span></code><code class=\"sig-name descname\"><span class=\"pre\">ModeDefinition</span></code><span class=\"sig-paren\">(</span><em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">name</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">None</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">resource_defs</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">None</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">logger_defs</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">None</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">executor_defs</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">None</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">description</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">None</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">_config_mapping</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">None</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">_partitioned_config</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">None</span></span></em><span class=\"sig-paren\">)</span><a class=\"reference internal\" href=\"../../../../_modules/dagster/core/definitions/mode#ModeDefinition\"><span class=\"viewcode-link\"><span class=\"pre\">[source]</span></span></a><a class=\"headerlink\" href=\"#dagster.ModeDefinition\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Define a mode in which a pipeline can operate.</p>\n<p>A mode provides pipelines with a set of resource implementations, loggers, system storages,\nand executors.</p>\n<dl class=\"field-list simple\">\n<dt class=\"field-odd\">Parameters</dt>\n<dd class=\"field-odd\"><ul class=\"simple\">\n<li><p><strong>name</strong> (<em>Optional</em><em>[</em><a class=\"reference external\" href=\"https://docs.python.org/3/library/stdtypes.html#str\" title=\"(in Python v3.8)\"><em>str</em></a><em>]</em>) \u2013 The name of the mode. Must be unique within the\n<a class=\"reference internal\" href=\"pipeline#dagster.PipelineDefinition\" title=\"dagster.PipelineDefinition\"><code class=\"xref py py-class docutils literal notranslate\"><span class=\"pre\">PipelineDefinition</span></code></a> to which the mode is attached. (default: \u201cdefault\u201d).</p></li>\n<li><p><strong>resource_defs</strong> (<em>Optional</em><em>[</em><em>Mapping</em><em> [</em><a class=\"reference external\" href=\"https://docs.python.org/3/library/stdtypes.html#str\" title=\"(in Python v3.8)\"><em>str</em></a><em>, </em><a class=\"reference internal\" href=\"resources#dagster.ResourceDefinition\" title=\"dagster.ResourceDefinition\"><em>ResourceDefinition</em></a><em>]</em><em>]</em>) \u2013 A dictionary of string resource\nkeys to their implementations. Individual solids may require resources to be present by\nthese keys.</p></li>\n<li><p><strong>logger_defs</strong> (<em>Optional</em><em>[</em><em>Dict</em><em>[</em><a class=\"reference external\" href=\"https://docs.python.org/3/library/stdtypes.html#str\" title=\"(in Python v3.8)\"><em>str</em></a><em>, </em><a class=\"reference internal\" href=\"loggers#dagster.LoggerDefinition\" title=\"dagster.LoggerDefinition\"><em>LoggerDefinition</em></a><em>]</em><em>]</em>) \u2013 A dictionary of string logger\nidentifiers to their implementations.</p></li>\n<li><p><strong>executor_defs</strong> (<em>Optional</em><em>[</em><em>List</em><em>[</em><a class=\"reference internal\" href=\"internals#dagster.ExecutorDefinition\" title=\"dagster.ExecutorDefinition\"><em>ExecutorDefinition</em></a><em>]</em><em>]</em>) \u2013 The set of executors available when\nexecuting in this mode. By default, this will be the \u2018in_process\u2019 and \u2018multiprocess\u2019\nexecutors (<a class=\"reference internal\" href=\"pipeline#dagster.default_executors\" title=\"dagster.default_executors\"><code class=\"xref py py-data docutils literal notranslate\"><span class=\"pre\">default_executors</span></code></a>).</p></li>\n<li><p><strong>description</strong> (<em>Optional</em><em>[</em><a class=\"reference external\" href=\"https://docs.python.org/3/library/stdtypes.html#str\" title=\"(in Python v3.8)\"><em>str</em></a><em>]</em>) \u2013 A human-readable description of the mode.</p></li>\n<li><p><strong>_config_mapping</strong> (<em>Optional</em><em>[</em><a class=\"reference internal\" href=\"config#dagster.ConfigMapping\" title=\"dagster.ConfigMapping\"><em>ConfigMapping</em></a><em>]</em>) \u2013 Only for internal use.</p></li>\n<li><p><strong>_partitions</strong> (<em>Optional</em><em>[</em><a class=\"reference internal\" href=\"partitions#dagster.PartitionedConfig\" title=\"dagster.PartitionedConfig\"><em>PartitionedConfig</em></a><em>]</em>) \u2013 Only for internal use.</p></li>\n</ul>\n</dd>\n</dl>\n</dd></dl>\n\n</div>\n", "current_page_name": "sections/api/apidocs/modes", "customsidebar": null, "display_toc": false, "meta": null, "metatags": "", "next": {"link": "../ops/", "title": "Ops"}, "page_source_suffix": ".rst", "parents": [], "prev": {"link": "../loggers/", "title": "Loggers"}, "rellinks": [["genindex", "General Index", "I", "index"], ["py-modindex", "Python Module Index", "", "modules"], ["sections/api/apidocs/ops", "Ops", "N", "next"], ["sections/api/apidocs/loggers", "Loggers", "P", "previous"]], "sidebars": ["globaltoc.html", "searchbox.html"], "sourcename": "sections/api/apidocs/modes.rst.txt", "title": "[Legacy] Modes", "toc": "<ul>\n<li><a class=\"reference internal\" href=\"#\">[Legacy] Modes</a></li>\n</ul>\n"}, "ops": {"alabaster_version": "0.7.12", "body": "<div class=\"section\" id=\"ops\">\n<h1>Ops<a class=\"headerlink\" href=\"#ops\" title=\"Permalink to this headline\">\u00b6</a></h1>\n<p>The foundational unit of computation in Dagster.</p>\n<hr class=\"docutils\" />\n<div class=\"section\" id=\"defining-ops\">\n<h2>Defining ops<a class=\"headerlink\" href=\"#defining-ops\" title=\"Permalink to this headline\">\u00b6</a></h2>\n<dl class=\"py function\">\n<dt id=\"dagster.op\">\n<code class=\"sig-prename descclassname\"><span class=\"pre\">&#64;</span></code><code class=\"sig-prename descclassname\"><span class=\"pre\">dagster.</span></code><code class=\"sig-name descname\"><span class=\"pre\">op</span></code><span class=\"sig-paren\">(</span><em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">name</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">None</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">description</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">None</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">ins</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">None</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">out</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">None</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">config_schema</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">None</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">required_resource_keys</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">None</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">tags</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">None</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">version</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">None</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">retry_policy</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">None</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">input_defs</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">None</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">output_defs</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">None</span></span></em><span class=\"sig-paren\">)</span><a class=\"reference internal\" href=\"../../../../_modules/dagster/core/definitions/decorators/op_decorator#op\"><span class=\"viewcode-link\"><span class=\"pre\">[source]</span></span></a><a class=\"headerlink\" href=\"#dagster.op\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Create an op with the specified parameters from the decorated function.</p>\n<p>Ins and outs will be inferred from the type signature of the decorated function\nif not explicitly provided.</p>\n<p>The decorated function will be used as the op\u2019s compute function. The signature of the\ndecorated function is more flexible than that of the <code class=\"docutils literal notranslate\"><span class=\"pre\">compute_fn</span></code> in the core API; it may:</p>\n<ol class=\"arabic simple\">\n<li><p>Return a value. This value will be wrapped in an <a class=\"reference internal\" href=\"#dagster.Output\" title=\"dagster.Output\"><code class=\"xref py py-class docutils literal notranslate\"><span class=\"pre\">Output</span></code></a> and yielded by the compute function.</p></li>\n<li><p>Return an <a class=\"reference internal\" href=\"#dagster.Output\" title=\"dagster.Output\"><code class=\"xref py py-class docutils literal notranslate\"><span class=\"pre\">Output</span></code></a>. This output will be yielded by the compute function.</p></li>\n<li><p>Yield <a class=\"reference internal\" href=\"#dagster.Output\" title=\"dagster.Output\"><code class=\"xref py py-class docutils literal notranslate\"><span class=\"pre\">Output</span></code></a> or other <a class=\"reference internal\" href=\"#events\"><span class=\"std std-ref\">event objects</span></a>. Same as default compute behavior.</p></li>\n</ol>\n<p>Note that options 1) and 2) are incompatible with yielding other events \u2013 if you would like\nto decorate a function that yields events, it must also wrap its eventual output in an\n<a class=\"reference internal\" href=\"#dagster.Output\" title=\"dagster.Output\"><code class=\"xref py py-class docutils literal notranslate\"><span class=\"pre\">Output</span></code></a> and yield it.</p>\n<p>&#64;op supports <code class=\"docutils literal notranslate\"><span class=\"pre\">async</span> <span class=\"pre\">def</span></code> functions as well, including async generators when yielding multiple\nevents or outputs. Note that async ops will generally be run on their own unless using a custom\n<a class=\"reference internal\" href=\"internals#dagster.Executor\" title=\"dagster.Executor\"><code class=\"xref py py-class docutils literal notranslate\"><span class=\"pre\">Executor</span></code></a> implementation that supports running them together.</p>\n<dl class=\"field-list simple\">\n<dt class=\"field-odd\">Parameters</dt>\n<dd class=\"field-odd\"><ul class=\"simple\">\n<li><p><strong>name</strong> (<em>Optional</em><em>[</em><a class=\"reference external\" href=\"https://docs.python.org/3/library/stdtypes.html#str\" title=\"(in Python v3.8)\"><em>str</em></a><em>]</em>) \u2013 Name of op. Must be unique within any <a class=\"reference internal\" href=\"graphs#dagster.GraphDefinition\" title=\"dagster.GraphDefinition\"><code class=\"xref py py-class docutils literal notranslate\"><span class=\"pre\">GraphDefinition</span></code></a>\nusing the op.</p></li>\n<li><p><strong>description</strong> (<em>Optional</em><em>[</em><a class=\"reference external\" href=\"https://docs.python.org/3/library/stdtypes.html#str\" title=\"(in Python v3.8)\"><em>str</em></a><em>]</em>) \u2013 Human-readable description of this op. If not provided, and\nthe decorated function has docstring, that docstring will be used as the description.</p></li>\n<li><p><strong>ins</strong> (<em>Optional</em><em>[</em><em>Dict</em><em>[</em><a class=\"reference external\" href=\"https://docs.python.org/3/library/stdtypes.html#str\" title=\"(in Python v3.8)\"><em>str</em></a><em>, </em><a class=\"reference internal\" href=\"#dagster.In\" title=\"dagster.In\"><em>In</em></a><em>]</em><em>]</em>) \u2013 Information about the inputs to the op. Information provided here will be combined\nwith what can be inferred from the function signature.</p></li>\n<li><p><strong>out</strong> (<em>Optional</em><em>[</em><em>Union</em><em>[</em><a class=\"reference internal\" href=\"#dagster.Out\" title=\"dagster.Out\"><em>Out</em></a><em>, </em><em>Dict</em><em>[</em><a class=\"reference external\" href=\"https://docs.python.org/3/library/stdtypes.html#str\" title=\"(in Python v3.8)\"><em>str</em></a><em>, </em><a class=\"reference internal\" href=\"#dagster.Out\" title=\"dagster.Out\"><em>Out</em></a><em>]</em><em>]</em><em>]</em>) \u2013 Information about the op outputs. Information provided here will be combined with\nwhat can be inferred from the return type signature if the function does not use yield.</p></li>\n<li><p><strong>config_schema</strong> (<em>Optional</em><em>[</em><a class=\"reference internal\" href=\"config#dagster.ConfigSchema\" title=\"dagster.ConfigSchema\"><em>ConfigSchema</em></a>) \u2013 The schema for the config. If set, Dagster will check\nthat config provided for the op matches this schema and fail if it does not. If not\nset, Dagster will accept any config provided for the op.</p></li>\n<li><p><strong>required_resource_keys</strong> (<em>Optional</em><em>[</em><em>Set</em><em>[</em><a class=\"reference external\" href=\"https://docs.python.org/3/library/stdtypes.html#str\" title=\"(in Python v3.8)\"><em>str</em></a><em>]</em><em>]</em>) \u2013 Set of resource handles required by this op.</p></li>\n<li><p><strong>tags</strong> (<em>Optional</em><em>[</em><em>Dict</em><em>[</em><a class=\"reference external\" href=\"https://docs.python.org/3/library/stdtypes.html#str\" title=\"(in Python v3.8)\"><em>str</em></a><em>, </em><em>Any</em><em>]</em><em>]</em>) \u2013 Arbitrary metadata for the op. Frameworks may\nexpect and require certain metadata to be attached to a op. Values that are not strings\nwill be json encoded and must meet the criteria that <cite>json.loads(json.dumps(value)) == value</cite>.</p></li>\n<li><p><strong>version</strong> (<em>Optional</em><em>[</em><a class=\"reference external\" href=\"https://docs.python.org/3/library/stdtypes.html#str\" title=\"(in Python v3.8)\"><em>str</em></a><em>]</em>) \u2013 (Experimental) The version of the op\u2019s compute_fn. Two ops should have\nthe same version if and only if they deterministically produce the same outputs when\nprovided the same inputs.</p></li>\n<li><p><strong>retry_policy</strong> (<em>Optional</em><em>[</em><a class=\"reference internal\" href=\"#dagster.RetryPolicy\" title=\"dagster.RetryPolicy\"><em>RetryPolicy</em></a><em>]</em>) \u2013 The retry policy for this op.</p></li>\n<li><p><strong>input_defs</strong> (<em>Optional</em><em>[</em><em>List</em><em>[</em><a class=\"reference internal\" href=\"solids#dagster.InputDefinition\" title=\"dagster.InputDefinition\"><em>InputDefinition</em></a><em>]</em><em>]</em>) \u2013 (legacy) Preserved to ease migration from <a class=\"reference internal\" href=\"solids#dagster.solid\" title=\"dagster.solid\"><code class=\"xref py py-class docutils literal notranslate\"><span class=\"pre\">solid</span></code></a>. Can be used in place of ins argument.</p></li>\n<li><p><strong>output_defs</strong> (<em>Optional</em><em>[</em><em>List</em><em>[</em><a class=\"reference internal\" href=\"solids#dagster.OutputDefinition\" title=\"dagster.OutputDefinition\"><em>OutputDefinition</em></a><em>]</em><em>]</em>) \u2013 (legacy) Preserved to ease migration from <a class=\"reference internal\" href=\"solids#dagster.solid\" title=\"dagster.solid\"><code class=\"xref py py-class docutils literal notranslate\"><span class=\"pre\">solid</span></code></a>. Can be used in place of out argument.</p></li>\n</ul>\n</dd>\n</dl>\n<p class=\"rubric\">Examples</p>\n<div class=\"highlight-python notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"nd\">@op</span>\n<span class=\"k\">def</span> <span class=\"nf\">hello_world</span><span class=\"p\">():</span>\n    <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s1\">&#39;hello&#39;</span><span class=\"p\">)</span>\n\n<span class=\"nd\">@op</span>\n<span class=\"k\">def</span> <span class=\"nf\">echo</span><span class=\"p\">(</span><span class=\"n\">msg</span><span class=\"p\">:</span> <span class=\"nb\">str</span><span class=\"p\">)</span> <span class=\"o\">-&gt;</span> <span class=\"nb\">str</span><span class=\"p\">:</span>\n    <span class=\"k\">return</span> <span class=\"n\">msg</span>\n\n<span class=\"nd\">@op</span><span class=\"p\">(</span>\n    <span class=\"n\">ins</span><span class=\"o\">=</span><span class=\"p\">{</span><span class=\"s1\">&#39;msg&#39;</span><span class=\"p\">:</span> <span class=\"n\">In</span><span class=\"p\">(</span><span class=\"nb\">str</span><span class=\"p\">)},</span>\n    <span class=\"n\">out</span><span class=\"o\">=</span><span class=\"n\">Out</span><span class=\"p\">(</span><span class=\"nb\">str</span><span class=\"p\">)</span>\n<span class=\"p\">)</span>\n<span class=\"k\">def</span> <span class=\"nf\">echo_2</span><span class=\"p\">(</span><span class=\"n\">msg</span><span class=\"p\">):</span> <span class=\"c1\"># same as above</span>\n    <span class=\"k\">return</span> <span class=\"n\">msg</span>\n\n<span class=\"nd\">@op</span><span class=\"p\">(</span>\n    <span class=\"n\">out</span><span class=\"o\">=</span><span class=\"p\">{</span><span class=\"s1\">&#39;word&#39;</span><span class=\"p\">:</span> <span class=\"n\">Out</span><span class=\"p\">(),</span> <span class=\"s1\">&#39;num&#39;</span><span class=\"p\">:</span> <span class=\"n\">Out</span><span class=\"p\">()}</span>\n<span class=\"p\">)</span>\n<span class=\"k\">def</span> <span class=\"nf\">multi_out</span><span class=\"p\">()</span> <span class=\"o\">-&gt;</span> <span class=\"n\">Tuple</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"nb\">int</span><span class=\"p\">]:</span>\n    <span class=\"k\">return</span> <span class=\"s1\">&#39;cool&#39;</span><span class=\"p\">,</span> <span class=\"mi\">4</span>\n</pre></div>\n</div>\n</dd></dl>\n\n<dl class=\"py class\">\n<dt id=\"dagster.OpDefinition\">\n<em class=\"property\"><span class=\"pre\">class</span> </em><code class=\"sig-prename descclassname\"><span class=\"pre\">dagster.</span></code><code class=\"sig-name descname\"><span class=\"pre\">OpDefinition</span></code><span class=\"sig-paren\">(</span><em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">name</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">input_defs</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">compute_fn</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">output_defs</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">config_schema</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">None</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">description</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">None</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">tags</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">None</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">required_resource_keys</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">None</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">version</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">None</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">retry_policy</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">None</span></span></em><span class=\"sig-paren\">)</span><a class=\"reference internal\" href=\"../../../../_modules/dagster/core/definitions/op_definition#OpDefinition\"><span class=\"viewcode-link\"><span class=\"pre\">[source]</span></span></a><a class=\"headerlink\" href=\"#dagster.OpDefinition\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Defines an op, the functional unit of user-defined computation.</p>\n<p>For more details on what a op is, refer to the\n<a class=\"reference external\" href=\"../../concepts/ops-jobs-graphs/ops\">Ops Overview</a> .</p>\n<p>End users should prefer the <a class=\"reference internal\" href=\"#dagster.op\" title=\"dagster.op\"><code class=\"xref py py-func docutils literal notranslate\"><span class=\"pre\">&#64;op</span></code></a> decorator. OpDefinition is generally intended to be\nused by framework authors or for programatically generated ops.</p>\n<dl class=\"field-list simple\">\n<dt class=\"field-odd\">Parameters</dt>\n<dd class=\"field-odd\"><ul class=\"simple\">\n<li><p><strong>name</strong> (<a class=\"reference external\" href=\"https://docs.python.org/3/library/stdtypes.html#str\" title=\"(in Python v3.8)\"><em>str</em></a>) \u2013 Name of the op. Must be unique within any <a class=\"reference internal\" href=\"graphs#dagster.GraphDefinition\" title=\"dagster.GraphDefinition\"><code class=\"xref py py-class docutils literal notranslate\"><span class=\"pre\">GraphDefinition</span></code></a> or\n<a class=\"reference internal\" href=\"jobs#dagster.JobDefinition\" title=\"dagster.JobDefinition\"><code class=\"xref py py-class docutils literal notranslate\"><span class=\"pre\">JobDefinition</span></code></a> that contains the op.</p></li>\n<li><p><strong>input_defs</strong> (<em>List</em><em>[</em><a class=\"reference internal\" href=\"solids#dagster.InputDefinition\" title=\"dagster.InputDefinition\"><em>InputDefinition</em></a><em>]</em>) \u2013 Inputs of the op.</p></li>\n<li><p><strong>compute_fn</strong> (<em>Callable</em>) \u2013 <p>The core of the op, the function that performs the actual\ncomputation. The signature of this function is determined by <code class=\"docutils literal notranslate\"><span class=\"pre\">input_defs</span></code>, and\noptionally, an injected first argument, <code class=\"docutils literal notranslate\"><span class=\"pre\">context</span></code>, a collection of information\nprovided by the system.</p>\n<p>This function will be coerced into a generator or an async generator, which must yield\none <a class=\"reference internal\" href=\"#dagster.Output\" title=\"dagster.Output\"><code class=\"xref py py-class docutils literal notranslate\"><span class=\"pre\">Output</span></code></a> for each of the op\u2019s <code class=\"docutils literal notranslate\"><span class=\"pre\">output_defs</span></code>, and additionally may\nyield other types of Dagster events, including <a class=\"reference internal\" href=\"#dagster.AssetMaterialization\" title=\"dagster.AssetMaterialization\"><code class=\"xref py py-class docutils literal notranslate\"><span class=\"pre\">AssetMaterialization</span></code></a> and\n<a class=\"reference internal\" href=\"#dagster.ExpectationResult\" title=\"dagster.ExpectationResult\"><code class=\"xref py py-class docutils literal notranslate\"><span class=\"pre\">ExpectationResult</span></code></a>.</p>\n</p></li>\n<li><p><strong>output_defs</strong> (<em>List</em><em>[</em><a class=\"reference internal\" href=\"solids#dagster.OutputDefinition\" title=\"dagster.OutputDefinition\"><em>OutputDefinition</em></a><em>]</em>) \u2013 Outputs of the op.</p></li>\n<li><p><strong>config_schema</strong> (<em>Optional</em><em>[</em><a class=\"reference internal\" href=\"config#dagster.ConfigSchema\" title=\"dagster.ConfigSchema\"><em>ConfigSchema</em></a>) \u2013 The schema for the config. If set, Dagster will check\nthat the config provided for the op matches this schema and will fail if it does not. If\nnot set, Dagster will accept any config provided for the op.</p></li>\n<li><p><strong>description</strong> (<em>Optional</em><em>[</em><a class=\"reference external\" href=\"https://docs.python.org/3/library/stdtypes.html#str\" title=\"(in Python v3.8)\"><em>str</em></a><em>]</em>) \u2013 Human-readable description of the op.</p></li>\n<li><p><strong>tags</strong> (<em>Optional</em><em>[</em><em>Dict</em><em>[</em><a class=\"reference external\" href=\"https://docs.python.org/3/library/stdtypes.html#str\" title=\"(in Python v3.8)\"><em>str</em></a><em>, </em><em>Any</em><em>]</em><em>]</em>) \u2013 Arbitrary metadata for the op. Frameworks may\nexpect and require certain metadata to be attached to a op. Users should generally\nnot set metadata directly. Values that are not strings will be json encoded and must meet\nthe criteria that <cite>json.loads(json.dumps(value)) == value</cite>.</p></li>\n<li><p><strong>required_resource_keys</strong> (<em>Optional</em><em>[</em><em>Set</em><em>[</em><a class=\"reference external\" href=\"https://docs.python.org/3/library/stdtypes.html#str\" title=\"(in Python v3.8)\"><em>str</em></a><em>]</em><em>]</em>) \u2013 Set of resources handles required by this op.</p></li>\n<li><p><strong>version</strong> (<em>Optional</em><em>[</em><a class=\"reference external\" href=\"https://docs.python.org/3/library/stdtypes.html#str\" title=\"(in Python v3.8)\"><em>str</em></a><em>]</em>) \u2013 (Experimental) The version of the op\u2019s compute_fn. Two ops should\nhave the same version if and only if they deterministically produce the same outputs\nwhen provided the same inputs.</p></li>\n<li><p><strong>retry_policy</strong> (<em>Optional</em><em>[</em><a class=\"reference internal\" href=\"#dagster.RetryPolicy\" title=\"dagster.RetryPolicy\"><em>RetryPolicy</em></a><em>]</em>) \u2013 The retry policy for this op.</p></li>\n</ul>\n</dd>\n</dl>\n<p class=\"rubric\">Examples</p>\n<div class=\"highlight-python notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"k\">def</span> <span class=\"nf\">_add_one</span><span class=\"p\">(</span><span class=\"n\">_context</span><span class=\"p\">,</span> <span class=\"n\">inputs</span><span class=\"p\">):</span>\n    <span class=\"k\">yield</span> <span class=\"n\">Output</span><span class=\"p\">(</span><span class=\"n\">inputs</span><span class=\"p\">[</span><span class=\"s2\">&quot;num&quot;</span><span class=\"p\">]</span> <span class=\"o\">+</span> <span class=\"mi\">1</span><span class=\"p\">)</span>\n\n<span class=\"n\">OpDefinition</span><span class=\"p\">(</span>\n    <span class=\"n\">name</span><span class=\"o\">=</span><span class=\"s2\">&quot;add_one&quot;</span><span class=\"p\">,</span>\n    <span class=\"n\">input_defs</span><span class=\"o\">=</span><span class=\"p\">[</span><span class=\"n\">InputDefinition</span><span class=\"p\">(</span><span class=\"s2\">&quot;num&quot;</span><span class=\"p\">,</span> <span class=\"n\">Int</span><span class=\"p\">)],</span>\n    <span class=\"n\">output_defs</span><span class=\"o\">=</span><span class=\"p\">[</span><span class=\"n\">OutputDefinition</span><span class=\"p\">(</span><span class=\"n\">Int</span><span class=\"p\">)],</span> <span class=\"c1\"># default name (&quot;result&quot;)</span>\n    <span class=\"n\">compute_fn</span><span class=\"o\">=</span><span class=\"n\">_add_one</span><span class=\"p\">,</span>\n<span class=\"p\">)</span>\n</pre></div>\n</div>\n<dl class=\"py method\">\n<dt id=\"dagster.OpDefinition.configured\">\n<code class=\"sig-name descname\"><span class=\"pre\">configured</span></code><span class=\"sig-paren\">(</span><em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">config_or_config_fn</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">name</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">config_schema</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">None</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">description</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">None</span></span></em><span class=\"sig-paren\">)</span><a class=\"headerlink\" href=\"#dagster.OpDefinition.configured\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Wraps this object in an object of the same type that provides configuration to the inner\nobject.</p>\n<dl class=\"field-list simple\">\n<dt class=\"field-odd\">Parameters</dt>\n<dd class=\"field-odd\"><ul class=\"simple\">\n<li><p><strong>config_or_config_fn</strong> (<em>Union</em><em>[</em><em>Any</em><em>, </em><em>Callable</em><em>[</em><em>[</em><em>Any</em><em>]</em><em>, </em><em>Any</em><em>]</em><em>]</em>) \u2013 Either (1) Run configuration\nthat fully satisfies this object\u2019s config schema or (2) A function that accepts run\nconfiguration and returns run configuration that fully satisfies this object\u2019s\nconfig schema.  In the latter case, config_schema must be specified.  When\npassing a function, it\u2019s easiest to use <a class=\"reference internal\" href=\"config#dagster.configured\" title=\"dagster.configured\"><code class=\"xref py py-func docutils literal notranslate\"><span class=\"pre\">configured()</span></code></a>.</p></li>\n<li><p><strong>name</strong> (<a class=\"reference external\" href=\"https://docs.python.org/3/library/stdtypes.html#str\" title=\"(in Python v3.8)\"><em>str</em></a>) \u2013 Name of the new definition. This is a required argument, as this definition\ntype has a name uniqueness constraint.</p></li>\n<li><p><strong>config_schema</strong> (<a class=\"reference internal\" href=\"config#dagster.ConfigSchema\" title=\"dagster.ConfigSchema\"><em>ConfigSchema</em></a>) \u2013 If config_or_config_fn is a function, the config schema\nthat its input must satisfy.</p></li>\n<li><p><strong>description</strong> (<em>Optional</em><em>[</em><a class=\"reference external\" href=\"https://docs.python.org/3/library/stdtypes.html#str\" title=\"(in Python v3.8)\"><em>str</em></a><em>]</em>) \u2013 Description of the new definition. If not specified,\ninherits the description of the definition being configured.</p></li>\n</ul>\n</dd>\n</dl>\n<p>Returns (ConfigurableDefinition): A configured version of this object.</p>\n</dd></dl>\n\n</dd></dl>\n\n</div>\n<hr class=\"docutils\" />\n<div class=\"section\" id=\"ins-outs\">\n<h2>Ins &amp; outs<a class=\"headerlink\" href=\"#ins-outs\" title=\"Permalink to this headline\">\u00b6</a></h2>\n<dl class=\"py class\">\n<dt id=\"dagster.In\">\n<em class=\"property\"><span class=\"pre\">class</span> </em><code class=\"sig-prename descclassname\"><span class=\"pre\">dagster.</span></code><code class=\"sig-name descname\"><span class=\"pre\">In</span></code><span class=\"sig-paren\">(</span><em class=\"sig-param\"><span class=\"pre\">dagster_type=&lt;class</span> <span class=\"pre\">'dagster.core.definitions.utils.NoValueSentinel'&gt;</span></em>, <em class=\"sig-param\"><span class=\"pre\">description=None</span></em>, <em class=\"sig-param\"><span class=\"pre\">default_value=&lt;class</span> <span class=\"pre\">'dagster.core.definitions.utils.NoValueSentinel'&gt;</span></em>, <em class=\"sig-param\"><span class=\"pre\">root_manager_key=None</span></em>, <em class=\"sig-param\"><span class=\"pre\">metadata=None</span></em>, <em class=\"sig-param\"><span class=\"pre\">asset_key=None</span></em>, <em class=\"sig-param\"><span class=\"pre\">asset_partitions=None</span></em><span class=\"sig-paren\">)</span><a class=\"reference internal\" href=\"../../../../_modules/dagster/core/definitions/input#In\"><span class=\"viewcode-link\"><span class=\"pre\">[source]</span></span></a><a class=\"headerlink\" href=\"#dagster.In\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Defines an argument to an op\u2019s compute function.</p>\n<p>Inputs may flow from previous op\u2019s outputs, or be stubbed using config. They may optionally\nbe typed using the Dagster type system.</p>\n<dl class=\"field-list simple\">\n<dt class=\"field-odd\">Parameters</dt>\n<dd class=\"field-odd\"><ul class=\"simple\">\n<li><p><strong>dagster_type</strong> (<em>Optional</em><em>[</em><em>Union</em><em>[</em><em>Type</em><em>, </em><a class=\"reference internal\" href=\"types#dagster.DagsterType\" title=\"dagster.DagsterType\"><em>DagsterType</em></a><em>]</em><em>]</em><em>]</em>) \u2013 The type of this input. Should only be set if the correct type can not\nbe inferred directly from the type signature of the decorated function.</p></li>\n<li><p><strong>description</strong> (<em>Optional</em><em>[</em><a class=\"reference external\" href=\"https://docs.python.org/3/library/stdtypes.html#str\" title=\"(in Python v3.8)\"><em>str</em></a><em>]</em>) \u2013 Human-readable description of the input.</p></li>\n<li><p><strong>default_value</strong> (<em>Optional</em><em>[</em><em>Any</em><em>]</em>) \u2013 The default value to use if no input is provided.</p></li>\n<li><p><strong>root_manager_key</strong> (<em>Optional</em><em>[</em><a class=\"reference external\" href=\"https://docs.python.org/3/library/stdtypes.html#str\" title=\"(in Python v3.8)\"><em>str</em></a><em>]</em>) \u2013 (Experimental) The resource key for the\n<a class=\"reference internal\" href=\"io-managers#dagster.RootInputManager\" title=\"dagster.RootInputManager\"><code class=\"xref py py-class docutils literal notranslate\"><span class=\"pre\">RootInputManager</span></code></a> used for loading this input when it is not connected to an\nupstream output.</p></li>\n<li><p><strong>metadata</strong> (<em>Optional</em><em>[</em><em>Dict</em><em>[</em><a class=\"reference external\" href=\"https://docs.python.org/3/library/stdtypes.html#str\" title=\"(in Python v3.8)\"><em>str</em></a><em>, </em><em>Any</em><em>]</em><em>]</em>) \u2013 A dict of metadata for the input.</p></li>\n<li><p><strong>asset_key</strong> (<em>Optional</em><em>[</em><em>Union</em><em>[</em><a class=\"reference internal\" href=\"#dagster.AssetKey\" title=\"dagster.AssetKey\"><em>AssetKey</em></a><em>, </em><em>InputContext -&gt; AssetKey</em><em>]</em><em>]</em>) \u2013 (Experimental) An AssetKey\n(or function that produces an AssetKey from the InputContext) which should be associated\nwith this In. Used for tracking lineage information through Dagster.</p></li>\n<li><p><strong>asset_partitions</strong> (<em>Optional</em><em>[</em><em>Union</em><em>[</em><em>Set</em><em>[</em><a class=\"reference external\" href=\"https://docs.python.org/3/library/stdtypes.html#str\" title=\"(in Python v3.8)\"><em>str</em></a><em>]</em><em>, </em><em>InputContext -&gt; Set</em><em>[</em><a class=\"reference external\" href=\"https://docs.python.org/3/library/stdtypes.html#str\" title=\"(in Python v3.8)\"><em>str</em></a><em>]</em><em>]</em><em>]</em>) \u2013 (Experimental) A\nset of partitions of the given asset_key (or a function that produces this list of\npartitions from the InputContext) which should be associated with this In.</p></li>\n</ul>\n</dd>\n</dl>\n</dd></dl>\n\n<dl class=\"py class\">\n<dt id=\"dagster.Out\">\n<em class=\"property\"><span class=\"pre\">class</span> </em><code class=\"sig-prename descclassname\"><span class=\"pre\">dagster.</span></code><code class=\"sig-name descname\"><span class=\"pre\">Out</span></code><span class=\"sig-paren\">(</span><em class=\"sig-param\"><span class=\"pre\">dagster_type=&lt;class</span> <span class=\"pre\">'dagster.core.definitions.utils.NoValueSentinel'&gt;</span></em>, <em class=\"sig-param\"><span class=\"pre\">description=None</span></em>, <em class=\"sig-param\"><span class=\"pre\">is_required=True</span></em>, <em class=\"sig-param\"><span class=\"pre\">io_manager_key=None</span></em>, <em class=\"sig-param\"><span class=\"pre\">metadata=None</span></em>, <em class=\"sig-param\"><span class=\"pre\">asset_key=None</span></em>, <em class=\"sig-param\"><span class=\"pre\">asset_partitions=None</span></em>, <em class=\"sig-param\"><span class=\"pre\">asset_partitions_def=None</span></em><span class=\"sig-paren\">)</span><a class=\"reference internal\" href=\"../../../../_modules/dagster/core/definitions/output#Out\"><span class=\"viewcode-link\"><span class=\"pre\">[source]</span></span></a><a class=\"headerlink\" href=\"#dagster.Out\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Defines an output from an op\u2019s compute function.</p>\n<p>Ops can have multiple outputs, in which case outputs cannot be anonymous.</p>\n<p>Many ops have only one output, in which case the user can provide a single output definition\nthat will be given the default name, \u201cresult\u201d.</p>\n<p>Outs may be typed using the Dagster type system.</p>\n<dl class=\"field-list simple\">\n<dt class=\"field-odd\">Parameters</dt>\n<dd class=\"field-odd\"><ul class=\"simple\">\n<li><p><strong>dagster_type</strong> (<em>Optional</em><em>[</em><em>Union</em><em>[</em><em>Type</em><em>, </em><a class=\"reference internal\" href=\"types#dagster.DagsterType\" title=\"dagster.DagsterType\"><em>DagsterType</em></a><em>]</em><em>]</em><em>]</em>) \u2013 The type of this output. Should only be set if the correct type can not\nbe inferred directly from the type signature of the decorated function.</p></li>\n<li><p><strong>description</strong> (<em>Optional</em><em>[</em><a class=\"reference external\" href=\"https://docs.python.org/3/library/stdtypes.html#str\" title=\"(in Python v3.8)\"><em>str</em></a><em>]</em>) \u2013 Human-readable description of the output.</p></li>\n<li><p><strong>is_required</strong> (<a class=\"reference external\" href=\"https://docs.python.org/3/library/functions.html#bool\" title=\"(in Python v3.8)\"><em>bool</em></a>) \u2013 Whether the presence of this field is required. (default: True)</p></li>\n<li><p><strong>io_manager_key</strong> (<em>Optional</em><em>[</em><a class=\"reference external\" href=\"https://docs.python.org/3/library/stdtypes.html#str\" title=\"(in Python v3.8)\"><em>str</em></a><em>]</em>) \u2013 The resource key of the output manager used for this output.\n(default: \u201cio_manager\u201d).</p></li>\n<li><p><strong>metadata</strong> (<em>Optional</em><em>[</em><em>Dict</em><em>[</em><a class=\"reference external\" href=\"https://docs.python.org/3/library/stdtypes.html#str\" title=\"(in Python v3.8)\"><em>str</em></a><em>, </em><em>Any</em><em>]</em><em>]</em>) \u2013 A dict of the metadata for the output.\nFor example, users can provide a file path if the data object will be stored in a\nfilesystem, or provide information of a database table when it is going to load the data\ninto the table.</p></li>\n<li><p><strong>asset_key</strong> (<em>Optional</em><em>[</em><a class=\"reference internal\" href=\"#dagster.AssetKey\" title=\"dagster.AssetKey\"><em>AssetKey</em></a><em>]</em>) \u2013 (Experimental) An AssetKey which should be associated\nwith this Out. Used for tracking lineage information through Dagster.</p></li>\n<li><p><strong>asset_partitions</strong> (<em>Optional</em><em>[</em><em>Union</em><em>[</em><em>Set</em><em>[</em><a class=\"reference external\" href=\"https://docs.python.org/3/library/stdtypes.html#str\" title=\"(in Python v3.8)\"><em>str</em></a><em>]</em><em>, </em><em>OutputContext -&gt; Set</em><em>[</em><a class=\"reference external\" href=\"https://docs.python.org/3/library/stdtypes.html#str\" title=\"(in Python v3.8)\"><em>str</em></a><em>]</em><em>]</em><em>]</em>) \u2013 (Experimental) A\nset of partitions of the given asset_key (or a function that produces this list of\npartitions from the OutputContext) which should be associated with this Out.</p></li>\n</ul>\n</dd>\n</dl>\n</dd></dl>\n\n</div>\n<hr class=\"docutils\" />\n<div class=\"section\" id=\"execution\">\n<h2>Execution<a class=\"headerlink\" href=\"#execution\" title=\"Permalink to this headline\">\u00b6</a></h2>\n<dl class=\"py class\">\n<dt id=\"dagster.RetryPolicy\">\n<em class=\"property\"><span class=\"pre\">class</span> </em><code class=\"sig-prename descclassname\"><span class=\"pre\">dagster.</span></code><code class=\"sig-name descname\"><span class=\"pre\">RetryPolicy</span></code><span class=\"sig-paren\">(</span><em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">max_retries</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">1</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">delay</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">None</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">backoff</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">None</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">jitter</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">None</span></span></em><span class=\"sig-paren\">)</span><a class=\"reference internal\" href=\"../../../../_modules/dagster/core/definitions/policy#RetryPolicy\"><span class=\"viewcode-link\"><span class=\"pre\">[source]</span></span></a><a class=\"headerlink\" href=\"#dagster.RetryPolicy\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>A declarative policy for when to request retries when an exception occurs during op execution.</p>\n<dl class=\"field-list simple\">\n<dt class=\"field-odd\">Parameters</dt>\n<dd class=\"field-odd\"><ul class=\"simple\">\n<li><p><strong>max_retries</strong> (<a class=\"reference external\" href=\"https://docs.python.org/3/library/functions.html#int\" title=\"(in Python v3.8)\"><em>int</em></a>) \u2013 The maximum number of retries to attempt. Defaults to 1.</p></li>\n<li><p><strong>delay</strong> (<em>Optional</em><em>[</em><em>Union</em><em>[</em><a class=\"reference external\" href=\"https://docs.python.org/3/library/functions.html#int\" title=\"(in Python v3.8)\"><em>int</em></a><em>,</em><a class=\"reference external\" href=\"https://docs.python.org/3/library/functions.html#float\" title=\"(in Python v3.8)\"><em>float</em></a><em>]</em><em>]</em>) \u2013 The time in seconds to wait between the retry being requested and the next attempt\nbeing started. This unit of time can be modulated as a function of attempt number\nwith backoff and randomly with jitter.</p></li>\n<li><p><strong>backoff</strong> (<em>Optional</em><em>[</em><a class=\"reference internal\" href=\"#dagster.Backoff\" title=\"dagster.Backoff\"><em>Backoff</em></a><em>]</em>) \u2013 A modifier for delay as a function of retry attempt number.</p></li>\n<li><p><strong>jitter</strong> (<em>Optional</em><em>[</em><a class=\"reference internal\" href=\"#dagster.Jitter\" title=\"dagster.Jitter\"><em>Jitter</em></a><em>]</em>) \u2013 A randomizing modifier for delay, applied after backoff calculation.</p></li>\n</ul>\n</dd>\n</dl>\n</dd></dl>\n\n<dl class=\"py class\">\n<dt id=\"dagster.Backoff\">\n<em class=\"property\"><span class=\"pre\">class</span> </em><code class=\"sig-prename descclassname\"><span class=\"pre\">dagster.</span></code><code class=\"sig-name descname\"><span class=\"pre\">Backoff</span></code><span class=\"sig-paren\">(</span><em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">value</span></span></em><span class=\"sig-paren\">)</span><a class=\"reference internal\" href=\"../../../../_modules/dagster/core/definitions/policy#Backoff\"><span class=\"viewcode-link\"><span class=\"pre\">[source]</span></span></a><a class=\"headerlink\" href=\"#dagster.Backoff\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>A modifier for delay as a function of attempt number.</p>\n<p>LINEAR: <cite>attempt_num * delay</cite>\nEXPONENTIAL: <cite>((2 ^ attempt_num) - 1) * delay</cite></p>\n</dd></dl>\n\n<dl class=\"py class\">\n<dt id=\"dagster.Jitter\">\n<em class=\"property\"><span class=\"pre\">class</span> </em><code class=\"sig-prename descclassname\"><span class=\"pre\">dagster.</span></code><code class=\"sig-name descname\"><span class=\"pre\">Jitter</span></code><span class=\"sig-paren\">(</span><em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">value</span></span></em><span class=\"sig-paren\">)</span><a class=\"reference internal\" href=\"../../../../_modules/dagster/core/definitions/policy#Jitter\"><span class=\"viewcode-link\"><span class=\"pre\">[source]</span></span></a><a class=\"headerlink\" href=\"#dagster.Jitter\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>A randomizing modifier for delay, applied after backoff calculation.</p>\n<p>FULL: between 0 and the calculated delay based on backoff: <cite>random() * backoff_delay</cite>\nPLUS_MINUS: +/- the delay: <cite>backoff_delay + ((2 * (random() * delay)) - delay)</cite></p>\n</dd></dl>\n\n<hr class=\"docutils\" />\n</div>\n<div class=\"section\" id=\"events\">\n<span id=\"id1\"></span><h2>Events<a class=\"headerlink\" href=\"#events\" title=\"Permalink to this headline\">\u00b6</a></h2>\n<p>The objects that can be yielded by the body of ops\u2019 compute functions to communicate with the\nDagster framework.</p>\n<p>(Note that <a class=\"reference internal\" href=\"#dagster.Failure\" title=\"dagster.Failure\"><code class=\"xref py py-class docutils literal notranslate\"><span class=\"pre\">Failure</span></code></a> and <a class=\"reference internal\" href=\"#dagster.RetryRequested\" title=\"dagster.RetryRequested\"><code class=\"xref py py-class docutils literal notranslate\"><span class=\"pre\">RetryRequested</span></code></a> are intended to be raised from ops rather than yielded.)</p>\n<div class=\"section\" id=\"event-types\">\n<h3>Event types<a class=\"headerlink\" href=\"#event-types\" title=\"Permalink to this headline\">\u00b6</a></h3>\n<dl class=\"py class\">\n<dt id=\"dagster.Output\">\n<em class=\"property\"><span class=\"pre\">class</span> </em><code class=\"sig-prename descclassname\"><span class=\"pre\">dagster.</span></code><code class=\"sig-name descname\"><span class=\"pre\">Output</span></code><span class=\"sig-paren\">(</span><em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">value</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">output_name</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">'result'</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">metadata_entries</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">None</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">metadata</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">None</span></span></em><span class=\"sig-paren\">)</span><a class=\"reference internal\" href=\"../../../../_modules/dagster/core/definitions/events#Output\"><span class=\"viewcode-link\"><span class=\"pre\">[source]</span></span></a><a class=\"headerlink\" href=\"#dagster.Output\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Event corresponding to one of a op\u2019s outputs.</p>\n<p>Op compute functions must explicitly yield events of this type when they have more than\none output, or when they also yield events of other types, or when defining a op using the\n<a class=\"reference internal\" href=\"#dagster.OpDefinition\" title=\"dagster.OpDefinition\"><code class=\"xref py py-class docutils literal notranslate\"><span class=\"pre\">OpDefinition</span></code></a> API directly.</p>\n<p>Outputs are values produced by ops that will be consumed by downstream ops in a job.\nThey are type-checked at op boundaries when their corresponding <a class=\"reference internal\" href=\"#dagster.Out\" title=\"dagster.Out\"><code class=\"xref py py-class docutils literal notranslate\"><span class=\"pre\">Out</span></code></a>\nor the downstream <a class=\"reference internal\" href=\"#dagster.In\" title=\"dagster.In\"><code class=\"xref py py-class docutils literal notranslate\"><span class=\"pre\">In</span></code></a> is typed.</p>\n<dl class=\"field-list simple\">\n<dt class=\"field-odd\">Parameters</dt>\n<dd class=\"field-odd\"><ul class=\"simple\">\n<li><p><strong>value</strong> (<em>Any</em>) \u2013 The value returned by the compute function.</p></li>\n<li><p><strong>output_name</strong> (<em>Optional</em><em>[</em><a class=\"reference external\" href=\"https://docs.python.org/3/library/stdtypes.html#str\" title=\"(in Python v3.8)\"><em>str</em></a><em>]</em>) \u2013 Name of the corresponding out. (default:\n\u201cresult\u201d)</p></li>\n<li><p><strong>metadata_entries</strong> (<em>Optional</em><em>[</em><em>Union</em><em>[</em><a class=\"reference internal\" href=\"#dagster.MetadataEntry\" title=\"dagster.MetadataEntry\"><em>MetadataEntry</em></a><em>, </em><em>PartitionMetadataEntry</em><em>]</em><em>]</em>) \u2013 (Experimental) A set of metadata entries to attach to events related to this Output.</p></li>\n<li><p><strong>metadata</strong> (<em>Optional</em><em>[</em><em>Dict</em><em>[</em><a class=\"reference external\" href=\"https://docs.python.org/3/library/stdtypes.html#str\" title=\"(in Python v3.8)\"><em>str</em></a><em>, </em><em>Union</em><em>[</em><a class=\"reference external\" href=\"https://docs.python.org/3/library/stdtypes.html#str\" title=\"(in Python v3.8)\"><em>str</em></a><em>, </em><a class=\"reference external\" href=\"https://docs.python.org/3/library/functions.html#float\" title=\"(in Python v3.8)\"><em>float</em></a><em>, </em><a class=\"reference external\" href=\"https://docs.python.org/3/library/functions.html#int\" title=\"(in Python v3.8)\"><em>int</em></a><em>, </em><em>Dict</em><em>, </em><a class=\"reference internal\" href=\"#dagster.MetadataValue\" title=\"dagster.MetadataValue\"><em>MetadataValue</em></a><em>]</em><em>]</em><em>]</em>) \u2013 Arbitrary metadata about the failure.  Keys are displayed string labels, and values are\none of the following: string, float, int, JSON-serializable dict, JSON-serializable\nlist, and one of the data classes returned by a MetadataValue static method.</p></li>\n</ul>\n</dd>\n</dl>\n</dd></dl>\n\n<dl class=\"py class\">\n<dt id=\"dagster.AssetMaterialization\">\n<em class=\"property\"><span class=\"pre\">class</span> </em><code class=\"sig-prename descclassname\"><span class=\"pre\">dagster.</span></code><code class=\"sig-name descname\"><span class=\"pre\">AssetMaterialization</span></code><span class=\"sig-paren\">(</span><em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">asset_key</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">description</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">None</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">metadata_entries</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">None</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">partition</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">None</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">metadata</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">None</span></span></em><span class=\"sig-paren\">)</span><a class=\"reference internal\" href=\"../../../../_modules/dagster/core/definitions/events#AssetMaterialization\"><span class=\"viewcode-link\"><span class=\"pre\">[source]</span></span></a><a class=\"headerlink\" href=\"#dagster.AssetMaterialization\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Event indicating that an op has materialized an asset.</p>\n<p>Op compute functions may yield events of this type whenever they wish to indicate to the\nDagster framework (and the end user) that they have produced a materialized value as a\nside effect of computation. Unlike outputs, asset materializations can not be passed to other\nops, and their persistence is controlled by op logic, rather than by the Dagster\nframework.</p>\n<p>Op authors should use these events to organize metadata about the side effects of their\ncomputations, enabling tooling like the Assets dashboard in Dagit.</p>\n<dl class=\"field-list simple\">\n<dt class=\"field-odd\">Parameters</dt>\n<dd class=\"field-odd\"><ul class=\"simple\">\n<li><p><strong>asset_key</strong> (<em>Union</em><em>[</em><a class=\"reference external\" href=\"https://docs.python.org/3/library/stdtypes.html#str\" title=\"(in Python v3.8)\"><em>str</em></a><em>, </em><em>List</em><em>[</em><a class=\"reference external\" href=\"https://docs.python.org/3/library/stdtypes.html#str\" title=\"(in Python v3.8)\"><em>str</em></a><em>]</em><em>, </em><a class=\"reference internal\" href=\"#dagster.AssetKey\" title=\"dagster.AssetKey\"><em>AssetKey</em></a><em>]</em>) \u2013 A key to identify the materialized asset across job\nruns</p></li>\n<li><p><strong>description</strong> (<em>Optional</em><em>[</em><a class=\"reference external\" href=\"https://docs.python.org/3/library/stdtypes.html#str\" title=\"(in Python v3.8)\"><em>str</em></a><em>]</em>) \u2013 A longer human-readable description of the materialized value.</p></li>\n<li><p><strong>metadata_entries</strong> (<em>Optional</em><em>[</em><em>List</em><em>[</em><em>Union</em><em>[</em><a class=\"reference internal\" href=\"#dagster.MetadataEntry\" title=\"dagster.MetadataEntry\"><em>MetadataEntry</em></a><em>, </em><em>PartitionMetadataEntry</em><em>]</em><em>]</em><em>]</em>) \u2013 Arbitrary metadata about the\nmaterialized value.</p></li>\n<li><p><strong>partition</strong> (<em>Optional</em><em>[</em><a class=\"reference external\" href=\"https://docs.python.org/3/library/stdtypes.html#str\" title=\"(in Python v3.8)\"><em>str</em></a><em>]</em>) \u2013 The name of the partition that was materialized.</p></li>\n<li><p><strong>metadata</strong> (<em>Optional</em><em>[</em><em>Dict</em><em>[</em><a class=\"reference external\" href=\"https://docs.python.org/3/library/stdtypes.html#str\" title=\"(in Python v3.8)\"><em>str</em></a><em>, </em><em>RawMetadataValue</em><em>]</em><em>]</em>) \u2013 Arbitrary metadata about the asset.  Keys are displayed string labels, and values are\none of the following: string, float, int, JSON-serializable dict, JSON-serializable\nlist, and one of the data classes returned by a MetadataValue static method.</p></li>\n</ul>\n</dd>\n</dl>\n<dl class=\"py method\">\n<dt id=\"dagster.AssetMaterialization.file\">\n<em class=\"property\"><span class=\"pre\">static</span> </em><code class=\"sig-name descname\"><span class=\"pre\">file</span></code><span class=\"sig-paren\">(</span><em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">path</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">description</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">None</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">asset_key</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">None</span></span></em><span class=\"sig-paren\">)</span><a class=\"reference internal\" href=\"../../../../_modules/dagster/core/definitions/events#AssetMaterialization.file\"><span class=\"viewcode-link\"><span class=\"pre\">[source]</span></span></a><a class=\"headerlink\" href=\"#dagster.AssetMaterialization.file\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Static constructor for standard materializations corresponding to files on disk.</p>\n<dl class=\"field-list simple\">\n<dt class=\"field-odd\">Parameters</dt>\n<dd class=\"field-odd\"><ul class=\"simple\">\n<li><p><strong>path</strong> (<a class=\"reference external\" href=\"https://docs.python.org/3/library/stdtypes.html#str\" title=\"(in Python v3.8)\"><em>str</em></a>) \u2013 The path to the file.</p></li>\n<li><p><strong>description</strong> (<em>Optional</em><em>[</em><a class=\"reference external\" href=\"https://docs.python.org/3/library/stdtypes.html#str\" title=\"(in Python v3.8)\"><em>str</em></a><em>]</em>) \u2013 A human-readable description of the materialization.</p></li>\n</ul>\n</dd>\n</dl>\n</dd></dl>\n\n</dd></dl>\n\n<dl class=\"py class\">\n<dt id=\"dagster.ExpectationResult\">\n<em class=\"property\"><span class=\"pre\">class</span> </em><code class=\"sig-prename descclassname\"><span class=\"pre\">dagster.</span></code><code class=\"sig-name descname\"><span class=\"pre\">ExpectationResult</span></code><span class=\"sig-paren\">(</span><em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">success</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">label</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">None</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">description</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">None</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">metadata_entries</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">None</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">metadata</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">None</span></span></em><span class=\"sig-paren\">)</span><a class=\"reference internal\" href=\"../../../../_modules/dagster/core/definitions/events#ExpectationResult\"><span class=\"viewcode-link\"><span class=\"pre\">[source]</span></span></a><a class=\"headerlink\" href=\"#dagster.ExpectationResult\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Event corresponding to a data quality test.</p>\n<p>Op compute functions may yield events of this type whenever they wish to indicate to the\nDagster framework (and the end user) that a data quality test has produced a (positive or\nnegative) result.</p>\n<dl class=\"field-list simple\">\n<dt class=\"field-odd\">Parameters</dt>\n<dd class=\"field-odd\"><ul class=\"simple\">\n<li><p><strong>success</strong> (<a class=\"reference external\" href=\"https://docs.python.org/3/library/functions.html#bool\" title=\"(in Python v3.8)\"><em>bool</em></a>) \u2013 Whether the expectation passed or not.</p></li>\n<li><p><strong>label</strong> (<em>Optional</em><em>[</em><a class=\"reference external\" href=\"https://docs.python.org/3/library/stdtypes.html#str\" title=\"(in Python v3.8)\"><em>str</em></a><em>]</em>) \u2013 Short display name for expectation. Defaults to \u201cresult\u201d.</p></li>\n<li><p><strong>description</strong> (<em>Optional</em><em>[</em><a class=\"reference external\" href=\"https://docs.python.org/3/library/stdtypes.html#str\" title=\"(in Python v3.8)\"><em>str</em></a><em>]</em>) \u2013 A longer human-readable description of the expectation.</p></li>\n<li><p><strong>metadata_entries</strong> (<em>Optional</em><em>[</em><em>List</em><em>[</em><a class=\"reference internal\" href=\"#dagster.MetadataEntry\" title=\"dagster.MetadataEntry\"><em>MetadataEntry</em></a><em>]</em><em>]</em>) \u2013 Arbitrary metadata about the\nexpectation.</p></li>\n<li><p><strong>metadata</strong> (<em>Optional</em><em>[</em><em>Dict</em><em>[</em><a class=\"reference external\" href=\"https://docs.python.org/3/library/stdtypes.html#str\" title=\"(in Python v3.8)\"><em>str</em></a><em>, </em><em>RawMetadataValue</em><em>]</em><em>]</em>) \u2013 Arbitrary metadata about the failure.  Keys are displayed string labels, and values are\none of the following: string, float, int, JSON-serializable dict, JSON-serializable\nlist, and one of the data classes returned by a MetadataValue static method.</p></li>\n</ul>\n</dd>\n</dl>\n</dd></dl>\n\n<dl class=\"py class\">\n<dt id=\"dagster.TypeCheck\">\n<em class=\"property\"><span class=\"pre\">class</span> </em><code class=\"sig-prename descclassname\"><span class=\"pre\">dagster.</span></code><code class=\"sig-name descname\"><span class=\"pre\">TypeCheck</span></code><span class=\"sig-paren\">(</span><em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">success</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">description</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">None</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">metadata_entries</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">None</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">metadata</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">None</span></span></em><span class=\"sig-paren\">)</span><a class=\"reference internal\" href=\"../../../../_modules/dagster/core/definitions/events#TypeCheck\"><span class=\"viewcode-link\"><span class=\"pre\">[source]</span></span></a><a class=\"headerlink\" href=\"#dagster.TypeCheck\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Event corresponding to a successful typecheck.</p>\n<p>Events of this type should be returned by user-defined type checks when they need to encapsulate\nadditional metadata about a type check\u2019s success or failure. (i.e., when using\n<code class=\"xref py py-func docutils literal notranslate\"><span class=\"pre\">as_dagster_type()</span></code>, <code class=\"xref py py-func docutils literal notranslate\"><span class=\"pre\">&#64;usable_as_dagster_type</span></code>, or the underlying\n<a class=\"reference internal\" href=\"types#dagster.PythonObjectDagsterType\" title=\"dagster.PythonObjectDagsterType\"><code class=\"xref py py-func docutils literal notranslate\"><span class=\"pre\">PythonObjectDagsterType()</span></code></a> API.)</p>\n<p>Solid compute functions should generally avoid yielding events of this type to avoid confusion.</p>\n<dl class=\"field-list simple\">\n<dt class=\"field-odd\">Parameters</dt>\n<dd class=\"field-odd\"><ul class=\"simple\">\n<li><p><strong>success</strong> (<a class=\"reference external\" href=\"https://docs.python.org/3/library/functions.html#bool\" title=\"(in Python v3.8)\"><em>bool</em></a>) \u2013 <code class=\"docutils literal notranslate\"><span class=\"pre\">True</span></code> if the type check succeeded, <code class=\"docutils literal notranslate\"><span class=\"pre\">False</span></code> otherwise.</p></li>\n<li><p><strong>description</strong> (<em>Optional</em><em>[</em><a class=\"reference external\" href=\"https://docs.python.org/3/library/stdtypes.html#str\" title=\"(in Python v3.8)\"><em>str</em></a><em>]</em>) \u2013 A human-readable description of the type check.</p></li>\n<li><p><strong>metadata_entries</strong> (<em>Optional</em><em>[</em><em>List</em><em>[</em><a class=\"reference internal\" href=\"#dagster.MetadataEntry\" title=\"dagster.MetadataEntry\"><em>MetadataEntry</em></a><em>]</em><em>]</em>) \u2013 Arbitrary metadata about the\ntype check.</p></li>\n<li><p><strong>metadata</strong> (<em>Optional</em><em>[</em><em>Dict</em><em>[</em><a class=\"reference external\" href=\"https://docs.python.org/3/library/stdtypes.html#str\" title=\"(in Python v3.8)\"><em>str</em></a><em>, </em><em>RawMetadataValue</em><em>]</em><em>]</em>) \u2013 Arbitrary metadata about the failure.  Keys are displayed string labels, and values are\none of the following: string, float, int, JSON-serializable dict, JSON-serializable\nlist, and one of the data classes returned by a MetadataValue static method.</p></li>\n</ul>\n</dd>\n</dl>\n</dd></dl>\n\n<dl class=\"py class\">\n<dt id=\"dagster.Failure\">\n<em class=\"property\"><span class=\"pre\">class</span> </em><code class=\"sig-prename descclassname\"><span class=\"pre\">dagster.</span></code><code class=\"sig-name descname\"><span class=\"pre\">Failure</span></code><span class=\"sig-paren\">(</span><em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">description</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">None</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">metadata_entries</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">None</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">metadata</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">None</span></span></em><span class=\"sig-paren\">)</span><a class=\"reference internal\" href=\"../../../../_modules/dagster/core/definitions/events#Failure\"><span class=\"viewcode-link\"><span class=\"pre\">[source]</span></span></a><a class=\"headerlink\" href=\"#dagster.Failure\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Event indicating op failure.</p>\n<p>Raise events of this type from within op compute functions or custom type checks in order to\nindicate an unrecoverable failure in user code to the Dagster machinery and return\nstructured metadata about the failure.</p>\n<dl class=\"field-list simple\">\n<dt class=\"field-odd\">Parameters</dt>\n<dd class=\"field-odd\"><ul class=\"simple\">\n<li><p><strong>description</strong> (<em>Optional</em><em>[</em><a class=\"reference external\" href=\"https://docs.python.org/3/library/stdtypes.html#str\" title=\"(in Python v3.8)\"><em>str</em></a><em>]</em>) \u2013 A human-readable description of the failure.</p></li>\n<li><p><strong>metadata_entries</strong> (<em>Optional</em><em>[</em><em>List</em><em>[</em><a class=\"reference internal\" href=\"#dagster.MetadataEntry\" title=\"dagster.MetadataEntry\"><em>MetadataEntry</em></a><em>]</em><em>]</em>) \u2013 Arbitrary metadata about the\nfailure.</p></li>\n<li><p><strong>metadata</strong> (<em>Optional</em><em>[</em><em>Dict</em><em>[</em><a class=\"reference external\" href=\"https://docs.python.org/3/library/stdtypes.html#str\" title=\"(in Python v3.8)\"><em>str</em></a><em>, </em><em>RawMetadataValue</em><em>]</em><em>]</em>) \u2013 Arbitrary metadata about the failure.  Keys are displayed string labels, and values are\none of the following: string, float, int, JSON-serializable dict, JSON-serializable\nlist, and one of the data classes returned by a MetadataValue static method.</p></li>\n</ul>\n</dd>\n</dl>\n</dd></dl>\n\n<dl class=\"py class\">\n<dt id=\"dagster.RetryRequested\">\n<em class=\"property\"><span class=\"pre\">class</span> </em><code class=\"sig-prename descclassname\"><span class=\"pre\">dagster.</span></code><code class=\"sig-name descname\"><span class=\"pre\">RetryRequested</span></code><span class=\"sig-paren\">(</span><em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">max_retries</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">1</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">seconds_to_wait</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">None</span></span></em><span class=\"sig-paren\">)</span><a class=\"reference internal\" href=\"../../../../_modules/dagster/core/definitions/events#RetryRequested\"><span class=\"viewcode-link\"><span class=\"pre\">[source]</span></span></a><a class=\"headerlink\" href=\"#dagster.RetryRequested\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>An exception to raise from an op to indicate that it should be retried.</p>\n<dl class=\"field-list simple\">\n<dt class=\"field-odd\">Parameters</dt>\n<dd class=\"field-odd\"><ul class=\"simple\">\n<li><p><strong>max_retries</strong> (<em>Optional</em><em>[</em><a class=\"reference external\" href=\"https://docs.python.org/3/library/functions.html#int\" title=\"(in Python v3.8)\"><em>int</em></a><em>]</em>) \u2013 The max number of retries this step should attempt before failing</p></li>\n<li><p><strong>seconds_to_wait</strong> (<em>Optional</em><em>[</em><em>Union</em><em>[</em><a class=\"reference external\" href=\"https://docs.python.org/3/library/functions.html#float\" title=\"(in Python v3.8)\"><em>float</em></a><em>,</em><a class=\"reference external\" href=\"https://docs.python.org/3/library/functions.html#int\" title=\"(in Python v3.8)\"><em>int</em></a><em>]</em><em>]</em>) \u2013 Seconds to wait before restarting the step after putting the step in\nto the up_for_retry state</p></li>\n</ul>\n</dd>\n</dl>\n<p class=\"rubric\">Example</p>\n<div class=\"highlight-python notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"nd\">@op</span>\n<span class=\"k\">def</span> <span class=\"nf\">flakes</span><span class=\"p\">():</span>\n    <span class=\"k\">try</span><span class=\"p\">:</span>\n        <span class=\"n\">flakey_operation</span><span class=\"p\">()</span>\n    <span class=\"k\">except</span> <span class=\"ne\">Exception</span> <span class=\"k\">as</span> <span class=\"n\">e</span><span class=\"p\">:</span>\n        <span class=\"k\">raise</span> <span class=\"n\">RetryRequested</span><span class=\"p\">(</span><span class=\"n\">max_retries</span><span class=\"o\">=</span><span class=\"mi\">3</span><span class=\"p\">)</span> <span class=\"kn\">from</span> <span class=\"nn\">e</span>\n</pre></div>\n</div>\n</dd></dl>\n\n</div>\n<hr class=\"docutils\" />\n<div class=\"section\" id=\"event-metadata\">\n<h3>Event metadata<a class=\"headerlink\" href=\"#event-metadata\" title=\"Permalink to this headline\">\u00b6</a></h3>\n<p>Dagster uses metadata to communicate arbitrary user-specified metadata about structured\nevents.</p>\n<dl class=\"py class\">\n<dt id=\"dagster.MetadataValue\">\n<em class=\"property\"><span class=\"pre\">class</span> </em><code class=\"sig-prename descclassname\"><span class=\"pre\">dagster.</span></code><code class=\"sig-name descname\"><span class=\"pre\">MetadataValue</span></code><a class=\"reference internal\" href=\"../../../../_modules/dagster/core/definitions/metadata#MetadataValue\"><span class=\"viewcode-link\"><span class=\"pre\">[source]</span></span></a><a class=\"headerlink\" href=\"#dagster.MetadataValue\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Utility class to wrap metadata values passed into Dagster events so that they can be\ndisplayed in Dagit and other tooling.</p>\n<div class=\"highlight-python notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"nd\">@op</span>\n<span class=\"k\">def</span> <span class=\"nf\">emit_metadata</span><span class=\"p\">(</span><span class=\"n\">context</span><span class=\"p\">,</span> <span class=\"n\">df</span><span class=\"p\">):</span>\n    <span class=\"k\">yield</span> <span class=\"n\">AssetMaterialization</span><span class=\"p\">(</span>\n        <span class=\"n\">asset_key</span><span class=\"o\">=</span><span class=\"s2\">&quot;my_dataset&quot;</span><span class=\"p\">,</span>\n        <span class=\"n\">metadata</span><span class=\"o\">=</span><span class=\"p\">{</span>\n            <span class=\"s2\">&quot;my_text_label&quot;</span><span class=\"p\">:</span> <span class=\"s2\">&quot;hello&quot;</span><span class=\"p\">,</span>\n            <span class=\"s2\">&quot;dashboard_url&quot;</span><span class=\"p\">:</span> <span class=\"n\">MetadataValue</span><span class=\"o\">.</span><span class=\"n\">url</span><span class=\"p\">(</span><span class=\"s2\">&quot;http://mycoolsite.com/my_dashboard&quot;</span><span class=\"p\">),</span>\n            <span class=\"s2\">&quot;num_rows&quot;</span><span class=\"p\">:</span> <span class=\"mi\">0</span><span class=\"p\">,</span>\n        <span class=\"p\">},</span>\n    <span class=\"p\">)</span>\n</pre></div>\n</div>\n<dl class=\"py method\">\n<dt id=\"dagster.MetadataValue.asset\">\n<em class=\"property\"><span class=\"pre\">static</span> </em><code class=\"sig-name descname\"><span class=\"pre\">asset</span></code><span class=\"sig-paren\">(</span><em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">asset_key</span></span></em><span class=\"sig-paren\">)</span><a class=\"reference internal\" href=\"../../../../_modules/dagster/core/definitions/metadata#MetadataValue.asset\"><span class=\"viewcode-link\"><span class=\"pre\">[source]</span></span></a><a class=\"headerlink\" href=\"#dagster.MetadataValue.asset\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Static constructor for a metadata value referencing a Dagster asset, by key.</p>\n<p>For example:</p>\n<div class=\"highlight-python notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"nd\">@op</span>\n<span class=\"k\">def</span> <span class=\"nf\">validate_table</span><span class=\"p\">(</span><span class=\"n\">context</span><span class=\"p\">,</span> <span class=\"n\">df</span><span class=\"p\">):</span>\n    <span class=\"k\">yield</span> <span class=\"n\">AssetMaterialization</span><span class=\"p\">(</span>\n        <span class=\"n\">asset_key</span><span class=\"o\">=</span><span class=\"n\">AssetKey</span><span class=\"p\">(</span><span class=\"s2\">&quot;my_table&quot;</span><span class=\"p\">),</span>\n        <span class=\"n\">metadata</span><span class=\"o\">=</span><span class=\"p\">{</span>\n            <span class=\"s2\">&quot;Related asset&quot;</span><span class=\"p\">:</span> <span class=\"n\">MetadataValue</span><span class=\"o\">.</span><span class=\"n\">asset</span><span class=\"p\">(</span><span class=\"n\">AssetKey</span><span class=\"p\">(</span><span class=\"s1\">&#39;my_other_table&#39;</span><span class=\"p\">)),</span>\n        <span class=\"p\">},</span>\n    <span class=\"p\">)</span>\n</pre></div>\n</div>\n<dl class=\"field-list simple\">\n<dt class=\"field-odd\">Parameters</dt>\n<dd class=\"field-odd\"><p><strong>asset_key</strong> (<a class=\"reference internal\" href=\"#dagster.AssetKey\" title=\"dagster.AssetKey\"><em>AssetKey</em></a>) \u2013 The asset key referencing the asset.</p>\n</dd>\n</dl>\n</dd></dl>\n\n<dl class=\"py method\">\n<dt id=\"dagster.MetadataValue.bool\">\n<em class=\"property\"><span class=\"pre\">static</span> </em><code class=\"sig-name descname\"><span class=\"pre\">bool</span></code><span class=\"sig-paren\">(</span><em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">value</span></span></em><span class=\"sig-paren\">)</span><a class=\"reference internal\" href=\"../../../../_modules/dagster/core/definitions/metadata#MetadataValue.bool\"><span class=\"viewcode-link\"><span class=\"pre\">[source]</span></span></a><a class=\"headerlink\" href=\"#dagster.MetadataValue.bool\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Static constructor for a metadata value wrapping a bool as\n<code class=\"xref py py-class docutils literal notranslate\"><span class=\"pre\">BoolMetadataValuye</span></code>. Can be used as the value type for the <cite>metadata</cite>\nparameter for supported events. For example:</p>\n<div class=\"highlight-python notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"nd\">@op</span>\n<span class=\"k\">def</span> <span class=\"nf\">emit_metadata</span><span class=\"p\">(</span><span class=\"n\">context</span><span class=\"p\">,</span> <span class=\"n\">df</span><span class=\"p\">):</span>\n    <span class=\"k\">yield</span> <span class=\"n\">AssetMaterialization</span><span class=\"p\">(</span>\n        <span class=\"n\">asset_key</span><span class=\"o\">=</span><span class=\"s2\">&quot;my_dataset&quot;</span><span class=\"p\">,</span>\n        <span class=\"n\">metadata</span><span class=\"o\">=</span><span class=\"p\">{</span>\n            <span class=\"s2\">&quot;num rows &gt; 1000&quot;</span><span class=\"p\">:</span> <span class=\"n\">MetadataValue</span><span class=\"o\">.</span><span class=\"n\">bool</span><span class=\"p\">(</span><span class=\"nb\">len</span><span class=\"p\">(</span><span class=\"n\">df</span><span class=\"p\">)</span> <span class=\"o\">&gt;</span> <span class=\"mi\">1000</span><span class=\"p\">),</span>\n        <span class=\"p\">},</span>\n    <span class=\"p\">)</span>\n</pre></div>\n</div>\n<dl class=\"field-list simple\">\n<dt class=\"field-odd\">Parameters</dt>\n<dd class=\"field-odd\"><p><strong>value</strong> (<a class=\"reference external\" href=\"https://docs.python.org/3/library/functions.html#bool\" title=\"(in Python v3.8)\"><em>bool</em></a>) \u2013 The bool value for a metadata entry.</p>\n</dd>\n</dl>\n</dd></dl>\n\n<dl class=\"py method\">\n<dt id=\"dagster.MetadataValue.dagster_run\">\n<em class=\"property\"><span class=\"pre\">static</span> </em><code class=\"sig-name descname\"><span class=\"pre\">dagster_run</span></code><span class=\"sig-paren\">(</span><em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">run_id</span></span></em><span class=\"sig-paren\">)</span><a class=\"reference internal\" href=\"../../../../_modules/dagster/core/definitions/metadata#MetadataValue.dagster_run\"><span class=\"viewcode-link\"><span class=\"pre\">[source]</span></span></a><a class=\"headerlink\" href=\"#dagster.MetadataValue.dagster_run\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Static constructor for a metadata value wrapping a reference to a Dagster run.</p>\n<dl class=\"field-list simple\">\n<dt class=\"field-odd\">Parameters</dt>\n<dd class=\"field-odd\"><p><strong>run_id</strong> (<a class=\"reference external\" href=\"https://docs.python.org/3/library/stdtypes.html#str\" title=\"(in Python v3.8)\"><em>str</em></a>) \u2013 The ID of the run.</p>\n</dd>\n</dl>\n</dd></dl>\n\n<dl class=\"py method\">\n<dt id=\"dagster.MetadataValue.float\">\n<em class=\"property\"><span class=\"pre\">static</span> </em><code class=\"sig-name descname\"><span class=\"pre\">float</span></code><span class=\"sig-paren\">(</span><em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">value</span></span></em><span class=\"sig-paren\">)</span><a class=\"reference internal\" href=\"../../../../_modules/dagster/core/definitions/metadata#MetadataValue.float\"><span class=\"viewcode-link\"><span class=\"pre\">[source]</span></span></a><a class=\"headerlink\" href=\"#dagster.MetadataValue.float\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Static constructor for a metadata value wrapping a float as\n<a class=\"reference internal\" href=\"#dagster.FloatMetadataValue\" title=\"dagster.FloatMetadataValue\"><code class=\"xref py py-class docutils literal notranslate\"><span class=\"pre\">FloatMetadataValue</span></code></a>. Can be used as the value type for the <cite>metadata</cite>\nparameter for supported events. For example:</p>\n<div class=\"highlight-python notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"nd\">@op</span>\n<span class=\"k\">def</span> <span class=\"nf\">emit_metadata</span><span class=\"p\">(</span><span class=\"n\">context</span><span class=\"p\">,</span> <span class=\"n\">df</span><span class=\"p\">):</span>\n    <span class=\"k\">yield</span> <span class=\"n\">AssetMaterialization</span><span class=\"p\">(</span>\n        <span class=\"n\">asset_key</span><span class=\"o\">=</span><span class=\"s2\">&quot;my_dataset&quot;</span><span class=\"p\">,</span>\n        <span class=\"n\">metadata</span><span class=\"o\">=</span><span class=\"p\">{</span>\n            <span class=\"s2\">&quot;size (bytes)&quot;</span><span class=\"p\">:</span> <span class=\"n\">MetadataValue</span><span class=\"o\">.</span><span class=\"n\">float</span><span class=\"p\">(</span><span class=\"n\">calculate_bytes</span><span class=\"p\">(</span><span class=\"n\">df</span><span class=\"p\">)),</span>\n        <span class=\"p\">}</span>\n    <span class=\"p\">)</span>\n</pre></div>\n</div>\n<dl class=\"field-list simple\">\n<dt class=\"field-odd\">Parameters</dt>\n<dd class=\"field-odd\"><p><strong>value</strong> (<a class=\"reference external\" href=\"https://docs.python.org/3/library/functions.html#float\" title=\"(in Python v3.8)\"><em>float</em></a>) \u2013 The float value for a metadata entry.</p>\n</dd>\n</dl>\n</dd></dl>\n\n<dl class=\"py method\">\n<dt id=\"dagster.MetadataValue.int\">\n<em class=\"property\"><span class=\"pre\">static</span> </em><code class=\"sig-name descname\"><span class=\"pre\">int</span></code><span class=\"sig-paren\">(</span><em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">value</span></span></em><span class=\"sig-paren\">)</span><a class=\"reference internal\" href=\"../../../../_modules/dagster/core/definitions/metadata#MetadataValue.int\"><span class=\"viewcode-link\"><span class=\"pre\">[source]</span></span></a><a class=\"headerlink\" href=\"#dagster.MetadataValue.int\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Static constructor for a metadata value wrapping an int as\n<a class=\"reference internal\" href=\"#dagster.IntMetadataValue\" title=\"dagster.IntMetadataValue\"><code class=\"xref py py-class docutils literal notranslate\"><span class=\"pre\">IntMetadataValue</span></code></a>. Can be used as the value type for the <cite>metadata</cite>\nparameter for supported events. For example:</p>\n<div class=\"highlight-python notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"nd\">@op</span>\n<span class=\"k\">def</span> <span class=\"nf\">emit_metadata</span><span class=\"p\">(</span><span class=\"n\">context</span><span class=\"p\">,</span> <span class=\"n\">df</span><span class=\"p\">):</span>\n    <span class=\"k\">yield</span> <span class=\"n\">AssetMaterialization</span><span class=\"p\">(</span>\n        <span class=\"n\">asset_key</span><span class=\"o\">=</span><span class=\"s2\">&quot;my_dataset&quot;</span><span class=\"p\">,</span>\n        <span class=\"n\">metadata</span><span class=\"o\">=</span><span class=\"p\">{</span>\n            <span class=\"s2\">&quot;number of rows&quot;</span><span class=\"p\">:</span> <span class=\"n\">MetadataValue</span><span class=\"o\">.</span><span class=\"n\">int</span><span class=\"p\">(</span><span class=\"nb\">len</span><span class=\"p\">(</span><span class=\"n\">df</span><span class=\"p\">)),</span>\n        <span class=\"p\">},</span>\n    <span class=\"p\">)</span>\n</pre></div>\n</div>\n<dl class=\"field-list simple\">\n<dt class=\"field-odd\">Parameters</dt>\n<dd class=\"field-odd\"><p><strong>value</strong> (<a class=\"reference external\" href=\"https://docs.python.org/3/library/functions.html#int\" title=\"(in Python v3.8)\"><em>int</em></a>) \u2013 The int value for a metadata entry.</p>\n</dd>\n</dl>\n</dd></dl>\n\n<dl class=\"py method\">\n<dt id=\"dagster.MetadataValue.json\">\n<em class=\"property\"><span class=\"pre\">static</span> </em><code class=\"sig-name descname\"><span class=\"pre\">json</span></code><span class=\"sig-paren\">(</span><em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">data</span></span></em><span class=\"sig-paren\">)</span><a class=\"reference internal\" href=\"../../../../_modules/dagster/core/definitions/metadata#MetadataValue.json\"><span class=\"viewcode-link\"><span class=\"pre\">[source]</span></span></a><a class=\"headerlink\" href=\"#dagster.MetadataValue.json\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Static constructor for a metadata value wrapping a path as\n<a class=\"reference internal\" href=\"#dagster.JsonMetadataValue\" title=\"dagster.JsonMetadataValue\"><code class=\"xref py py-class docutils literal notranslate\"><span class=\"pre\">JsonMetadataValue</span></code></a>. Can be used as the value type for the <cite>metadata</cite>\nparameter for supported events. For example:</p>\n<div class=\"highlight-python notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"nd\">@op</span>\n<span class=\"k\">def</span> <span class=\"nf\">emit_metadata</span><span class=\"p\">(</span><span class=\"n\">context</span><span class=\"p\">):</span>\n    <span class=\"k\">yield</span> <span class=\"n\">ExpectationResult</span><span class=\"p\">(</span>\n        <span class=\"n\">success</span><span class=\"o\">=</span><span class=\"ow\">not</span> <span class=\"n\">missing_things</span><span class=\"p\">,</span>\n        <span class=\"n\">label</span><span class=\"o\">=</span><span class=\"s2\">&quot;is_present&quot;</span><span class=\"p\">,</span>\n        <span class=\"n\">metadata</span><span class=\"o\">=</span><span class=\"p\">{</span>\n            <span class=\"s2\">&quot;about my dataset&quot;</span><span class=\"p\">:</span> <span class=\"n\">MetadataValue</span><span class=\"o\">.</span><span class=\"n\">json</span><span class=\"p\">({</span><span class=\"s2\">&quot;missing_columns&quot;</span><span class=\"p\">:</span> <span class=\"n\">missing_things</span><span class=\"p\">})</span>\n        <span class=\"p\">},</span>\n    <span class=\"p\">)</span>\n</pre></div>\n</div>\n<dl class=\"field-list simple\">\n<dt class=\"field-odd\">Parameters</dt>\n<dd class=\"field-odd\"><p><strong>data</strong> (<em>Dict</em><em>[</em><a class=\"reference external\" href=\"https://docs.python.org/3/library/stdtypes.html#str\" title=\"(in Python v3.8)\"><em>str</em></a><em>, </em><em>Any</em><em>]</em>) \u2013 The JSON data for a metadata entry.</p>\n</dd>\n</dl>\n</dd></dl>\n\n<dl class=\"py method\">\n<dt id=\"dagster.MetadataValue.md\">\n<em class=\"property\"><span class=\"pre\">static</span> </em><code class=\"sig-name descname\"><span class=\"pre\">md</span></code><span class=\"sig-paren\">(</span><em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">data</span></span></em><span class=\"sig-paren\">)</span><a class=\"reference internal\" href=\"../../../../_modules/dagster/core/definitions/metadata#MetadataValue.md\"><span class=\"viewcode-link\"><span class=\"pre\">[source]</span></span></a><a class=\"headerlink\" href=\"#dagster.MetadataValue.md\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Static constructor for a metadata value wrapping markdown data as\n<a class=\"reference internal\" href=\"#dagster.MarkdownMetadataValue\" title=\"dagster.MarkdownMetadataValue\"><code class=\"xref py py-class docutils literal notranslate\"><span class=\"pre\">MarkdownMetadataValue</span></code></a>. Can be used as the value type for the <cite>metadata</cite>\nparameter for supported events. For example:</p>\n<div class=\"highlight-python notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"nd\">@op</span>\n<span class=\"k\">def</span> <span class=\"nf\">emit_metadata</span><span class=\"p\">(</span><span class=\"n\">context</span><span class=\"p\">,</span> <span class=\"n\">md_str</span><span class=\"p\">):</span>\n    <span class=\"k\">yield</span> <span class=\"n\">AssetMaterialization</span><span class=\"p\">(</span>\n        <span class=\"n\">asset_key</span><span class=\"o\">=</span><span class=\"s2\">&quot;info&quot;</span><span class=\"p\">,</span>\n        <span class=\"n\">metadata</span><span class=\"o\">=</span><span class=\"p\">{</span>\n            <span class=\"s1\">&#39;Details&#39;</span><span class=\"p\">:</span> <span class=\"n\">MetadataValue</span><span class=\"o\">.</span><span class=\"n\">md</span><span class=\"p\">(</span><span class=\"n\">md_str</span><span class=\"p\">)</span>\n        <span class=\"p\">},</span>\n    <span class=\"p\">)</span>\n</pre></div>\n</div>\n<dl class=\"field-list simple\">\n<dt class=\"field-odd\">Parameters</dt>\n<dd class=\"field-odd\"><p><strong>md_str</strong> (<a class=\"reference external\" href=\"https://docs.python.org/3/library/stdtypes.html#str\" title=\"(in Python v3.8)\"><em>str</em></a>) \u2013 The markdown for a metadata entry.</p>\n</dd>\n</dl>\n</dd></dl>\n\n<dl class=\"py method\">\n<dt id=\"dagster.MetadataValue.path\">\n<em class=\"property\"><span class=\"pre\">static</span> </em><code class=\"sig-name descname\"><span class=\"pre\">path</span></code><span class=\"sig-paren\">(</span><em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">path</span></span></em><span class=\"sig-paren\">)</span><a class=\"reference internal\" href=\"../../../../_modules/dagster/core/definitions/metadata#MetadataValue.path\"><span class=\"viewcode-link\"><span class=\"pre\">[source]</span></span></a><a class=\"headerlink\" href=\"#dagster.MetadataValue.path\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Static constructor for a metadata value wrapping a path as\n<a class=\"reference internal\" href=\"#dagster.PathMetadataValue\" title=\"dagster.PathMetadataValue\"><code class=\"xref py py-class docutils literal notranslate\"><span class=\"pre\">PathMetadataValue</span></code></a>. For example:</p>\n<div class=\"highlight-python notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"nd\">@op</span>\n<span class=\"k\">def</span> <span class=\"nf\">emit_metadata</span><span class=\"p\">(</span><span class=\"n\">context</span><span class=\"p\">):</span>\n    <span class=\"k\">yield</span> <span class=\"n\">AssetMaterialization</span><span class=\"p\">(</span>\n        <span class=\"n\">asset_key</span><span class=\"o\">=</span><span class=\"s2\">&quot;my_dataset&quot;</span><span class=\"p\">,</span>\n        <span class=\"n\">metadata</span><span class=\"o\">=</span><span class=\"p\">{</span>\n            <span class=\"s2\">&quot;filepath&quot;</span><span class=\"p\">:</span> <span class=\"n\">MetadataValue</span><span class=\"o\">.</span><span class=\"n\">path</span><span class=\"p\">(</span><span class=\"s2\">&quot;path/to/file&quot;</span><span class=\"p\">),</span>\n        <span class=\"p\">}</span>\n    <span class=\"p\">)</span>\n</pre></div>\n</div>\n<dl class=\"field-list simple\">\n<dt class=\"field-odd\">Parameters</dt>\n<dd class=\"field-odd\"><p><strong>path</strong> (<a class=\"reference external\" href=\"https://docs.python.org/3/library/stdtypes.html#str\" title=\"(in Python v3.8)\"><em>str</em></a>) \u2013 The path for a metadata entry.</p>\n</dd>\n</dl>\n</dd></dl>\n\n<dl class=\"py method\">\n<dt id=\"dagster.MetadataValue.python_artifact\">\n<em class=\"property\"><span class=\"pre\">static</span> </em><code class=\"sig-name descname\"><span class=\"pre\">python_artifact</span></code><span class=\"sig-paren\">(</span><em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">python_artifact</span></span></em><span class=\"sig-paren\">)</span><a class=\"reference internal\" href=\"../../../../_modules/dagster/core/definitions/metadata#MetadataValue.python_artifact\"><span class=\"viewcode-link\"><span class=\"pre\">[source]</span></span></a><a class=\"headerlink\" href=\"#dagster.MetadataValue.python_artifact\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Static constructor for a metadata value wrapping a python artifact as\n<a class=\"reference internal\" href=\"#dagster.PythonArtifactMetadataValue\" title=\"dagster.PythonArtifactMetadataValue\"><code class=\"xref py py-class docutils literal notranslate\"><span class=\"pre\">PythonArtifactMetadataValue</span></code></a>. Can be used as the value type for the\n<cite>metadata</cite> parameter for supported events. For example:</p>\n<div class=\"highlight-python notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"nd\">@op</span>\n<span class=\"k\">def</span> <span class=\"nf\">emit_metadata</span><span class=\"p\">(</span><span class=\"n\">context</span><span class=\"p\">,</span> <span class=\"n\">df</span><span class=\"p\">):</span>\n    <span class=\"k\">yield</span> <span class=\"n\">AssetMaterialization</span><span class=\"p\">(</span>\n        <span class=\"n\">asset_key</span><span class=\"o\">=</span><span class=\"s2\">&quot;my_dataset&quot;</span><span class=\"p\">,</span>\n        <span class=\"n\">metadata</span><span class=\"o\">=</span><span class=\"p\">{</span>\n            <span class=\"s2\">&quot;class&quot;</span><span class=\"p\">:</span> <span class=\"n\">MetadataValue</span><span class=\"o\">.</span><span class=\"n\">python_artifact</span><span class=\"p\">(</span><span class=\"n\">MyClass</span><span class=\"p\">),</span>\n            <span class=\"s2\">&quot;function&quot;</span><span class=\"p\">:</span> <span class=\"n\">MetadataValue</span><span class=\"o\">.</span><span class=\"n\">python_artifact</span><span class=\"p\">(</span><span class=\"n\">my_function</span><span class=\"p\">),</span>\n        <span class=\"p\">}</span>\n    <span class=\"p\">)</span>\n</pre></div>\n</div>\n<dl class=\"field-list simple\">\n<dt class=\"field-odd\">Parameters</dt>\n<dd class=\"field-odd\"><p><strong>value</strong> (<em>Callable</em>) \u2013 The python class or function for a metadata entry.</p>\n</dd>\n</dl>\n</dd></dl>\n\n<dl class=\"py method\">\n<dt id=\"dagster.MetadataValue.table\">\n<em class=\"property\"><span class=\"pre\">static</span> </em><code class=\"sig-name descname\"><span class=\"pre\">table</span></code><span class=\"sig-paren\">(</span><em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">records</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">schema</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">None</span></span></em><span class=\"sig-paren\">)</span><a class=\"reference internal\" href=\"../../../../_modules/dagster/core/definitions/metadata#MetadataValue.table\"><span class=\"viewcode-link\"><span class=\"pre\">[source]</span></span></a><a class=\"headerlink\" href=\"#dagster.MetadataValue.table\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Static constructor for a metadata value wrapping arbitrary tabular data as\n<a class=\"reference internal\" href=\"#dagster.TableMetadataValue\" title=\"dagster.TableMetadataValue\"><code class=\"xref py py-class docutils literal notranslate\"><span class=\"pre\">TableMetadataValue</span></code></a>. Can be used as the value type for the <cite>metadata</cite>\nparameter for supported events. For example:</p>\n<div class=\"highlight-python notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"nd\">@op</span>\n<span class=\"k\">def</span> <span class=\"nf\">emit_metadata</span><span class=\"p\">(</span><span class=\"n\">context</span><span class=\"p\">):</span>\n    <span class=\"k\">yield</span> <span class=\"n\">ExpectationResult</span><span class=\"p\">(</span>\n        <span class=\"n\">success</span><span class=\"o\">=</span><span class=\"ow\">not</span> <span class=\"n\">has_errors</span><span class=\"p\">,</span>\n        <span class=\"n\">label</span><span class=\"o\">=</span><span class=\"s2\">&quot;is_valid&quot;</span><span class=\"p\">,</span>\n        <span class=\"n\">metadata</span><span class=\"o\">=</span><span class=\"p\">{</span>\n            <span class=\"s2\">&quot;errors&quot;</span><span class=\"p\">:</span> <span class=\"n\">MetadataValue</span><span class=\"o\">.</span><span class=\"n\">table</span><span class=\"p\">(</span>\n                <span class=\"n\">records</span><span class=\"o\">=</span><span class=\"p\">[</span>\n                    <span class=\"n\">TableRecord</span><span class=\"p\">(</span><span class=\"n\">code</span><span class=\"o\">=</span><span class=\"s2\">&quot;invalid-data-type&quot;</span><span class=\"p\">,</span> <span class=\"n\">row</span><span class=\"o\">=</span><span class=\"mi\">2</span><span class=\"p\">,</span> <span class=\"n\">col</span><span class=\"o\">=</span><span class=\"s2\">&quot;name&quot;</span><span class=\"p\">}]</span>\n                <span class=\"p\">],</span>\n                <span class=\"n\">schema</span><span class=\"o\">=</span><span class=\"n\">TableSchema</span><span class=\"p\">(</span>\n                    <span class=\"n\">columns</span><span class=\"o\">=</span><span class=\"p\">[</span>\n                        <span class=\"n\">TableColumn</span><span class=\"p\">(</span><span class=\"n\">name</span><span class=\"o\">=</span><span class=\"s2\">&quot;code&quot;</span><span class=\"p\">,</span> <span class=\"nb\">type</span><span class=\"o\">=</span><span class=\"s2\">&quot;string&quot;</span><span class=\"p\">),</span>\n                        <span class=\"n\">TableColumn</span><span class=\"p\">(</span><span class=\"n\">name</span><span class=\"o\">=</span><span class=\"s2\">&quot;row&quot;</span><span class=\"p\">,</span> <span class=\"nb\">type</span><span class=\"o\">=</span><span class=\"s2\">&quot;int&quot;</span><span class=\"p\">),</span>\n                        <span class=\"n\">TableColumn</span><span class=\"p\">(</span><span class=\"n\">name</span><span class=\"o\">=</span><span class=\"s2\">&quot;col&quot;</span><span class=\"p\">,</span> <span class=\"nb\">type</span><span class=\"o\">=</span><span class=\"s2\">&quot;string&quot;</span><span class=\"p\">),</span>\n                    <span class=\"p\">]</span>\n                <span class=\"p\">)</span>\n            <span class=\"p\">),</span>\n        <span class=\"p\">},</span>\n    <span class=\"p\">)</span>\n</pre></div>\n</div>\n<dl class=\"field-list simple\">\n<dt class=\"field-odd\">Parameters</dt>\n<dd class=\"field-odd\"><ul class=\"simple\">\n<li><p><strong>records</strong> (<em>List</em><em>[</em><a class=\"reference internal\" href=\"#dagster.TableRecord\" title=\"dagster.TableRecord\"><em>TableRecord</em></a><em>]</em>) \u2013 The data as a list of records (i.e. rows).</p></li>\n<li><p><strong>schema</strong> (<em>Optional</em><em>[</em><a class=\"reference internal\" href=\"#dagster.TableSchema\" title=\"dagster.TableSchema\"><em>TableSchema</em></a><em>]</em>) \u2013 A schema for the table.</p></li>\n</ul>\n</dd>\n</dl>\n</dd></dl>\n\n<dl class=\"py method\">\n<dt id=\"dagster.MetadataValue.table_schema\">\n<em class=\"property\"><span class=\"pre\">static</span> </em><code class=\"sig-name descname\"><span class=\"pre\">table_schema</span></code><span class=\"sig-paren\">(</span><em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">schema</span></span></em><span class=\"sig-paren\">)</span><a class=\"reference internal\" href=\"../../../../_modules/dagster/core/definitions/metadata#MetadataValue.table_schema\"><span class=\"viewcode-link\"><span class=\"pre\">[source]</span></span></a><a class=\"headerlink\" href=\"#dagster.MetadataValue.table_schema\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Static constructor for a metadata value wrapping a table schema as\n<a class=\"reference internal\" href=\"#dagster.TableSchemaMetadataValue\" title=\"dagster.TableSchemaMetadataValue\"><code class=\"xref py py-class docutils literal notranslate\"><span class=\"pre\">TableSchemaMetadataValue</span></code></a>. Can be used as the value type\nfor the <cite>metadata</cite> parameter for supported events. For example:</p>\n<div class=\"highlight-python notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"n\">schema</span> <span class=\"o\">=</span> <span class=\"n\">TableSchema</span><span class=\"p\">(</span>\n    <span class=\"n\">columns</span> <span class=\"o\">=</span> <span class=\"p\">[</span>\n        <span class=\"n\">TableColumn</span><span class=\"p\">(</span><span class=\"n\">name</span><span class=\"o\">=</span><span class=\"s2\">&quot;id&quot;</span><span class=\"p\">,</span> <span class=\"nb\">type</span><span class=\"o\">=</span><span class=\"s2\">&quot;int&quot;</span><span class=\"p\">),</span>\n        <span class=\"n\">TableColumn</span><span class=\"p\">(</span><span class=\"n\">name</span><span class=\"o\">=</span><span class=\"s2\">&quot;status&quot;</span><span class=\"p\">,</span> <span class=\"nb\">type</span><span class=\"o\">=</span><span class=\"s2\">&quot;bool&quot;</span><span class=\"p\">),</span>\n    <span class=\"p\">]</span>\n<span class=\"p\">)</span>\n\n<span class=\"n\">DagsterType</span><span class=\"p\">(</span>\n    <span class=\"n\">type_check_fn</span><span class=\"o\">=</span><span class=\"n\">some_validation_fn</span><span class=\"p\">,</span>\n    <span class=\"n\">name</span><span class=\"o\">=</span><span class=\"s1\">&#39;MyTable&#39;</span><span class=\"p\">,</span>\n    <span class=\"n\">metadata</span><span class=\"o\">=</span><span class=\"p\">{</span>\n        <span class=\"s1\">&#39;my_table_schema&#39;</span><span class=\"p\">:</span> <span class=\"n\">MetadataValue</span><span class=\"o\">.</span><span class=\"n\">table_schema</span><span class=\"p\">(</span><span class=\"n\">schema</span><span class=\"p\">),</span>\n    <span class=\"p\">}</span>\n<span class=\"p\">)</span>\n</pre></div>\n</div>\n<dl class=\"field-list simple\">\n<dt class=\"field-odd\">Parameters</dt>\n<dd class=\"field-odd\"><p><strong>schema</strong> (<a class=\"reference internal\" href=\"#dagster.TableSchema\" title=\"dagster.TableSchema\"><em>TableSchema</em></a>) \u2013 The table schema for a metadata entry.</p>\n</dd>\n</dl>\n</dd></dl>\n\n<dl class=\"py method\">\n<dt id=\"dagster.MetadataValue.text\">\n<em class=\"property\"><span class=\"pre\">static</span> </em><code class=\"sig-name descname\"><span class=\"pre\">text</span></code><span class=\"sig-paren\">(</span><em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">text</span></span></em><span class=\"sig-paren\">)</span><a class=\"reference internal\" href=\"../../../../_modules/dagster/core/definitions/metadata#MetadataValue.text\"><span class=\"viewcode-link\"><span class=\"pre\">[source]</span></span></a><a class=\"headerlink\" href=\"#dagster.MetadataValue.text\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Static constructor for a metadata value wrapping text as\n<a class=\"reference internal\" href=\"#dagster.TextMetadataValue\" title=\"dagster.TextMetadataValue\"><code class=\"xref py py-class docutils literal notranslate\"><span class=\"pre\">TextMetadataValue</span></code></a>. Can be used as the value type for the <cite>metadata</cite>\nparameter for supported events. For example:</p>\n<div class=\"highlight-python notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"nd\">@op</span>\n<span class=\"k\">def</span> <span class=\"nf\">emit_metadata</span><span class=\"p\">(</span><span class=\"n\">context</span><span class=\"p\">,</span> <span class=\"n\">df</span><span class=\"p\">):</span>\n    <span class=\"k\">yield</span> <span class=\"n\">AssetMaterialization</span><span class=\"p\">(</span>\n        <span class=\"n\">asset_key</span><span class=\"o\">=</span><span class=\"s2\">&quot;my_dataset&quot;</span><span class=\"p\">,</span>\n        <span class=\"n\">metadata</span><span class=\"o\">=</span><span class=\"p\">{</span>\n            <span class=\"s2\">&quot;my_text_label&quot;</span><span class=\"p\">:</span> <span class=\"n\">MetadataValue</span><span class=\"o\">.</span><span class=\"n\">text</span><span class=\"p\">(</span><span class=\"s2\">&quot;hello&quot;</span><span class=\"p\">)</span>\n        <span class=\"p\">},</span>\n    <span class=\"p\">)</span>\n</pre></div>\n</div>\n<dl class=\"field-list simple\">\n<dt class=\"field-odd\">Parameters</dt>\n<dd class=\"field-odd\"><p><strong>text</strong> (<a class=\"reference external\" href=\"https://docs.python.org/3/library/stdtypes.html#str\" title=\"(in Python v3.8)\"><em>str</em></a>) \u2013 The text string for a metadata entry.</p>\n</dd>\n</dl>\n</dd></dl>\n\n<dl class=\"py method\">\n<dt id=\"dagster.MetadataValue.url\">\n<em class=\"property\"><span class=\"pre\">static</span> </em><code class=\"sig-name descname\"><span class=\"pre\">url</span></code><span class=\"sig-paren\">(</span><em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">url</span></span></em><span class=\"sig-paren\">)</span><a class=\"reference internal\" href=\"../../../../_modules/dagster/core/definitions/metadata#MetadataValue.url\"><span class=\"viewcode-link\"><span class=\"pre\">[source]</span></span></a><a class=\"headerlink\" href=\"#dagster.MetadataValue.url\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Static constructor for a metadata value wrapping a URL as\n<a class=\"reference internal\" href=\"#dagster.UrlMetadataValue\" title=\"dagster.UrlMetadataValue\"><code class=\"xref py py-class docutils literal notranslate\"><span class=\"pre\">UrlMetadataValue</span></code></a>. Can be used as the value type for the <cite>metadata</cite>\nparameter for supported events. For example:</p>\n<div class=\"highlight-python notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"nd\">@op</span>\n<span class=\"k\">def</span> <span class=\"nf\">emit_metadata</span><span class=\"p\">(</span><span class=\"n\">context</span><span class=\"p\">):</span>\n    <span class=\"k\">yield</span> <span class=\"n\">AssetMaterialization</span><span class=\"p\">(</span>\n        <span class=\"n\">asset_key</span><span class=\"o\">=</span><span class=\"s2\">&quot;my_dashboard&quot;</span><span class=\"p\">,</span>\n        <span class=\"n\">metadata</span><span class=\"o\">=</span><span class=\"p\">{</span>\n            <span class=\"s2\">&quot;dashboard_url&quot;</span><span class=\"p\">:</span> <span class=\"n\">MetadataValue</span><span class=\"o\">.</span><span class=\"n\">url</span><span class=\"p\">(</span><span class=\"s2\">&quot;http://mycoolsite.com/my_dashboard&quot;</span><span class=\"p\">),</span>\n        <span class=\"p\">}</span>\n    <span class=\"p\">)</span>\n</pre></div>\n</div>\n<dl class=\"field-list simple\">\n<dt class=\"field-odd\">Parameters</dt>\n<dd class=\"field-odd\"><p><strong>url</strong> (<a class=\"reference external\" href=\"https://docs.python.org/3/library/stdtypes.html#str\" title=\"(in Python v3.8)\"><em>str</em></a>) \u2013 The URL for a metadata entry.</p>\n</dd>\n</dl>\n</dd></dl>\n\n</dd></dl>\n\n<dl class=\"py class\">\n<dt id=\"dagster.MetadataEntry\">\n<em class=\"property\"><span class=\"pre\">class</span> </em><code class=\"sig-prename descclassname\"><span class=\"pre\">dagster.</span></code><code class=\"sig-name descname\"><span class=\"pre\">MetadataEntry</span></code><span class=\"sig-paren\">(</span><em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">label</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">description</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">None</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">entry_data</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">None</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">value</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">None</span></span></em><span class=\"sig-paren\">)</span><a class=\"reference internal\" href=\"../../../../_modules/dagster/core/definitions/metadata#MetadataEntry\"><span class=\"viewcode-link\"><span class=\"pre\">[source]</span></span></a><a class=\"headerlink\" href=\"#dagster.MetadataEntry\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>The standard structure for describing metadata for Dagster events.</p>\n<p>Lists of objects of this type can be passed as arguments to Dagster events and will be displayed\nin Dagit and other tooling.</p>\n<p>Should be yielded from within an IO manager to append metadata for a given input/output event.\nFor other event types, passing a dict with <cite>MetadataValue</cite> values to the <cite>metadata</cite> argument\nis preferred.</p>\n<dl class=\"field-list simple\">\n<dt class=\"field-odd\">Parameters</dt>\n<dd class=\"field-odd\"><ul class=\"simple\">\n<li><p><strong>label</strong> (<a class=\"reference external\" href=\"https://docs.python.org/3/library/stdtypes.html#str\" title=\"(in Python v3.8)\"><em>str</em></a>) \u2013 Short display label for this metadata entry.</p></li>\n<li><p><strong>description</strong> (<em>Optional</em><em>[</em><a class=\"reference external\" href=\"https://docs.python.org/3/library/stdtypes.html#str\" title=\"(in Python v3.8)\"><em>str</em></a><em>]</em>) \u2013 A human-readable description of this metadata entry.</p></li>\n<li><p><strong>value</strong> (<a class=\"reference internal\" href=\"#dagster.MetadataValue\" title=\"dagster.MetadataValue\"><em>MetadataValue</em></a>) \u2013 Typed metadata entry data. The different types allow\nfor customized display in tools like dagit.</p></li>\n</ul>\n</dd>\n</dl>\n<dl class=\"py method\">\n<dt id=\"dagster.MetadataEntry.asset\">\n<em class=\"property\"><span class=\"pre\">static</span> </em><code class=\"sig-name descname\"><span class=\"pre\">asset</span></code><span class=\"sig-paren\">(</span><em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">asset_key</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">label</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">description</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">None</span></span></em><span class=\"sig-paren\">)</span><a class=\"reference internal\" href=\"../../../../_modules/dagster/core/definitions/metadata#MetadataEntry.asset\"><span class=\"viewcode-link\"><span class=\"pre\">[source]</span></span></a><a class=\"headerlink\" href=\"#dagster.MetadataEntry.asset\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Static constructor for a metadata entry referencing a Dagster asset, by key.</p>\n<p>For example:</p>\n<div class=\"highlight-python notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"nd\">@op</span>\n<span class=\"k\">def</span> <span class=\"nf\">validate_table</span><span class=\"p\">(</span><span class=\"n\">context</span><span class=\"p\">,</span> <span class=\"n\">df</span><span class=\"p\">):</span>\n    <span class=\"k\">yield</span> <span class=\"n\">AssetMaterialization</span><span class=\"p\">(</span>\n        <span class=\"n\">asset_key</span><span class=\"o\">=</span><span class=\"n\">AssetKey</span><span class=\"p\">(</span><span class=\"s2\">&quot;my_table&quot;</span><span class=\"p\">),</span>\n        <span class=\"n\">metadata_entries</span><span class=\"o\">=</span><span class=\"p\">[</span>\n             <span class=\"n\">MetadataEntry</span><span class=\"o\">.</span><span class=\"n\">asset</span><span class=\"p\">(</span><span class=\"n\">AssetKey</span><span class=\"p\">(</span><span class=\"s1\">&#39;my_other_table&#39;</span><span class=\"p\">),</span> <span class=\"s2\">&quot;Related asset&quot;</span><span class=\"p\">),</span>\n        <span class=\"p\">],</span>\n    <span class=\"p\">)</span>\n</pre></div>\n</div>\n<dl class=\"field-list simple\">\n<dt class=\"field-odd\">Parameters</dt>\n<dd class=\"field-odd\"><ul class=\"simple\">\n<li><p><strong>asset_key</strong> (<a class=\"reference internal\" href=\"#dagster.AssetKey\" title=\"dagster.AssetKey\"><em>AssetKey</em></a>) \u2013 The asset key referencing the asset.</p></li>\n<li><p><strong>label</strong> (<a class=\"reference external\" href=\"https://docs.python.org/3/library/stdtypes.html#str\" title=\"(in Python v3.8)\"><em>str</em></a>) \u2013 Short display label for this metadata entry.</p></li>\n<li><p><strong>description</strong> (<em>Optional</em><em>[</em><a class=\"reference external\" href=\"https://docs.python.org/3/library/stdtypes.html#str\" title=\"(in Python v3.8)\"><em>str</em></a><em>]</em>) \u2013 A human-readable description of this metadata entry.</p></li>\n</ul>\n</dd>\n</dl>\n</dd></dl>\n\n<dl class=\"py method\">\n<dt id=\"dagster.MetadataEntry.float\">\n<em class=\"property\"><span class=\"pre\">static</span> </em><code class=\"sig-name descname\"><span class=\"pre\">float</span></code><span class=\"sig-paren\">(</span><em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">value</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">label</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">description</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">None</span></span></em><span class=\"sig-paren\">)</span><a class=\"reference internal\" href=\"../../../../_modules/dagster/core/definitions/metadata#MetadataEntry.float\"><span class=\"viewcode-link\"><span class=\"pre\">[source]</span></span></a><a class=\"headerlink\" href=\"#dagster.MetadataEntry.float\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Static constructor for a metadata entry containing float as\n<a class=\"reference internal\" href=\"#dagster.FloatMetadataValue\" title=\"dagster.FloatMetadataValue\"><code class=\"xref py py-class docutils literal notranslate\"><span class=\"pre\">FloatMetadataValue</span></code></a>. For example:</p>\n<div class=\"highlight-python notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"nd\">@op</span>\n<span class=\"k\">def</span> <span class=\"nf\">emit_metadata</span><span class=\"p\">(</span><span class=\"n\">context</span><span class=\"p\">,</span> <span class=\"n\">df</span><span class=\"p\">):</span>\n    <span class=\"k\">yield</span> <span class=\"n\">AssetMaterialization</span><span class=\"p\">(</span>\n        <span class=\"n\">asset_key</span><span class=\"o\">=</span><span class=\"s2\">&quot;my_dataset&quot;</span><span class=\"p\">,</span>\n        <span class=\"n\">metadata_entries</span><span class=\"o\">=</span><span class=\"p\">[</span><span class=\"n\">MetadataEntry</span><span class=\"o\">.</span><span class=\"n\">float</span><span class=\"p\">(</span><span class=\"n\">calculate_bytes</span><span class=\"p\">(</span><span class=\"n\">df</span><span class=\"p\">),</span> <span class=\"s2\">&quot;size (bytes)&quot;</span><span class=\"p\">)],</span>\n    <span class=\"p\">)</span>\n</pre></div>\n</div>\n<dl class=\"field-list simple\">\n<dt class=\"field-odd\">Parameters</dt>\n<dd class=\"field-odd\"><ul class=\"simple\">\n<li><p><strong>value</strong> (<em>Optional</em><em>[</em><a class=\"reference external\" href=\"https://docs.python.org/3/library/functions.html#float\" title=\"(in Python v3.8)\"><em>float</em></a><em>]</em>) \u2013 The float value contained by this metadata entry.</p></li>\n<li><p><strong>label</strong> (<a class=\"reference external\" href=\"https://docs.python.org/3/library/stdtypes.html#str\" title=\"(in Python v3.8)\"><em>str</em></a>) \u2013 Short display label for this metadata entry.</p></li>\n<li><p><strong>description</strong> (<em>Optional</em><em>[</em><a class=\"reference external\" href=\"https://docs.python.org/3/library/stdtypes.html#str\" title=\"(in Python v3.8)\"><em>str</em></a><em>]</em>) \u2013 A human-readable description of this metadata entry.</p></li>\n</ul>\n</dd>\n</dl>\n</dd></dl>\n\n<dl class=\"py method\">\n<dt id=\"dagster.MetadataEntry.fspath\">\n<em class=\"property\"><span class=\"pre\">static</span> </em><code class=\"sig-name descname\"><span class=\"pre\">fspath</span></code><span class=\"sig-paren\">(</span><em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">path</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">label</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">None</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">description</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">None</span></span></em><span class=\"sig-paren\">)</span><a class=\"reference internal\" href=\"../../../../_modules/dagster/core/definitions/metadata#MetadataEntry.fspath\"><span class=\"viewcode-link\"><span class=\"pre\">[source]</span></span></a><a class=\"headerlink\" href=\"#dagster.MetadataEntry.fspath\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Static constructor for a metadata entry containing a filesystem path as\n<a class=\"reference internal\" href=\"#dagster.PathMetadataValue\" title=\"dagster.PathMetadataValue\"><code class=\"xref py py-class docutils literal notranslate\"><span class=\"pre\">PathMetadataValue</span></code></a>. For example:</p>\n<div class=\"highlight-python notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"nd\">@op</span>\n<span class=\"k\">def</span> <span class=\"nf\">emit_metadata</span><span class=\"p\">(</span><span class=\"n\">context</span><span class=\"p\">):</span>\n    <span class=\"k\">yield</span> <span class=\"n\">AssetMaterialization</span><span class=\"p\">(</span>\n        <span class=\"n\">asset_key</span><span class=\"o\">=</span><span class=\"s2\">&quot;my_dataset&quot;</span><span class=\"p\">,</span>\n        <span class=\"n\">metadata_entries</span><span class=\"o\">=</span><span class=\"p\">[</span><span class=\"n\">MetadataEntry</span><span class=\"o\">.</span><span class=\"n\">fspath</span><span class=\"p\">(</span><span class=\"s2\">&quot;path/to/file&quot;</span><span class=\"p\">)],</span>\n    <span class=\"p\">)</span>\n</pre></div>\n</div>\n<dl class=\"field-list simple\">\n<dt class=\"field-odd\">Parameters</dt>\n<dd class=\"field-odd\"><ul class=\"simple\">\n<li><p><strong>path</strong> (<em>Optional</em><em>[</em><a class=\"reference external\" href=\"https://docs.python.org/3/library/stdtypes.html#str\" title=\"(in Python v3.8)\"><em>str</em></a><em>]</em>) \u2013 The path contained by this metadata entry.</p></li>\n<li><p><strong>label</strong> (<em>Optional</em><em>[</em><a class=\"reference external\" href=\"https://docs.python.org/3/library/stdtypes.html#str\" title=\"(in Python v3.8)\"><em>str</em></a><em>]</em>) \u2013 Short display label for this metadata entry. Defaults to the\nbase name of the path.</p></li>\n<li><p><strong>description</strong> (<em>Optional</em><em>[</em><a class=\"reference external\" href=\"https://docs.python.org/3/library/stdtypes.html#str\" title=\"(in Python v3.8)\"><em>str</em></a><em>]</em>) \u2013 A human-readable description of this metadata entry.</p></li>\n</ul>\n</dd>\n</dl>\n</dd></dl>\n\n<dl class=\"py method\">\n<dt id=\"dagster.MetadataEntry.int\">\n<em class=\"property\"><span class=\"pre\">static</span> </em><code class=\"sig-name descname\"><span class=\"pre\">int</span></code><span class=\"sig-paren\">(</span><em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">value</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">label</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">description</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">None</span></span></em><span class=\"sig-paren\">)</span><a class=\"reference internal\" href=\"../../../../_modules/dagster/core/definitions/metadata#MetadataEntry.int\"><span class=\"viewcode-link\"><span class=\"pre\">[source]</span></span></a><a class=\"headerlink\" href=\"#dagster.MetadataEntry.int\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Static constructor for a metadata entry containing int as\n<a class=\"reference internal\" href=\"#dagster.IntMetadataValue\" title=\"dagster.IntMetadataValue\"><code class=\"xref py py-class docutils literal notranslate\"><span class=\"pre\">IntMetadataValue</span></code></a>. For example:</p>\n<div class=\"highlight-python notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"nd\">@op</span>\n<span class=\"k\">def</span> <span class=\"nf\">emit_metadata</span><span class=\"p\">(</span><span class=\"n\">context</span><span class=\"p\">,</span> <span class=\"n\">df</span><span class=\"p\">):</span>\n    <span class=\"k\">yield</span> <span class=\"n\">AssetMaterialization</span><span class=\"p\">(</span>\n        <span class=\"n\">asset_key</span><span class=\"o\">=</span><span class=\"s2\">&quot;my_dataset&quot;</span><span class=\"p\">,</span>\n        <span class=\"n\">metadata_entries</span><span class=\"o\">=</span><span class=\"p\">[</span><span class=\"n\">MetadataEntry</span><span class=\"o\">.</span><span class=\"n\">int</span><span class=\"p\">(</span><span class=\"nb\">len</span><span class=\"p\">(</span><span class=\"n\">df</span><span class=\"p\">),</span> <span class=\"s2\">&quot;number of rows&quot;</span><span class=\"p\">)],</span>\n    <span class=\"p\">)</span>\n</pre></div>\n</div>\n<dl class=\"field-list simple\">\n<dt class=\"field-odd\">Parameters</dt>\n<dd class=\"field-odd\"><ul class=\"simple\">\n<li><p><strong>value</strong> (<em>Optional</em><em>[</em><a class=\"reference external\" href=\"https://docs.python.org/3/library/functions.html#int\" title=\"(in Python v3.8)\"><em>int</em></a><em>]</em>) \u2013 The int value contained by this metadata entry.</p></li>\n<li><p><strong>label</strong> (<a class=\"reference external\" href=\"https://docs.python.org/3/library/stdtypes.html#str\" title=\"(in Python v3.8)\"><em>str</em></a>) \u2013 Short display label for this metadata entry.</p></li>\n<li><p><strong>description</strong> (<em>Optional</em><em>[</em><a class=\"reference external\" href=\"https://docs.python.org/3/library/stdtypes.html#str\" title=\"(in Python v3.8)\"><em>str</em></a><em>]</em>) \u2013 A human-readable description of this metadata entry.</p></li>\n</ul>\n</dd>\n</dl>\n</dd></dl>\n\n<dl class=\"py method\">\n<dt id=\"dagster.MetadataEntry.json\">\n<em class=\"property\"><span class=\"pre\">static</span> </em><code class=\"sig-name descname\"><span class=\"pre\">json</span></code><span class=\"sig-paren\">(</span><em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">data</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">label</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">description</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">None</span></span></em><span class=\"sig-paren\">)</span><a class=\"reference internal\" href=\"../../../../_modules/dagster/core/definitions/metadata#MetadataEntry.json\"><span class=\"viewcode-link\"><span class=\"pre\">[source]</span></span></a><a class=\"headerlink\" href=\"#dagster.MetadataEntry.json\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Static constructor for a metadata entry containing JSON data as\n<a class=\"reference internal\" href=\"#dagster.JsonMetadataValue\" title=\"dagster.JsonMetadataValue\"><code class=\"xref py py-class docutils literal notranslate\"><span class=\"pre\">JsonMetadataValue</span></code></a>. For example:</p>\n<div class=\"highlight-python notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"nd\">@op</span>\n<span class=\"k\">def</span> <span class=\"nf\">emit_metadata</span><span class=\"p\">(</span><span class=\"n\">context</span><span class=\"p\">):</span>\n    <span class=\"k\">yield</span> <span class=\"n\">ExpectationResult</span><span class=\"p\">(</span>\n        <span class=\"n\">success</span><span class=\"o\">=</span><span class=\"ow\">not</span> <span class=\"n\">missing_things</span><span class=\"p\">,</span>\n        <span class=\"n\">label</span><span class=\"o\">=</span><span class=\"s2\">&quot;is_present&quot;</span><span class=\"p\">,</span>\n        <span class=\"n\">metadata_entries</span><span class=\"o\">=</span><span class=\"p\">[</span>\n            <span class=\"n\">MetadataEntry</span><span class=\"o\">.</span><span class=\"n\">json</span><span class=\"p\">(</span>\n                <span class=\"n\">label</span><span class=\"o\">=</span><span class=\"s2\">&quot;metadata&quot;</span><span class=\"p\">,</span> <span class=\"n\">data</span><span class=\"o\">=</span><span class=\"p\">{</span><span class=\"s2\">&quot;missing_columns&quot;</span><span class=\"p\">:</span> <span class=\"n\">missing_things</span><span class=\"p\">},</span>\n            <span class=\"p\">)</span>\n        <span class=\"p\">],</span>\n    <span class=\"p\">)</span>\n</pre></div>\n</div>\n<dl class=\"field-list simple\">\n<dt class=\"field-odd\">Parameters</dt>\n<dd class=\"field-odd\"><ul class=\"simple\">\n<li><p><strong>data</strong> (<em>Optional</em><em>[</em><em>Dict</em><em>[</em><a class=\"reference external\" href=\"https://docs.python.org/3/library/stdtypes.html#str\" title=\"(in Python v3.8)\"><em>str</em></a><em>, </em><em>Any</em><em>]</em><em>]</em>) \u2013 The JSON data contained by this metadata entry.</p></li>\n<li><p><strong>label</strong> (<a class=\"reference external\" href=\"https://docs.python.org/3/library/stdtypes.html#str\" title=\"(in Python v3.8)\"><em>str</em></a>) \u2013 Short display label for this metadata entry.</p></li>\n<li><p><strong>description</strong> (<em>Optional</em><em>[</em><a class=\"reference external\" href=\"https://docs.python.org/3/library/stdtypes.html#str\" title=\"(in Python v3.8)\"><em>str</em></a><em>]</em>) \u2013 A human-readable description of this metadata entry.</p></li>\n</ul>\n</dd>\n</dl>\n</dd></dl>\n\n<dl class=\"py method\">\n<dt id=\"dagster.MetadataEntry.md\">\n<em class=\"property\"><span class=\"pre\">static</span> </em><code class=\"sig-name descname\"><span class=\"pre\">md</span></code><span class=\"sig-paren\">(</span><em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">md_str</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">label</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">description</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">None</span></span></em><span class=\"sig-paren\">)</span><a class=\"reference internal\" href=\"../../../../_modules/dagster/core/definitions/metadata#MetadataEntry.md\"><span class=\"viewcode-link\"><span class=\"pre\">[source]</span></span></a><a class=\"headerlink\" href=\"#dagster.MetadataEntry.md\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Static constructor for a metadata entry containing markdown data as\n<a class=\"reference internal\" href=\"#dagster.MarkdownMetadataValue\" title=\"dagster.MarkdownMetadataValue\"><code class=\"xref py py-class docutils literal notranslate\"><span class=\"pre\">MarkdownMetadataValue</span></code></a>. For example:</p>\n<div class=\"highlight-python notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"nd\">@op</span>\n<span class=\"k\">def</span> <span class=\"nf\">emit_metadata</span><span class=\"p\">(</span><span class=\"n\">context</span><span class=\"p\">,</span> <span class=\"n\">md_str</span><span class=\"p\">):</span>\n    <span class=\"k\">yield</span> <span class=\"n\">AssetMaterialization</span><span class=\"p\">(</span>\n        <span class=\"n\">asset_key</span><span class=\"o\">=</span><span class=\"s2\">&quot;info&quot;</span><span class=\"p\">,</span>\n        <span class=\"n\">metadata_entries</span><span class=\"o\">=</span><span class=\"p\">[</span><span class=\"n\">MetadataEntry</span><span class=\"o\">.</span><span class=\"n\">md</span><span class=\"p\">(</span><span class=\"n\">md_str</span><span class=\"o\">=</span><span class=\"n\">md_str</span><span class=\"p\">)],</span>\n    <span class=\"p\">)</span>\n</pre></div>\n</div>\n<dl class=\"field-list simple\">\n<dt class=\"field-odd\">Parameters</dt>\n<dd class=\"field-odd\"><ul class=\"simple\">\n<li><p><strong>md_str</strong> (<em>Optional</em><em>[</em><a class=\"reference external\" href=\"https://docs.python.org/3/library/stdtypes.html#str\" title=\"(in Python v3.8)\"><em>str</em></a><em>]</em>) \u2013 The markdown contained by this metadata entry.</p></li>\n<li><p><strong>label</strong> (<a class=\"reference external\" href=\"https://docs.python.org/3/library/stdtypes.html#str\" title=\"(in Python v3.8)\"><em>str</em></a>) \u2013 Short display label for this metadata entry.</p></li>\n<li><p><strong>description</strong> (<em>Optional</em><em>[</em><a class=\"reference external\" href=\"https://docs.python.org/3/library/stdtypes.html#str\" title=\"(in Python v3.8)\"><em>str</em></a><em>]</em>) \u2013 A human-readable description of this metadata entry.</p></li>\n</ul>\n</dd>\n</dl>\n</dd></dl>\n\n<dl class=\"py method\">\n<dt id=\"dagster.MetadataEntry.path\">\n<em class=\"property\"><span class=\"pre\">static</span> </em><code class=\"sig-name descname\"><span class=\"pre\">path</span></code><span class=\"sig-paren\">(</span><em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">path</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">label</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">description</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">None</span></span></em><span class=\"sig-paren\">)</span><a class=\"reference internal\" href=\"../../../../_modules/dagster/core/definitions/metadata#MetadataEntry.path\"><span class=\"viewcode-link\"><span class=\"pre\">[source]</span></span></a><a class=\"headerlink\" href=\"#dagster.MetadataEntry.path\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Static constructor for a metadata entry containing a path as\n<a class=\"reference internal\" href=\"#dagster.PathMetadataValue\" title=\"dagster.PathMetadataValue\"><code class=\"xref py py-class docutils literal notranslate\"><span class=\"pre\">PathMetadataValue</span></code></a>. For example:</p>\n<div class=\"highlight-python notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"nd\">@op</span>\n<span class=\"k\">def</span> <span class=\"nf\">emit_metadata</span><span class=\"p\">(</span><span class=\"n\">context</span><span class=\"p\">):</span>\n    <span class=\"k\">yield</span> <span class=\"n\">AssetMaterialization</span><span class=\"p\">(</span>\n        <span class=\"n\">asset_key</span><span class=\"o\">=</span><span class=\"s2\">&quot;my_dataset&quot;</span><span class=\"p\">,</span>\n        <span class=\"n\">metadata_entries</span><span class=\"o\">=</span><span class=\"p\">[</span><span class=\"n\">MetadataEntry</span><span class=\"o\">.</span><span class=\"n\">path</span><span class=\"p\">(</span><span class=\"s2\">&quot;path/to/file&quot;</span><span class=\"p\">,</span> <span class=\"n\">label</span><span class=\"o\">=</span><span class=\"s2\">&quot;filepath&quot;</span><span class=\"p\">)],</span>\n    <span class=\"p\">)</span>\n</pre></div>\n</div>\n<dl class=\"field-list simple\">\n<dt class=\"field-odd\">Parameters</dt>\n<dd class=\"field-odd\"><ul class=\"simple\">\n<li><p><strong>path</strong> (<em>Optional</em><em>[</em><a class=\"reference external\" href=\"https://docs.python.org/3/library/stdtypes.html#str\" title=\"(in Python v3.8)\"><em>str</em></a><em>]</em>) \u2013 The path contained by this metadata entry.</p></li>\n<li><p><strong>label</strong> (<a class=\"reference external\" href=\"https://docs.python.org/3/library/stdtypes.html#str\" title=\"(in Python v3.8)\"><em>str</em></a>) \u2013 Short display label for this metadata entry.</p></li>\n<li><p><strong>description</strong> (<em>Optional</em><em>[</em><a class=\"reference external\" href=\"https://docs.python.org/3/library/stdtypes.html#str\" title=\"(in Python v3.8)\"><em>str</em></a><em>]</em>) \u2013 A human-readable description of this metadata entry.</p></li>\n</ul>\n</dd>\n</dl>\n</dd></dl>\n\n<dl class=\"py method\">\n<dt id=\"dagster.MetadataEntry.table\">\n<em class=\"property\"><span class=\"pre\">static</span> </em><code class=\"sig-name descname\"><span class=\"pre\">table</span></code><span class=\"sig-paren\">(</span><em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">records</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">label</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">description</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">None</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">schema</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">None</span></span></em><span class=\"sig-paren\">)</span><a class=\"reference internal\" href=\"../../../../_modules/dagster/core/definitions/metadata#MetadataEntry.table\"><span class=\"viewcode-link\"><span class=\"pre\">[source]</span></span></a><a class=\"headerlink\" href=\"#dagster.MetadataEntry.table\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Static constructor for a metadata entry containing tabluar data as\n<a class=\"reference internal\" href=\"#dagster.TableMetadataValue\" title=\"dagster.TableMetadataValue\"><code class=\"xref py py-class docutils literal notranslate\"><span class=\"pre\">TableMetadataValue</span></code></a>. For example:</p>\n<div class=\"highlight-python notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"nd\">@op</span>\n<span class=\"k\">def</span> <span class=\"nf\">emit_metadata</span><span class=\"p\">(</span><span class=\"n\">context</span><span class=\"p\">):</span>\n    <span class=\"k\">yield</span> <span class=\"n\">ExpectationResult</span><span class=\"p\">(</span>\n        <span class=\"n\">success</span><span class=\"o\">=</span><span class=\"ow\">not</span> <span class=\"n\">has_errors</span><span class=\"p\">,</span>\n        <span class=\"n\">label</span><span class=\"o\">=</span><span class=\"s2\">&quot;is_valid&quot;</span><span class=\"p\">,</span>\n        <span class=\"n\">metadata_entries</span><span class=\"o\">=</span><span class=\"p\">[</span>\n            <span class=\"n\">MetadataEntry</span><span class=\"o\">.</span><span class=\"n\">table</span><span class=\"p\">(</span>\n                <span class=\"n\">label</span><span class=\"o\">=</span><span class=\"s2\">&quot;errors&quot;</span><span class=\"p\">,</span>\n                <span class=\"n\">records</span><span class=\"o\">=</span><span class=\"p\">[</span>\n                    <span class=\"n\">TableRecord</span><span class=\"p\">(</span><span class=\"n\">code</span><span class=\"o\">=</span><span class=\"s2\">&quot;invalid-data-type&quot;</span><span class=\"p\">,</span> <span class=\"n\">row</span><span class=\"o\">=</span><span class=\"mi\">2</span><span class=\"p\">,</span> <span class=\"n\">col</span><span class=\"o\">=</span><span class=\"s2\">&quot;name&quot;</span><span class=\"p\">}]</span>\n                <span class=\"p\">],</span>\n                <span class=\"n\">schema</span><span class=\"o\">=</span><span class=\"n\">TableSchema</span><span class=\"p\">(</span>\n                    <span class=\"n\">columns</span><span class=\"o\">=</span><span class=\"p\">[</span>\n                        <span class=\"n\">TableColumn</span><span class=\"p\">(</span><span class=\"n\">name</span><span class=\"o\">=</span><span class=\"s2\">&quot;code&quot;</span><span class=\"p\">,</span> <span class=\"nb\">type</span><span class=\"o\">=</span><span class=\"s2\">&quot;string&quot;</span><span class=\"p\">),</span>\n                        <span class=\"n\">TableColumn</span><span class=\"p\">(</span><span class=\"n\">name</span><span class=\"o\">=</span><span class=\"s2\">&quot;row&quot;</span><span class=\"p\">,</span> <span class=\"nb\">type</span><span class=\"o\">=</span><span class=\"s2\">&quot;int&quot;</span><span class=\"p\">),</span>\n                        <span class=\"n\">TableColumn</span><span class=\"p\">(</span><span class=\"n\">name</span><span class=\"o\">=</span><span class=\"s2\">&quot;col&quot;</span><span class=\"p\">,</span> <span class=\"nb\">type</span><span class=\"o\">=</span><span class=\"s2\">&quot;string&quot;</span><span class=\"p\">),</span>\n                    <span class=\"p\">]</span>\n                <span class=\"p\">)</span>\n            <span class=\"p\">),</span>\n        <span class=\"p\">],</span>\n    <span class=\"p\">)</span>\n</pre></div>\n</div>\n<dl class=\"field-list simple\">\n<dt class=\"field-odd\">Parameters</dt>\n<dd class=\"field-odd\"><ul class=\"simple\">\n<li><p><strong>records</strong> (<em>List</em><em>[</em><a class=\"reference internal\" href=\"#dagster.TableRecord\" title=\"dagster.TableRecord\"><em>TableRecord</em></a><em>]</em>) \u2013 The data as a list of records (i.e. rows).</p></li>\n<li><p><strong>label</strong> (<a class=\"reference external\" href=\"https://docs.python.org/3/library/stdtypes.html#str\" title=\"(in Python v3.8)\"><em>str</em></a>) \u2013 Short display label for this metadata entry.</p></li>\n<li><p><strong>description</strong> (<em>Optional</em><em>[</em><a class=\"reference external\" href=\"https://docs.python.org/3/library/stdtypes.html#str\" title=\"(in Python v3.8)\"><em>str</em></a><em>]</em>) \u2013 A human-readable description of this metadata entry.</p></li>\n<li><p><strong>schema</strong> (<em>Optional</em><em>[</em><a class=\"reference internal\" href=\"#dagster.TableSchema\" title=\"dagster.TableSchema\"><em>TableSchema</em></a><em>]</em>) \u2013 A schema for the table. If none is provided, one will be\nautomatically generated by examining the first record. The schema will include as columns all\nfield names present in the first record, with a type of <cite>\u201cstring\u201d</cite>, <cite>\u201cint\u201d</cite>,\n<cite>\u201cbool\u201d</cite> or <cite>\u201cfloat\u201d</cite> inferred from the first record\u2019s values. If a value does\nnot directly match one of the above types, it will be treated as a string.</p></li>\n</ul>\n</dd>\n</dl>\n</dd></dl>\n\n<dl class=\"py method\">\n<dt id=\"dagster.MetadataEntry.table_schema\">\n<em class=\"property\"><span class=\"pre\">static</span> </em><code class=\"sig-name descname\"><span class=\"pre\">table_schema</span></code><span class=\"sig-paren\">(</span><em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">schema</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">label</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">description</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">None</span></span></em><span class=\"sig-paren\">)</span><a class=\"reference internal\" href=\"../../../../_modules/dagster/core/definitions/metadata#MetadataEntry.table_schema\"><span class=\"viewcode-link\"><span class=\"pre\">[source]</span></span></a><a class=\"headerlink\" href=\"#dagster.MetadataEntry.table_schema\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Static constructor for a metadata entry containing a table schema as\n<a class=\"reference internal\" href=\"#dagster.TableSchemaMetadataValue\" title=\"dagster.TableSchemaMetadataValue\"><code class=\"xref py py-class docutils literal notranslate\"><span class=\"pre\">TableSchemaMetadataValue</span></code></a>. For example:</p>\n<div class=\"highlight-python notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"n\">schema</span> <span class=\"o\">=</span> <span class=\"n\">TableSchema</span><span class=\"p\">(</span>\n    <span class=\"n\">columns</span> <span class=\"o\">=</span> <span class=\"p\">[</span>\n        <span class=\"n\">TableColumn</span><span class=\"p\">(</span><span class=\"n\">name</span><span class=\"o\">=</span><span class=\"s2\">&quot;id&quot;</span><span class=\"p\">,</span> <span class=\"nb\">type</span><span class=\"o\">=</span><span class=\"s2\">&quot;int&quot;</span><span class=\"p\">),</span>\n        <span class=\"n\">TableColumn</span><span class=\"p\">(</span><span class=\"n\">name</span><span class=\"o\">=</span><span class=\"s2\">&quot;status&quot;</span><span class=\"p\">,</span> <span class=\"nb\">type</span><span class=\"o\">=</span><span class=\"s2\">&quot;bool&quot;</span><span class=\"p\">),</span>\n    <span class=\"p\">]</span>\n<span class=\"p\">)</span>\n\n<span class=\"n\">DagsterType</span><span class=\"p\">(</span>\n    <span class=\"n\">type_check_fn</span><span class=\"o\">=</span><span class=\"n\">some_validation_fn</span><span class=\"p\">,</span>\n    <span class=\"n\">name</span><span class=\"o\">=</span><span class=\"s1\">&#39;MyTable&#39;</span><span class=\"p\">,</span>\n    <span class=\"n\">metadata_entries</span><span class=\"o\">=</span><span class=\"p\">[</span>\n        <span class=\"n\">MetadataEntry</span><span class=\"o\">.</span><span class=\"n\">table_schema</span><span class=\"p\">(</span>\n            <span class=\"n\">schema</span><span class=\"p\">,</span>\n            <span class=\"n\">label</span><span class=\"o\">=</span><span class=\"s1\">&#39;schema&#39;</span><span class=\"p\">,</span>\n        <span class=\"p\">)</span>\n    <span class=\"p\">]</span>\n<span class=\"p\">)</span>\n</pre></div>\n</div>\n<dl class=\"field-list simple\">\n<dt class=\"field-odd\">Parameters</dt>\n<dd class=\"field-odd\"><ul class=\"simple\">\n<li><p><strong>schema</strong> (<a class=\"reference internal\" href=\"#dagster.TableSchema\" title=\"dagster.TableSchema\"><em>TableSchema</em></a>) \u2013 The table schema for a metadata entry.</p></li>\n<li><p><strong>label</strong> (<a class=\"reference external\" href=\"https://docs.python.org/3/library/stdtypes.html#str\" title=\"(in Python v3.8)\"><em>str</em></a>) \u2013 Short display label for this metadata entry.</p></li>\n<li><p><strong>description</strong> (<em>Optional</em><em>[</em><a class=\"reference external\" href=\"https://docs.python.org/3/library/stdtypes.html#str\" title=\"(in Python v3.8)\"><em>str</em></a><em>]</em>) \u2013 A human-readable description of this metadata entry.</p></li>\n</ul>\n</dd>\n</dl>\n</dd></dl>\n\n<dl class=\"py method\">\n<dt id=\"dagster.MetadataEntry.text\">\n<em class=\"property\"><span class=\"pre\">static</span> </em><code class=\"sig-name descname\"><span class=\"pre\">text</span></code><span class=\"sig-paren\">(</span><em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">text</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">label</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">description</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">None</span></span></em><span class=\"sig-paren\">)</span><a class=\"reference internal\" href=\"../../../../_modules/dagster/core/definitions/metadata#MetadataEntry.text\"><span class=\"viewcode-link\"><span class=\"pre\">[source]</span></span></a><a class=\"headerlink\" href=\"#dagster.MetadataEntry.text\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Static constructor for a metadata entry containing text as\n<a class=\"reference internal\" href=\"#dagster.TextMetadataValue\" title=\"dagster.TextMetadataValue\"><code class=\"xref py py-class docutils literal notranslate\"><span class=\"pre\">TextMetadataValue</span></code></a>. For example:</p>\n<div class=\"highlight-python notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"nd\">@op</span>\n<span class=\"k\">def</span> <span class=\"nf\">emit_metadata</span><span class=\"p\">(</span><span class=\"n\">context</span><span class=\"p\">,</span> <span class=\"n\">df</span><span class=\"p\">):</span>\n    <span class=\"k\">yield</span> <span class=\"n\">AssetMaterialization</span><span class=\"p\">(</span>\n        <span class=\"n\">asset_key</span><span class=\"o\">=</span><span class=\"s2\">&quot;my_dataset&quot;</span><span class=\"p\">,</span>\n        <span class=\"n\">metadata_entries</span><span class=\"o\">=</span><span class=\"p\">[</span>\n            <span class=\"n\">MetadataEntry</span><span class=\"o\">.</span><span class=\"n\">text</span><span class=\"p\">(</span><span class=\"s2\">&quot;Text-based metadata for this event&quot;</span><span class=\"p\">,</span> <span class=\"s2\">&quot;text_metadata&quot;</span><span class=\"p\">)</span>\n        <span class=\"p\">],</span>\n    <span class=\"p\">)</span>\n</pre></div>\n</div>\n<dl class=\"field-list simple\">\n<dt class=\"field-odd\">Parameters</dt>\n<dd class=\"field-odd\"><ul class=\"simple\">\n<li><p><strong>text</strong> (<em>Optional</em><em>[</em><a class=\"reference external\" href=\"https://docs.python.org/3/library/stdtypes.html#str\" title=\"(in Python v3.8)\"><em>str</em></a><em>]</em>) \u2013 The text of this metadata entry.</p></li>\n<li><p><strong>label</strong> (<a class=\"reference external\" href=\"https://docs.python.org/3/library/stdtypes.html#str\" title=\"(in Python v3.8)\"><em>str</em></a>) \u2013 Short display label for this metadata entry.</p></li>\n<li><p><strong>description</strong> (<em>Optional</em><em>[</em><a class=\"reference external\" href=\"https://docs.python.org/3/library/stdtypes.html#str\" title=\"(in Python v3.8)\"><em>str</em></a><em>]</em>) \u2013 A human-readable description of this metadata entry.</p></li>\n</ul>\n</dd>\n</dl>\n</dd></dl>\n\n<dl class=\"py method\">\n<dt id=\"dagster.MetadataEntry.url\">\n<em class=\"property\"><span class=\"pre\">static</span> </em><code class=\"sig-name descname\"><span class=\"pre\">url</span></code><span class=\"sig-paren\">(</span><em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">url</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">label</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">description</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">None</span></span></em><span class=\"sig-paren\">)</span><a class=\"reference internal\" href=\"../../../../_modules/dagster/core/definitions/metadata#MetadataEntry.url\"><span class=\"viewcode-link\"><span class=\"pre\">[source]</span></span></a><a class=\"headerlink\" href=\"#dagster.MetadataEntry.url\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Static constructor for a metadata entry containing a URL as\n<a class=\"reference internal\" href=\"#dagster.UrlMetadataValue\" title=\"dagster.UrlMetadataValue\"><code class=\"xref py py-class docutils literal notranslate\"><span class=\"pre\">UrlMetadataValue</span></code></a>. For example:</p>\n<div class=\"highlight-python notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"nd\">@op</span>\n<span class=\"k\">def</span> <span class=\"nf\">emit_metadata</span><span class=\"p\">(</span><span class=\"n\">context</span><span class=\"p\">):</span>\n    <span class=\"k\">yield</span> <span class=\"n\">AssetMaterialization</span><span class=\"p\">(</span>\n        <span class=\"n\">asset_key</span><span class=\"o\">=</span><span class=\"s2\">&quot;my_dashboard&quot;</span><span class=\"p\">,</span>\n        <span class=\"n\">metadata_entries</span><span class=\"o\">=</span><span class=\"p\">[</span>\n            <span class=\"n\">MetadataEntry</span><span class=\"o\">.</span><span class=\"n\">url</span><span class=\"p\">(</span>\n                <span class=\"s2\">&quot;http://mycoolsite.com/my_dashboard&quot;</span><span class=\"p\">,</span> <span class=\"n\">label</span><span class=\"o\">=</span><span class=\"s2\">&quot;dashboard_url&quot;</span>\n            <span class=\"p\">),</span>\n        <span class=\"p\">],</span>\n    <span class=\"p\">)</span>\n</pre></div>\n</div>\n<dl class=\"field-list simple\">\n<dt class=\"field-odd\">Parameters</dt>\n<dd class=\"field-odd\"><ul class=\"simple\">\n<li><p><strong>url</strong> (<em>Optional</em><em>[</em><a class=\"reference external\" href=\"https://docs.python.org/3/library/stdtypes.html#str\" title=\"(in Python v3.8)\"><em>str</em></a><em>]</em>) \u2013 The URL contained by this metadata entry.</p></li>\n<li><p><strong>label</strong> (<a class=\"reference external\" href=\"https://docs.python.org/3/library/stdtypes.html#str\" title=\"(in Python v3.8)\"><em>str</em></a>) \u2013 Short display label for this metadata entry.</p></li>\n<li><p><strong>description</strong> (<em>Optional</em><em>[</em><a class=\"reference external\" href=\"https://docs.python.org/3/library/stdtypes.html#str\" title=\"(in Python v3.8)\"><em>str</em></a><em>]</em>) \u2013 A human-readable description of this metadata entry.</p></li>\n</ul>\n</dd>\n</dl>\n</dd></dl>\n\n<dl class=\"py method\">\n<dt id=\"dagster.MetadataEntry.value\">\n<em class=\"property\"><span class=\"pre\">property</span> </em><code class=\"sig-name descname\"><span class=\"pre\">value</span></code><a class=\"headerlink\" href=\"#dagster.MetadataEntry.value\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Alias of <cite>entry_data</cite>.</p>\n</dd></dl>\n\n</dd></dl>\n\n</div>\n<div class=\"section\" id=\"metadata-types\">\n<h3>Metadata types<a class=\"headerlink\" href=\"#metadata-types\" title=\"Permalink to this headline\">\u00b6</a></h3>\n<p>All metadata types inherit from <cite>MetadataValue</cite>. The following types are defined:</p>\n<dl class=\"py class\">\n<dt id=\"dagster.DagsterAssetMetadataValue\">\n<em class=\"property\"><span class=\"pre\">class</span> </em><code class=\"sig-prename descclassname\"><span class=\"pre\">dagster.</span></code><code class=\"sig-name descname\"><span class=\"pre\">DagsterAssetMetadataValue</span></code><span class=\"sig-paren\">(</span><em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">asset_key</span></span></em><span class=\"sig-paren\">)</span><a class=\"reference internal\" href=\"../../../../_modules/dagster/core/definitions/metadata#DagsterAssetMetadataValue\"><span class=\"viewcode-link\"><span class=\"pre\">[source]</span></span></a><a class=\"headerlink\" href=\"#dagster.DagsterAssetMetadataValue\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Representation of a dagster asset.</p>\n<dl class=\"field-list simple\">\n<dt class=\"field-odd\">Parameters</dt>\n<dd class=\"field-odd\"><p><strong>asset_key</strong> (<a class=\"reference internal\" href=\"#dagster.AssetKey\" title=\"dagster.AssetKey\"><em>AssetKey</em></a>) \u2013 The dagster asset key</p>\n</dd>\n</dl>\n</dd></dl>\n\n<dl class=\"py class\">\n<dt id=\"dagster.DagsterPipelineRunMetadataValue\">\n<em class=\"property\"><span class=\"pre\">class</span> </em><code class=\"sig-prename descclassname\"><span class=\"pre\">dagster.</span></code><code class=\"sig-name descname\"><span class=\"pre\">DagsterPipelineRunMetadataValue</span></code><span class=\"sig-paren\">(</span><em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">run_id</span></span></em><span class=\"sig-paren\">)</span><a class=\"reference internal\" href=\"../../../../_modules/dagster/core/definitions/metadata#DagsterPipelineRunMetadataValue\"><span class=\"viewcode-link\"><span class=\"pre\">[source]</span></span></a><a class=\"headerlink\" href=\"#dagster.DagsterPipelineRunMetadataValue\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Representation of a dagster pipeline run.</p>\n<dl class=\"field-list simple\">\n<dt class=\"field-odd\">Parameters</dt>\n<dd class=\"field-odd\"><p><strong>run_id</strong> (<a class=\"reference external\" href=\"https://docs.python.org/3/library/stdtypes.html#str\" title=\"(in Python v3.8)\"><em>str</em></a>) \u2013 The pipeline run id</p>\n</dd>\n</dl>\n</dd></dl>\n\n<dl class=\"py class\">\n<dt id=\"dagster.FloatMetadataValue\">\n<em class=\"property\"><span class=\"pre\">class</span> </em><code class=\"sig-prename descclassname\"><span class=\"pre\">dagster.</span></code><code class=\"sig-name descname\"><span class=\"pre\">FloatMetadataValue</span></code><span class=\"sig-paren\">(</span><em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">value</span></span></em><span class=\"sig-paren\">)</span><a class=\"reference internal\" href=\"../../../../_modules/dagster/core/definitions/metadata#FloatMetadataValue\"><span class=\"viewcode-link\"><span class=\"pre\">[source]</span></span></a><a class=\"headerlink\" href=\"#dagster.FloatMetadataValue\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Container class for float metadata entry data.</p>\n<dl class=\"field-list simple\">\n<dt class=\"field-odd\">Parameters</dt>\n<dd class=\"field-odd\"><p><strong>value</strong> (<em>Optional</em><em>[</em><a class=\"reference external\" href=\"https://docs.python.org/3/library/functions.html#float\" title=\"(in Python v3.8)\"><em>float</em></a><em>]</em>) \u2013 The float value.</p>\n</dd>\n</dl>\n</dd></dl>\n\n<dl class=\"py class\">\n<dt id=\"dagster.IntMetadataValue\">\n<em class=\"property\"><span class=\"pre\">class</span> </em><code class=\"sig-prename descclassname\"><span class=\"pre\">dagster.</span></code><code class=\"sig-name descname\"><span class=\"pre\">IntMetadataValue</span></code><span class=\"sig-paren\">(</span><em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">value</span></span></em><span class=\"sig-paren\">)</span><a class=\"reference internal\" href=\"../../../../_modules/dagster/core/definitions/metadata#IntMetadataValue\"><span class=\"viewcode-link\"><span class=\"pre\">[source]</span></span></a><a class=\"headerlink\" href=\"#dagster.IntMetadataValue\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Container class for int metadata entry data.</p>\n<dl class=\"field-list simple\">\n<dt class=\"field-odd\">Parameters</dt>\n<dd class=\"field-odd\"><p><strong>value</strong> (<em>Optional</em><em>[</em><a class=\"reference external\" href=\"https://docs.python.org/3/library/functions.html#int\" title=\"(in Python v3.8)\"><em>int</em></a><em>]</em>) \u2013 The int value.</p>\n</dd>\n</dl>\n</dd></dl>\n\n<dl class=\"py class\">\n<dt id=\"dagster.JsonMetadataValue\">\n<em class=\"property\"><span class=\"pre\">class</span> </em><code class=\"sig-prename descclassname\"><span class=\"pre\">dagster.</span></code><code class=\"sig-name descname\"><span class=\"pre\">JsonMetadataValue</span></code><span class=\"sig-paren\">(</span><em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">data</span></span></em><span class=\"sig-paren\">)</span><a class=\"reference internal\" href=\"../../../../_modules/dagster/core/definitions/metadata#JsonMetadataValue\"><span class=\"viewcode-link\"><span class=\"pre\">[source]</span></span></a><a class=\"headerlink\" href=\"#dagster.JsonMetadataValue\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Container class for JSON metadata entry data.</p>\n<dl class=\"field-list simple\">\n<dt class=\"field-odd\">Parameters</dt>\n<dd class=\"field-odd\"><p><strong>data</strong> (<em>Dict</em><em>[</em><a class=\"reference external\" href=\"https://docs.python.org/3/library/stdtypes.html#str\" title=\"(in Python v3.8)\"><em>str</em></a><em>, </em><em>Any</em><em>]</em>) \u2013 The JSON data.</p>\n</dd>\n</dl>\n</dd></dl>\n\n<dl class=\"py class\">\n<dt id=\"dagster.MarkdownMetadataValue\">\n<em class=\"property\"><span class=\"pre\">class</span> </em><code class=\"sig-prename descclassname\"><span class=\"pre\">dagster.</span></code><code class=\"sig-name descname\"><span class=\"pre\">MarkdownMetadataValue</span></code><span class=\"sig-paren\">(</span><em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">md_str</span></span></em><span class=\"sig-paren\">)</span><a class=\"reference internal\" href=\"../../../../_modules/dagster/core/definitions/metadata#MarkdownMetadataValue\"><span class=\"viewcode-link\"><span class=\"pre\">[source]</span></span></a><a class=\"headerlink\" href=\"#dagster.MarkdownMetadataValue\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Container class for markdown metadata entry data.</p>\n<dl class=\"field-list simple\">\n<dt class=\"field-odd\">Parameters</dt>\n<dd class=\"field-odd\"><p><strong>md_str</strong> (<em>Optional</em><em>[</em><a class=\"reference external\" href=\"https://docs.python.org/3/library/stdtypes.html#str\" title=\"(in Python v3.8)\"><em>str</em></a><em>]</em>) \u2013 The markdown as a string.</p>\n</dd>\n</dl>\n</dd></dl>\n\n<dl class=\"py class\">\n<dt id=\"dagster.PathMetadataValue\">\n<em class=\"property\"><span class=\"pre\">class</span> </em><code class=\"sig-prename descclassname\"><span class=\"pre\">dagster.</span></code><code class=\"sig-name descname\"><span class=\"pre\">PathMetadataValue</span></code><span class=\"sig-paren\">(</span><em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">path</span></span></em><span class=\"sig-paren\">)</span><a class=\"reference internal\" href=\"../../../../_modules/dagster/core/definitions/metadata#PathMetadataValue\"><span class=\"viewcode-link\"><span class=\"pre\">[source]</span></span></a><a class=\"headerlink\" href=\"#dagster.PathMetadataValue\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Container class for path metadata entry data.</p>\n<dl class=\"field-list simple\">\n<dt class=\"field-odd\">Parameters</dt>\n<dd class=\"field-odd\"><p><strong>path</strong> (<em>Optional</em><em>[</em><a class=\"reference external\" href=\"https://docs.python.org/3/library/stdtypes.html#str\" title=\"(in Python v3.8)\"><em>str</em></a><em>]</em>) \u2013 The path as a string or conforming to os.PathLike.</p>\n</dd>\n</dl>\n</dd></dl>\n\n<dl class=\"py class\">\n<dt id=\"dagster.PythonArtifactMetadataValue\">\n<em class=\"property\"><span class=\"pre\">class</span> </em><code class=\"sig-prename descclassname\"><span class=\"pre\">dagster.</span></code><code class=\"sig-name descname\"><span class=\"pre\">PythonArtifactMetadataValue</span></code><span class=\"sig-paren\">(</span><em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">module</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">name</span></span></em><span class=\"sig-paren\">)</span><a class=\"reference internal\" href=\"../../../../_modules/dagster/core/definitions/metadata#PythonArtifactMetadataValue\"><span class=\"viewcode-link\"><span class=\"pre\">[source]</span></span></a><a class=\"headerlink\" href=\"#dagster.PythonArtifactMetadataValue\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Container class for python artifact metadata entry data.</p>\n<dl class=\"field-list simple\">\n<dt class=\"field-odd\">Parameters</dt>\n<dd class=\"field-odd\"><ul class=\"simple\">\n<li><p><strong>module</strong> (<a class=\"reference external\" href=\"https://docs.python.org/3/library/stdtypes.html#str\" title=\"(in Python v3.8)\"><em>str</em></a>) \u2013 The module where the python artifact can be found</p></li>\n<li><p><strong>name</strong> (<a class=\"reference external\" href=\"https://docs.python.org/3/library/stdtypes.html#str\" title=\"(in Python v3.8)\"><em>str</em></a>) \u2013 The name of the python artifact</p></li>\n</ul>\n</dd>\n</dl>\n</dd></dl>\n\n<dl class=\"py class\">\n<dt id=\"dagster.TableMetadataValue\">\n<em class=\"property\"><span class=\"pre\">class</span> </em><code class=\"sig-prename descclassname\"><span class=\"pre\">dagster.</span></code><code class=\"sig-name descname\"><span class=\"pre\">TableMetadataValue</span></code><span class=\"sig-paren\">(</span><em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">records</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">schema</span></span></em><span class=\"sig-paren\">)</span><a class=\"reference internal\" href=\"../../../../_modules/dagster/core/definitions/metadata#TableMetadataValue\"><span class=\"viewcode-link\"><span class=\"pre\">[source]</span></span></a><a class=\"headerlink\" href=\"#dagster.TableMetadataValue\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Container class for table metadata entry data.</p>\n<dl class=\"field-list simple\">\n<dt class=\"field-odd\">Parameters</dt>\n<dd class=\"field-odd\"><ul class=\"simple\">\n<li><p><strong>records</strong> (<a class=\"reference internal\" href=\"#dagster.TableRecord\" title=\"dagster.TableRecord\"><em>TableRecord</em></a>) \u2013 The data as a list of records (i.e. rows).</p></li>\n<li><p><strong>schema</strong> (<em>Optional</em><em>[</em><a class=\"reference internal\" href=\"#dagster.TableSchema\" title=\"dagster.TableSchema\"><em>TableSchema</em></a><em>]</em>) \u2013 A schema for the table.</p></li>\n</ul>\n</dd>\n</dl>\n</dd></dl>\n\n<dl class=\"py class\">\n<dt id=\"dagster.TableSchemaMetadataValue\">\n<em class=\"property\"><span class=\"pre\">class</span> </em><code class=\"sig-prename descclassname\"><span class=\"pre\">dagster.</span></code><code class=\"sig-name descname\"><span class=\"pre\">TableSchemaMetadataValue</span></code><span class=\"sig-paren\">(</span><em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">schema</span></span></em><span class=\"sig-paren\">)</span><a class=\"reference internal\" href=\"../../../../_modules/dagster/core/definitions/metadata#TableSchemaMetadataValue\"><span class=\"viewcode-link\"><span class=\"pre\">[source]</span></span></a><a class=\"headerlink\" href=\"#dagster.TableSchemaMetadataValue\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Representation of a schema for arbitrary tabular data.</p>\n<dl class=\"field-list simple\">\n<dt class=\"field-odd\">Parameters</dt>\n<dd class=\"field-odd\"><p><strong>schema</strong> (<a class=\"reference internal\" href=\"#dagster.TableSchema\" title=\"dagster.TableSchema\"><em>TableSchema</em></a>) \u2013 The dictionary containing the schema representation.</p>\n</dd>\n</dl>\n</dd></dl>\n\n<dl class=\"py class\">\n<dt id=\"dagster.TextMetadataValue\">\n<em class=\"property\"><span class=\"pre\">class</span> </em><code class=\"sig-prename descclassname\"><span class=\"pre\">dagster.</span></code><code class=\"sig-name descname\"><span class=\"pre\">TextMetadataValue</span></code><span class=\"sig-paren\">(</span><em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">text</span></span></em><span class=\"sig-paren\">)</span><a class=\"reference internal\" href=\"../../../../_modules/dagster/core/definitions/metadata#TextMetadataValue\"><span class=\"viewcode-link\"><span class=\"pre\">[source]</span></span></a><a class=\"headerlink\" href=\"#dagster.TextMetadataValue\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Container class for text metadata entry data.</p>\n<dl class=\"field-list simple\">\n<dt class=\"field-odd\">Parameters</dt>\n<dd class=\"field-odd\"><p><strong>text</strong> (<em>Optional</em><em>[</em><a class=\"reference external\" href=\"https://docs.python.org/3/library/stdtypes.html#str\" title=\"(in Python v3.8)\"><em>str</em></a><em>]</em>) \u2013 The text data.</p>\n</dd>\n</dl>\n</dd></dl>\n\n<dl class=\"py class\">\n<dt id=\"dagster.UrlMetadataValue\">\n<em class=\"property\"><span class=\"pre\">class</span> </em><code class=\"sig-prename descclassname\"><span class=\"pre\">dagster.</span></code><code class=\"sig-name descname\"><span class=\"pre\">UrlMetadataValue</span></code><span class=\"sig-paren\">(</span><em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">url</span></span></em><span class=\"sig-paren\">)</span><a class=\"reference internal\" href=\"../../../../_modules/dagster/core/definitions/metadata#UrlMetadataValue\"><span class=\"viewcode-link\"><span class=\"pre\">[source]</span></span></a><a class=\"headerlink\" href=\"#dagster.UrlMetadataValue\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Container class for URL metadata entry data.</p>\n<dl class=\"field-list simple\">\n<dt class=\"field-odd\">Parameters</dt>\n<dd class=\"field-odd\"><p><strong>url</strong> (<em>Optional</em><em>[</em><a class=\"reference external\" href=\"https://docs.python.org/3/library/stdtypes.html#str\" title=\"(in Python v3.8)\"><em>str</em></a><em>]</em>) \u2013 The URL as a string.</p>\n</dd>\n</dl>\n</dd></dl>\n\n</div>\n<div class=\"section\" id=\"tables\">\n<h3>Tables<a class=\"headerlink\" href=\"#tables\" title=\"Permalink to this headline\">\u00b6</a></h3>\n<p>These APIs provide the ability to express table schemas (<cite>TableSchema</cite>) and table rows/records (<cite>TableRecord</cite>) in Dagster. Currently the only use case for <cite>TableSchemas</cite> and <cite>TableRecords</cite> is to wrap them in their corresponding metadata classes <a class=\"reference internal\" href=\"#dagster.TableMetadataValue\" title=\"dagster.TableMetadataValue\"><code class=\"xref py py-class docutils literal notranslate\"><span class=\"pre\">TableMetadataValue</span></code></a> and <a class=\"reference internal\" href=\"#dagster.TableSchemaMetadataValue\" title=\"dagster.TableSchemaMetadataValue\"><code class=\"xref py py-class docutils literal notranslate\"><span class=\"pre\">TableSchemaMetadataValue</span></code></a> for attachment to events or Dagster types.</p>\n<dl class=\"py class\">\n<dt id=\"dagster.TableRecord\">\n<em class=\"property\"><span class=\"pre\">class</span> </em><code class=\"sig-prename descclassname\"><span class=\"pre\">dagster.</span></code><code class=\"sig-name descname\"><span class=\"pre\">TableRecord</span></code><span class=\"sig-paren\">(</span><em class=\"sig-param\"><span class=\"o\"><span class=\"pre\">**</span></span><span class=\"n\"><span class=\"pre\">data</span></span></em><span class=\"sig-paren\">)</span><a class=\"reference internal\" href=\"../../../../_modules/dagster/core/definitions/metadata/table#TableRecord\"><span class=\"viewcode-link\"><span class=\"pre\">[source]</span></span></a><a class=\"headerlink\" href=\"#dagster.TableRecord\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Represents one record in a table. All passed keyword arguments are treated as field key/value\npairs in the record. Field keys are arbitrary strings\u2013 field values must be strings, integers,\nfloats, or bools.</p>\n</dd></dl>\n\n<dl class=\"py class\">\n<dt id=\"dagster.TableSchema\">\n<em class=\"property\"><span class=\"pre\">class</span> </em><code class=\"sig-prename descclassname\"><span class=\"pre\">dagster.</span></code><code class=\"sig-name descname\"><span class=\"pre\">TableSchema</span></code><span class=\"sig-paren\">(</span><em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">columns</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">constraints</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">None</span></span></em><span class=\"sig-paren\">)</span><a class=\"reference internal\" href=\"../../../../_modules/dagster/core/definitions/metadata/table#TableSchema\"><span class=\"viewcode-link\"><span class=\"pre\">[source]</span></span></a><a class=\"headerlink\" href=\"#dagster.TableSchema\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Representation of a schema for tabular data. Schema is composed of two parts:</p>\n<ul class=\"simple\">\n<li><p>A required list of columns (<cite>TableColumn</cite>). Each column specifies a\n<cite>name</cite>, <cite>type</cite>, set of <cite>constraints</cite>, and (optional) <cite>description</cite>. <cite>type</cite>\ndefaults to <cite>string</cite> if unspecified. Column constraints\n(<cite>TableColumnConstraints</cite>) consist of boolean properties <cite>unique</cite> and\n<cite>nullable</cite>, as well as a list of strings <cite>other</cite> containing string\ndescriptions of all additional constraints (e.g. <cite>\u201c&lt;= 5\u201d</cite>).</p></li>\n<li><p>An optional list of table-level constraints (<cite>TableConstraints</cite>). A\ntable-level constraint cannot be expressed in terms of a single column,\ne.g. col a &gt; col b. Presently, all table-level constraints must be\nexpressed as strings under the <cite>other</cite> attribute of a <cite>TableConstraints</cite>\nobject.</p></li>\n</ul>\n<div class=\"highlight-python notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"c1\"># example schema</span>\n<span class=\"n\">TableSchema</span><span class=\"p\">(</span>\n    <span class=\"n\">constraints</span> <span class=\"o\">=</span> <span class=\"n\">TableConstraints</span><span class=\"p\">(</span>\n        <span class=\"n\">other</span> <span class=\"o\">=</span> <span class=\"p\">[</span>\n            <span class=\"s2\">&quot;foo &gt; bar&quot;</span><span class=\"p\">,</span>\n        <span class=\"p\">],</span>\n    <span class=\"p\">),</span>\n    <span class=\"n\">columns</span> <span class=\"o\">=</span> <span class=\"p\">[</span>\n        <span class=\"n\">TableColumn</span><span class=\"p\">(</span>\n            <span class=\"n\">name</span> <span class=\"o\">=</span> <span class=\"s2\">&quot;foo&quot;</span><span class=\"p\">,</span>\n            <span class=\"nb\">type</span> <span class=\"o\">=</span> <span class=\"s2\">&quot;string&quot;</span><span class=\"p\">,</span>\n            <span class=\"n\">description</span> <span class=\"o\">=</span> <span class=\"s2\">&quot;Foo description&quot;</span><span class=\"p\">,</span>\n            <span class=\"n\">constraints</span> <span class=\"o\">=</span> <span class=\"n\">TableColumnConstraints</span><span class=\"p\">(</span>\n                <span class=\"n\">required</span> <span class=\"o\">=</span> <span class=\"kc\">True</span><span class=\"p\">,</span>\n                <span class=\"n\">other</span> <span class=\"o\">=</span> <span class=\"p\">[</span>\n                    <span class=\"s2\">&quot;starts with the letter &#39;a&#39;&quot;</span><span class=\"p\">,</span>\n                <span class=\"p\">],</span>\n            <span class=\"p\">),</span>\n        <span class=\"p\">),</span>\n        <span class=\"n\">TableColumn</span><span class=\"p\">(</span>\n            <span class=\"n\">name</span> <span class=\"o\">=</span> <span class=\"s2\">&quot;bar&quot;</span><span class=\"p\">,</span>\n            <span class=\"nb\">type</span> <span class=\"o\">=</span> <span class=\"s2\">&quot;string&quot;</span><span class=\"p\">,</span>\n        <span class=\"p\">),</span>\n        <span class=\"n\">TableColumn</span><span class=\"p\">(</span>\n            <span class=\"n\">name</span> <span class=\"o\">=</span> <span class=\"s2\">&quot;baz&quot;</span><span class=\"p\">,</span>\n            <span class=\"nb\">type</span> <span class=\"o\">=</span> <span class=\"s2\">&quot;custom_type&quot;</span><span class=\"p\">,</span>\n            <span class=\"n\">constraints</span> <span class=\"o\">=</span> <span class=\"n\">TableColumnConstraints</span><span class=\"p\">(</span>\n                <span class=\"n\">unique</span> <span class=\"o\">=</span> <span class=\"kc\">True</span><span class=\"p\">,</span>\n            <span class=\"p\">)</span>\n        <span class=\"p\">),</span>\n    <span class=\"p\">],</span>\n<span class=\"p\">)</span>\n</pre></div>\n</div>\n<dl class=\"field-list simple\">\n<dt class=\"field-odd\">Parameters</dt>\n<dd class=\"field-odd\"><ul class=\"simple\">\n<li><p><strong>columns</strong> (<em>List</em><em>[</em><a class=\"reference internal\" href=\"#dagster.TableColumn\" title=\"dagster.TableColumn\"><em>TableColumn</em></a><em>]</em>) \u2013 The columns of the table.</p></li>\n<li><p><strong>constraints</strong> (<em>Optional</em><em>[</em><a class=\"reference internal\" href=\"#dagster.TableConstraints\" title=\"dagster.TableConstraints\"><em>TableConstraints</em></a><em>]</em>) \u2013 The constraints of the table.</p></li>\n</ul>\n</dd>\n</dl>\n</dd></dl>\n\n<dl class=\"py class\">\n<dt id=\"dagster.TableConstraints\">\n<em class=\"property\"><span class=\"pre\">class</span> </em><code class=\"sig-prename descclassname\"><span class=\"pre\">dagster.</span></code><code class=\"sig-name descname\"><span class=\"pre\">TableConstraints</span></code><span class=\"sig-paren\">(</span><em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">other</span></span></em><span class=\"sig-paren\">)</span><a class=\"reference internal\" href=\"../../../../_modules/dagster/core/definitions/metadata/table#TableConstraints\"><span class=\"viewcode-link\"><span class=\"pre\">[source]</span></span></a><a class=\"headerlink\" href=\"#dagster.TableConstraints\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Descriptor for \u201ctable-level\u201d constraints. Presently only one property,\n<cite>other</cite> is supported. This contains strings describing arbitrary\ntable-level constraints. A table-level constraint is a constraint defined\nin terms of multiple columns (e.g. col_A &gt; col_B) or in terms of rows.</p>\n<dl class=\"field-list simple\">\n<dt class=\"field-odd\">Parameters</dt>\n<dd class=\"field-odd\"><p><strong>other</strong> (<em>List</em><em>[</em><a class=\"reference external\" href=\"https://docs.python.org/3/library/stdtypes.html#str\" title=\"(in Python v3.8)\"><em>str</em></a><em>]</em>) \u2013 Descriptions of arbitrary table-level constraints.</p>\n</dd>\n</dl>\n</dd></dl>\n\n<dl class=\"py class\">\n<dt id=\"dagster.TableColumn\">\n<em class=\"property\"><span class=\"pre\">class</span> </em><code class=\"sig-prename descclassname\"><span class=\"pre\">dagster.</span></code><code class=\"sig-name descname\"><span class=\"pre\">TableColumn</span></code><span class=\"sig-paren\">(</span><em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">name</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">type</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">'string'</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">description</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">None</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">constraints</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">None</span></span></em><span class=\"sig-paren\">)</span><a class=\"reference internal\" href=\"../../../../_modules/dagster/core/definitions/metadata/table#TableColumn\"><span class=\"viewcode-link\"><span class=\"pre\">[source]</span></span></a><a class=\"headerlink\" href=\"#dagster.TableColumn\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Descriptor for a table column. The only property that must be specified\nby the user is <cite>name</cite>. If no <cite>type</cite> is specified, <cite>string</cite> is assumed. If\nno <cite>constraints</cite> are specified, the column is assumed to be nullable\n(i.e. <cite>required = False</cite>) and have no other constraints beyond the data type.</p>\n<dl class=\"field-list simple\">\n<dt class=\"field-odd\">Parameters</dt>\n<dd class=\"field-odd\"><ul class=\"simple\">\n<li><p><strong>name</strong> (<em>List</em><em>[</em><a class=\"reference external\" href=\"https://docs.python.org/3/library/stdtypes.html#str\" title=\"(in Python v3.8)\"><em>str</em></a><em>]</em>) \u2013 Descriptions of arbitrary table-level constraints.</p></li>\n<li><p><strong>type</strong> (<em>Optional</em><em>[</em><a class=\"reference external\" href=\"https://docs.python.org/3/library/stdtypes.html#str\" title=\"(in Python v3.8)\"><em>str</em></a><em>]</em>) \u2013 The type of the column. Can be an arbitrary\nstring. Defaults to <cite>\u201cstring\u201d</cite>.</p></li>\n<li><p><strong>description</strong> (<em>Optional</em><em>[</em><a class=\"reference external\" href=\"https://docs.python.org/3/library/stdtypes.html#str\" title=\"(in Python v3.8)\"><em>str</em></a><em>]</em>) \u2013 Description of this column. Defaults to <cite>None</cite>.</p></li>\n<li><p><strong>constraints</strong> (<em>Optional</em><em>[</em><a class=\"reference internal\" href=\"#dagster.TableColumnConstraints\" title=\"dagster.TableColumnConstraints\"><em>TableColumnConstraints</em></a><em>]</em>) \u2013 Column-level constraints.\nIf unspecified, column is nullable with no constraints.</p></li>\n</ul>\n</dd>\n</dl>\n</dd></dl>\n\n<dl class=\"py class\">\n<dt id=\"dagster.TableColumnConstraints\">\n<em class=\"property\"><span class=\"pre\">class</span> </em><code class=\"sig-prename descclassname\"><span class=\"pre\">dagster.</span></code><code class=\"sig-name descname\"><span class=\"pre\">TableColumnConstraints</span></code><span class=\"sig-paren\">(</span><em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">nullable</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">True</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">unique</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">False</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">other</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">None</span></span></em><span class=\"sig-paren\">)</span><a class=\"reference internal\" href=\"../../../../_modules/dagster/core/definitions/metadata/table#TableColumnConstraints\"><span class=\"viewcode-link\"><span class=\"pre\">[source]</span></span></a><a class=\"headerlink\" href=\"#dagster.TableColumnConstraints\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Descriptor for a table column\u2019s constraints. Nullability and uniqueness are specified with\nboolean properties. All other constraints are described using arbitrary strings under the\n<cite>other</cite> property.</p>\n<dl class=\"field-list simple\">\n<dt class=\"field-odd\">Parameters</dt>\n<dd class=\"field-odd\"><ul class=\"simple\">\n<li><p><strong>nullable</strong> (<em>Optional</em><em>[</em><a class=\"reference external\" href=\"https://docs.python.org/3/library/functions.html#bool\" title=\"(in Python v3.8)\"><em>bool</em></a><em>]</em>) \u2013 If true, this column can hold null values.</p></li>\n<li><p><strong>unique</strong> (<em>Optional</em><em>[</em><a class=\"reference external\" href=\"https://docs.python.org/3/library/functions.html#bool\" title=\"(in Python v3.8)\"><em>bool</em></a><em>]</em>) \u2013 If true, all values in this column must be unique.</p></li>\n<li><p><strong>other</strong> (<em>List</em><em>[</em><a class=\"reference external\" href=\"https://docs.python.org/3/library/stdtypes.html#str\" title=\"(in Python v3.8)\"><em>str</em></a><em>]</em>) \u2013 Descriptions of arbitrary column-level constraints\nnot expressible by the predefined properties.</p></li>\n</ul>\n</dd>\n</dl>\n</dd></dl>\n\n</div>\n<hr class=\"docutils\" />\n<div class=\"section\" id=\"asset-key\">\n<h3>Asset key<a class=\"headerlink\" href=\"#asset-key\" title=\"Permalink to this headline\">\u00b6</a></h3>\n<p>Dagster uses <a class=\"reference internal\" href=\"#dagster.AssetKey\" title=\"dagster.AssetKey\"><code class=\"xref py py-class docutils literal notranslate\"><span class=\"pre\">AssetKey</span></code></a> to build an index on <code class=\"xref py py-class docutils literal notranslate\"><span class=\"pre\">Materialization</span></code> events.\nAssets materialized with an <a class=\"reference internal\" href=\"#dagster.AssetKey\" title=\"dagster.AssetKey\"><code class=\"xref py py-class docutils literal notranslate\"><span class=\"pre\">AssetKey</span></code></a> are highlighted in <cite>dagit</cite> on the <cite>Assets</cite>\ndashboard.</p>\n<dl class=\"py class\">\n<dt id=\"dagster.AssetKey\">\n<em class=\"property\"><span class=\"pre\">class</span> </em><code class=\"sig-prename descclassname\"><span class=\"pre\">dagster.</span></code><code class=\"sig-name descname\"><span class=\"pre\">AssetKey</span></code><span class=\"sig-paren\">(</span><em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">path</span></span></em><span class=\"sig-paren\">)</span><a class=\"reference internal\" href=\"../../../../_modules/dagster/core/definitions/events#AssetKey\"><span class=\"viewcode-link\"><span class=\"pre\">[source]</span></span></a><a class=\"headerlink\" href=\"#dagster.AssetKey\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Object representing the structure of an asset key.  Takes in a sanitized string, list of\nstrings, or tuple of strings.</p>\n<p>Example usage:</p>\n<div class=\"highlight-python notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"kn\">from</span> <span class=\"nn\">dagster</span> <span class=\"kn\">import</span> <span class=\"n\">op</span>\n\n<span class=\"nd\">@op</span>\n<span class=\"k\">def</span> <span class=\"nf\">emit_metadata</span><span class=\"p\">(</span><span class=\"n\">context</span><span class=\"p\">,</span> <span class=\"n\">df</span><span class=\"p\">):</span>\n    <span class=\"k\">yield</span> <span class=\"n\">AssetMaterialization</span><span class=\"p\">(</span>\n        <span class=\"n\">asset_key</span><span class=\"o\">=</span><span class=\"n\">AssetKey</span><span class=\"p\">(</span><span class=\"s1\">&#39;flat_asset_key&#39;</span><span class=\"p\">),</span>\n        <span class=\"n\">metadata</span><span class=\"o\">=</span><span class=\"p\">{</span><span class=\"s2\">&quot;text_metadata&quot;</span><span class=\"p\">:</span> <span class=\"s2\">&quot;Text-based metadata for this event&quot;</span><span class=\"p\">},</span>\n    <span class=\"p\">)</span>\n\n<span class=\"nd\">@op</span>\n<span class=\"k\">def</span> <span class=\"nf\">structured_asset_key</span><span class=\"p\">(</span><span class=\"n\">context</span><span class=\"p\">,</span> <span class=\"n\">df</span><span class=\"p\">):</span>\n    <span class=\"k\">yield</span> <span class=\"n\">AssetMaterialization</span><span class=\"p\">(</span>\n        <span class=\"n\">asset_key</span><span class=\"o\">=</span><span class=\"n\">AssetKey</span><span class=\"p\">([</span><span class=\"s1\">&#39;parent&#39;</span><span class=\"p\">,</span> <span class=\"s1\">&#39;child&#39;</span><span class=\"p\">,</span> <span class=\"s1\">&#39;grandchild&#39;</span><span class=\"p\">]),</span>\n        <span class=\"n\">metadata</span><span class=\"o\">=</span><span class=\"p\">{</span><span class=\"s2\">&quot;text_metadata&quot;</span><span class=\"p\">:</span> <span class=\"s2\">&quot;Text-based metadata for this event&quot;</span><span class=\"p\">},</span>\n    <span class=\"p\">)</span>\n\n<span class=\"nd\">@op</span>\n<span class=\"k\">def</span> <span class=\"nf\">structured_asset_key_2</span><span class=\"p\">(</span><span class=\"n\">context</span><span class=\"p\">,</span> <span class=\"n\">df</span><span class=\"p\">):</span>\n    <span class=\"k\">yield</span> <span class=\"n\">AssetMaterialization</span><span class=\"p\">(</span>\n        <span class=\"n\">asset_key</span><span class=\"o\">=</span><span class=\"n\">AssetKey</span><span class=\"p\">((</span><span class=\"s1\">&#39;parent&#39;</span><span class=\"p\">,</span> <span class=\"s1\">&#39;child&#39;</span><span class=\"p\">,</span> <span class=\"s1\">&#39;grandchild&#39;</span><span class=\"p\">)),</span>\n        <span class=\"n\">metadata</span><span class=\"o\">=</span><span class=\"p\">{</span><span class=\"s2\">&quot;text_metadata&quot;</span><span class=\"p\">:</span> <span class=\"s2\">&quot;Text-based metadata for this event&quot;</span><span class=\"p\">},</span>\n    <span class=\"p\">)</span>\n</pre></div>\n</div>\n<dl class=\"field-list simple\">\n<dt class=\"field-odd\">Parameters</dt>\n<dd class=\"field-odd\"><p><strong>path</strong> (<em>Sequence</em><em>[</em><a class=\"reference external\" href=\"https://docs.python.org/3/library/stdtypes.html#str\" title=\"(in Python v3.8)\"><em>str</em></a><em>]</em>) \u2013 String, list of strings, or tuple of strings.  A list of strings\nrepresent the hierarchical structure of the asset_key.</p>\n</dd>\n</dl>\n<dl class=\"py method\">\n<dt id=\"dagster.AssetKey.to_string\">\n<code class=\"sig-name descname\"><span class=\"pre\">to_string</span></code><span class=\"sig-paren\">(</span><em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">legacy</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">False</span></span></em><span class=\"sig-paren\">)</span><a class=\"reference internal\" href=\"../../../../_modules/dagster/core/definitions/events#AssetKey.to_string\"><span class=\"viewcode-link\"><span class=\"pre\">[source]</span></span></a><a class=\"headerlink\" href=\"#dagster.AssetKey.to_string\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>E.g. \u2018[\u201cfirst_component\u201d, \u201csecond_component\u201d]\u2019</p>\n</dd></dl>\n\n<dl class=\"py method\">\n<dt id=\"dagster.AssetKey.to_user_string\">\n<code class=\"sig-name descname\"><span class=\"pre\">to_user_string</span></code><span class=\"sig-paren\">(</span><span class=\"sig-paren\">)</span><a class=\"reference internal\" href=\"../../../../_modules/dagster/core/definitions/events#AssetKey.to_user_string\"><span class=\"viewcode-link\"><span class=\"pre\">[source]</span></span></a><a class=\"headerlink\" href=\"#dagster.AssetKey.to_user_string\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>E.g. \u201cfirst_component/second_component\u201d</p>\n</dd></dl>\n\n</dd></dl>\n\n</div>\n</div>\n</div>\n", "current_page_name": "sections/api/apidocs/ops", "customsidebar": null, "display_toc": true, "meta": null, "metatags": "", "next": {"link": "../io-managers/", "title": "IO Managers"}, "page_source_suffix": ".rst", "parents": [], "prev": {"link": "../modes/", "title": "[Legacy] Modes"}, "rellinks": [["genindex", "General Index", "I", "index"], ["py-modindex", "Python Module Index", "", "modules"], ["sections/api/apidocs/io-managers", "IO Managers", "N", "next"], ["sections/api/apidocs/modes", "[Legacy] Modes", "P", "previous"]], "sidebars": ["globaltoc.html", "searchbox.html"], "sourcename": "sections/api/apidocs/ops.rst.txt", "title": "Ops", "toc": "<ul>\n<li><a class=\"reference internal\" href=\"#\">Ops</a><ul>\n<li><a class=\"reference internal\" href=\"#defining-ops\">Defining ops</a></li>\n<li><a class=\"reference internal\" href=\"#ins-outs\">Ins &amp; outs</a></li>\n<li><a class=\"reference internal\" href=\"#execution\">Execution</a></li>\n<li><a class=\"reference internal\" href=\"#events\">Events</a><ul>\n<li><a class=\"reference internal\" href=\"#event-types\">Event types</a></li>\n<li><a class=\"reference internal\" href=\"#event-metadata\">Event metadata</a></li>\n<li><a class=\"reference internal\" href=\"#metadata-types\">Metadata types</a></li>\n<li><a class=\"reference internal\" href=\"#tables\">Tables</a></li>\n<li><a class=\"reference internal\" href=\"#asset-key\">Asset key</a></li>\n</ul>\n</li>\n</ul>\n</li>\n</ul>\n"}, "partitions": {"alabaster_version": "0.7.12", "body": "<div class=\"section\" id=\"partitioned-config\">\n<h1>Partitioned Config<a class=\"headerlink\" href=\"#partitioned-config\" title=\"Permalink to this headline\">\u00b6</a></h1>\n<dl class=\"py class\">\n<dt id=\"dagster.PartitionedConfig\">\n<em class=\"property\"><span class=\"pre\">class</span> </em><code class=\"sig-prename descclassname\"><span class=\"pre\">dagster.</span></code><code class=\"sig-name descname\"><span class=\"pre\">PartitionedConfig</span></code><span class=\"sig-paren\">(</span><em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">partitions_def</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">run_config_for_partition_fn</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">decorated_fn</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">None</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">tags_for_partition_fn</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">None</span></span></em><span class=\"sig-paren\">)</span><a class=\"reference internal\" href=\"../../../../_modules/dagster/core/definitions/partition#PartitionedConfig\"><span class=\"viewcode-link\"><span class=\"pre\">[source]</span></span></a><a class=\"headerlink\" href=\"#dagster.PartitionedConfig\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Defines a way of configuring a job where the job can be run on one of a discrete set of\npartitions, and each partition corresponds to run configuration for the job.</p>\n<p>Setting PartitionedConfig as the config for a job allows you to launch backfills for that job\nand view the run history across partitions.</p>\n<dl class=\"py method\">\n<dt id=\"dagster.PartitionedConfig.get_run_config_for_partition_key\">\n<code class=\"sig-name descname\"><span class=\"pre\">get_run_config_for_partition_key</span></code><span class=\"sig-paren\">(</span><em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">partition_key</span></span></em><span class=\"sig-paren\">)</span><a class=\"reference internal\" href=\"../../../../_modules/dagster/core/definitions/partition#PartitionedConfig.get_run_config_for_partition_key\"><span class=\"viewcode-link\"><span class=\"pre\">[source]</span></span></a><a class=\"headerlink\" href=\"#dagster.PartitionedConfig.get_run_config_for_partition_key\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Generates the run config corresponding to a partition key.</p>\n<dl class=\"field-list simple\">\n<dt class=\"field-odd\">Parameters</dt>\n<dd class=\"field-odd\"><p><strong>partition_key</strong> (<a class=\"reference external\" href=\"https://docs.python.org/3/library/stdtypes.html#str\" title=\"(in Python v3.8)\"><em>str</em></a>) \u2013 the key for a partition that should be used to generate a run config.</p>\n</dd>\n</dl>\n</dd></dl>\n\n</dd></dl>\n\n<dl class=\"py function\">\n<dt id=\"dagster.static_partitioned_config\">\n<code class=\"sig-prename descclassname\"><span class=\"pre\">dagster.</span></code><code class=\"sig-name descname\"><span class=\"pre\">static_partitioned_config</span></code><span class=\"sig-paren\">(</span><em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">partition_keys</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">tags_for_partition_fn</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">None</span></span></em><span class=\"sig-paren\">)</span><a class=\"reference internal\" href=\"../../../../_modules/dagster/core/definitions/partition#static_partitioned_config\"><span class=\"viewcode-link\"><span class=\"pre\">[source]</span></span></a><a class=\"headerlink\" href=\"#dagster.static_partitioned_config\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Creates a static partitioned config for a job.</p>\n<p>The provided partition_keys returns a static list of strings identifying the set of partitions,\ngiven an optional datetime argument (representing the current time).  The list of partitions\nis static, so while the run config returned by the decorated function may change over time, the\nlist of valid partition keys does not.</p>\n<p>This has performance advantages over <cite>dynamic_partitioned_config</cite> in terms of loading different\npartition views in Dagit.</p>\n<p>The decorated function takes in a partition key and returns a valid run config for a particular\ntarget job.</p>\n<dl class=\"field-list simple\">\n<dt class=\"field-odd\">Parameters</dt>\n<dd class=\"field-odd\"><p><strong>partition_keys</strong> (<em>List</em><em>[</em><a class=\"reference external\" href=\"https://docs.python.org/3/library/stdtypes.html#str\" title=\"(in Python v3.8)\"><em>str</em></a><em>]</em>) \u2013 A list of valid partition keys, which serve as the range of\nvalues that can be provided to the decorated run config function.</p>\n</dd>\n<dt class=\"field-even\">Returns</dt>\n<dd class=\"field-even\"><p>PartitionedConfig</p>\n</dd>\n</dl>\n</dd></dl>\n\n<dl class=\"py function\">\n<dt id=\"dagster.dynamic_partitioned_config\">\n<code class=\"sig-prename descclassname\"><span class=\"pre\">dagster.</span></code><code class=\"sig-name descname\"><span class=\"pre\">dynamic_partitioned_config</span></code><span class=\"sig-paren\">(</span><em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">partition_fn</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">tags_for_partition_fn</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">None</span></span></em><span class=\"sig-paren\">)</span><a class=\"reference internal\" href=\"../../../../_modules/dagster/core/definitions/partition#dynamic_partitioned_config\"><span class=\"viewcode-link\"><span class=\"pre\">[source]</span></span></a><a class=\"headerlink\" href=\"#dagster.dynamic_partitioned_config\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Creates a dynamic partitioned config for a job.</p>\n<p>The provided partition_fn returns a list of strings identifying the set of partitions, given\nan optional datetime argument (representing the current time).  The list of partitions returned\nmay change over time.</p>\n<p>The decorated function takes in a partition key and returns a valid run config for a particular\ntarget job.</p>\n<dl class=\"field-list simple\">\n<dt class=\"field-odd\">Parameters</dt>\n<dd class=\"field-odd\"><p><strong>partition_fn</strong> (<em>Callable</em><em>[</em><em>[</em><a class=\"reference external\" href=\"https://docs.python.org/3/library/datetime.html#datetime.datetime\" title=\"(in Python v3.8)\"><em>datetime.datetime</em></a><em>]</em><em>, </em><em>Sequence</em><em>[</em><a class=\"reference external\" href=\"https://docs.python.org/3/library/stdtypes.html#str\" title=\"(in Python v3.8)\"><em>str</em></a><em>]</em><em>]</em>) \u2013 A function that generates a\nlist of valid partition keys, which serve as the range of values that can be provided\nto the decorated run config function.</p>\n</dd>\n<dt class=\"field-even\">Returns</dt>\n<dd class=\"field-even\"><p>PartitionedConfig</p>\n</dd>\n</dl>\n</dd></dl>\n\n<dl class=\"py function\">\n<dt id=\"dagster.hourly_partitioned_config\">\n<code class=\"sig-prename descclassname\"><span class=\"pre\">dagster.</span></code><code class=\"sig-name descname\"><span class=\"pre\">hourly_partitioned_config</span></code><span class=\"sig-paren\">(</span><em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">start_date</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">minute_offset</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">0</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">timezone</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">None</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">fmt</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">None</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">end_offset</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">0</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">tags_for_partition_fn</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">None</span></span></em><span class=\"sig-paren\">)</span><a class=\"reference internal\" href=\"../../../../_modules/dagster/core/definitions/time_window_partitions#hourly_partitioned_config\"><span class=\"viewcode-link\"><span class=\"pre\">[source]</span></span></a><a class=\"headerlink\" href=\"#dagster.hourly_partitioned_config\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Defines run config over a set of hourly partitions.</p>\n<p>The decorated function should accept a start datetime and end datetime, which represent the date\npartition the config should delineate.</p>\n<p>The decorated function should return a run config dictionary.</p>\n<p>The resulting object created by this decorator can be provided to the config argument of a Job.\nThe first partition in the set will start at the start_date at midnight. The last partition in\nthe set will end before the current time, unless the end_offset argument is set to a positive\nnumber. If minute_offset is provided, the start and end times of each partition will be\nminute_offset past the hour.</p>\n<dl class=\"field-list simple\">\n<dt class=\"field-odd\">Parameters</dt>\n<dd class=\"field-odd\"><ul class=\"simple\">\n<li><p><strong>start_date</strong> (<em>Union</em><em>[</em><a class=\"reference external\" href=\"https://docs.python.org/3/library/datetime.html#datetime.datetime\" title=\"(in Python v3.8)\"><em>datetime.datetime</em></a><em>, </em><a class=\"reference external\" href=\"https://docs.python.org/3/library/stdtypes.html#str\" title=\"(in Python v3.8)\"><em>str</em></a><em>]</em>) \u2013 The first date in the set of partitions. Can\nprovide in either a datetime or string format.</p></li>\n<li><p><strong>minute_offset</strong> (<a class=\"reference external\" href=\"https://docs.python.org/3/library/functions.html#int\" title=\"(in Python v3.8)\"><em>int</em></a>) \u2013 Number of minutes past the hour to \u201csplit\u201d the partition. Defaults\nto 0.</p></li>\n<li><p><strong>fmt</strong> (<em>Optional</em><em>[</em><a class=\"reference external\" href=\"https://docs.python.org/3/library/stdtypes.html#str\" title=\"(in Python v3.8)\"><em>str</em></a><em>]</em>) \u2013 The date format to use. Defaults to <cite>%Y-%m-%d</cite>.</p></li>\n<li><p><strong>timezone</strong> (<em>Optional</em><em>[</em><a class=\"reference external\" href=\"https://docs.python.org/3/library/stdtypes.html#str\" title=\"(in Python v3.8)\"><em>str</em></a><em>]</em>) \u2013 The timezone in which each date should exist.\nSupported strings for timezones are the ones provided by the\n<cite>IANA time zone database &lt;https://www.iana.org/time-zones&gt;</cite> - e.g. \u201cAmerica/Los_Angeles\u201d.</p></li>\n<li><p><strong>end_offset</strong> (<a class=\"reference external\" href=\"https://docs.python.org/3/library/functions.html#int\" title=\"(in Python v3.8)\"><em>int</em></a>) \u2013 Extends the partition set by a number of partitions equal to the value\npassed. If end_offset is 0 (the default), the last partition ends before the current\ntime. If end_offset is 1, the second-to-last partition ends before the current time,\nand so on.</p></li>\n</ul>\n</dd>\n</dl>\n<div class=\"highlight-python notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"nd\">@hourly_partitioned_config</span><span class=\"p\">(</span><span class=\"n\">start_date</span><span class=\"o\">=</span><span class=\"n\">datetime</span><span class=\"p\">(</span><span class=\"mi\">2022</span><span class=\"p\">,</span> <span class=\"mi\">03</span><span class=\"p\">,</span> <span class=\"mi\">12</span><span class=\"p\">))</span>\n<span class=\"c1\"># creates partitions (2022-03-12-00:00, 2022-03-12-01:00), (2022-03-12-01:00, 2022-03-12-02:00), ...</span>\n\n<span class=\"nd\">@hourly_partitioned_config</span><span class=\"p\">(</span><span class=\"n\">start_date</span><span class=\"o\">=</span><span class=\"n\">datetime</span><span class=\"p\">(</span><span class=\"mi\">2022</span><span class=\"p\">,</span> <span class=\"mi\">03</span><span class=\"p\">,</span> <span class=\"mi\">12</span><span class=\"p\">),</span> <span class=\"n\">minute_offset</span><span class=\"o\">=</span><span class=\"mi\">15</span><span class=\"p\">)</span>\n<span class=\"c1\"># creates partitions (2022-03-12-00:15, 2022-03-12-01:15), (2022-03-12-01:15, 2022-03-12-02:15), ...</span>\n</pre></div>\n</div>\n</dd></dl>\n\n<dl class=\"py function\">\n<dt id=\"dagster.daily_partitioned_config\">\n<code class=\"sig-prename descclassname\"><span class=\"pre\">dagster.</span></code><code class=\"sig-name descname\"><span class=\"pre\">daily_partitioned_config</span></code><span class=\"sig-paren\">(</span><em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">start_date</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">minute_offset</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">0</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">hour_offset</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">0</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">timezone</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">None</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">fmt</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">None</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">end_offset</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">0</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">tags_for_partition_fn</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">None</span></span></em><span class=\"sig-paren\">)</span><a class=\"reference internal\" href=\"../../../../_modules/dagster/core/definitions/time_window_partitions#daily_partitioned_config\"><span class=\"viewcode-link\"><span class=\"pre\">[source]</span></span></a><a class=\"headerlink\" href=\"#dagster.daily_partitioned_config\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Defines run config over a set of daily partitions.</p>\n<p>The decorated function should accept a start datetime and end datetime, which represent the bounds\nof the date partition the config should delineate.</p>\n<p>The decorated function should return a run config dictionary.</p>\n<p>The resulting object created by this decorator can be provided to the config argument of a Job.\nThe first partition in the set will start at the start_date at midnight. The last partition in\nthe set will end before the current time, unless the end_offset argument is set to a positive\nnumber. If minute_offset and/or hour_offset are used, the start and end times of each partition\nwill be hour_offset:minute_offset of each day.</p>\n<dl class=\"field-list simple\">\n<dt class=\"field-odd\">Parameters</dt>\n<dd class=\"field-odd\"><ul class=\"simple\">\n<li><p><strong>start_date</strong> (<em>Union</em><em>[</em><a class=\"reference external\" href=\"https://docs.python.org/3/library/datetime.html#datetime.datetime\" title=\"(in Python v3.8)\"><em>datetime.datetime</em></a><em>, </em><a class=\"reference external\" href=\"https://docs.python.org/3/library/stdtypes.html#str\" title=\"(in Python v3.8)\"><em>str</em></a><em>]</em>) \u2013 The first date in the set of partitions. Can\nprovide in either a datetime or string format.</p></li>\n<li><p><strong>minute_offset</strong> (<a class=\"reference external\" href=\"https://docs.python.org/3/library/functions.html#int\" title=\"(in Python v3.8)\"><em>int</em></a>) \u2013 Number of minutes past the hour to \u201csplit\u201d the partition. Defaults\nto 0.</p></li>\n<li><p><strong>hour_offset</strong> (<a class=\"reference external\" href=\"https://docs.python.org/3/library/functions.html#int\" title=\"(in Python v3.8)\"><em>int</em></a>) \u2013 Number of hours past 00:00 to \u201csplit\u201d the partition. Defaults to 0.</p></li>\n<li><p><strong>timezone</strong> (<em>Optional</em><em>[</em><a class=\"reference external\" href=\"https://docs.python.org/3/library/stdtypes.html#str\" title=\"(in Python v3.8)\"><em>str</em></a><em>]</em>) \u2013 The timezone in which each date should exist.\nSupported strings for timezones are the ones provided by the\n<cite>IANA time zone database &lt;https://www.iana.org/time-zones&gt;</cite> - e.g. \u201cAmerica/Los_Angeles\u201d.</p></li>\n<li><p><strong>fmt</strong> (<em>Optional</em><em>[</em><a class=\"reference external\" href=\"https://docs.python.org/3/library/stdtypes.html#str\" title=\"(in Python v3.8)\"><em>str</em></a><em>]</em>) \u2013 The date format to use. Defaults to <cite>%Y-%m-%d</cite>.</p></li>\n<li><p><strong>end_offset</strong> (<a class=\"reference external\" href=\"https://docs.python.org/3/library/functions.html#int\" title=\"(in Python v3.8)\"><em>int</em></a>) \u2013 Extends the partition set by a number of partitions equal to the value\npassed. If end_offset is 0 (the default), the last partition ends before the current\ntime. If end_offset is 1, the second-to-last partition ends before the current time,\nand so on.</p></li>\n</ul>\n</dd>\n</dl>\n<div class=\"highlight-python notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"nd\">@daily_partitioned_config</span><span class=\"p\">(</span><span class=\"n\">start_date</span><span class=\"o\">=</span><span class=\"s2\">&quot;2022-03-12&quot;</span><span class=\"p\">)</span>\n<span class=\"c1\"># creates partitions (2022-03-12-00:00, 2022-03-13-00:00), (2022-03-13-00:00, 2022-03-14-00:00), ...</span>\n\n<span class=\"nd\">@daily_partitioned_config</span><span class=\"p\">(</span><span class=\"n\">start_date</span><span class=\"o\">=</span><span class=\"s2\">&quot;2022-03-12&quot;</span><span class=\"p\">,</span> <span class=\"n\">minute_offset</span><span class=\"o\">=</span><span class=\"mi\">15</span><span class=\"p\">,</span> <span class=\"n\">hour_offset</span><span class=\"o\">=</span><span class=\"mi\">16</span><span class=\"p\">)</span>\n<span class=\"c1\"># creates partitions (2022-03-12-16:15, 2022-03-13-16:15), (2022-03-13-16:15, 2022-03-14-16:15), ...</span>\n</pre></div>\n</div>\n</dd></dl>\n\n<dl class=\"py function\">\n<dt id=\"dagster.weekly_partitioned_config\">\n<code class=\"sig-prename descclassname\"><span class=\"pre\">dagster.</span></code><code class=\"sig-name descname\"><span class=\"pre\">weekly_partitioned_config</span></code><span class=\"sig-paren\">(</span><em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">start_date</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">minute_offset</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">0</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">hour_offset</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">0</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">day_offset</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">0</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">timezone</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">None</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">fmt</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">None</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">end_offset</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">0</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">tags_for_partition_fn</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">None</span></span></em><span class=\"sig-paren\">)</span><a class=\"reference internal\" href=\"../../../../_modules/dagster/core/definitions/time_window_partitions#weekly_partitioned_config\"><span class=\"viewcode-link\"><span class=\"pre\">[source]</span></span></a><a class=\"headerlink\" href=\"#dagster.weekly_partitioned_config\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Defines run config over a set of weekly partitions.</p>\n<p>The decorated function should accept a start datetime and end datetime, which represent the date\npartition the config should delineate.</p>\n<p>The decorated function should return a run config dictionary.</p>\n<p>The resulting object created by this decorator can be provided to the config argument of a Job.\nThe first partition in the set will start at the start_date. The last partition in the set will\nend before the current time, unless the end_offset argument is set to a positive number. If\nday_offset is provided, the start and end date of each partition will be day of the week\ncorresponding to day_offset (0 indexed with Sunday as the start of the week). If\nminute_offset and/or hour_offset are used, the start and end times of each partition will be\nhour_offset:minute_offset of each day.</p>\n<dl class=\"field-list simple\">\n<dt class=\"field-odd\">Parameters</dt>\n<dd class=\"field-odd\"><ul class=\"simple\">\n<li><p><strong>start_date</strong> (<em>Union</em><em>[</em><a class=\"reference external\" href=\"https://docs.python.org/3/library/datetime.html#datetime.datetime\" title=\"(in Python v3.8)\"><em>datetime.datetime</em></a><em>, </em><a class=\"reference external\" href=\"https://docs.python.org/3/library/stdtypes.html#str\" title=\"(in Python v3.8)\"><em>str</em></a><em>]</em>) \u2013 The first date in the set of partitions will\nSunday at midnight following start_date. Can provide in either a datetime or string\nformat.</p></li>\n<li><p><strong>minute_offset</strong> (<a class=\"reference external\" href=\"https://docs.python.org/3/library/functions.html#int\" title=\"(in Python v3.8)\"><em>int</em></a>) \u2013 Number of minutes past the hour to \u201csplit\u201d the partition. Defaults\nto 0.</p></li>\n<li><p><strong>hour_offset</strong> (<a class=\"reference external\" href=\"https://docs.python.org/3/library/functions.html#int\" title=\"(in Python v3.8)\"><em>int</em></a>) \u2013 Number of hours past 00:00 to \u201csplit\u201d the partition. Defaults to 0.</p></li>\n<li><p><strong>day_offset</strong> (<a class=\"reference external\" href=\"https://docs.python.org/3/library/functions.html#int\" title=\"(in Python v3.8)\"><em>int</em></a>) \u2013 Day of the week to \u201csplit\u201d the partition. Defaults to 0 (Sunday).</p></li>\n<li><p><strong>timezone</strong> (<em>Optional</em><em>[</em><a class=\"reference external\" href=\"https://docs.python.org/3/library/stdtypes.html#str\" title=\"(in Python v3.8)\"><em>str</em></a><em>]</em>) \u2013 The timezone in which each date should exist.\nSupported strings for timezones are the ones provided by the\n<cite>IANA time zone database &lt;https://www.iana.org/time-zones&gt;</cite> - e.g. \u201cAmerica/Los_Angeles\u201d.</p></li>\n<li><p><strong>fmt</strong> (<em>Optional</em><em>[</em><a class=\"reference external\" href=\"https://docs.python.org/3/library/stdtypes.html#str\" title=\"(in Python v3.8)\"><em>str</em></a><em>]</em>) \u2013 The date format to use. Defaults to <cite>%Y-%m-%d</cite>.</p></li>\n<li><p><strong>end_offset</strong> (<a class=\"reference external\" href=\"https://docs.python.org/3/library/functions.html#int\" title=\"(in Python v3.8)\"><em>int</em></a>) \u2013 Extends the partition set by a number of partitions equal to the value\npassed. If end_offset is 0 (the default), the last partition ends before the current\ntime. If end_offset is 1, the second-to-last partition ends before the current time,\nand so on.</p></li>\n</ul>\n</dd>\n</dl>\n<div class=\"highlight-python notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"nd\">@weekly_partitioned_config</span><span class=\"p\">(</span><span class=\"n\">start_date</span><span class=\"o\">=</span><span class=\"s2\">&quot;2022-03-12&quot;</span><span class=\"p\">)</span>\n<span class=\"c1\"># creates partitions (2022-03-13-00:00, 2022-03-20-00:00), (2022-03-20-00:00, 2022-03-27-00:00), ...</span>\n\n<span class=\"nd\">@weekly_partitioned_config</span><span class=\"p\">(</span><span class=\"n\">start_date</span><span class=\"o\">=</span><span class=\"s2\">&quot;2022-03-12&quot;</span><span class=\"p\">,</span> <span class=\"n\">minute_offset</span><span class=\"o\">=</span><span class=\"mi\">15</span><span class=\"p\">,</span> <span class=\"n\">hour_offset</span><span class=\"o\">=</span><span class=\"mi\">3</span><span class=\"p\">,</span> <span class=\"n\">day_offset</span><span class=\"o\">=</span><span class=\"mi\">6</span><span class=\"p\">)</span>\n<span class=\"c1\"># creates partitions (2022-03-12-03:15, 2022-03-19-03:15), (2022-03-19-03:15, 2022-03-26-03:15), ...</span>\n</pre></div>\n</div>\n</dd></dl>\n\n<dl class=\"py function\">\n<dt id=\"dagster.monthly_partitioned_config\">\n<code class=\"sig-prename descclassname\"><span class=\"pre\">dagster.</span></code><code class=\"sig-name descname\"><span class=\"pre\">monthly_partitioned_config</span></code><span class=\"sig-paren\">(</span><em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">start_date</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">minute_offset</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">0</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">hour_offset</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">0</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">day_offset</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">1</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">timezone</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">None</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">fmt</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">None</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">end_offset</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">0</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">tags_for_partition_fn</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">None</span></span></em><span class=\"sig-paren\">)</span><a class=\"reference internal\" href=\"../../../../_modules/dagster/core/definitions/time_window_partitions#monthly_partitioned_config\"><span class=\"viewcode-link\"><span class=\"pre\">[source]</span></span></a><a class=\"headerlink\" href=\"#dagster.monthly_partitioned_config\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Defines run config over a set of monthly partitions.</p>\n<p>The decorated function should accept a start datetime and end datetime, which represent the date\npartition the config should delineate.</p>\n<p>The decorated function should return a run config dictionary.</p>\n<p>The resulting object created by this decorator can be provided to the config argument of a Job.\nThe first partition in the set will start at midnight on the soonest first of the month after\nstart_date. The last partition in the set will end before the current time, unless the\nend_offset argument is set to a positive number. If day_offset is provided, the start and end\ndate of each partition will be day_offset. If minute_offset and/or hour_offset are used, the\nstart and end times of each partition will be hour_offset:minute_offset of each day.</p>\n<dl class=\"field-list simple\">\n<dt class=\"field-odd\">Parameters</dt>\n<dd class=\"field-odd\"><ul class=\"simple\">\n<li><p><strong>start_date</strong> (<em>Union</em><em>[</em><a class=\"reference external\" href=\"https://docs.python.org/3/library/datetime.html#datetime.datetime\" title=\"(in Python v3.8)\"><em>datetime.datetime</em></a><em>, </em><a class=\"reference external\" href=\"https://docs.python.org/3/library/stdtypes.html#str\" title=\"(in Python v3.8)\"><em>str</em></a><em>]</em>) \u2013 The first date in the set of partitions will be\nmidnight the sonnest first of the month following start_date. Can provide in either a\ndatetime or string format.</p></li>\n<li><p><strong>minute_offset</strong> (<a class=\"reference external\" href=\"https://docs.python.org/3/library/functions.html#int\" title=\"(in Python v3.8)\"><em>int</em></a>) \u2013 Number of minutes past the hour to \u201csplit\u201d the partition. Defaults\nto 0.</p></li>\n<li><p><strong>hour_offset</strong> (<a class=\"reference external\" href=\"https://docs.python.org/3/library/functions.html#int\" title=\"(in Python v3.8)\"><em>int</em></a>) \u2013 Number of hours past 00:00 to \u201csplit\u201d the partition. Defaults to 0.</p></li>\n<li><p><strong>day_offset</strong> (<a class=\"reference external\" href=\"https://docs.python.org/3/library/functions.html#int\" title=\"(in Python v3.8)\"><em>int</em></a>) \u2013 Day of the month to \u201csplit\u201d the partition. Defaults to 1.</p></li>\n<li><p><strong>timezone</strong> (<em>Optional</em><em>[</em><a class=\"reference external\" href=\"https://docs.python.org/3/library/stdtypes.html#str\" title=\"(in Python v3.8)\"><em>str</em></a><em>]</em>) \u2013 The timezone in which each date should exist.\nSupported strings for timezones are the ones provided by the\n<cite>IANA time zone database &lt;https://www.iana.org/time-zones&gt;</cite> - e.g. \u201cAmerica/Los_Angeles\u201d.</p></li>\n<li><p><strong>fmt</strong> (<em>Optional</em><em>[</em><a class=\"reference external\" href=\"https://docs.python.org/3/library/stdtypes.html#str\" title=\"(in Python v3.8)\"><em>str</em></a><em>]</em>) \u2013 The date format to use. Defaults to <cite>%Y-%m-%d</cite>.</p></li>\n<li><p><strong>end_offset</strong> (<a class=\"reference external\" href=\"https://docs.python.org/3/library/functions.html#int\" title=\"(in Python v3.8)\"><em>int</em></a>) \u2013 Extends the partition set by a number of partitions equal to the value\npassed. If end_offset is 0 (the default), the last partition ends before the current\ntime. If end_offset is 1, the second-to-last partition ends before the current time,\nand so on.</p></li>\n</ul>\n</dd>\n</dl>\n<div class=\"highlight-python notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"nd\">@monthly_partitioned_config</span><span class=\"p\">(</span><span class=\"n\">start_date</span><span class=\"o\">=</span><span class=\"s2\">&quot;2022-03-12&quot;</span><span class=\"p\">)</span>\n<span class=\"c1\"># creates partitions (2022-04-01-00:00, 2022-05-01-00:00), (2022-05-01-00:00, 2022-06-01-00:00), ...</span>\n\n<span class=\"nd\">@monthly_partitioned_config</span><span class=\"p\">(</span><span class=\"n\">start_date</span><span class=\"o\">=</span><span class=\"s2\">&quot;2022-03-12&quot;</span><span class=\"p\">,</span> <span class=\"n\">minute_offset</span><span class=\"o\">=</span><span class=\"mi\">15</span><span class=\"p\">,</span> <span class=\"n\">hour_offset</span><span class=\"o\">=</span><span class=\"mi\">3</span><span class=\"p\">,</span> <span class=\"n\">day_offset</span><span class=\"o\">=</span><span class=\"mi\">5</span><span class=\"p\">)</span>\n<span class=\"c1\"># creates partitions (2022-04-05-03:15, 2022-05-05-03:15), (2022-05-05-03:15, 2022-06-05-03:15), ...</span>\n</pre></div>\n</div>\n</dd></dl>\n\n</div>\n<div class=\"section\" id=\"partitions-definitions\">\n<h1>Partitions Definitions<a class=\"headerlink\" href=\"#partitions-definitions\" title=\"Permalink to this headline\">\u00b6</a></h1>\n<dl class=\"py class\">\n<dt id=\"dagster.PartitionsDefinition\">\n<em class=\"property\"><span class=\"pre\">class</span> </em><code class=\"sig-prename descclassname\"><span class=\"pre\">dagster.</span></code><code class=\"sig-name descname\"><span class=\"pre\">PartitionsDefinition</span></code><a class=\"reference internal\" href=\"../../../../_modules/dagster/core/definitions/partition#PartitionsDefinition\"><span class=\"viewcode-link\"><span class=\"pre\">[source]</span></span></a><a class=\"headerlink\" href=\"#dagster.PartitionsDefinition\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd></dd></dl>\n\n<dl class=\"py class\">\n<dt id=\"dagster.HourlyPartitionsDefinition\">\n<em class=\"property\"><span class=\"pre\">class</span> </em><code class=\"sig-prename descclassname\"><span class=\"pre\">dagster.</span></code><code class=\"sig-name descname\"><span class=\"pre\">HourlyPartitionsDefinition</span></code><span class=\"sig-paren\">(</span><em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">start_date</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">minute_offset</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">0</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">timezone</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">None</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">fmt</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">None</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">end_offset</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">0</span></span></em><span class=\"sig-paren\">)</span><a class=\"reference internal\" href=\"../../../../_modules/dagster/core/definitions/time_window_partitions#HourlyPartitionsDefinition\"><span class=\"viewcode-link\"><span class=\"pre\">[source]</span></span></a><a class=\"headerlink\" href=\"#dagster.HourlyPartitionsDefinition\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd></dd></dl>\n\n<dl class=\"py class\">\n<dt id=\"dagster.DailyPartitionsDefinition\">\n<em class=\"property\"><span class=\"pre\">class</span> </em><code class=\"sig-prename descclassname\"><span class=\"pre\">dagster.</span></code><code class=\"sig-name descname\"><span class=\"pre\">DailyPartitionsDefinition</span></code><span class=\"sig-paren\">(</span><em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">start_date</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">minute_offset</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">0</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">hour_offset</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">0</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">timezone</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">None</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">fmt</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">None</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">end_offset</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">0</span></span></em><span class=\"sig-paren\">)</span><a class=\"reference internal\" href=\"../../../../_modules/dagster/core/definitions/time_window_partitions#DailyPartitionsDefinition\"><span class=\"viewcode-link\"><span class=\"pre\">[source]</span></span></a><a class=\"headerlink\" href=\"#dagster.DailyPartitionsDefinition\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd></dd></dl>\n\n<dl class=\"py class\">\n<dt id=\"dagster.WeeklyPartitionsDefinition\">\n<em class=\"property\"><span class=\"pre\">class</span> </em><code class=\"sig-prename descclassname\"><span class=\"pre\">dagster.</span></code><code class=\"sig-name descname\"><span class=\"pre\">WeeklyPartitionsDefinition</span></code><span class=\"sig-paren\">(</span><em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">start_date</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">minute_offset</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">0</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">hour_offset</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">0</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">day_offset</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">0</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">timezone</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">None</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">fmt</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">None</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">end_offset</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">0</span></span></em><span class=\"sig-paren\">)</span><a class=\"reference internal\" href=\"../../../../_modules/dagster/core/definitions/time_window_partitions#WeeklyPartitionsDefinition\"><span class=\"viewcode-link\"><span class=\"pre\">[source]</span></span></a><a class=\"headerlink\" href=\"#dagster.WeeklyPartitionsDefinition\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd></dd></dl>\n\n<dl class=\"py class\">\n<dt id=\"dagster.MonthlyPartitionsDefinition\">\n<em class=\"property\"><span class=\"pre\">class</span> </em><code class=\"sig-prename descclassname\"><span class=\"pre\">dagster.</span></code><code class=\"sig-name descname\"><span class=\"pre\">MonthlyPartitionsDefinition</span></code><span class=\"sig-paren\">(</span><em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">start_date</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">minute_offset</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">0</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">hour_offset</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">0</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">day_offset</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">1</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">timezone</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">None</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">fmt</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">None</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">end_offset</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">0</span></span></em><span class=\"sig-paren\">)</span><a class=\"reference internal\" href=\"../../../../_modules/dagster/core/definitions/time_window_partitions#MonthlyPartitionsDefinition\"><span class=\"viewcode-link\"><span class=\"pre\">[source]</span></span></a><a class=\"headerlink\" href=\"#dagster.MonthlyPartitionsDefinition\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd></dd></dl>\n\n<dl class=\"py class\">\n<dt id=\"dagster.TimeWindowPartitionsDefinition\">\n<em class=\"property\"><span class=\"pre\">class</span> </em><code class=\"sig-prename descclassname\"><span class=\"pre\">dagster.</span></code><code class=\"sig-name descname\"><span class=\"pre\">TimeWindowPartitionsDefinition</span></code><span class=\"sig-paren\">(</span><em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">schedule_type</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">start</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">timezone</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">fmt</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">end_offset</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">minute_offset</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">0</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">hour_offset</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">0</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">day_offset</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">None</span></span></em><span class=\"sig-paren\">)</span><a class=\"reference internal\" href=\"../../../../_modules/dagster/core/definitions/time_window_partitions#TimeWindowPartitionsDefinition\"><span class=\"viewcode-link\"><span class=\"pre\">[source]</span></span></a><a class=\"headerlink\" href=\"#dagster.TimeWindowPartitionsDefinition\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd></dd></dl>\n\n<dl class=\"py class\">\n<dt id=\"dagster.StaticPartitionsDefinition\">\n<em class=\"property\"><span class=\"pre\">class</span> </em><code class=\"sig-prename descclassname\"><span class=\"pre\">dagster.</span></code><code class=\"sig-name descname\"><span class=\"pre\">StaticPartitionsDefinition</span></code><span class=\"sig-paren\">(</span><em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">partition_keys</span></span></em><span class=\"sig-paren\">)</span><a class=\"reference internal\" href=\"../../../../_modules/dagster/core/definitions/partition#StaticPartitionsDefinition\"><span class=\"viewcode-link\"><span class=\"pre\">[source]</span></span></a><a class=\"headerlink\" href=\"#dagster.StaticPartitionsDefinition\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd></dd></dl>\n\n</div>\n<div class=\"section\" id=\"partitioned-schedules\">\n<h1>Partitioned Schedules<a class=\"headerlink\" href=\"#partitioned-schedules\" title=\"Permalink to this headline\">\u00b6</a></h1>\n<dl class=\"py function\">\n<dt>\n<code class=\"sig-prename descclassname\"><span class=\"pre\">dagster.</span></code><code class=\"sig-name descname\"><span class=\"pre\">build_schedule_from_partitioned_job</span></code><span class=\"sig-paren\">(</span><em class=\"sig-param\"><span class=\"pre\">job</span></em>, <em class=\"sig-param\"><span class=\"pre\">description=None</span></em>, <em class=\"sig-param\"><span class=\"pre\">name=None</span></em>, <em class=\"sig-param\"><span class=\"pre\">minute_of_hour=None</span></em>, <em class=\"sig-param\"><span class=\"pre\">hour_of_day=None</span></em>, <em class=\"sig-param\"><span class=\"pre\">day_of_week=None</span></em>, <em class=\"sig-param\"><span class=\"pre\">day_of_month=None</span></em>, <em class=\"sig-param\"><span class=\"pre\">default_status=&lt;DefaultScheduleStatus.STOPPED:</span> <span class=\"pre\">'STOPPED'&gt;</span></em><span class=\"sig-paren\">)</span><a class=\"reference internal\" href=\"../../../../_modules/dagster/core/definitions/partitioned_schedule#build_schedule_from_partitioned_job\"><span class=\"viewcode-link\"><span class=\"pre\">[source]</span></span></a></dt>\n<dd><p>Creates a schedule from a time window-partitioned job.</p>\n<p>The schedule executes at the cadence specified by the partitioning of the given job.</p>\n</dd></dl>\n\n</div>\n<div class=\"section\" id=\"legacy-functions\">\n<h1>Legacy Functions<a class=\"headerlink\" href=\"#legacy-functions\" title=\"Permalink to this headline\">\u00b6</a></h1>\n<p>The following functions are useful for working with partitions on legacy pipelines.</p>\n<dl class=\"py class\">\n<dt id=\"dagster.Partition\">\n<em class=\"property\"><span class=\"pre\">class</span> </em><code class=\"sig-prename descclassname\"><span class=\"pre\">dagster.</span></code><code class=\"sig-name descname\"><span class=\"pre\">Partition</span></code><span class=\"sig-paren\">(</span><em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">value</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">name</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">None</span></span></em><span class=\"sig-paren\">)</span><a class=\"reference internal\" href=\"../../../../_modules/dagster/core/definitions/partition#Partition\"><span class=\"viewcode-link\"><span class=\"pre\">[source]</span></span></a><a class=\"headerlink\" href=\"#dagster.Partition\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>A Partition represents a single slice of the entire set of a job\u2019s possible work. It consists\nof a value, which is an object that represents that partition, and an optional name, which is\nused to label the partition in a human-readable way.</p>\n<dl class=\"field-list simple\">\n<dt class=\"field-odd\">Parameters</dt>\n<dd class=\"field-odd\"><ul class=\"simple\">\n<li><p><strong>value</strong> (<em>Any</em>) \u2013 The object for this partition</p></li>\n<li><p><strong>name</strong> (<a class=\"reference external\" href=\"https://docs.python.org/3/library/stdtypes.html#str\" title=\"(in Python v3.8)\"><em>str</em></a>) \u2013 Name for this partition</p></li>\n</ul>\n</dd>\n</dl>\n</dd></dl>\n\n<dl class=\"py class\">\n<dt id=\"dagster.PartitionSetDefinition\">\n<em class=\"property\"><span class=\"pre\">class</span> </em><code class=\"sig-prename descclassname\"><span class=\"pre\">dagster.</span></code><code class=\"sig-name descname\"><span class=\"pre\">PartitionSetDefinition</span></code><span class=\"sig-paren\">(</span><em class=\"sig-param\"><span class=\"pre\">name</span></em>, <em class=\"sig-param\"><span class=\"pre\">pipeline_name=None</span></em>, <em class=\"sig-param\"><span class=\"pre\">partition_fn=None</span></em>, <em class=\"sig-param\"><span class=\"pre\">solid_selection=None</span></em>, <em class=\"sig-param\"><span class=\"pre\">mode=None</span></em>, <em class=\"sig-param\"><span class=\"pre\">run_config_fn_for_partition=&lt;function</span> <span class=\"pre\">PartitionSetDefinition.&lt;lambda&gt;&gt;</span></em>, <em class=\"sig-param\"><span class=\"pre\">tags_fn_for_partition=&lt;function</span> <span class=\"pre\">PartitionSetDefinition.&lt;lambda&gt;&gt;</span></em>, <em class=\"sig-param\"><span class=\"pre\">partitions_def=None</span></em>, <em class=\"sig-param\"><span class=\"pre\">job_name=None</span></em><span class=\"sig-paren\">)</span><a class=\"reference internal\" href=\"../../../../_modules/dagster/core/definitions/partition#PartitionSetDefinition\"><span class=\"viewcode-link\"><span class=\"pre\">[source]</span></span></a><a class=\"headerlink\" href=\"#dagster.PartitionSetDefinition\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Defines a partition set, representing the set of slices making up an axis of a pipeline</p>\n<dl class=\"field-list simple\">\n<dt class=\"field-odd\">Parameters</dt>\n<dd class=\"field-odd\"><ul class=\"simple\">\n<li><p><strong>name</strong> (<a class=\"reference external\" href=\"https://docs.python.org/3/library/stdtypes.html#str\" title=\"(in Python v3.8)\"><em>str</em></a>) \u2013 Name for this partition set</p></li>\n<li><p><strong>pipeline_name</strong> (<a class=\"reference external\" href=\"https://docs.python.org/3/library/stdtypes.html#str\" title=\"(in Python v3.8)\"><em>str</em></a>) \u2013 The name of the pipeline definition</p></li>\n<li><p><strong>partition_fn</strong> (<em>Optional</em><em>[</em><em>Callable</em><em>[</em><em>void</em><em>, </em><em>List</em><em>[</em><a class=\"reference internal\" href=\"#dagster.Partition\" title=\"dagster.Partition\"><em>Partition</em></a><em>]</em><em>]</em><em>]</em>) \u2013 User-provided function to define\nthe set of valid partition objects.</p></li>\n<li><p><strong>solid_selection</strong> (<em>Optional</em><em>[</em><em>List</em><em>[</em><a class=\"reference external\" href=\"https://docs.python.org/3/library/stdtypes.html#str\" title=\"(in Python v3.8)\"><em>str</em></a><em>]</em><em>]</em>) \u2013 A list of solid subselection (including single\nsolid names) to execute with this partition. e.g. <code class=\"docutils literal notranslate\"><span class=\"pre\">['*some_solid+',</span> <span class=\"pre\">'other_solid']</span></code></p></li>\n<li><p><strong>mode</strong> (<em>Optional</em><em>[</em><a class=\"reference external\" href=\"https://docs.python.org/3/library/stdtypes.html#str\" title=\"(in Python v3.8)\"><em>str</em></a><em>]</em>) \u2013 The mode to apply when executing this partition. (default: \u2018default\u2019)</p></li>\n<li><p><strong>run_config_fn_for_partition</strong> (<em>Callable</em><em>[</em><em>[</em><a class=\"reference internal\" href=\"#dagster.Partition\" title=\"dagster.Partition\"><em>Partition</em></a><em>]</em><em>, </em><em>Any</em><em>]</em>) \u2013 A\nfunction that takes a <a class=\"reference internal\" href=\"#dagster.Partition\" title=\"dagster.Partition\"><code class=\"xref py py-class docutils literal notranslate\"><span class=\"pre\">Partition</span></code></a> and returns the run\nconfiguration that parameterizes the execution for this partition.</p></li>\n<li><p><strong>tags_fn_for_partition</strong> (<em>Callable</em><em>[</em><em>[</em><a class=\"reference internal\" href=\"#dagster.Partition\" title=\"dagster.Partition\"><em>Partition</em></a><em>]</em><em>, </em><em>Optional</em><em>[</em><a class=\"reference external\" href=\"https://docs.python.org/3/library/stdtypes.html#dict\" title=\"(in Python v3.8)\"><em>dict</em></a><em>[</em><a class=\"reference external\" href=\"https://docs.python.org/3/library/stdtypes.html#str\" title=\"(in Python v3.8)\"><em>str</em></a><em>, </em><a class=\"reference external\" href=\"https://docs.python.org/3/library/stdtypes.html#str\" title=\"(in Python v3.8)\"><em>str</em></a><em>]</em><em>]</em><em>]</em>) \u2013 A function that\ntakes a <a class=\"reference internal\" href=\"#dagster.Partition\" title=\"dagster.Partition\"><code class=\"xref py py-class docutils literal notranslate\"><span class=\"pre\">Partition</span></code></a> and returns a list of key value pairs that will\nbe added to the generated run for this partition.</p></li>\n<li><p><strong>partitions_def</strong> (<em>Optional</em><em>[</em><a class=\"reference internal\" href=\"#dagster.PartitionsDefinition\" title=\"dagster.PartitionsDefinition\"><em>PartitionsDefinition</em></a><em>]</em>) \u2013 A set of parameters used to construct the set\nof valid partition objects.</p></li>\n</ul>\n</dd>\n</dl>\n<dl class=\"py method\">\n<dt id=\"dagster.PartitionSetDefinition.create_schedule_definition\">\n<code class=\"sig-name descname\"><span class=\"pre\">create_schedule_definition</span></code><span class=\"sig-paren\">(</span><em class=\"sig-param\"><span class=\"pre\">schedule_name</span></em>, <em class=\"sig-param\"><span class=\"pre\">cron_schedule</span></em>, <em class=\"sig-param\"><span class=\"pre\">partition_selector</span></em>, <em class=\"sig-param\"><span class=\"pre\">should_execute=None</span></em>, <em class=\"sig-param\"><span class=\"pre\">environment_vars=None</span></em>, <em class=\"sig-param\"><span class=\"pre\">execution_timezone=None</span></em>, <em class=\"sig-param\"><span class=\"pre\">description=None</span></em>, <em class=\"sig-param\"><span class=\"pre\">decorated_fn=None</span></em>, <em class=\"sig-param\"><span class=\"pre\">job=None</span></em>, <em class=\"sig-param\"><span class=\"pre\">default_status=&lt;DefaultScheduleStatus.STOPPED:</span> <span class=\"pre\">'STOPPED'&gt;</span></em><span class=\"sig-paren\">)</span><a class=\"reference internal\" href=\"../../../../_modules/dagster/core/definitions/partition#PartitionSetDefinition.create_schedule_definition\"><span class=\"viewcode-link\"><span class=\"pre\">[source]</span></span></a><a class=\"headerlink\" href=\"#dagster.PartitionSetDefinition.create_schedule_definition\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Create a ScheduleDefinition from a PartitionSetDefinition.</p>\n<dl class=\"field-list simple\">\n<dt class=\"field-odd\">Parameters</dt>\n<dd class=\"field-odd\"><ul class=\"simple\">\n<li><p><strong>schedule_name</strong> (<a class=\"reference external\" href=\"https://docs.python.org/3/library/stdtypes.html#str\" title=\"(in Python v3.8)\"><em>str</em></a>) \u2013 The name of the schedule.</p></li>\n<li><p><strong>cron_schedule</strong> (<a class=\"reference external\" href=\"https://docs.python.org/3/library/stdtypes.html#str\" title=\"(in Python v3.8)\"><em>str</em></a>) \u2013 A valid cron string for the schedule</p></li>\n<li><p><strong>partition_selector</strong> (<em>Callable</em><em>[</em><a class=\"reference internal\" href=\"schedules-sensors#dagster.ScheduleEvaluationContext\" title=\"dagster.ScheduleEvaluationContext\"><em>ScheduleEvaluationContext</em></a><em>, </em><a class=\"reference internal\" href=\"#dagster.PartitionSetDefinition\" title=\"dagster.PartitionSetDefinition\"><em>PartitionSetDefinition</em></a><em>]</em><em>, </em><em>Union</em><em>[</em><a class=\"reference internal\" href=\"#dagster.Partition\" title=\"dagster.Partition\"><em>Partition</em></a><em>, </em><em>List</em><em>[</em><a class=\"reference internal\" href=\"#dagster.Partition\" title=\"dagster.Partition\"><em>Partition</em></a><em>]</em><em>]</em>) \u2013 Function that determines the partition to use at a given execution time. Can return\neither a single Partition or a list of Partitions. For time-based partition sets,\nwill likely be either <cite>identity_partition_selector</cite> or a selector returned by\n<cite>create_offset_partition_selector</cite>.</p></li>\n<li><p><strong>should_execute</strong> (<em>Optional</em><em>[</em><em>function</em><em>]</em>) \u2013 Function that runs at schedule execution time that\ndetermines whether a schedule should execute. Defaults to a function that always returns\n<code class=\"docutils literal notranslate\"><span class=\"pre\">True</span></code>.</p></li>\n<li><p><strong>environment_vars</strong> (<em>Optional</em><em>[</em><a class=\"reference external\" href=\"https://docs.python.org/3/library/stdtypes.html#dict\" title=\"(in Python v3.8)\"><em>dict</em></a><em>]</em>) \u2013 The environment variables to set for the schedule.</p></li>\n<li><p><strong>execution_timezone</strong> (<em>Optional</em><em>[</em><a class=\"reference external\" href=\"https://docs.python.org/3/library/stdtypes.html#str\" title=\"(in Python v3.8)\"><em>str</em></a><em>]</em>) \u2013 Timezone in which the schedule should run.\nSupported strings for timezones are the ones provided by the\n<cite>IANA time zone database &lt;https://www.iana.org/time-zones&gt;</cite> - e.g. \u201cAmerica/Los_Angeles\u201d.</p></li>\n<li><p><strong>description</strong> (<em>Optional</em><em>[</em><a class=\"reference external\" href=\"https://docs.python.org/3/library/stdtypes.html#str\" title=\"(in Python v3.8)\"><em>str</em></a><em>]</em>) \u2013 A human-readable description of the schedule.</p></li>\n<li><p><strong>default_status</strong> (<em>DefaultScheduleStatus</em>) \u2013 Whether the schedule starts as running or not. The default\nstatus can be overridden from Dagit or via the GraphQL API.</p></li>\n</ul>\n</dd>\n<dt class=\"field-even\">Returns</dt>\n<dd class=\"field-even\"><p><dl class=\"simple\">\n<dt>The generated PartitionScheduleDefinition for the partition</dt><dd><p>selector</p>\n</dd>\n</dl>\n</p>\n</dd>\n<dt class=\"field-odd\">Return type</dt>\n<dd class=\"field-odd\"><p><a class=\"reference internal\" href=\"schedules-sensors#dagster.PartitionScheduleDefinition\" title=\"dagster.PartitionScheduleDefinition\">PartitionScheduleDefinition</a></p>\n</dd>\n</dl>\n</dd></dl>\n\n<dl class=\"py method\">\n<dt id=\"dagster.PartitionSetDefinition.get_partitions\">\n<code class=\"sig-name descname\"><span class=\"pre\">get_partitions</span></code><span class=\"sig-paren\">(</span><em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">current_time</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">None</span></span></em><span class=\"sig-paren\">)</span><a class=\"reference internal\" href=\"../../../../_modules/dagster/core/definitions/partition#PartitionSetDefinition.get_partitions\"><span class=\"viewcode-link\"><span class=\"pre\">[source]</span></span></a><a class=\"headerlink\" href=\"#dagster.PartitionSetDefinition.get_partitions\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Return the set of known partitions.</p>\n<dl class=\"field-list simple\">\n<dt class=\"field-odd\">Parameters</dt>\n<dd class=\"field-odd\"><p><strong>current_time</strong> (<em>Optional</em><em>[</em><em>datetime</em><em>]</em>) \u2013 The evaluation time for the partition function, which\nis passed through to the <code class=\"docutils literal notranslate\"><span class=\"pre\">partition_fn</span></code> (if it accepts a parameter).  Defaults to\nthe current time in UTC.</p>\n</dd>\n</dl>\n</dd></dl>\n\n</dd></dl>\n\n<dl class=\"py function\">\n<dt id=\"dagster.date_partition_range\">\n<code class=\"sig-prename descclassname\"><span class=\"pre\">dagster.</span></code><code class=\"sig-name descname\"><span class=\"pre\">date_partition_range</span></code><span class=\"sig-paren\">(</span><em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">start</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">end</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">None</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">delta_range</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">'days'</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">fmt</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">None</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">inclusive</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">False</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">timezone</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">None</span></span></em><span class=\"sig-paren\">)</span><a class=\"reference internal\" href=\"../../../../_modules/dagster/utils/partitions#date_partition_range\"><span class=\"viewcode-link\"><span class=\"pre\">[source]</span></span></a><a class=\"headerlink\" href=\"#dagster.date_partition_range\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Utility function that returns a partition generating function to be used in creating a\n<cite>PartitionSet</cite> definition.</p>\n<dl class=\"field-list simple\">\n<dt class=\"field-odd\">Parameters</dt>\n<dd class=\"field-odd\"><ul class=\"simple\">\n<li><p><strong>start</strong> (<em>datetime</em>) \u2013 Datetime capturing the start of the time range.</p></li>\n<li><p><strong>end</strong> (<em>Optional</em><em>(</em><em>datetime</em><em>)</em>) \u2013 Datetime capturing the end of the partition.  By default, the\ncurrent time is used.  The range is not inclusive of the end\nvalue.</p></li>\n<li><p><strong>delta_range</strong> (<em>Optional</em><em>(</em><a class=\"reference external\" href=\"https://docs.python.org/3/library/stdtypes.html#str\" title=\"(in Python v3.8)\"><em>str</em></a><em>)</em>) \u2013 string representing the time duration of each partition.\nMust be a valid argument to pendulum.period.range (\u201cdays\u201d, \u201chours\u201d, \u201cmonths\u201d, etc.).</p></li>\n<li><p><strong>fmt</strong> (<em>Optional</em><em>(</em><a class=\"reference external\" href=\"https://docs.python.org/3/library/stdtypes.html#str\" title=\"(in Python v3.8)\"><em>str</em></a><em>)</em>) \u2013 Format string to represent each partition by its start time</p></li>\n<li><p><strong>inclusive</strong> (<em>Optional</em><em>(</em><a class=\"reference external\" href=\"https://docs.python.org/3/library/functions.html#bool\" title=\"(in Python v3.8)\"><em>bool</em></a><em>)</em>) \u2013 By default, the partition set only contains date interval\npartitions for which the end time of the interval is less than current time. In other\nwords, the partition set contains date interval partitions that are completely in the\npast. If inclusive is set to True, then the partition set will include all date\ninterval partitions for which the start time of the interval is less than the\ncurrent time.</p></li>\n<li><p><strong>timezone</strong> (<em>Optional</em><em>(</em><a class=\"reference external\" href=\"https://docs.python.org/3/library/stdtypes.html#str\" title=\"(in Python v3.8)\"><em>str</em></a><em>)</em>) \u2013 Timezone in which the partition values should be expressed.</p></li>\n</ul>\n</dd>\n<dt class=\"field-even\">Returns</dt>\n<dd class=\"field-even\"><p>Callable[[], List[Partition]]</p>\n</dd>\n</dl>\n</dd></dl>\n\n<dl class=\"py function\">\n<dt id=\"dagster.identity_partition_selector\">\n<code class=\"sig-prename descclassname\"><span class=\"pre\">dagster.</span></code><code class=\"sig-name descname\"><span class=\"pre\">identity_partition_selector</span></code><span class=\"sig-paren\">(</span><em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">context</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">partition_set_def</span></span></em><span class=\"sig-paren\">)</span><a class=\"reference internal\" href=\"../../../../_modules/dagster/utils/partitions#identity_partition_selector\"><span class=\"viewcode-link\"><span class=\"pre\">[source]</span></span></a><a class=\"headerlink\" href=\"#dagster.identity_partition_selector\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Utility function for supplying a partition selector when creating a schedule from a\npartition set made of <code class=\"docutils literal notranslate\"><span class=\"pre\">datetime</span></code> objects that assumes the schedule always executes at the\npartition time.</p>\n<p>It\u2019s important that the cron string passed into <code class=\"docutils literal notranslate\"><span class=\"pre\">create_schedule_definition</span></code> match\nthe partition set times. For example, a schedule created from a partition set with partitions for each day at\nmidnight would create its partition selector as follows:</p>\n<div class=\"highlight-python notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"n\">partition_set</span> <span class=\"o\">=</span> <span class=\"n\">PartitionSetDefinition</span><span class=\"p\">(</span>\n    <span class=\"n\">name</span><span class=\"o\">=</span><span class=\"s1\">&#39;hello_world_partition_set&#39;</span><span class=\"p\">,</span>\n    <span class=\"n\">pipeline_name</span><span class=\"o\">=</span><span class=\"s1\">&#39;hello_world_pipeline&#39;</span><span class=\"p\">,</span>\n    <span class=\"n\">partition_fn</span><span class=\"o\">=</span> <span class=\"n\">date_partition_range</span><span class=\"p\">(</span>\n        <span class=\"n\">start</span><span class=\"o\">=</span><span class=\"n\">datetime</span><span class=\"o\">.</span><span class=\"n\">datetime</span><span class=\"p\">(</span><span class=\"mi\">2021</span><span class=\"p\">,</span> <span class=\"mi\">1</span><span class=\"p\">,</span> <span class=\"mi\">1</span><span class=\"p\">),</span>\n        <span class=\"n\">delta_range</span><span class=\"o\">=</span><span class=\"s2\">&quot;days&quot;</span><span class=\"p\">,</span>\n        <span class=\"n\">timezone</span><span class=\"o\">=</span><span class=\"s2\">&quot;US/Central&quot;</span><span class=\"p\">,</span>\n    <span class=\"p\">)</span>\n    <span class=\"n\">run_config_fn_for_partition</span><span class=\"o\">=</span><span class=\"n\">my_run_config_fn</span><span class=\"p\">,</span>\n<span class=\"p\">)</span>\n\n<span class=\"n\">schedule_definition</span> <span class=\"o\">=</span> <span class=\"n\">partition_set</span><span class=\"o\">.</span><span class=\"n\">create_schedule_definition</span><span class=\"p\">(</span>\n    <span class=\"s2\">&quot;hello_world_daily_schedule&quot;</span><span class=\"p\">,</span>\n    <span class=\"s2\">&quot;0 0 * * *&quot;</span><span class=\"p\">,</span>\n    <span class=\"n\">partition_selector</span><span class=\"o\">=</span><span class=\"n\">identity_partition_selector</span><span class=\"p\">,</span>\n    <span class=\"n\">execution_timezone</span><span class=\"o\">=</span><span class=\"s2\">&quot;US/Central&quot;</span><span class=\"p\">,</span>\n<span class=\"p\">)</span>\n</pre></div>\n</div>\n</dd></dl>\n\n<dl class=\"py function\">\n<dt id=\"dagster.create_offset_partition_selector\">\n<code class=\"sig-prename descclassname\"><span class=\"pre\">dagster.</span></code><code class=\"sig-name descname\"><span class=\"pre\">create_offset_partition_selector</span></code><span class=\"sig-paren\">(</span><em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">execution_time_to_partition_fn</span></span></em><span class=\"sig-paren\">)</span><a class=\"reference internal\" href=\"../../../../_modules/dagster/utils/partitions#create_offset_partition_selector\"><span class=\"viewcode-link\"><span class=\"pre\">[source]</span></span></a><a class=\"headerlink\" href=\"#dagster.create_offset_partition_selector\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Utility function for supplying a partition selector when creating a schedule from a\npartition set made of <code class=\"docutils literal notranslate\"><span class=\"pre\">datetime</span></code> objects that assumes a fixed time offset between the\npartition time and the time at which the schedule executes.</p>\n<p>It\u2019s important to keep the cron string that\u2019s supplied to\n<code class=\"docutils literal notranslate\"><span class=\"pre\">PartitionSetDefinition.create_schedule_definition</span></code> in sync with the offset that\u2019s\nsupplied to this function. For example, a schedule created from a partition set with\npartitions for each day at midnight that fills in the partition for day N at day N+1 at\n10:00AM would create the partition selector as follows:</p>\n<div class=\"highlight-python notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"n\">partition_set</span> <span class=\"o\">=</span> <span class=\"n\">PartitionSetDefinition</span><span class=\"p\">(</span>\n    <span class=\"n\">name</span><span class=\"o\">=</span><span class=\"s1\">&#39;hello_world_partition_set&#39;</span><span class=\"p\">,</span>\n    <span class=\"n\">pipeline_name</span><span class=\"o\">=</span><span class=\"s1\">&#39;hello_world_pipeline&#39;</span><span class=\"p\">,</span>\n    <span class=\"n\">partition_fn</span><span class=\"o\">=</span> <span class=\"n\">date_partition_range</span><span class=\"p\">(</span>\n        <span class=\"n\">start</span><span class=\"o\">=</span><span class=\"n\">datetime</span><span class=\"o\">.</span><span class=\"n\">datetime</span><span class=\"p\">(</span><span class=\"mi\">2021</span><span class=\"p\">,</span> <span class=\"mi\">1</span><span class=\"p\">,</span> <span class=\"mi\">1</span><span class=\"p\">),</span>\n        <span class=\"n\">delta_range</span><span class=\"o\">=</span><span class=\"s2\">&quot;days&quot;</span><span class=\"p\">,</span>\n        <span class=\"n\">timezone</span><span class=\"o\">=</span><span class=\"s2\">&quot;US/Central&quot;</span><span class=\"p\">,</span>\n    <span class=\"p\">)</span>\n    <span class=\"n\">run_config_fn_for_partition</span><span class=\"o\">=</span><span class=\"n\">my_run_config_fn</span><span class=\"p\">,</span>\n<span class=\"p\">)</span>\n\n<span class=\"n\">schedule_definition</span> <span class=\"o\">=</span> <span class=\"n\">partition_set</span><span class=\"o\">.</span><span class=\"n\">create_schedule_definition</span><span class=\"p\">(</span>\n    <span class=\"s2\">&quot;daily_10am_schedule&quot;</span><span class=\"p\">,</span>\n    <span class=\"s2\">&quot;0 10 * * *&quot;</span><span class=\"p\">,</span>\n    <span class=\"n\">partition_selector</span><span class=\"o\">=</span><span class=\"n\">create_offset_partition_selector</span><span class=\"p\">(</span><span class=\"k\">lambda</span> <span class=\"n\">d</span><span class=\"p\">:</span> <span class=\"n\">d</span><span class=\"o\">.</span><span class=\"n\">subtract</span><span class=\"p\">(</span><span class=\"n\">hours</span><span class=\"o\">=</span><span class=\"mi\">10</span><span class=\"p\">,</span> <span class=\"n\">days</span><span class=\"o\">=</span><span class=\"mi\">1</span><span class=\"p\">))</span>\n    <span class=\"n\">execution_timezone</span><span class=\"o\">=</span><span class=\"s2\">&quot;US/Central&quot;</span><span class=\"p\">,</span>\n<span class=\"p\">)</span>\n</pre></div>\n</div>\n<dl class=\"field-list simple\">\n<dt class=\"field-odd\">Parameters</dt>\n<dd class=\"field-odd\"><p><strong>execution_time_to_partition_fn</strong> (<em>Callable</em><em>[</em><em>[</em><a class=\"reference external\" href=\"https://docs.python.org/3/library/datetime.html#datetime.datetime\" title=\"(in Python v3.8)\"><em>datetime.datetime</em></a><em>]</em><em>, </em><a class=\"reference external\" href=\"https://docs.python.org/3/library/datetime.html#datetime.datetime\" title=\"(in Python v3.8)\"><em>datetime.datetime</em></a><em>]</em>) \u2013 A\nfunction that maps the execution time of the schedule to the partition time.</p>\n</dd>\n</dl>\n</dd></dl>\n\n</div>\n", "current_page_name": "sections/api/apidocs/partitions", "customsidebar": null, "display_toc": true, "meta": null, "metatags": "", "next": {"link": "../pipeline/", "title": "[Legacy] Pipelines"}, "page_source_suffix": ".rst", "parents": [], "prev": {"link": "../io-managers/", "title": "IO Managers"}, "rellinks": [["genindex", "General Index", "I", "index"], ["py-modindex", "Python Module Index", "", "modules"], ["sections/api/apidocs/pipeline", "[Legacy] Pipelines", "N", "next"], ["sections/api/apidocs/io-managers", "IO Managers", "P", "previous"]], "sidebars": ["globaltoc.html", "searchbox.html"], "sourcename": "sections/api/apidocs/partitions.rst.txt", "title": "Partitioned Config", "toc": "<ul>\n<li><a class=\"reference internal\" href=\"#\">Partitioned Config</a></li>\n<li><a class=\"reference internal\" href=\"#partitions-definitions\">Partitions Definitions</a></li>\n<li><a class=\"reference internal\" href=\"#partitioned-schedules\">Partitioned Schedules</a></li>\n<li><a class=\"reference internal\" href=\"#legacy-functions\">Legacy Functions</a></li>\n</ul>\n"}, "pipeline": {"alabaster_version": "0.7.12", "body": "<div class=\"section\" id=\"legacy-pipelines\">\n<h1>[Legacy] Pipelines<a class=\"headerlink\" href=\"#legacy-pipelines\" title=\"Permalink to this headline\">\u00b6</a></h1>\n<p>As of Dagster 0.13.0, we recommend using <cite>Jobs</cite> as an alternative to <cite>Pipelines</cite>.</p>\n<div class=\"section\" id=\"pipeline-definitions\">\n<h2>Pipeline definitions<a class=\"headerlink\" href=\"#pipeline-definitions\" title=\"Permalink to this headline\">\u00b6</a></h2>\n<dl class=\"py function\">\n<dt id=\"dagster.pipeline\">\n<code class=\"sig-prename descclassname\"><span class=\"pre\">&#64;</span></code><code class=\"sig-prename descclassname\"><span class=\"pre\">dagster.</span></code><code class=\"sig-name descname\"><span class=\"pre\">pipeline</span></code><span class=\"sig-paren\">(</span><em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">name</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">None</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">description</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">None</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">mode_defs</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">None</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">preset_defs</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">None</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">tags</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">None</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">hook_defs</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">None</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">input_defs</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">None</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">output_defs</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">None</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">config_schema</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">None</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">config_fn</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">None</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">solid_retry_policy</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">None</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">version_strategy</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">None</span></span></em><span class=\"sig-paren\">)</span><a class=\"reference internal\" href=\"../../../../_modules/dagster/core/definitions/decorators/pipeline_decorator#pipeline\"><span class=\"viewcode-link\"><span class=\"pre\">[source]</span></span></a><a class=\"headerlink\" href=\"#dagster.pipeline\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Create a pipeline with the specified parameters from the decorated composition function.</p>\n<p>Using this decorator allows you to build up the dependency graph of the pipeline by writing a\nfunction that invokes solids and passes the output to other solids.</p>\n<dl class=\"field-list simple\">\n<dt class=\"field-odd\">Parameters</dt>\n<dd class=\"field-odd\"><ul class=\"simple\">\n<li><p><strong>name</strong> (<em>Optional</em><em>[</em><a class=\"reference external\" href=\"https://docs.python.org/3/library/stdtypes.html#str\" title=\"(in Python v3.8)\"><em>str</em></a><em>]</em>) \u2013 The name of the pipeline. Must be unique within any\n<a class=\"reference internal\" href=\"repositories#dagster.RepositoryDefinition\" title=\"dagster.RepositoryDefinition\"><code class=\"xref py py-class docutils literal notranslate\"><span class=\"pre\">RepositoryDefinition</span></code></a> containing the pipeline.</p></li>\n<li><p><strong>description</strong> (<em>Optional</em><em>[</em><a class=\"reference external\" href=\"https://docs.python.org/3/library/stdtypes.html#str\" title=\"(in Python v3.8)\"><em>str</em></a><em>]</em>) \u2013 A human-readable description of the pipeline.</p></li>\n<li><p><strong>mode_defs</strong> (<em>Optional</em><em>[</em><em>List</em><em>[</em><a class=\"reference internal\" href=\"modes#dagster.ModeDefinition\" title=\"dagster.ModeDefinition\"><em>ModeDefinition</em></a><em>]</em><em>]</em>) \u2013 The set of modes in which this pipeline can\noperate. Modes are used to attach resources, custom loggers, custom system storage\noptions, and custom executors to a pipeline. Modes can be used, e.g., to vary\navailable resource and logging implementations between local test and production runs.</p></li>\n<li><p><strong>preset_defs</strong> (<em>Optional</em><em>[</em><em>List</em><em>[</em><a class=\"reference internal\" href=\"presets#dagster.PresetDefinition\" title=\"dagster.PresetDefinition\"><em>PresetDefinition</em></a><em>]</em><em>]</em>) \u2013 A set of preset collections of configuration\noptions that may be used to execute a pipeline. A preset consists of an environment\ndict, an optional subset of solids to execute, and a mode selection. Presets can be used\nto ship common combinations of options to pipeline end users in Python code, and can\nbe selected by tools like Dagit.</p></li>\n<li><p><strong>tags</strong> (<em>Optional</em><em>[</em><em>Dict</em><em>[</em><a class=\"reference external\" href=\"https://docs.python.org/3/library/stdtypes.html#str\" title=\"(in Python v3.8)\"><em>str</em></a><em>, </em><em>Any</em><em>]</em><em>]</em>) \u2013 Arbitrary metadata for any execution run of the pipeline.\nValues that are not strings will be json encoded and must meet the criteria that\n<cite>json.loads(json.dumps(value)) == value</cite>.  These tag values may be overwritten by tag\nvalues provided at invocation time.</p></li>\n<li><p><strong>hook_defs</strong> (<em>Optional</em><em>[</em><em>Set</em><em>[</em><a class=\"reference internal\" href=\"hooks#dagster.HookDefinition\" title=\"dagster.HookDefinition\"><em>HookDefinition</em></a><em>]</em><em>]</em>) \u2013 A set of hook definitions applied to the\npipeline. When a hook is applied to a pipeline, it will be attached to all solid\ninstances within the pipeline.</p></li>\n<li><p><strong>solid_retry_policy</strong> (<em>Optional</em><em>[</em><a class=\"reference internal\" href=\"ops#dagster.RetryPolicy\" title=\"dagster.RetryPolicy\"><em>RetryPolicy</em></a><em>]</em>) \u2013 The default retry policy for all solids in\nthis pipeline. Only used if retry policy is not defined on the solid definition or\nsolid invocation.</p></li>\n<li><p><strong>version_strategy</strong> (<em>Optional</em><em>[</em><a class=\"reference internal\" href=\"memoization#dagster.VersionStrategy\" title=\"dagster.VersionStrategy\"><em>VersionStrategy</em></a><em>]</em>) \u2013 The version strategy to use with this\npipeline. Providing a VersionStrategy will enable memoization on the pipeline.</p></li>\n</ul>\n</dd>\n</dl>\n<p class=\"rubric\">Example</p>\n<div class=\"highlight-python notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"nd\">@solid</span><span class=\"p\">(</span><span class=\"n\">output_defs</span><span class=\"o\">=</span><span class=\"p\">[</span><span class=\"n\">OutputDefinition</span><span class=\"p\">(</span><span class=\"nb\">int</span><span class=\"p\">,</span> <span class=\"s2\">&quot;two&quot;</span><span class=\"p\">),</span> <span class=\"n\">OutputDefinition</span><span class=\"p\">(</span><span class=\"nb\">int</span><span class=\"p\">,</span> <span class=\"s2\">&quot;four&quot;</span><span class=\"p\">)])</span>\n<span class=\"k\">def</span> <span class=\"nf\">emit_two_four</span><span class=\"p\">(</span><span class=\"n\">_</span><span class=\"p\">)</span> <span class=\"o\">-&gt;</span> <span class=\"nb\">int</span><span class=\"p\">:</span>\n    <span class=\"k\">yield</span> <span class=\"n\">Output</span><span class=\"p\">(</span><span class=\"mi\">2</span><span class=\"p\">,</span> <span class=\"s2\">&quot;two&quot;</span><span class=\"p\">)</span>\n    <span class=\"k\">yield</span> <span class=\"n\">Output</span><span class=\"p\">(</span><span class=\"mi\">4</span><span class=\"p\">,</span> <span class=\"s2\">&quot;four&quot;</span><span class=\"p\">)</span>\n\n\n<span class=\"nd\">@lambda_solid</span>\n<span class=\"k\">def</span> <span class=\"nf\">add_one</span><span class=\"p\">(</span><span class=\"n\">num</span><span class=\"p\">:</span> <span class=\"nb\">int</span><span class=\"p\">)</span> <span class=\"o\">-&gt;</span> <span class=\"nb\">int</span><span class=\"p\">:</span>\n    <span class=\"k\">return</span> <span class=\"n\">num</span> <span class=\"o\">+</span> <span class=\"mi\">1</span>\n\n\n<span class=\"nd\">@lambda_solid</span>\n<span class=\"k\">def</span> <span class=\"nf\">mult_two</span><span class=\"p\">(</span><span class=\"n\">num</span><span class=\"p\">:</span> <span class=\"nb\">int</span><span class=\"p\">)</span> <span class=\"o\">-&gt;</span> <span class=\"nb\">int</span><span class=\"p\">:</span>\n    <span class=\"k\">return</span> <span class=\"n\">num</span> <span class=\"o\">*</span> <span class=\"mi\">2</span>\n\n\n<span class=\"nd\">@pipeline</span>\n<span class=\"k\">def</span> <span class=\"nf\">math_pipeline</span><span class=\"p\">():</span>\n    <span class=\"n\">two</span><span class=\"p\">,</span> <span class=\"n\">four</span> <span class=\"o\">=</span> <span class=\"n\">emit_two_four</span><span class=\"p\">()</span>\n    <span class=\"n\">add_one</span><span class=\"p\">(</span><span class=\"n\">two</span><span class=\"p\">)</span>\n    <span class=\"n\">mult_two</span><span class=\"p\">(</span><span class=\"n\">four</span><span class=\"p\">)</span>\n</pre></div>\n</div>\n</dd></dl>\n\n<dl class=\"py class\">\n<dt id=\"dagster.PipelineDefinition\">\n<em class=\"property\"><span class=\"pre\">class</span> </em><code class=\"sig-prename descclassname\"><span class=\"pre\">dagster.</span></code><code class=\"sig-name descname\"><span class=\"pre\">PipelineDefinition</span></code><span class=\"sig-paren\">(</span><em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">solid_defs</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">None</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">name</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">None</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">description</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">None</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">dependencies</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">None</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">mode_defs</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">None</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">preset_defs</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">None</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">tags</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">None</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">metadata</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">None</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">hook_defs</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">None</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">solid_retry_policy</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">None</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">graph_def</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">None</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">_parent_pipeline_def</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">None</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">version_strategy</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">None</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">asset_layer</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">None</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">metadata_entries</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">None</span></span></em><span class=\"sig-paren\">)</span><a class=\"reference internal\" href=\"../../../../_modules/dagster/core/definitions/pipeline_definition#PipelineDefinition\"><span class=\"viewcode-link\"><span class=\"pre\">[source]</span></span></a><a class=\"headerlink\" href=\"#dagster.PipelineDefinition\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Defines a Dagster pipeline.</p>\n<p>A pipeline is made up of</p>\n<ul class=\"simple\">\n<li><p>Solids, each of which is a single functional unit of data computation.</p></li>\n<li><p>Dependencies, which determine how the values produced by solids as their outputs flow from\none solid to another. This tells Dagster how to arrange solids, and potentially multiple\naliased instances of solids, into a directed, acyclic graph (DAG) of compute.</p></li>\n<li><p>Modes, which can be used to attach resources, custom loggers, custom system storage\noptions, and custom executors to a pipeline, and to switch between them.</p></li>\n<li><p>Presets, which can be used to ship common combinations of pipeline config options in Python\ncode, and to switch between them.</p></li>\n</ul>\n<dl class=\"field-list simple\">\n<dt class=\"field-odd\">Parameters</dt>\n<dd class=\"field-odd\"><ul class=\"simple\">\n<li><p><strong>solid_defs</strong> (<em>List</em><em>[</em><a class=\"reference internal\" href=\"solids#dagster.SolidDefinition\" title=\"dagster.SolidDefinition\"><em>SolidDefinition</em></a><em>]</em>) \u2013 The set of solids used in this pipeline.</p></li>\n<li><p><strong>name</strong> (<a class=\"reference external\" href=\"https://docs.python.org/3/library/stdtypes.html#str\" title=\"(in Python v3.8)\"><em>str</em></a>) \u2013 The name of the pipeline. Must be unique within any\n<a class=\"reference internal\" href=\"repositories#dagster.RepositoryDefinition\" title=\"dagster.RepositoryDefinition\"><code class=\"xref py py-class docutils literal notranslate\"><span class=\"pre\">RepositoryDefinition</span></code></a> containing the pipeline.</p></li>\n<li><p><strong>description</strong> (<em>Optional</em><em>[</em><a class=\"reference external\" href=\"https://docs.python.org/3/library/stdtypes.html#str\" title=\"(in Python v3.8)\"><em>str</em></a><em>]</em>) \u2013 A human-readable description of the pipeline.</p></li>\n<li><p><strong>dependencies</strong> (<em>Optional</em><em>[</em><em>Dict</em><em>[</em><em>Union</em><em>[</em><a class=\"reference external\" href=\"https://docs.python.org/3/library/stdtypes.html#str\" title=\"(in Python v3.8)\"><em>str</em></a><em>, </em><a class=\"reference internal\" href=\"graphs#dagster.NodeInvocation\" title=\"dagster.NodeInvocation\"><em>NodeInvocation</em></a><em>]</em><em>, </em><em>Dict</em><em>[</em><a class=\"reference external\" href=\"https://docs.python.org/3/library/stdtypes.html#str\" title=\"(in Python v3.8)\"><em>str</em></a><em>, </em><a class=\"reference internal\" href=\"graphs#dagster.DependencyDefinition\" title=\"dagster.DependencyDefinition\"><em>DependencyDefinition</em></a><em>]</em><em>]</em><em>]</em>) \u2013 A structure that declares the dependencies of each solid\u2019s inputs on the outputs of\nother solids in the pipeline. Keys of the top level dict are either the string names of\nsolids in the pipeline or, in the case of aliased solids,\n<a class=\"reference internal\" href=\"graphs#dagster.NodeInvocation\" title=\"dagster.NodeInvocation\"><code class=\"xref py py-class docutils literal notranslate\"><span class=\"pre\">NodeInvocations</span></code></a>. Values of the top level dict are\nthemselves dicts, which map input names belonging to the solid or aliased solid to\n<a class=\"reference internal\" href=\"graphs#dagster.DependencyDefinition\" title=\"dagster.DependencyDefinition\"><code class=\"xref py py-class docutils literal notranslate\"><span class=\"pre\">DependencyDefinitions</span></code></a>.</p></li>\n<li><p><strong>mode_defs</strong> (<em>Optional</em><em>[</em><em>List</em><em>[</em><a class=\"reference internal\" href=\"modes#dagster.ModeDefinition\" title=\"dagster.ModeDefinition\"><em>ModeDefinition</em></a><em>]</em><em>]</em>) \u2013 The set of modes in which this pipeline can\noperate. Modes are used to attach resources, custom loggers, custom system storage\noptions, and custom executors to a pipeline. Modes can be used, e.g., to vary available\nresource and logging implementations between local test and production runs.</p></li>\n<li><p><strong>preset_defs</strong> (<em>Optional</em><em>[</em><em>List</em><em>[</em><a class=\"reference internal\" href=\"presets#dagster.PresetDefinition\" title=\"dagster.PresetDefinition\"><em>PresetDefinition</em></a><em>]</em><em>]</em>) \u2013 A set of preset collections of configuration\noptions that may be used to execute a pipeline. A preset consists of an environment\ndict, an optional subset of solids to execute, and a mode selection. Presets can be used\nto ship common combinations of options to pipeline end users in Python code, and can\nbe selected by tools like Dagit.</p></li>\n<li><p><strong>tags</strong> (<em>Optional</em><em>[</em><em>Dict</em><em>[</em><a class=\"reference external\" href=\"https://docs.python.org/3/library/stdtypes.html#str\" title=\"(in Python v3.8)\"><em>str</em></a><em>, </em><em>Any</em><em>]</em><em>]</em>) \u2013 Arbitrary metadata for any execution run of the pipeline.\nValues that are not strings will be json encoded and must meet the criteria that\n<cite>json.loads(json.dumps(value)) == value</cite>.  These tag values may be overwritten by tag\nvalues provided at invocation time.</p></li>\n<li><p><strong>hook_defs</strong> (<em>Optional</em><em>[</em><em>AbstractSet</em><em>[</em><a class=\"reference internal\" href=\"hooks#dagster.HookDefinition\" title=\"dagster.HookDefinition\"><em>HookDefinition</em></a><em>]</em><em>]</em>) \u2013 A set of hook definitions applied to the\npipeline. When a hook is applied to a pipeline, it will be attached to all solid\ninstances within the pipeline.</p></li>\n<li><p><strong>solid_retry_policy</strong> (<em>Optional</em><em>[</em><a class=\"reference internal\" href=\"ops#dagster.RetryPolicy\" title=\"dagster.RetryPolicy\"><em>RetryPolicy</em></a><em>]</em>) \u2013 The default retry policy for all solids in\nthis pipeline. Only used if retry policy is not defined on the solid definition or\nsolid invocation.</p></li>\n<li><p><strong>asset_layer</strong> (<em>Optional</em><em>[</em><em>AssetLayer</em><em>]</em>) \u2013 Structured object containing all definition-time asset\ninformation for this pipeline.</p></li>\n<li><p><strong>_parent_pipeline_def</strong> (<em>INTERNAL ONLY</em>) \u2013 Used for tracking pipelines created using solid subsets.</p></li>\n</ul>\n</dd>\n</dl>\n<p class=\"rubric\">Examples</p>\n<div class=\"highlight-python notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"nd\">@solid</span>\n<span class=\"k\">def</span> <span class=\"nf\">return_one</span><span class=\"p\">(</span><span class=\"n\">_</span><span class=\"p\">):</span>\n    <span class=\"k\">return</span> <span class=\"mi\">1</span>\n\n\n<span class=\"nd\">@solid</span><span class=\"p\">(</span><span class=\"n\">input_defs</span><span class=\"o\">=</span><span class=\"p\">[</span><span class=\"n\">InputDefinition</span><span class=\"p\">(</span><span class=\"s1\">&#39;num&#39;</span><span class=\"p\">)],</span> <span class=\"n\">required_resource_keys</span><span class=\"o\">=</span><span class=\"p\">{</span><span class=\"s1\">&#39;op&#39;</span><span class=\"p\">})</span>\n<span class=\"k\">def</span> <span class=\"nf\">apply_op</span><span class=\"p\">(</span><span class=\"n\">context</span><span class=\"p\">,</span> <span class=\"n\">num</span><span class=\"p\">):</span>\n    <span class=\"k\">return</span> <span class=\"n\">context</span><span class=\"o\">.</span><span class=\"n\">resources</span><span class=\"o\">.</span><span class=\"n\">op</span><span class=\"p\">(</span><span class=\"n\">num</span><span class=\"p\">)</span>\n\n<span class=\"nd\">@resource</span><span class=\"p\">(</span><span class=\"n\">config_schema</span><span class=\"o\">=</span><span class=\"n\">Int</span><span class=\"p\">)</span>\n<span class=\"k\">def</span> <span class=\"nf\">adder_resource</span><span class=\"p\">(</span><span class=\"n\">init_context</span><span class=\"p\">):</span>\n    <span class=\"k\">return</span> <span class=\"k\">lambda</span> <span class=\"n\">x</span><span class=\"p\">:</span> <span class=\"n\">x</span> <span class=\"o\">+</span> <span class=\"n\">init_context</span><span class=\"o\">.</span><span class=\"n\">resource_config</span>\n\n\n<span class=\"n\">add_mode</span> <span class=\"o\">=</span> <span class=\"n\">ModeDefinition</span><span class=\"p\">(</span>\n    <span class=\"n\">name</span><span class=\"o\">=</span><span class=\"s1\">&#39;add_mode&#39;</span><span class=\"p\">,</span>\n    <span class=\"n\">resource_defs</span><span class=\"o\">=</span><span class=\"p\">{</span><span class=\"s1\">&#39;op&#39;</span><span class=\"p\">:</span> <span class=\"n\">adder_resource</span><span class=\"p\">},</span>\n    <span class=\"n\">description</span><span class=\"o\">=</span><span class=\"s1\">&#39;Mode that adds things&#39;</span><span class=\"p\">,</span>\n<span class=\"p\">)</span>\n\n\n<span class=\"n\">add_three_preset</span> <span class=\"o\">=</span> <span class=\"n\">PresetDefinition</span><span class=\"p\">(</span>\n    <span class=\"n\">name</span><span class=\"o\">=</span><span class=\"s1\">&#39;add_three_preset&#39;</span><span class=\"p\">,</span>\n    <span class=\"n\">run_config</span><span class=\"o\">=</span><span class=\"p\">{</span><span class=\"s1\">&#39;resources&#39;</span><span class=\"p\">:</span> <span class=\"p\">{</span><span class=\"s1\">&#39;op&#39;</span><span class=\"p\">:</span> <span class=\"p\">{</span><span class=\"s1\">&#39;config&#39;</span><span class=\"p\">:</span> <span class=\"mi\">3</span><span class=\"p\">}}},</span>\n    <span class=\"n\">mode</span><span class=\"o\">=</span><span class=\"s1\">&#39;add_mode&#39;</span><span class=\"p\">,</span>\n<span class=\"p\">)</span>\n\n\n<span class=\"n\">pipeline_def</span> <span class=\"o\">=</span> <span class=\"n\">PipelineDefinition</span><span class=\"p\">(</span>\n    <span class=\"n\">name</span><span class=\"o\">=</span><span class=\"s1\">&#39;basic&#39;</span><span class=\"p\">,</span>\n    <span class=\"n\">solid_defs</span><span class=\"o\">=</span><span class=\"p\">[</span><span class=\"n\">return_one</span><span class=\"p\">,</span> <span class=\"n\">apply_op</span><span class=\"p\">],</span>\n    <span class=\"n\">dependencies</span><span class=\"o\">=</span><span class=\"p\">{</span><span class=\"s1\">&#39;apply_op&#39;</span><span class=\"p\">:</span> <span class=\"p\">{</span><span class=\"s1\">&#39;num&#39;</span><span class=\"p\">:</span> <span class=\"n\">DependencyDefinition</span><span class=\"p\">(</span><span class=\"s1\">&#39;return_one&#39;</span><span class=\"p\">)}},</span>\n    <span class=\"n\">mode_defs</span><span class=\"o\">=</span><span class=\"p\">[</span><span class=\"n\">add_mode</span><span class=\"p\">],</span>\n    <span class=\"n\">preset_defs</span><span class=\"o\">=</span><span class=\"p\">[</span><span class=\"n\">add_three_preset</span><span class=\"p\">],</span>\n<span class=\"p\">)</span>\n</pre></div>\n</div>\n</dd></dl>\n\n</div>\n<div class=\"section\" id=\"executing-pipelines\">\n<h2>Executing pipelines<a class=\"headerlink\" href=\"#executing-pipelines\" title=\"Permalink to this headline\">\u00b6</a></h2>\n<dl class=\"py function\">\n<dt id=\"dagster.execute_pipeline\">\n<code class=\"sig-prename descclassname\"><span class=\"pre\">dagster.</span></code><code class=\"sig-name descname\"><span class=\"pre\">execute_pipeline</span></code><span class=\"sig-paren\">(</span><em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">pipeline</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">run_config</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">None</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">mode</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">None</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">preset</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">None</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">tags</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">None</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">solid_selection</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">None</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">instance</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">None</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">raise_on_error</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">True</span></span></em><span class=\"sig-paren\">)</span><a class=\"reference internal\" href=\"../../../../_modules/dagster/core/execution/api#execute_pipeline\"><span class=\"viewcode-link\"><span class=\"pre\">[source]</span></span></a><a class=\"headerlink\" href=\"#dagster.execute_pipeline\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Execute a pipeline synchronously.</p>\n<p>Users will typically call this API when testing pipeline execution, or running standalone\nscripts.</p>\n<dl class=\"field-list simple\">\n<dt class=\"field-odd\">Parameters</dt>\n<dd class=\"field-odd\"><ul class=\"simple\">\n<li><p><strong>pipeline</strong> (<em>Union</em><em>[</em><em>IPipeline</em><em>, </em><a class=\"reference internal\" href=\"#dagster.PipelineDefinition\" title=\"dagster.PipelineDefinition\"><em>PipelineDefinition</em></a><em>]</em>) \u2013 The pipeline to execute.</p></li>\n<li><p><strong>run_config</strong> (<em>Optional</em><em>[</em><a class=\"reference external\" href=\"https://docs.python.org/3/library/stdtypes.html#dict\" title=\"(in Python v3.8)\"><em>dict</em></a><em>]</em>) \u2013 The configuration that parametrizes this run,\nas a dict.</p></li>\n<li><p><strong>mode</strong> (<em>Optional</em><em>[</em><a class=\"reference external\" href=\"https://docs.python.org/3/library/stdtypes.html#str\" title=\"(in Python v3.8)\"><em>str</em></a><em>]</em>) \u2013 The name of the pipeline mode to use. You may not set both <code class=\"docutils literal notranslate\"><span class=\"pre\">mode</span></code>\nand <code class=\"docutils literal notranslate\"><span class=\"pre\">preset</span></code>.</p></li>\n<li><p><strong>preset</strong> (<em>Optional</em><em>[</em><a class=\"reference external\" href=\"https://docs.python.org/3/library/stdtypes.html#str\" title=\"(in Python v3.8)\"><em>str</em></a><em>]</em>) \u2013 The name of the pipeline preset to use. You may not set both\n<code class=\"docutils literal notranslate\"><span class=\"pre\">mode</span></code> and <code class=\"docutils literal notranslate\"><span class=\"pre\">preset</span></code>.</p></li>\n<li><p><strong>tags</strong> (<em>Optional</em><em>[</em><em>Dict</em><em>[</em><a class=\"reference external\" href=\"https://docs.python.org/3/library/stdtypes.html#str\" title=\"(in Python v3.8)\"><em>str</em></a><em>, </em><em>Any</em><em>]</em><em>]</em>) \u2013 Arbitrary key-value pairs that will be added to pipeline\nlogs.</p></li>\n<li><p><strong>instance</strong> (<em>Optional</em><em>[</em><a class=\"reference internal\" href=\"internals#dagster.DagsterInstance\" title=\"dagster.DagsterInstance\"><em>DagsterInstance</em></a><em>]</em>) \u2013 The instance to execute against. If this is <code class=\"docutils literal notranslate\"><span class=\"pre\">None</span></code>,\nan ephemeral instance will be used, and no artifacts will be persisted from the run.</p></li>\n<li><p><strong>raise_on_error</strong> (<em>Optional</em><em>[</em><a class=\"reference external\" href=\"https://docs.python.org/3/library/functions.html#bool\" title=\"(in Python v3.8)\"><em>bool</em></a><em>]</em>) \u2013 Whether or not to raise exceptions when they occur.\nDefaults to <code class=\"docutils literal notranslate\"><span class=\"pre\">True</span></code>, since this is the most useful behavior in test.</p></li>\n<li><p><strong>solid_selection</strong> (<em>Optional</em><em>[</em><em>List</em><em>[</em><a class=\"reference external\" href=\"https://docs.python.org/3/library/stdtypes.html#str\" title=\"(in Python v3.8)\"><em>str</em></a><em>]</em><em>]</em>) \u2013 <p>A list of solid selection queries (including single\nsolid names) to execute. For example:</p>\n<ul>\n<li><p><code class=\"docutils literal notranslate\"><span class=\"pre\">['some_solid']</span></code>: selects <code class=\"docutils literal notranslate\"><span class=\"pre\">some_solid</span></code> itself.</p></li>\n<li><p><code class=\"docutils literal notranslate\"><span class=\"pre\">['*some_solid']</span></code>: select <code class=\"docutils literal notranslate\"><span class=\"pre\">some_solid</span></code> and all its ancestors (upstream dependencies).</p></li>\n<li><p><code class=\"docutils literal notranslate\"><span class=\"pre\">['*some_solid+++']</span></code>: select <code class=\"docutils literal notranslate\"><span class=\"pre\">some_solid</span></code>, all its ancestors, and its descendants\n(downstream dependencies) within 3 levels down.</p></li>\n<li><p><code class=\"docutils literal notranslate\"><span class=\"pre\">['*some_solid',</span> <span class=\"pre\">'other_solid_a',</span> <span class=\"pre\">'other_solid_b+']</span></code>: select <code class=\"docutils literal notranslate\"><span class=\"pre\">some_solid</span></code> and all its\nancestors, <code class=\"docutils literal notranslate\"><span class=\"pre\">other_solid_a</span></code> itself, and <code class=\"docutils literal notranslate\"><span class=\"pre\">other_solid_b</span></code> and its direct child solids.</p></li>\n</ul>\n</p></li>\n</ul>\n</dd>\n<dt class=\"field-even\">Returns</dt>\n<dd class=\"field-even\"><p>The result of pipeline execution.</p>\n</dd>\n<dt class=\"field-odd\">Return type</dt>\n<dd class=\"field-odd\"><p><a class=\"reference internal\" href=\"#dagster.PipelineExecutionResult\" title=\"dagster.PipelineExecutionResult\"><code class=\"xref py py-class docutils literal notranslate\"><span class=\"pre\">PipelineExecutionResult</span></code></a></p>\n</dd>\n</dl>\n<p>For the asynchronous version, see <a class=\"reference internal\" href=\"#dagster.execute_pipeline_iterator\" title=\"dagster.execute_pipeline_iterator\"><code class=\"xref py py-func docutils literal notranslate\"><span class=\"pre\">execute_pipeline_iterator()</span></code></a>.</p>\n</dd></dl>\n\n<dl class=\"py function\">\n<dt id=\"dagster.execute_pipeline_iterator\">\n<code class=\"sig-prename descclassname\"><span class=\"pre\">dagster.</span></code><code class=\"sig-name descname\"><span class=\"pre\">execute_pipeline_iterator</span></code><span class=\"sig-paren\">(</span><em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">pipeline</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">run_config</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">None</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">mode</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">None</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">preset</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">None</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">tags</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">None</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">solid_selection</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">None</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">instance</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">None</span></span></em><span class=\"sig-paren\">)</span><a class=\"reference internal\" href=\"../../../../_modules/dagster/core/execution/api#execute_pipeline_iterator\"><span class=\"viewcode-link\"><span class=\"pre\">[source]</span></span></a><a class=\"headerlink\" href=\"#dagster.execute_pipeline_iterator\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Execute a pipeline iteratively.</p>\n<p>Rather than package up the result of running a pipeline into a single object, like\n<a class=\"reference internal\" href=\"#dagster.execute_pipeline\" title=\"dagster.execute_pipeline\"><code class=\"xref py py-func docutils literal notranslate\"><span class=\"pre\">execute_pipeline()</span></code></a>, this function yields the stream of events resulting from pipeline\nexecution.</p>\n<p>This is intended to allow the caller to handle these events on a streaming basis in whatever\nway is appropriate.</p>\n<dl class=\"field-list simple\">\n<dt class=\"field-odd\">Parameters</dt>\n<dd class=\"field-odd\"><ul class=\"simple\">\n<li><p><strong>pipeline</strong> (<em>Union</em><em>[</em><em>IPipeline</em><em>, </em><a class=\"reference internal\" href=\"#dagster.PipelineDefinition\" title=\"dagster.PipelineDefinition\"><em>PipelineDefinition</em></a><em>]</em>) \u2013 The pipeline to execute.</p></li>\n<li><p><strong>run_config</strong> (<em>Optional</em><em>[</em><a class=\"reference external\" href=\"https://docs.python.org/3/library/stdtypes.html#dict\" title=\"(in Python v3.8)\"><em>dict</em></a><em>]</em>) \u2013 The configuration that parametrizes this run,\nas a dict.</p></li>\n<li><p><strong>mode</strong> (<em>Optional</em><em>[</em><a class=\"reference external\" href=\"https://docs.python.org/3/library/stdtypes.html#str\" title=\"(in Python v3.8)\"><em>str</em></a><em>]</em>) \u2013 The name of the pipeline mode to use. You may not set both <code class=\"docutils literal notranslate\"><span class=\"pre\">mode</span></code>\nand <code class=\"docutils literal notranslate\"><span class=\"pre\">preset</span></code>.</p></li>\n<li><p><strong>preset</strong> (<em>Optional</em><em>[</em><a class=\"reference external\" href=\"https://docs.python.org/3/library/stdtypes.html#str\" title=\"(in Python v3.8)\"><em>str</em></a><em>]</em>) \u2013 The name of the pipeline preset to use. You may not set both\n<code class=\"docutils literal notranslate\"><span class=\"pre\">mode</span></code> and <code class=\"docutils literal notranslate\"><span class=\"pre\">preset</span></code>.</p></li>\n<li><p><strong>tags</strong> (<em>Optional</em><em>[</em><em>Dict</em><em>[</em><a class=\"reference external\" href=\"https://docs.python.org/3/library/stdtypes.html#str\" title=\"(in Python v3.8)\"><em>str</em></a><em>, </em><em>Any</em><em>]</em><em>]</em>) \u2013 Arbitrary key-value pairs that will be added to pipeline\nlogs.</p></li>\n<li><p><strong>solid_selection</strong> (<em>Optional</em><em>[</em><em>List</em><em>[</em><a class=\"reference external\" href=\"https://docs.python.org/3/library/stdtypes.html#str\" title=\"(in Python v3.8)\"><em>str</em></a><em>]</em><em>]</em>) \u2013 <p>A list of solid selection queries (including single\nsolid names) to execute. For example:</p>\n<ul>\n<li><p><code class=\"docutils literal notranslate\"><span class=\"pre\">['some_solid']</span></code>: selects <code class=\"docutils literal notranslate\"><span class=\"pre\">some_solid</span></code> itself.</p></li>\n<li><p><code class=\"docutils literal notranslate\"><span class=\"pre\">['*some_solid']</span></code>: select <code class=\"docutils literal notranslate\"><span class=\"pre\">some_solid</span></code> and all its ancestors (upstream dependencies).</p></li>\n<li><p><code class=\"docutils literal notranslate\"><span class=\"pre\">['*some_solid+++']</span></code>: select <code class=\"docutils literal notranslate\"><span class=\"pre\">some_solid</span></code>, all its ancestors, and its descendants\n(downstream dependencies) within 3 levels down.</p></li>\n<li><p><code class=\"docutils literal notranslate\"><span class=\"pre\">['*some_solid',</span> <span class=\"pre\">'other_solid_a',</span> <span class=\"pre\">'other_solid_b+']</span></code>: select <code class=\"docutils literal notranslate\"><span class=\"pre\">some_solid</span></code> and all its\nancestors, <code class=\"docutils literal notranslate\"><span class=\"pre\">other_solid_a</span></code> itself, and <code class=\"docutils literal notranslate\"><span class=\"pre\">other_solid_b</span></code> and its direct child solids.</p></li>\n</ul>\n</p></li>\n<li><p><strong>instance</strong> (<em>Optional</em><em>[</em><a class=\"reference internal\" href=\"internals#dagster.DagsterInstance\" title=\"dagster.DagsterInstance\"><em>DagsterInstance</em></a><em>]</em>) \u2013 The instance to execute against. If this is <code class=\"docutils literal notranslate\"><span class=\"pre\">None</span></code>,\nan ephemeral instance will be used, and no artifacts will be persisted from the run.</p></li>\n</ul>\n</dd>\n<dt class=\"field-even\">Returns</dt>\n<dd class=\"field-even\"><p>The stream of events resulting from pipeline execution.</p>\n</dd>\n<dt class=\"field-odd\">Return type</dt>\n<dd class=\"field-odd\"><p>Iterator[<a class=\"reference internal\" href=\"execution#dagster.DagsterEvent\" title=\"dagster.DagsterEvent\">DagsterEvent</a>]</p>\n</dd>\n</dl>\n</dd></dl>\n\n<dl class=\"py class\">\n<dt id=\"dagster.PipelineExecutionResult\">\n<em class=\"property\"><span class=\"pre\">class</span> </em><code class=\"sig-prename descclassname\"><span class=\"pre\">dagster.</span></code><code class=\"sig-name descname\"><span class=\"pre\">PipelineExecutionResult</span></code><span class=\"sig-paren\">(</span><em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">pipeline_def</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">run_id</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">event_list</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">reconstruct_context</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">output_capture</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">None</span></span></em><span class=\"sig-paren\">)</span><a class=\"reference internal\" href=\"../../../../_modules/dagster/core/execution/results#PipelineExecutionResult\"><span class=\"viewcode-link\"><span class=\"pre\">[source]</span></span></a><a class=\"headerlink\" href=\"#dagster.PipelineExecutionResult\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>The result of executing a pipeline.</p>\n<p>Returned by <a class=\"reference internal\" href=\"#dagster.execute_pipeline\" title=\"dagster.execute_pipeline\"><code class=\"xref py py-func docutils literal notranslate\"><span class=\"pre\">execute_pipeline()</span></code></a>. Users should not instantiate this class directly.</p>\n<dl class=\"py method\">\n<dt id=\"dagster.PipelineExecutionResult.output_for_solid\">\n<code class=\"sig-name descname\"><span class=\"pre\">output_for_solid</span></code><span class=\"sig-paren\">(</span><em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">handle_str</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">output_name</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">'result'</span></span></em><span class=\"sig-paren\">)</span><a class=\"headerlink\" href=\"#dagster.PipelineExecutionResult.output_for_solid\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Get the output of a solid by its solid handle string and output name.</p>\n<dl class=\"field-list simple\">\n<dt class=\"field-odd\">Parameters</dt>\n<dd class=\"field-odd\"><ul class=\"simple\">\n<li><p><strong>handle_str</strong> (<a class=\"reference external\" href=\"https://docs.python.org/3/library/stdtypes.html#str\" title=\"(in Python v3.8)\"><em>str</em></a>) \u2013 The string handle for the solid.</p></li>\n<li><p><strong>output_name</strong> (<a class=\"reference external\" href=\"https://docs.python.org/3/library/stdtypes.html#str\" title=\"(in Python v3.8)\"><em>str</em></a>) \u2013 Optional. The name of the output, default to DEFAULT_OUTPUT.</p></li>\n</ul>\n</dd>\n<dt class=\"field-even\">Returns</dt>\n<dd class=\"field-even\"><p>The output value for the handle and output_name.</p>\n</dd>\n</dl>\n</dd></dl>\n\n<dl class=\"py method\">\n<dt id=\"dagster.PipelineExecutionResult.result_for_handle\">\n<code class=\"sig-name descname\"><span class=\"pre\">result_for_handle</span></code><span class=\"sig-paren\">(</span><em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">handle</span></span></em><span class=\"sig-paren\">)</span><a class=\"headerlink\" href=\"#dagster.PipelineExecutionResult.result_for_handle\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Get the result of a solid by its solid handle.</p>\n<p>This allows indexing into top-level solids to retrieve the results of children of\ncomposite solids.</p>\n<dl class=\"field-list simple\">\n<dt class=\"field-odd\">Parameters</dt>\n<dd class=\"field-odd\"><p><strong>handle</strong> (<em>Union</em><em>[</em><a class=\"reference external\" href=\"https://docs.python.org/3/library/stdtypes.html#str\" title=\"(in Python v3.8)\"><em>str</em></a><em>,</em><em>NodeHandle</em><em>]</em>) \u2013 The handle for the solid.</p>\n</dd>\n<dt class=\"field-even\">Returns</dt>\n<dd class=\"field-even\"><p>The result of the given\nsolid.</p>\n</dd>\n<dt class=\"field-odd\">Return type</dt>\n<dd class=\"field-odd\"><p>Union[<a class=\"reference internal\" href=\"solids#dagster.CompositeSolidExecutionResult\" title=\"dagster.CompositeSolidExecutionResult\">CompositeSolidExecutionResult</a>, <a class=\"reference internal\" href=\"solids#dagster.SolidExecutionResult\" title=\"dagster.SolidExecutionResult\">SolidExecutionResult</a>]</p>\n</dd>\n</dl>\n</dd></dl>\n\n<dl class=\"py method\">\n<dt id=\"dagster.PipelineExecutionResult.result_for_solid\">\n<code class=\"sig-name descname\"><span class=\"pre\">result_for_solid</span></code><span class=\"sig-paren\">(</span><em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">name</span></span></em><span class=\"sig-paren\">)</span><a class=\"headerlink\" href=\"#dagster.PipelineExecutionResult.result_for_solid\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Get the result of a top level solid.</p>\n<dl class=\"field-list simple\">\n<dt class=\"field-odd\">Parameters</dt>\n<dd class=\"field-odd\"><p><strong>name</strong> (<a class=\"reference external\" href=\"https://docs.python.org/3/library/stdtypes.html#str\" title=\"(in Python v3.8)\"><em>str</em></a>) \u2013 The name of the top-level solid or aliased solid for which to retrieve the\nresult.</p>\n</dd>\n<dt class=\"field-even\">Returns</dt>\n<dd class=\"field-even\"><p>The result of the solid\nexecution within the pipeline.</p>\n</dd>\n<dt class=\"field-odd\">Return type</dt>\n<dd class=\"field-odd\"><p>Union[<a class=\"reference internal\" href=\"solids#dagster.CompositeSolidExecutionResult\" title=\"dagster.CompositeSolidExecutionResult\">CompositeSolidExecutionResult</a>, <a class=\"reference internal\" href=\"solids#dagster.SolidExecutionResult\" title=\"dagster.SolidExecutionResult\">SolidExecutionResult</a>]</p>\n</dd>\n</dl>\n</dd></dl>\n\n<dl class=\"py method\">\n<dt id=\"dagster.PipelineExecutionResult.solid_result_list\">\n<em class=\"property\"><span class=\"pre\">property</span> </em><code class=\"sig-name descname\"><span class=\"pre\">solid_result_list</span></code><a class=\"headerlink\" href=\"#dagster.PipelineExecutionResult.solid_result_list\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>The results for each\ntop level solid.</p>\n<dl class=\"field-list simple\">\n<dt class=\"field-odd\">Type</dt>\n<dd class=\"field-odd\"><p>List[Union[<a class=\"reference internal\" href=\"solids#dagster.CompositeSolidExecutionResult\" title=\"dagster.CompositeSolidExecutionResult\">CompositeSolidExecutionResult</a>, <a class=\"reference internal\" href=\"solids#dagster.SolidExecutionResult\" title=\"dagster.SolidExecutionResult\">SolidExecutionResult</a>]]</p>\n</dd>\n</dl>\n</dd></dl>\n\n<dl class=\"py method\">\n<dt id=\"dagster.PipelineExecutionResult.step_event_list\">\n<em class=\"property\"><span class=\"pre\">property</span> </em><code class=\"sig-name descname\"><span class=\"pre\">step_event_list</span></code><a class=\"headerlink\" href=\"#dagster.PipelineExecutionResult.step_event_list\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>List[DagsterEvent] The full list of events generated by steps in the execution.</p>\n<p>Excludes events generated by the pipeline lifecycle, e.g., <code class=\"docutils literal notranslate\"><span class=\"pre\">PIPELINE_START</span></code>.</p>\n</dd></dl>\n\n<dl class=\"py method\">\n<dt id=\"dagster.PipelineExecutionResult.success\">\n<em class=\"property\"><span class=\"pre\">property</span> </em><code class=\"sig-name descname\"><span class=\"pre\">success</span></code><a class=\"headerlink\" href=\"#dagster.PipelineExecutionResult.success\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Whether all steps in the execution were successful.</p>\n<dl class=\"field-list simple\">\n<dt class=\"field-odd\">Type</dt>\n<dd class=\"field-odd\"><p><a class=\"reference external\" href=\"https://docs.python.org/3/library/functions.html#bool\" title=\"(in Python v3.8)\">bool</a></p>\n</dd>\n</dl>\n</dd></dl>\n\n</dd></dl>\n\n<dl class=\"py data\">\n<dt id=\"dagster.default_executors\">\n<code class=\"sig-prename descclassname\"><span class=\"pre\">dagster.</span></code><code class=\"sig-name descname\"><span class=\"pre\">default_executors</span></code><em class=\"property\"> <span class=\"pre\">List[ExecutorDefinition]</span></em><a class=\"headerlink\" href=\"#dagster.default_executors\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Built-in mutable sequence.</p>\n<p>If no argument is given, the constructor creates a new empty list.\nThe argument must be an iterable if specified.</p>\n<p>The default executors available on any <a class=\"reference internal\" href=\"modes#dagster.ModeDefinition\" title=\"dagster.ModeDefinition\"><code class=\"xref py py-class docutils literal notranslate\"><span class=\"pre\">ModeDefinition</span></code></a> that does not provide custom\nexecutors. These are currently [<a class=\"reference internal\" href=\"execution#dagster.in_process_executor\" title=\"dagster.in_process_executor\"><code class=\"xref py py-class docutils literal notranslate\"><span class=\"pre\">in_process_executor</span></code></a>,\n<a class=\"reference internal\" href=\"execution#dagster.multiprocess_executor\" title=\"dagster.multiprocess_executor\"><code class=\"xref py py-class docutils literal notranslate\"><span class=\"pre\">multiprocess_executor</span></code></a>].</p>\n</dd></dl>\n\n</div>\n<div class=\"section\" id=\"re-executing-pipelines\">\n<h2>Re-executing pipelines<a class=\"headerlink\" href=\"#re-executing-pipelines\" title=\"Permalink to this headline\">\u00b6</a></h2>\n<dl class=\"py function\">\n<dt id=\"dagster.reexecute_pipeline\">\n<code class=\"sig-prename descclassname\"><span class=\"pre\">dagster.</span></code><code class=\"sig-name descname\"><span class=\"pre\">reexecute_pipeline</span></code><span class=\"sig-paren\">(</span><em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">pipeline</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">parent_run_id</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">run_config</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">None</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">step_selection</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">None</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">mode</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">None</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">preset</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">None</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">tags</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">None</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">instance</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">None</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">raise_on_error</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">True</span></span></em><span class=\"sig-paren\">)</span><a class=\"reference internal\" href=\"../../../../_modules/dagster/core/execution/api#reexecute_pipeline\"><span class=\"viewcode-link\"><span class=\"pre\">[source]</span></span></a><a class=\"headerlink\" href=\"#dagster.reexecute_pipeline\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Reexecute an existing pipeline run.</p>\n<p>Users will typically call this API when testing pipeline reexecution, or running standalone\nscripts.</p>\n<dl class=\"field-list simple\">\n<dt class=\"field-odd\">Parameters</dt>\n<dd class=\"field-odd\"><ul class=\"simple\">\n<li><p><strong>pipeline</strong> (<em>Union</em><em>[</em><em>IPipeline</em><em>, </em><a class=\"reference internal\" href=\"#dagster.PipelineDefinition\" title=\"dagster.PipelineDefinition\"><em>PipelineDefinition</em></a><em>]</em>) \u2013 The pipeline to execute.</p></li>\n<li><p><strong>parent_run_id</strong> (<a class=\"reference external\" href=\"https://docs.python.org/3/library/stdtypes.html#str\" title=\"(in Python v3.8)\"><em>str</em></a>) \u2013 The id of the previous run to reexecute. The run must exist in the\ninstance.</p></li>\n<li><p><strong>run_config</strong> (<em>Optional</em><em>[</em><a class=\"reference external\" href=\"https://docs.python.org/3/library/stdtypes.html#dict\" title=\"(in Python v3.8)\"><em>dict</em></a><em>]</em>) \u2013 The configuration that parametrizes this run,\nas a dict.</p></li>\n<li><p><strong>solid_selection</strong> (<em>Optional</em><em>[</em><em>List</em><em>[</em><a class=\"reference external\" href=\"https://docs.python.org/3/library/stdtypes.html#str\" title=\"(in Python v3.8)\"><em>str</em></a><em>]</em><em>]</em>) \u2013 <p>A list of solid selection queries (including single\nsolid names) to execute. For example:</p>\n<ul>\n<li><p><code class=\"docutils literal notranslate\"><span class=\"pre\">['some_solid']</span></code>: selects <code class=\"docutils literal notranslate\"><span class=\"pre\">some_solid</span></code> itself.</p></li>\n<li><p><code class=\"docutils literal notranslate\"><span class=\"pre\">['*some_solid']</span></code>: select <code class=\"docutils literal notranslate\"><span class=\"pre\">some_solid</span></code> and all its ancestors (upstream dependencies).</p></li>\n<li><p><code class=\"docutils literal notranslate\"><span class=\"pre\">['*some_solid+++']</span></code>: select <code class=\"docutils literal notranslate\"><span class=\"pre\">some_solid</span></code>, all its ancestors, and its descendants\n(downstream dependencies) within 3 levels down.</p></li>\n<li><p><code class=\"docutils literal notranslate\"><span class=\"pre\">['*some_solid',</span> <span class=\"pre\">'other_solid_a',</span> <span class=\"pre\">'other_solid_b+']</span></code>: select <code class=\"docutils literal notranslate\"><span class=\"pre\">some_solid</span></code> and all its\nancestors, <code class=\"docutils literal notranslate\"><span class=\"pre\">other_solid_a</span></code> itself, and <code class=\"docutils literal notranslate\"><span class=\"pre\">other_solid_b</span></code> and its direct child solids.</p></li>\n</ul>\n</p></li>\n<li><p><strong>mode</strong> (<em>Optional</em><em>[</em><a class=\"reference external\" href=\"https://docs.python.org/3/library/stdtypes.html#str\" title=\"(in Python v3.8)\"><em>str</em></a><em>]</em>) \u2013 The name of the pipeline mode to use. You may not set both <code class=\"docutils literal notranslate\"><span class=\"pre\">mode</span></code>\nand <code class=\"docutils literal notranslate\"><span class=\"pre\">preset</span></code>.</p></li>\n<li><p><strong>preset</strong> (<em>Optional</em><em>[</em><a class=\"reference external\" href=\"https://docs.python.org/3/library/stdtypes.html#str\" title=\"(in Python v3.8)\"><em>str</em></a><em>]</em>) \u2013 The name of the pipeline preset to use. You may not set both\n<code class=\"docutils literal notranslate\"><span class=\"pre\">mode</span></code> and <code class=\"docutils literal notranslate\"><span class=\"pre\">preset</span></code>.</p></li>\n<li><p><strong>tags</strong> (<em>Optional</em><em>[</em><em>Dict</em><em>[</em><a class=\"reference external\" href=\"https://docs.python.org/3/library/stdtypes.html#str\" title=\"(in Python v3.8)\"><em>str</em></a><em>, </em><em>Any</em><em>]</em><em>]</em>) \u2013 Arbitrary key-value pairs that will be added to pipeline\nlogs.</p></li>\n<li><p><strong>instance</strong> (<em>Optional</em><em>[</em><a class=\"reference internal\" href=\"internals#dagster.DagsterInstance\" title=\"dagster.DagsterInstance\"><em>DagsterInstance</em></a><em>]</em>) \u2013 The instance to execute against. If this is <code class=\"docutils literal notranslate\"><span class=\"pre\">None</span></code>,\nan ephemeral instance will be used, and no artifacts will be persisted from the run.</p></li>\n<li><p><strong>raise_on_error</strong> (<em>Optional</em><em>[</em><a class=\"reference external\" href=\"https://docs.python.org/3/library/functions.html#bool\" title=\"(in Python v3.8)\"><em>bool</em></a><em>]</em>) \u2013 Whether or not to raise exceptions when they occur.\nDefaults to <code class=\"docutils literal notranslate\"><span class=\"pre\">True</span></code>, since this is the most useful behavior in test.</p></li>\n</ul>\n</dd>\n<dt class=\"field-even\">Returns</dt>\n<dd class=\"field-even\"><p>The result of pipeline execution.</p>\n</dd>\n<dt class=\"field-odd\">Return type</dt>\n<dd class=\"field-odd\"><p><a class=\"reference internal\" href=\"#dagster.PipelineExecutionResult\" title=\"dagster.PipelineExecutionResult\"><code class=\"xref py py-class docutils literal notranslate\"><span class=\"pre\">PipelineExecutionResult</span></code></a></p>\n</dd>\n</dl>\n<p>For the asynchronous version, see <a class=\"reference internal\" href=\"#dagster.reexecute_pipeline_iterator\" title=\"dagster.reexecute_pipeline_iterator\"><code class=\"xref py py-func docutils literal notranslate\"><span class=\"pre\">reexecute_pipeline_iterator()</span></code></a>.</p>\n</dd></dl>\n\n<dl class=\"py function\">\n<dt id=\"dagster.reexecute_pipeline_iterator\">\n<code class=\"sig-prename descclassname\"><span class=\"pre\">dagster.</span></code><code class=\"sig-name descname\"><span class=\"pre\">reexecute_pipeline_iterator</span></code><span class=\"sig-paren\">(</span><em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">pipeline</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">parent_run_id</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">run_config</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">None</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">step_selection</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">None</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">mode</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">None</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">preset</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">None</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">tags</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">None</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">instance</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">None</span></span></em><span class=\"sig-paren\">)</span><a class=\"reference internal\" href=\"../../../../_modules/dagster/core/execution/api#reexecute_pipeline_iterator\"><span class=\"viewcode-link\"><span class=\"pre\">[source]</span></span></a><a class=\"headerlink\" href=\"#dagster.reexecute_pipeline_iterator\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Reexecute a pipeline iteratively.</p>\n<p>Rather than package up the result of running a pipeline into a single object, like\n<a class=\"reference internal\" href=\"#dagster.reexecute_pipeline\" title=\"dagster.reexecute_pipeline\"><code class=\"xref py py-func docutils literal notranslate\"><span class=\"pre\">reexecute_pipeline()</span></code></a>, this function yields the stream of events resulting from pipeline\nreexecution.</p>\n<p>This is intended to allow the caller to handle these events on a streaming basis in whatever\nway is appropriate.</p>\n<dl class=\"field-list simple\">\n<dt class=\"field-odd\">Parameters</dt>\n<dd class=\"field-odd\"><ul class=\"simple\">\n<li><p><strong>pipeline</strong> (<em>Union</em><em>[</em><em>IPipeline</em><em>, </em><a class=\"reference internal\" href=\"#dagster.PipelineDefinition\" title=\"dagster.PipelineDefinition\"><em>PipelineDefinition</em></a><em>]</em>) \u2013 The pipeline to execute.</p></li>\n<li><p><strong>parent_run_id</strong> (<a class=\"reference external\" href=\"https://docs.python.org/3/library/stdtypes.html#str\" title=\"(in Python v3.8)\"><em>str</em></a>) \u2013 The id of the previous run to reexecute. The run must exist in the\ninstance.</p></li>\n<li><p><strong>run_config</strong> (<em>Optional</em><em>[</em><a class=\"reference external\" href=\"https://docs.python.org/3/library/stdtypes.html#dict\" title=\"(in Python v3.8)\"><em>dict</em></a><em>]</em>) \u2013 The configuration that parametrizes this run,\nas a dict.</p></li>\n<li><p><strong>solid_selection</strong> (<em>Optional</em><em>[</em><em>List</em><em>[</em><a class=\"reference external\" href=\"https://docs.python.org/3/library/stdtypes.html#str\" title=\"(in Python v3.8)\"><em>str</em></a><em>]</em><em>]</em>) \u2013 <p>A list of solid selection queries (including single\nsolid names) to execute. For example:</p>\n<ul>\n<li><p><code class=\"docutils literal notranslate\"><span class=\"pre\">['some_solid']</span></code>: selects <code class=\"docutils literal notranslate\"><span class=\"pre\">some_solid</span></code> itself.</p></li>\n<li><p><code class=\"docutils literal notranslate\"><span class=\"pre\">['*some_solid']</span></code>: select <code class=\"docutils literal notranslate\"><span class=\"pre\">some_solid</span></code> and all its ancestors (upstream dependencies).</p></li>\n<li><p><code class=\"docutils literal notranslate\"><span class=\"pre\">['*some_solid+++']</span></code>: select <code class=\"docutils literal notranslate\"><span class=\"pre\">some_solid</span></code>, all its ancestors, and its descendants\n(downstream dependencies) within 3 levels down.</p></li>\n<li><p><code class=\"docutils literal notranslate\"><span class=\"pre\">['*some_solid',</span> <span class=\"pre\">'other_solid_a',</span> <span class=\"pre\">'other_solid_b+']</span></code>: select <code class=\"docutils literal notranslate\"><span class=\"pre\">some_solid</span></code> and all its\nancestors, <code class=\"docutils literal notranslate\"><span class=\"pre\">other_solid_a</span></code> itself, and <code class=\"docutils literal notranslate\"><span class=\"pre\">other_solid_b</span></code> and its direct child solids.</p></li>\n</ul>\n</p></li>\n<li><p><strong>mode</strong> (<em>Optional</em><em>[</em><a class=\"reference external\" href=\"https://docs.python.org/3/library/stdtypes.html#str\" title=\"(in Python v3.8)\"><em>str</em></a><em>]</em>) \u2013 The name of the pipeline mode to use. You may not set both <code class=\"docutils literal notranslate\"><span class=\"pre\">mode</span></code>\nand <code class=\"docutils literal notranslate\"><span class=\"pre\">preset</span></code>.</p></li>\n<li><p><strong>preset</strong> (<em>Optional</em><em>[</em><a class=\"reference external\" href=\"https://docs.python.org/3/library/stdtypes.html#str\" title=\"(in Python v3.8)\"><em>str</em></a><em>]</em>) \u2013 The name of the pipeline preset to use. You may not set both\n<code class=\"docutils literal notranslate\"><span class=\"pre\">mode</span></code> and <code class=\"docutils literal notranslate\"><span class=\"pre\">preset</span></code>.</p></li>\n<li><p><strong>tags</strong> (<em>Optional</em><em>[</em><em>Dict</em><em>[</em><a class=\"reference external\" href=\"https://docs.python.org/3/library/stdtypes.html#str\" title=\"(in Python v3.8)\"><em>str</em></a><em>, </em><em>Any</em><em>]</em><em>]</em>) \u2013 Arbitrary key-value pairs that will be added to pipeline\nlogs.</p></li>\n<li><p><strong>instance</strong> (<em>Optional</em><em>[</em><a class=\"reference internal\" href=\"internals#dagster.DagsterInstance\" title=\"dagster.DagsterInstance\"><em>DagsterInstance</em></a><em>]</em>) \u2013 The instance to execute against. If this is <code class=\"docutils literal notranslate\"><span class=\"pre\">None</span></code>,\nan ephemeral instance will be used, and no artifacts will be persisted from the run.</p></li>\n</ul>\n</dd>\n<dt class=\"field-even\">Returns</dt>\n<dd class=\"field-even\"><p>The stream of events resulting from pipeline reexecution.</p>\n</dd>\n<dt class=\"field-odd\">Return type</dt>\n<dd class=\"field-odd\"><p>Iterator[<a class=\"reference internal\" href=\"execution#dagster.DagsterEvent\" title=\"dagster.DagsterEvent\">DagsterEvent</a>]</p>\n</dd>\n</dl>\n</dd></dl>\n\n</div>\n<div class=\"section\" id=\"reconstructable-pipelines\">\n<h2>Reconstructable pipelines<a class=\"headerlink\" href=\"#reconstructable-pipelines\" title=\"Permalink to this headline\">\u00b6</a></h2>\n<dl class=\"py class\">\n<dt>\n<em class=\"property\"><span class=\"pre\">class</span> </em><code class=\"sig-prename descclassname\"><span class=\"pre\">dagster.</span></code><code class=\"sig-name descname\"><span class=\"pre\">reconstructable</span></code><span class=\"sig-paren\">(</span><em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">target</span></span></em><span class=\"sig-paren\">)</span><a class=\"reference internal\" href=\"../../../../_modules/dagster/core/definitions/reconstruct#reconstructable\"><span class=\"viewcode-link\"><span class=\"pre\">[source]</span></span></a></dt>\n<dd><p>Create a <code class=\"xref py py-class docutils literal notranslate\"><span class=\"pre\">ReconstructablePipeline</span></code> from a\nfunction that returns a <a class=\"reference internal\" href=\"#dagster.PipelineDefinition\" title=\"dagster.PipelineDefinition\"><code class=\"xref py py-class docutils literal notranslate\"><span class=\"pre\">PipelineDefinition</span></code></a>/<a class=\"reference internal\" href=\"jobs#dagster.JobDefinition\" title=\"dagster.JobDefinition\"><code class=\"xref py py-class docutils literal notranslate\"><span class=\"pre\">JobDefinition</span></code></a>,\nor a function decorated with <a class=\"reference internal\" href=\"#dagster.pipeline\" title=\"dagster.pipeline\"><code class=\"xref py py-func docutils literal notranslate\"><span class=\"pre\">&#64;pipeline</span></code></a>/<a class=\"reference internal\" href=\"jobs#dagster.job\" title=\"dagster.job\"><code class=\"xref py py-func docutils literal notranslate\"><span class=\"pre\">&#64;job</span></code></a>.</p>\n<p>When your pipeline/job must cross process boundaries, e.g., for execution on multiple nodes or\nin different systems (like <code class=\"docutils literal notranslate\"><span class=\"pre\">dagstermill</span></code>), Dagster must know how to reconstruct the pipeline/job\non the other side of the process boundary.</p>\n<p>Passing a job created with <code class=\"docutils literal notranslate\"><span class=\"pre\">~dagster.GraphDefinition.to_job</span></code> to <code class=\"docutils literal notranslate\"><span class=\"pre\">reconstructable()</span></code>,\nrequires you to wrap that job\u2019s definition in a module-scoped function, and pass that function\ninstead:</p>\n<div class=\"highlight-python notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"kn\">from</span> <span class=\"nn\">dagster</span> <span class=\"kn\">import</span> <span class=\"n\">graph</span><span class=\"p\">,</span> <span class=\"n\">reconstructable</span>\n\n<span class=\"nd\">@graph</span>\n<span class=\"k\">def</span> <span class=\"nf\">my_graph</span><span class=\"p\">():</span>\n    <span class=\"o\">...</span>\n\n<span class=\"k\">def</span> <span class=\"nf\">define_my_job</span><span class=\"p\">():</span>\n    <span class=\"k\">return</span> <span class=\"n\">my_graph</span><span class=\"o\">.</span><span class=\"n\">to_job</span><span class=\"p\">()</span>\n\n<span class=\"n\">reconstructable</span><span class=\"p\">(</span><span class=\"n\">define_my_job</span><span class=\"p\">)</span>\n</pre></div>\n</div>\n<p>This function implements a very conservative strategy for reconstruction, so that its behavior\nis easy to predict, but as a consequence it is not able to reconstruct certain kinds of pipelines\nor jobs, such as those defined by lambdas, in nested scopes (e.g., dynamically within a method\ncall), or in interactive environments such as the Python REPL or Jupyter notebooks.</p>\n<p>If you need to reconstruct objects constructed in these ways, you should use\n<code class=\"xref py py-func docutils literal notranslate\"><span class=\"pre\">build_reconstructable_job()</span></code> instead, which allows you to\nspecify your own reconstruction strategy.</p>\n<p>Examples:</p>\n<div class=\"highlight-python notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"kn\">from</span> <span class=\"nn\">dagster</span> <span class=\"kn\">import</span> <span class=\"n\">job</span><span class=\"p\">,</span> <span class=\"n\">reconstructable</span>\n\n<span class=\"nd\">@job</span>\n<span class=\"k\">def</span> <span class=\"nf\">foo_job</span><span class=\"p\">():</span>\n    <span class=\"o\">...</span>\n\n<span class=\"n\">reconstructable_foo_job</span> <span class=\"o\">=</span> <span class=\"n\">reconstructable</span><span class=\"p\">(</span><span class=\"n\">foo_job</span><span class=\"p\">)</span>\n\n\n<span class=\"nd\">@graph</span>\n<span class=\"k\">def</span> <span class=\"nf\">foo</span><span class=\"p\">():</span>\n    <span class=\"o\">...</span>\n\n<span class=\"k\">def</span> <span class=\"nf\">make_bar_job</span><span class=\"p\">():</span>\n    <span class=\"k\">return</span> <span class=\"n\">foo</span><span class=\"o\">.</span><span class=\"n\">to_job</span><span class=\"p\">()</span>\n\n<span class=\"n\">reconstructable_bar_job</span> <span class=\"o\">=</span> <span class=\"n\">reconstructable</span><span class=\"p\">(</span><span class=\"n\">make_bar_job</span><span class=\"p\">)</span>\n</pre></div>\n</div>\n</dd></dl>\n\n<dl class=\"py class\">\n<dt id=\"dagster.core.definitions.reconstruct.ReconstructablePipeline\">\n<em class=\"property\"><span class=\"pre\">class</span> </em><code class=\"sig-prename descclassname\"><span class=\"pre\">dagster.core.definitions.reconstruct.</span></code><code class=\"sig-name descname\"><span class=\"pre\">ReconstructablePipeline</span></code><span class=\"sig-paren\">(</span><em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">repository</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">pipeline_name</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">solid_selection_str</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">None</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">solids_to_execute</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">None</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">asset_selection</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">None</span></span></em><span class=\"sig-paren\">)</span><a class=\"reference internal\" href=\"../../../../_modules/dagster/core/definitions/reconstruct#ReconstructablePipeline\"><span class=\"viewcode-link\"><span class=\"pre\">[source]</span></span></a><a class=\"headerlink\" href=\"#dagster.core.definitions.reconstruct.ReconstructablePipeline\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Defines a reconstructable pipeline. When your pipeline/job must cross process boundaries,\nDagster must know how to reconstruct the pipeline/job on the other side of the process boundary.</p>\n<dl class=\"field-list simple\">\n<dt class=\"field-odd\">Parameters</dt>\n<dd class=\"field-odd\"><ul class=\"simple\">\n<li><p><strong>repository</strong> (<em>ReconstructableRepository</em>) \u2013 The reconstructable representation of the repository\nthe pipeline/job belongs to.</p></li>\n<li><p><strong>pipeline_name</strong> (<a class=\"reference external\" href=\"https://docs.python.org/3/library/stdtypes.html#str\" title=\"(in Python v3.8)\"><em>str</em></a>) \u2013 The name of the pipeline/job.</p></li>\n<li><p><strong>solid_selection_str</strong> (<em>Optional</em><em>[</em><a class=\"reference external\" href=\"https://docs.python.org/3/library/stdtypes.html#str\" title=\"(in Python v3.8)\"><em>str</em></a><em>]</em>) \u2013 The string value of a comma separated list of user-input\nsolid/op selection. None if no selection is specified, i.e. the entire pipeline/job will\nbe run.</p></li>\n<li><p><strong>solids_to_execute</strong> (<em>Optional</em><em>[</em><em>FrozenSet</em><em>[</em><a class=\"reference external\" href=\"https://docs.python.org/3/library/stdtypes.html#str\" title=\"(in Python v3.8)\"><em>str</em></a><em>]</em><em>]</em>) \u2013 A set of solid/op names to execute. None if no selection\nis specified, i.e. the entire pipeline/job will be run.</p></li>\n<li><p><strong>asset_selection</strong> (<em>Optional</em><em>[</em><em>FrozenSet</em><em>[</em><a class=\"reference internal\" href=\"ops#dagster.AssetKey\" title=\"dagster.AssetKey\"><em>AssetKey</em></a><em>]</em><em>]</em>) \u2013 is specified, i.e. the entire job will be run.</p></li>\n</ul>\n</dd>\n</dl>\n<dl class=\"py method\">\n<dt id=\"dagster.core.definitions.reconstruct.ReconstructablePipeline.get_module\">\n<code class=\"sig-name descname\"><span class=\"pre\">get_module</span></code><span class=\"sig-paren\">(</span><span class=\"sig-paren\">)</span><a class=\"reference internal\" href=\"../../../../_modules/dagster/core/definitions/reconstruct#ReconstructablePipeline.get_module\"><span class=\"viewcode-link\"><span class=\"pre\">[source]</span></span></a><a class=\"headerlink\" href=\"#dagster.core.definitions.reconstruct.ReconstructablePipeline.get_module\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Return the module the pipeline is found in, the origin is a module code pointer</p>\n</dd></dl>\n\n</dd></dl>\n\n</div>\n<div class=\"section\" id=\"pipeline-configuration\">\n<h2>Pipeline configuration<a class=\"headerlink\" href=\"#pipeline-configuration\" title=\"Permalink to this headline\">\u00b6</a></h2>\n<div class=\"section\" id=\"run-config-schema\">\n<span id=\"pipeline-config-schema\"></span><h3>Run Config Schema<a class=\"headerlink\" href=\"#run-config-schema\" title=\"Permalink to this headline\">\u00b6</a></h3>\n<blockquote>\n<div><p>The <code class=\"docutils literal notranslate\"><span class=\"pre\">run_config</span></code> used by <code class=\"xref py py-func docutils literal notranslate\"><span class=\"pre\">execute_pipeline()</span></code> and\n<code class=\"xref py py-func docutils literal notranslate\"><span class=\"pre\">execute_pipeline_iterator()</span></code> has the following schema:</p>\n<div class=\"highlight-default notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"p\">{</span>\n  <span class=\"c1\"># configuration for execution, required if executors require config</span>\n  <span class=\"n\">execution</span><span class=\"p\">:</span> <span class=\"p\">{</span>\n    <span class=\"c1\"># the name of one, and only one available executor, typically &#39;in_process&#39; or &#39;multiprocess&#39;</span>\n    <span class=\"n\">__executor_name__</span><span class=\"p\">:</span> <span class=\"p\">{</span>\n      <span class=\"c1\"># executor-specific config, if required or permitted</span>\n      <span class=\"n\">config</span><span class=\"p\">:</span> <span class=\"p\">{</span>\n        <span class=\"o\">...</span>\n      <span class=\"p\">}</span>\n    <span class=\"p\">}</span>\n  <span class=\"p\">},</span>\n\n  <span class=\"c1\"># configuration for loggers, required if loggers require config</span>\n  <span class=\"n\">loggers</span><span class=\"p\">:</span> <span class=\"p\">{</span>\n    <span class=\"c1\"># the name of an available logger</span>\n    <span class=\"n\">__logger_name__</span><span class=\"p\">:</span> <span class=\"p\">{</span>\n      <span class=\"c1\"># logger-specific config, if required or permitted</span>\n      <span class=\"n\">config</span><span class=\"p\">:</span> <span class=\"p\">{</span>\n        <span class=\"o\">...</span>\n      <span class=\"p\">}</span>\n    <span class=\"p\">},</span>\n    <span class=\"o\">...</span>\n  <span class=\"p\">},</span>\n\n  <span class=\"c1\"># configuration for resources, required if resources require config</span>\n  <span class=\"n\">resources</span><span class=\"p\">:</span> <span class=\"p\">{</span>\n    <span class=\"c1\"># the name of a resource</span>\n    <span class=\"n\">__resource_name__</span><span class=\"p\">:</span> <span class=\"p\">{</span>\n      <span class=\"c1\"># resource-specific config, if required or permitted</span>\n      <span class=\"n\">config</span><span class=\"p\">:</span> <span class=\"p\">{</span>\n        <span class=\"o\">...</span>\n      <span class=\"p\">}</span>\n    <span class=\"p\">},</span>\n    <span class=\"o\">...</span>\n  <span class=\"p\">},</span>\n\n  <span class=\"c1\"># configuration for solids, required if solids require config</span>\n  <span class=\"n\">solids</span><span class=\"p\">:</span> <span class=\"p\">{</span>\n\n    <span class=\"c1\"># these keys align with the names of the solids, or their alias in this pipeline</span>\n    <span class=\"n\">__solid_name__</span><span class=\"p\">:</span> <span class=\"p\">{</span>\n\n      <span class=\"c1\"># pass any data that was defined via config_field</span>\n      <span class=\"n\">config</span><span class=\"p\">:</span> <span class=\"o\">...</span><span class=\"p\">,</span>\n\n      <span class=\"c1\"># configurably specify input values, keyed by input name</span>\n      <span class=\"n\">inputs</span><span class=\"p\">:</span> <span class=\"p\">{</span>\n        <span class=\"n\">__input_name__</span><span class=\"p\">:</span> <span class=\"p\">{</span>\n          <span class=\"c1\"># if an dagster_type_loader is specified, that schema must be satisfied here;</span>\n          <span class=\"c1\"># scalar, built-in types will generally allow their values to be specified directly:</span>\n          <span class=\"n\">value</span><span class=\"p\">:</span> <span class=\"o\">...</span>\n        <span class=\"p\">}</span>\n      <span class=\"p\">},</span>\n\n    <span class=\"p\">}</span>\n  <span class=\"p\">},</span>\n\n<span class=\"p\">}</span>\n</pre></div>\n</div>\n</div></blockquote>\n</div>\n</div>\n<div class=\"section\" id=\"aliases\">\n<h2>Aliases<a class=\"headerlink\" href=\"#aliases\" title=\"Permalink to this headline\">\u00b6</a></h2>\n<dl class=\"py attribute\">\n<dt id=\"dagster.SolidInvocation\">\n<code class=\"sig-prename descclassname\"><span class=\"pre\">dagster.</span></code><code class=\"sig-name descname\"><span class=\"pre\">SolidInvocation</span></code><a class=\"headerlink\" href=\"#dagster.SolidInvocation\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>alias of <code class=\"xref py py-class docutils literal notranslate\"><span class=\"pre\">dagster.core.definitions.dependency.NodeInvocation</span></code></p>\n</dd></dl>\n\n</div>\n</div>\n", "current_page_name": "sections/api/apidocs/pipeline", "customsidebar": null, "display_toc": true, "meta": null, "metatags": "", "next": {"link": "../presets/", "title": "[Legacy] Presets"}, "page_source_suffix": ".rst", "parents": [], "prev": {"link": "../partitions/", "title": "Partitioned Config"}, "rellinks": [["genindex", "General Index", "I", "index"], ["py-modindex", "Python Module Index", "", "modules"], ["sections/api/apidocs/presets", "[Legacy] Presets", "N", "next"], ["sections/api/apidocs/partitions", "Partitioned Config", "P", "previous"]], "sidebars": ["globaltoc.html", "searchbox.html"], "sourcename": "sections/api/apidocs/pipeline.rst.txt", "title": "[Legacy] Pipelines", "toc": "<ul>\n<li><a class=\"reference internal\" href=\"#\">[Legacy] Pipelines</a><ul>\n<li><a class=\"reference internal\" href=\"#pipeline-definitions\">Pipeline definitions</a></li>\n<li><a class=\"reference internal\" href=\"#executing-pipelines\">Executing pipelines</a></li>\n<li><a class=\"reference internal\" href=\"#re-executing-pipelines\">Re-executing pipelines</a></li>\n<li><a class=\"reference internal\" href=\"#reconstructable-pipelines\">Reconstructable pipelines</a></li>\n<li><a class=\"reference internal\" href=\"#pipeline-configuration\">Pipeline configuration</a><ul>\n<li><a class=\"reference internal\" href=\"#run-config-schema\">Run Config Schema</a></li>\n</ul>\n</li>\n<li><a class=\"reference internal\" href=\"#aliases\">Aliases</a></li>\n</ul>\n</li>\n</ul>\n"}, "presets": {"alabaster_version": "0.7.12", "body": "<div class=\"section\" id=\"legacy-presets\">\n<h1>[Legacy] Presets<a class=\"headerlink\" href=\"#legacy-presets\" title=\"Permalink to this headline\">\u00b6</a></h1>\n<dl class=\"py class\">\n<dt id=\"dagster.PresetDefinition\">\n<em class=\"property\"><span class=\"pre\">class</span> </em><code class=\"sig-prename descclassname\"><span class=\"pre\">dagster.</span></code><code class=\"sig-name descname\"><span class=\"pre\">PresetDefinition</span></code><span class=\"sig-paren\">(</span><em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">name</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">run_config</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">None</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">solid_selection</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">None</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">mode</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">None</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">tags</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">None</span></span></em><span class=\"sig-paren\">)</span><a class=\"reference internal\" href=\"../../../../_modules/dagster/core/definitions/preset#PresetDefinition\"><span class=\"viewcode-link\"><span class=\"pre\">[source]</span></span></a><a class=\"headerlink\" href=\"#dagster.PresetDefinition\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Defines a preset configuration in which a pipeline can execute.</p>\n<p>Presets can be used in Dagit to load predefined configurations into the tool.</p>\n<p>Presets may also be used from the Python API (in a script, or in test) as follows:</p>\n<div class=\"highlight-python notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"n\">execute_pipeline</span><span class=\"p\">(</span><span class=\"n\">pipeline_def</span><span class=\"p\">,</span> <span class=\"n\">preset</span><span class=\"o\">=</span><span class=\"s1\">&#39;example_preset&#39;</span><span class=\"p\">)</span>\n</pre></div>\n</div>\n<p>Presets may also be used with the command line tools:</p>\n<div class=\"highlight-shell notranslate\"><div class=\"highlight\"><pre><span></span>$ dagster pipeline execute example_pipeline --preset example_preset\n</pre></div>\n</div>\n<dl class=\"field-list simple\">\n<dt class=\"field-odd\">Parameters</dt>\n<dd class=\"field-odd\"><ul class=\"simple\">\n<li><p><strong>name</strong> (<a class=\"reference external\" href=\"https://docs.python.org/3/library/stdtypes.html#str\" title=\"(in Python v3.8)\"><em>str</em></a>) \u2013 The name of this preset. Must be unique in the presets defined on a given\npipeline.</p></li>\n<li><p><strong>run_config</strong> (<em>Optional</em><em>[</em><a class=\"reference external\" href=\"https://docs.python.org/3/library/stdtypes.html#dict\" title=\"(in Python v3.8)\"><em>dict</em></a><em>]</em>) \u2013 A dict representing the config to set with the preset.\nThis is equivalent to the <code class=\"docutils literal notranslate\"><span class=\"pre\">run_config</span></code> argument to <a class=\"reference internal\" href=\"pipeline#dagster.execute_pipeline\" title=\"dagster.execute_pipeline\"><code class=\"xref py py-func docutils literal notranslate\"><span class=\"pre\">execute_pipeline()</span></code></a>.</p></li>\n<li><p><strong>solid_selection</strong> (<em>Optional</em><em>[</em><em>List</em><em>[</em><a class=\"reference external\" href=\"https://docs.python.org/3/library/stdtypes.html#str\" title=\"(in Python v3.8)\"><em>str</em></a><em>]</em><em>]</em>) \u2013 A list of solid subselection (including single\nsolid names) to execute with the preset. e.g. <code class=\"docutils literal notranslate\"><span class=\"pre\">['*some_solid+',</span> <span class=\"pre\">'other_solid']</span></code></p></li>\n<li><p><strong>mode</strong> (<em>Optional</em><em>[</em><a class=\"reference external\" href=\"https://docs.python.org/3/library/stdtypes.html#str\" title=\"(in Python v3.8)\"><em>str</em></a><em>]</em>) \u2013 The mode to apply when executing this preset. (default: \u2018default\u2019)</p></li>\n<li><p><strong>tags</strong> (<em>Optional</em><em>[</em><em>Dict</em><em>[</em><a class=\"reference external\" href=\"https://docs.python.org/3/library/stdtypes.html#str\" title=\"(in Python v3.8)\"><em>str</em></a><em>, </em><em>Any</em><em>]</em><em>]</em>) \u2013 The tags to apply when executing this preset.</p></li>\n</ul>\n</dd>\n</dl>\n<dl class=\"py method\">\n<dt id=\"dagster.PresetDefinition.from_files\">\n<em class=\"property\"><span class=\"pre\">static</span> </em><code class=\"sig-name descname\"><span class=\"pre\">from_files</span></code><span class=\"sig-paren\">(</span><em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">name</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">config_files</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">None</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">solid_selection</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">None</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">mode</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">None</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">tags</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">None</span></span></em><span class=\"sig-paren\">)</span><a class=\"reference internal\" href=\"../../../../_modules/dagster/core/definitions/preset#PresetDefinition.from_files\"><span class=\"viewcode-link\"><span class=\"pre\">[source]</span></span></a><a class=\"headerlink\" href=\"#dagster.PresetDefinition.from_files\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Static constructor for presets from YAML files.</p>\n<dl class=\"field-list simple\">\n<dt class=\"field-odd\">Parameters</dt>\n<dd class=\"field-odd\"><ul class=\"simple\">\n<li><p><strong>name</strong> (<a class=\"reference external\" href=\"https://docs.python.org/3/library/stdtypes.html#str\" title=\"(in Python v3.8)\"><em>str</em></a>) \u2013 The name of this preset. Must be unique in the presets defined on a given\npipeline.</p></li>\n<li><p><strong>config_files</strong> (<em>Optional</em><em>[</em><em>List</em><em>[</em><a class=\"reference external\" href=\"https://docs.python.org/3/library/stdtypes.html#str\" title=\"(in Python v3.8)\"><em>str</em></a><em>]</em><em>]</em>) \u2013 List of paths or glob patterns for yaml files\nto load and parse as the run config for this preset.</p></li>\n<li><p><strong>solid_selection</strong> (<em>Optional</em><em>[</em><em>List</em><em>[</em><a class=\"reference external\" href=\"https://docs.python.org/3/library/stdtypes.html#str\" title=\"(in Python v3.8)\"><em>str</em></a><em>]</em><em>]</em>) \u2013 A list of solid subselection (including single\nsolid names) to execute with the preset. e.g. <code class=\"docutils literal notranslate\"><span class=\"pre\">['*some_solid+',</span> <span class=\"pre\">'other_solid']</span></code></p></li>\n<li><p><strong>mode</strong> (<em>Optional</em><em>[</em><a class=\"reference external\" href=\"https://docs.python.org/3/library/stdtypes.html#str\" title=\"(in Python v3.8)\"><em>str</em></a><em>]</em>) \u2013 The mode to apply when executing this preset. (default:\n\u2018default\u2019)</p></li>\n<li><p><strong>tags</strong> (<em>Optional</em><em>[</em><em>Dict</em><em>[</em><a class=\"reference external\" href=\"https://docs.python.org/3/library/stdtypes.html#str\" title=\"(in Python v3.8)\"><em>str</em></a><em>, </em><em>Any</em><em>]</em><em>]</em>) \u2013 The tags to apply when executing this preset.</p></li>\n</ul>\n</dd>\n<dt class=\"field-even\">Returns</dt>\n<dd class=\"field-even\"><p>A PresetDefinition constructed from the provided YAML files.</p>\n</dd>\n<dt class=\"field-odd\">Return type</dt>\n<dd class=\"field-odd\"><p><a class=\"reference internal\" href=\"#dagster.PresetDefinition\" title=\"dagster.PresetDefinition\">PresetDefinition</a></p>\n</dd>\n<dt class=\"field-even\">Raises</dt>\n<dd class=\"field-even\"><p><a class=\"reference internal\" href=\"errors#dagster.DagsterInvariantViolationError\" title=\"dagster.DagsterInvariantViolationError\"><strong>DagsterInvariantViolationError</strong></a> \u2013 When one of the YAML files is invalid and has a parse\n    error.</p>\n</dd>\n</dl>\n</dd></dl>\n\n<dl class=\"py method\">\n<dt id=\"dagster.PresetDefinition.from_pkg_resources\">\n<em class=\"property\"><span class=\"pre\">static</span> </em><code class=\"sig-name descname\"><span class=\"pre\">from_pkg_resources</span></code><span class=\"sig-paren\">(</span><em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">name</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">pkg_resource_defs</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">None</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">solid_selection</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">None</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">mode</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">None</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">tags</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">None</span></span></em><span class=\"sig-paren\">)</span><a class=\"reference internal\" href=\"../../../../_modules/dagster/core/definitions/preset#PresetDefinition.from_pkg_resources\"><span class=\"viewcode-link\"><span class=\"pre\">[source]</span></span></a><a class=\"headerlink\" href=\"#dagster.PresetDefinition.from_pkg_resources\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Load a preset from a package resource, using <code class=\"xref py py-func docutils literal notranslate\"><span class=\"pre\">pkg_resources.resource_string()</span></code>.</p>\n<p>Example:</p>\n<div class=\"highlight-python notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"n\">PresetDefinition</span><span class=\"o\">.</span><span class=\"n\">from_pkg_resources</span><span class=\"p\">(</span>\n    <span class=\"n\">name</span><span class=\"o\">=</span><span class=\"s1\">&#39;local&#39;</span><span class=\"p\">,</span>\n    <span class=\"n\">mode</span><span class=\"o\">=</span><span class=\"s1\">&#39;local&#39;</span><span class=\"p\">,</span>\n    <span class=\"n\">pkg_resource_defs</span><span class=\"o\">=</span><span class=\"p\">[</span>\n        <span class=\"p\">(</span><span class=\"s1\">&#39;dagster_examples.airline_demo.environments&#39;</span><span class=\"p\">,</span> <span class=\"s1\">&#39;local_base.yaml&#39;</span><span class=\"p\">),</span>\n        <span class=\"p\">(</span><span class=\"s1\">&#39;dagster_examples.airline_demo.environments&#39;</span><span class=\"p\">,</span> <span class=\"s1\">&#39;local_warehouse.yaml&#39;</span><span class=\"p\">),</span>\n    <span class=\"p\">],</span>\n<span class=\"p\">)</span>\n</pre></div>\n</div>\n<dl class=\"field-list simple\">\n<dt class=\"field-odd\">Parameters</dt>\n<dd class=\"field-odd\"><ul class=\"simple\">\n<li><p><strong>name</strong> (<a class=\"reference external\" href=\"https://docs.python.org/3/library/stdtypes.html#str\" title=\"(in Python v3.8)\"><em>str</em></a>) \u2013 The name of this preset. Must be unique in the presets defined on a given\npipeline.</p></li>\n<li><p><strong>pkg_resource_defs</strong> (<em>Optional</em><em>[</em><em>List</em><em>[</em><em>(</em><a class=\"reference external\" href=\"https://docs.python.org/3/library/stdtypes.html#str\" title=\"(in Python v3.8)\"><em>str</em></a><em>, </em><a class=\"reference external\" href=\"https://docs.python.org/3/library/stdtypes.html#str\" title=\"(in Python v3.8)\"><em>str</em></a><em>)</em><em>]</em><em>]</em>) \u2013 List of pkg_resource modules/files to\nload as the run config for this preset.</p></li>\n<li><p><strong>solid_selection</strong> (<em>Optional</em><em>[</em><em>List</em><em>[</em><a class=\"reference external\" href=\"https://docs.python.org/3/library/stdtypes.html#str\" title=\"(in Python v3.8)\"><em>str</em></a><em>]</em><em>]</em>) \u2013 A list of solid subselection (including single\nsolid names) to execute with this partition. e.g.\n<code class=\"docutils literal notranslate\"><span class=\"pre\">['*some_solid+',</span> <span class=\"pre\">'other_solid']</span></code></p></li>\n<li><p><strong>mode</strong> (<em>Optional</em><em>[</em><a class=\"reference external\" href=\"https://docs.python.org/3/library/stdtypes.html#str\" title=\"(in Python v3.8)\"><em>str</em></a><em>]</em>) \u2013 The mode to apply when executing this preset. (default:\n\u2018default\u2019)</p></li>\n<li><p><strong>tags</strong> (<em>Optional</em><em>[</em><em>Dict</em><em>[</em><a class=\"reference external\" href=\"https://docs.python.org/3/library/stdtypes.html#str\" title=\"(in Python v3.8)\"><em>str</em></a><em>, </em><em>Any</em><em>]</em><em>]</em>) \u2013 The tags to apply when executing this preset.</p></li>\n</ul>\n</dd>\n<dt class=\"field-even\">Returns</dt>\n<dd class=\"field-even\"><p>A PresetDefinition constructed from the provided YAML strings</p>\n</dd>\n<dt class=\"field-odd\">Return type</dt>\n<dd class=\"field-odd\"><p><a class=\"reference internal\" href=\"#dagster.PresetDefinition\" title=\"dagster.PresetDefinition\">PresetDefinition</a></p>\n</dd>\n<dt class=\"field-even\">Raises</dt>\n<dd class=\"field-even\"><p><a class=\"reference internal\" href=\"errors#dagster.DagsterInvariantViolationError\" title=\"dagster.DagsterInvariantViolationError\"><strong>DagsterInvariantViolationError</strong></a> \u2013 When one of the YAML documents is invalid and has a\n    parse error.</p>\n</dd>\n</dl>\n</dd></dl>\n\n<dl class=\"py method\">\n<dt id=\"dagster.PresetDefinition.from_yaml_strings\">\n<em class=\"property\"><span class=\"pre\">static</span> </em><code class=\"sig-name descname\"><span class=\"pre\">from_yaml_strings</span></code><span class=\"sig-paren\">(</span><em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">name</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">yaml_strings</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">None</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">solid_selection</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">None</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">mode</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">None</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">tags</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">None</span></span></em><span class=\"sig-paren\">)</span><a class=\"reference internal\" href=\"../../../../_modules/dagster/core/definitions/preset#PresetDefinition.from_yaml_strings\"><span class=\"viewcode-link\"><span class=\"pre\">[source]</span></span></a><a class=\"headerlink\" href=\"#dagster.PresetDefinition.from_yaml_strings\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Static constructor for presets from YAML strings.</p>\n<dl class=\"field-list simple\">\n<dt class=\"field-odd\">Parameters</dt>\n<dd class=\"field-odd\"><ul class=\"simple\">\n<li><p><strong>name</strong> (<a class=\"reference external\" href=\"https://docs.python.org/3/library/stdtypes.html#str\" title=\"(in Python v3.8)\"><em>str</em></a>) \u2013 The name of this preset. Must be unique in the presets defined on a given\npipeline.</p></li>\n<li><p><strong>yaml_strings</strong> (<em>Optional</em><em>[</em><em>List</em><em>[</em><a class=\"reference external\" href=\"https://docs.python.org/3/library/stdtypes.html#str\" title=\"(in Python v3.8)\"><em>str</em></a><em>]</em><em>]</em>) \u2013 List of yaml strings to parse as the environment\nconfig for this preset.</p></li>\n<li><p><strong>solid_selection</strong> (<em>Optional</em><em>[</em><em>List</em><em>[</em><a class=\"reference external\" href=\"https://docs.python.org/3/library/stdtypes.html#str\" title=\"(in Python v3.8)\"><em>str</em></a><em>]</em><em>]</em>) \u2013 A list of solid subselection (including single\nsolid names) to execute with the preset. e.g. <code class=\"docutils literal notranslate\"><span class=\"pre\">['*some_solid+',</span> <span class=\"pre\">'other_solid']</span></code></p></li>\n<li><p><strong>mode</strong> (<em>Optional</em><em>[</em><a class=\"reference external\" href=\"https://docs.python.org/3/library/stdtypes.html#str\" title=\"(in Python v3.8)\"><em>str</em></a><em>]</em>) \u2013 The mode to apply when executing this preset. (default:\n\u2018default\u2019)</p></li>\n<li><p><strong>tags</strong> (<em>Optional</em><em>[</em><em>Dict</em><em>[</em><a class=\"reference external\" href=\"https://docs.python.org/3/library/stdtypes.html#str\" title=\"(in Python v3.8)\"><em>str</em></a><em>, </em><em>Any</em><em>]</em><em>]</em>) \u2013 The tags to apply when executing this preset.</p></li>\n</ul>\n</dd>\n<dt class=\"field-even\">Returns</dt>\n<dd class=\"field-even\"><p>A PresetDefinition constructed from the provided YAML strings</p>\n</dd>\n<dt class=\"field-odd\">Return type</dt>\n<dd class=\"field-odd\"><p><a class=\"reference internal\" href=\"#dagster.PresetDefinition\" title=\"dagster.PresetDefinition\">PresetDefinition</a></p>\n</dd>\n<dt class=\"field-even\">Raises</dt>\n<dd class=\"field-even\"><p><a class=\"reference internal\" href=\"errors#dagster.DagsterInvariantViolationError\" title=\"dagster.DagsterInvariantViolationError\"><strong>DagsterInvariantViolationError</strong></a> \u2013 When one of the YAML documents is invalid and has a\n    parse error.</p>\n</dd>\n</dl>\n</dd></dl>\n\n<dl class=\"py method\">\n<dt id=\"dagster.PresetDefinition.get_environment_yaml\">\n<code class=\"sig-name descname\"><span class=\"pre\">get_environment_yaml</span></code><span class=\"sig-paren\">(</span><span class=\"sig-paren\">)</span><a class=\"reference internal\" href=\"../../../../_modules/dagster/core/definitions/preset#PresetDefinition.get_environment_yaml\"><span class=\"viewcode-link\"><span class=\"pre\">[source]</span></span></a><a class=\"headerlink\" href=\"#dagster.PresetDefinition.get_environment_yaml\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Get the environment dict set on a preset as YAML.</p>\n<dl class=\"field-list simple\">\n<dt class=\"field-odd\">Returns</dt>\n<dd class=\"field-odd\"><p>The environment dict as YAML.</p>\n</dd>\n<dt class=\"field-even\">Return type</dt>\n<dd class=\"field-even\"><p><a class=\"reference external\" href=\"https://docs.python.org/3/library/stdtypes.html#str\" title=\"(in Python v3.8)\">str</a></p>\n</dd>\n</dl>\n</dd></dl>\n\n<dl class=\"py method\">\n<dt id=\"dagster.PresetDefinition.with_additional_config\">\n<code class=\"sig-name descname\"><span class=\"pre\">with_additional_config</span></code><span class=\"sig-paren\">(</span><em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">run_config</span></span></em><span class=\"sig-paren\">)</span><a class=\"reference internal\" href=\"../../../../_modules/dagster/core/definitions/preset#PresetDefinition.with_additional_config\"><span class=\"viewcode-link\"><span class=\"pre\">[source]</span></span></a><a class=\"headerlink\" href=\"#dagster.PresetDefinition.with_additional_config\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Return a new PresetDefinition with additional config merged in to the existing config.</p>\n</dd></dl>\n\n</dd></dl>\n\n</div>\n", "current_page_name": "sections/api/apidocs/presets", "customsidebar": null, "display_toc": false, "meta": null, "metatags": "", "next": {"link": "../repositories/", "title": "Repositories"}, "page_source_suffix": ".rst", "parents": [], "prev": {"link": "../pipeline/", "title": "[Legacy] Pipelines"}, "rellinks": [["genindex", "General Index", "I", "index"], ["py-modindex", "Python Module Index", "", "modules"], ["sections/api/apidocs/repositories", "Repositories", "N", "next"], ["sections/api/apidocs/pipeline", "[Legacy] Pipelines", "P", "previous"]], "sidebars": ["globaltoc.html", "searchbox.html"], "sourcename": "sections/api/apidocs/presets.rst.txt", "title": "[Legacy] Presets", "toc": "<ul>\n<li><a class=\"reference internal\" href=\"#\">[Legacy] Presets</a></li>\n</ul>\n"}, "repositories": {"alabaster_version": "0.7.12", "body": "<div class=\"section\" id=\"repositories\">\n<h1>Repositories<a class=\"headerlink\" href=\"#repositories\" title=\"Permalink to this headline\">\u00b6</a></h1>\n<dl class=\"py data\">\n<dt id=\"dagster.repository\">\n<code class=\"sig-prename descclassname\"><span class=\"pre\">dagster.</span></code><code class=\"sig-name descname\"><span class=\"pre\">repository</span></code><em class=\"property\"> <span class=\"pre\">RepositoryDefinition</span></em><a class=\"reference internal\" href=\"../../../../_modules/dagster/core/definitions/decorators/repository_decorator#repository\"><span class=\"viewcode-link\"><span class=\"pre\">[source]</span></span></a><a class=\"headerlink\" href=\"#dagster.repository\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Create a repository from the decorated function.</p>\n<p>The decorated function should take no arguments and its return value should one of:</p>\n<p>1. <code class=\"docutils literal notranslate\"><span class=\"pre\">List[Union[JobDefinition,</span> <span class=\"pre\">PipelineDefinition,</span> <span class=\"pre\">PartitionSetDefinition,</span> <span class=\"pre\">ScheduleDefinition,</span> <span class=\"pre\">SensorDefinition]]</span></code>.\nUse this form when you have no need to lazy load pipelines or other definitions. This is the\ntypical use case.</p>\n<ol class=\"arabic simple\" start=\"2\">\n<li><p>A dict of the form:</p></li>\n</ol>\n<div class=\"highlight-python notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"p\">{</span>\n    <span class=\"s1\">&#39;jobs&#39;</span><span class=\"p\">:</span> <span class=\"n\">Dict</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"n\">Callable</span><span class=\"p\">[[],</span> <span class=\"n\">JobDefinition</span><span class=\"p\">]],</span>\n    <span class=\"s1\">&#39;pipelines&#39;</span><span class=\"p\">:</span> <span class=\"n\">Dict</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"n\">Callable</span><span class=\"p\">[[],</span> <span class=\"n\">PipelineDefinition</span><span class=\"p\">]],</span>\n    <span class=\"s1\">&#39;partition_sets&#39;</span><span class=\"p\">:</span> <span class=\"n\">Dict</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"n\">Callable</span><span class=\"p\">[[],</span> <span class=\"n\">PartitionSetDefinition</span><span class=\"p\">]],</span>\n    <span class=\"s1\">&#39;schedules&#39;</span><span class=\"p\">:</span> <span class=\"n\">Dict</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"n\">Callable</span><span class=\"p\">[[],</span> <span class=\"n\">ScheduleDefinition</span><span class=\"p\">]]</span>\n    <span class=\"s1\">&#39;sensors&#39;</span><span class=\"p\">:</span> <span class=\"n\">Dict</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"n\">Callable</span><span class=\"p\">[[],</span> <span class=\"n\">SensorDefinition</span><span class=\"p\">]]</span>\n<span class=\"p\">}</span>\n</pre></div>\n</div>\n<p>This form is intended to allow definitions to be created lazily when accessed by name,\nwhich can be helpful for performance when there are many definitions in a repository, or\nwhen constructing the definitions is costly.</p>\n<p>3. A <a class=\"reference internal\" href=\"#dagster.RepositoryData\" title=\"dagster.RepositoryData\"><code class=\"xref py py-class docutils literal notranslate\"><span class=\"pre\">RepositoryData</span></code></a>. Return this object if you need fine-grained\ncontrol over the construction and indexing of definitions within the repository, e.g., to\ncreate definitions dynamically from .yaml files in a directory.</p>\n<dl class=\"field-list simple\">\n<dt class=\"field-odd\">Parameters</dt>\n<dd class=\"field-odd\"><ul class=\"simple\">\n<li><p><strong>name</strong> (<em>Optional</em><em>[</em><a class=\"reference external\" href=\"https://docs.python.org/3/library/stdtypes.html#str\" title=\"(in Python v3.8)\"><em>str</em></a><em>]</em>) \u2013 The name of the repository. Defaults to the name of the decorated\nfunction.</p></li>\n<li><p><strong>description</strong> (<em>Optional</em><em>[</em><a class=\"reference external\" href=\"https://docs.python.org/3/library/stdtypes.html#str\" title=\"(in Python v3.8)\"><em>str</em></a><em>]</em>) \u2013 A string description of the repository.</p></li>\n</ul>\n</dd>\n</dl>\n<p>Example:</p>\n<div class=\"highlight-python notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"c1\">######################################################################</span>\n<span class=\"c1\"># A simple repository using the first form of the decorated function</span>\n<span class=\"c1\">######################################################################</span>\n\n<span class=\"nd\">@op</span><span class=\"p\">(</span><span class=\"n\">config_schema</span><span class=\"o\">=</span><span class=\"p\">{</span><span class=\"n\">n</span><span class=\"p\">:</span> <span class=\"n\">Field</span><span class=\"p\">(</span><span class=\"n\">Int</span><span class=\"p\">)})</span>\n<span class=\"k\">def</span> <span class=\"nf\">return_n</span><span class=\"p\">(</span><span class=\"n\">context</span><span class=\"p\">):</span>\n    <span class=\"k\">return</span> <span class=\"n\">context</span><span class=\"o\">.</span><span class=\"n\">op_config</span><span class=\"p\">[</span><span class=\"s1\">&#39;n&#39;</span><span class=\"p\">]</span>\n\n<span class=\"nd\">@job</span>\n<span class=\"k\">def</span> <span class=\"nf\">simple_job</span><span class=\"p\">():</span>\n    <span class=\"n\">return_n</span><span class=\"p\">()</span>\n\n<span class=\"nd\">@job</span>\n<span class=\"k\">def</span> <span class=\"nf\">some_job</span><span class=\"p\">():</span>\n    <span class=\"o\">...</span>\n\n<span class=\"nd\">@sensor</span><span class=\"p\">(</span><span class=\"n\">job</span><span class=\"o\">=</span><span class=\"n\">some_job</span><span class=\"p\">)</span>\n<span class=\"k\">def</span> <span class=\"nf\">some_sensor</span><span class=\"p\">():</span>\n    <span class=\"k\">if</span> <span class=\"n\">foo</span><span class=\"p\">():</span>\n        <span class=\"k\">yield</span> <span class=\"n\">RunRequest</span><span class=\"p\">(</span>\n            <span class=\"n\">run_key</span><span class=\"o\">=</span> <span class=\"o\">...</span><span class=\"p\">,</span>\n            <span class=\"n\">run_config</span><span class=\"o\">=</span><span class=\"p\">{</span>\n                <span class=\"s1\">&#39;ops&#39;</span><span class=\"p\">:</span> <span class=\"p\">{</span><span class=\"s1\">&#39;return_n&#39;</span><span class=\"p\">:</span> <span class=\"p\">{</span><span class=\"s1\">&#39;config&#39;</span><span class=\"p\">:</span> <span class=\"p\">{</span><span class=\"s1\">&#39;n&#39;</span><span class=\"p\">:</span> <span class=\"n\">bar</span><span class=\"p\">()}}}</span>\n            <span class=\"p\">}</span>\n        <span class=\"p\">)</span>\n\n<span class=\"nd\">@job</span>\n<span class=\"k\">def</span> <span class=\"nf\">my_job</span><span class=\"p\">():</span>\n    <span class=\"o\">...</span>\n\n<span class=\"n\">my_schedule</span> <span class=\"o\">=</span> <span class=\"n\">ScheduleDefinition</span><span class=\"p\">(</span><span class=\"n\">cron_schedule</span><span class=\"o\">=</span><span class=\"s2\">&quot;0 0 * * *&quot;</span><span class=\"p\">,</span> <span class=\"n\">job</span><span class=\"o\">=</span><span class=\"n\">my_job</span><span class=\"p\">)</span>\n\n<span class=\"nd\">@repository</span>\n<span class=\"k\">def</span> <span class=\"nf\">simple_repository</span><span class=\"p\">():</span>\n    <span class=\"k\">return</span> <span class=\"p\">[</span><span class=\"n\">simple_job</span><span class=\"p\">,</span> <span class=\"n\">some_sensor</span><span class=\"p\">,</span> <span class=\"n\">my_schedule</span><span class=\"p\">]</span>\n\n\n<span class=\"c1\">######################################################################</span>\n<span class=\"c1\"># A lazy-loaded repository</span>\n<span class=\"c1\">######################################################################</span>\n\n<span class=\"k\">def</span> <span class=\"nf\">make_expensive_job</span><span class=\"p\">():</span>\n    <span class=\"nd\">@job</span>\n    <span class=\"k\">def</span> <span class=\"nf\">expensive_job</span><span class=\"p\">():</span>\n        <span class=\"k\">for</span> <span class=\"n\">i</span> <span class=\"ow\">in</span> <span class=\"nb\">range</span><span class=\"p\">(</span><span class=\"mi\">10000</span><span class=\"p\">):</span>\n            <span class=\"n\">return_n</span><span class=\"o\">.</span><span class=\"n\">alias</span><span class=\"p\">(</span><span class=\"sa\">f</span><span class=\"s1\">&#39;return_n_</span><span class=\"si\">{</span><span class=\"n\">i</span><span class=\"si\">}</span><span class=\"s1\">&#39;</span><span class=\"p\">)()</span>\n\n    <span class=\"k\">return</span> <span class=\"n\">expensive_job</span>\n\n<span class=\"k\">def</span> <span class=\"nf\">make_expensive_schedule</span><span class=\"p\">():</span>\n    <span class=\"nd\">@job</span>\n    <span class=\"k\">def</span> <span class=\"nf\">other_expensive_job</span><span class=\"p\">():</span>\n        <span class=\"k\">for</span> <span class=\"n\">i</span> <span class=\"ow\">in</span> <span class=\"nb\">range</span><span class=\"p\">(</span><span class=\"mi\">11000</span><span class=\"p\">):</span>\n            <span class=\"n\">return_n</span><span class=\"o\">.</span><span class=\"n\">alias</span><span class=\"p\">(</span><span class=\"sa\">f</span><span class=\"s1\">&#39;my_return_n_</span><span class=\"si\">{</span><span class=\"n\">i</span><span class=\"si\">}</span><span class=\"s1\">&#39;</span><span class=\"p\">)()</span>\n\n    <span class=\"k\">return</span> <span class=\"n\">ScheduleDefinition</span><span class=\"p\">(</span><span class=\"n\">cron_schedule</span><span class=\"o\">=</span><span class=\"s2\">&quot;0 0 * * *&quot;</span><span class=\"p\">,</span> <span class=\"n\">job</span><span class=\"o\">=</span><span class=\"n\">other_expensive_job</span><span class=\"p\">)</span>\n\n<span class=\"nd\">@repository</span>\n<span class=\"k\">def</span> <span class=\"nf\">lazy_loaded_repository</span><span class=\"p\">():</span>\n    <span class=\"k\">return</span> <span class=\"p\">{</span>\n        <span class=\"s1\">&#39;jobs&#39;</span><span class=\"p\">:</span> <span class=\"p\">{</span><span class=\"s1\">&#39;expensive_job&#39;</span><span class=\"p\">:</span> <span class=\"n\">make_expensive_job</span><span class=\"p\">},</span>\n        <span class=\"s1\">&#39;schedules&#39;</span><span class=\"p\">:</span> <span class=\"p\">{</span><span class=\"s1\">&#39;expensive_schedule&#39;</span><span class=\"p\">:</span> <span class=\"n\">make_expensive_schedule</span><span class=\"p\">}</span>\n    <span class=\"p\">}</span>\n\n\n<span class=\"c1\">######################################################################</span>\n<span class=\"c1\"># A complex repository that lazily constructs jobs from a directory</span>\n<span class=\"c1\"># of files in a bespoke YAML format</span>\n<span class=\"c1\">######################################################################</span>\n\n<span class=\"k\">class</span> <span class=\"nc\">ComplexRepositoryData</span><span class=\"p\">(</span><span class=\"n\">RepositoryData</span><span class=\"p\">):</span>\n    <span class=\"k\">def</span> <span class=\"fm\">__init__</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">yaml_directory</span><span class=\"p\">):</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_yaml_directory</span> <span class=\"o\">=</span> <span class=\"n\">yaml_directory</span>\n\n    <span class=\"k\">def</span> <span class=\"nf\">get_all_pipelines</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">):</span>\n        <span class=\"k\">return</span> <span class=\"p\">[</span>\n            <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_construct_job_def_from_yaml_file</span><span class=\"p\">(</span>\n              <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_yaml_file_for_job_name</span><span class=\"p\">(</span><span class=\"n\">file_name</span><span class=\"p\">)</span>\n            <span class=\"p\">)</span>\n            <span class=\"k\">for</span> <span class=\"n\">file_name</span> <span class=\"ow\">in</span> <span class=\"n\">os</span><span class=\"o\">.</span><span class=\"n\">listdir</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_yaml_directory</span><span class=\"p\">)</span>\n        <span class=\"p\">]</span>\n\n    <span class=\"o\">...</span>\n\n<span class=\"nd\">@repository</span>\n<span class=\"k\">def</span> <span class=\"nf\">complex_repository</span><span class=\"p\">():</span>\n    <span class=\"k\">return</span> <span class=\"n\">ComplexRepositoryData</span><span class=\"p\">(</span><span class=\"s1\">&#39;some_directory&#39;</span><span class=\"p\">)</span>\n</pre></div>\n</div>\n</dd></dl>\n\n<dl class=\"py class\">\n<dt id=\"dagster.RepositoryDefinition\">\n<em class=\"property\"><span class=\"pre\">class</span> </em><code class=\"sig-prename descclassname\"><span class=\"pre\">dagster.</span></code><code class=\"sig-name descname\"><span class=\"pre\">RepositoryDefinition</span></code><span class=\"sig-paren\">(</span><em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">name</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">repository_data</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">description</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">None</span></span></em><span class=\"sig-paren\">)</span><a class=\"reference internal\" href=\"../../../../_modules/dagster/core/definitions/repository_definition#RepositoryDefinition\"><span class=\"viewcode-link\"><span class=\"pre\">[source]</span></span></a><a class=\"headerlink\" href=\"#dagster.RepositoryDefinition\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Define a repository that contains a group of definitions.</p>\n<p>Users should typically not create objects of this class directly. Instead, use the\n<code class=\"xref py py-func docutils literal notranslate\"><span class=\"pre\">&#64;repository()</span></code> decorator.</p>\n<dl class=\"field-list simple\">\n<dt class=\"field-odd\">Parameters</dt>\n<dd class=\"field-odd\"><ul class=\"simple\">\n<li><p><strong>name</strong> (<a class=\"reference external\" href=\"https://docs.python.org/3/library/stdtypes.html#str\" title=\"(in Python v3.8)\"><em>str</em></a>) \u2013 The name of the repository.</p></li>\n<li><p><strong>repository_data</strong> (<a class=\"reference internal\" href=\"#dagster.RepositoryData\" title=\"dagster.RepositoryData\"><em>RepositoryData</em></a>) \u2013 Contains the definitions making up the repository.</p></li>\n<li><p><strong>description</strong> (<em>Optional</em><em>[</em><a class=\"reference external\" href=\"https://docs.python.org/3/library/stdtypes.html#str\" title=\"(in Python v3.8)\"><em>str</em></a><em>]</em>) \u2013 A string description of the repository.</p></li>\n</ul>\n</dd>\n</dl>\n<dl class=\"py method\">\n<dt id=\"dagster.RepositoryDefinition.get_all_jobs\">\n<code class=\"sig-name descname\"><span class=\"pre\">get_all_jobs</span></code><span class=\"sig-paren\">(</span><span class=\"sig-paren\">)</span><a class=\"reference internal\" href=\"../../../../_modules/dagster/core/definitions/repository_definition#RepositoryDefinition.get_all_jobs\"><span class=\"viewcode-link\"><span class=\"pre\">[source]</span></span></a><a class=\"headerlink\" href=\"#dagster.RepositoryDefinition.get_all_jobs\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Return all jobs in the repository as a list.</p>\n<p>Note that this will construct any job in the lazily evaluated dictionary that has\nnot yet been constructed.</p>\n<dl class=\"field-list simple\">\n<dt class=\"field-odd\">Returns</dt>\n<dd class=\"field-odd\"><p>All jobs in the repository.</p>\n</dd>\n<dt class=\"field-even\">Return type</dt>\n<dd class=\"field-even\"><p>List[<a class=\"reference internal\" href=\"jobs#dagster.JobDefinition\" title=\"dagster.JobDefinition\">JobDefinition</a>]</p>\n</dd>\n</dl>\n</dd></dl>\n\n<dl class=\"py method\">\n<dt id=\"dagster.RepositoryDefinition.get_job\">\n<code class=\"sig-name descname\"><span class=\"pre\">get_job</span></code><span class=\"sig-paren\">(</span><em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">name</span></span></em><span class=\"sig-paren\">)</span><a class=\"reference internal\" href=\"../../../../_modules/dagster/core/definitions/repository_definition#RepositoryDefinition.get_job\"><span class=\"viewcode-link\"><span class=\"pre\">[source]</span></span></a><a class=\"headerlink\" href=\"#dagster.RepositoryDefinition.get_job\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Get a job by name.</p>\n<p>If this job is present in the lazily evaluated dictionary passed to the\nconstructor, but has not yet been constructed, only this job is constructed, and\nwill be cached for future calls.</p>\n<dl class=\"field-list simple\">\n<dt class=\"field-odd\">Parameters</dt>\n<dd class=\"field-odd\"><p><strong>name</strong> (<a class=\"reference external\" href=\"https://docs.python.org/3/library/stdtypes.html#str\" title=\"(in Python v3.8)\"><em>str</em></a>) \u2013 Name of the job to retrieve.</p>\n</dd>\n<dt class=\"field-even\">Returns</dt>\n<dd class=\"field-even\"><p>The job definition corresponding to\nthe given name.</p>\n</dd>\n<dt class=\"field-odd\">Return type</dt>\n<dd class=\"field-odd\"><p><a class=\"reference internal\" href=\"jobs#dagster.JobDefinition\" title=\"dagster.JobDefinition\">JobDefinition</a></p>\n</dd>\n</dl>\n</dd></dl>\n\n<dl class=\"py method\">\n<dt id=\"dagster.RepositoryDefinition.has_job\">\n<code class=\"sig-name descname\"><span class=\"pre\">has_job</span></code><span class=\"sig-paren\">(</span><em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">name</span></span></em><span class=\"sig-paren\">)</span><a class=\"reference internal\" href=\"../../../../_modules/dagster/core/definitions/repository_definition#RepositoryDefinition.has_job\"><span class=\"viewcode-link\"><span class=\"pre\">[source]</span></span></a><a class=\"headerlink\" href=\"#dagster.RepositoryDefinition.has_job\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Check if a job with a given name is present in the repository.</p>\n<dl class=\"field-list simple\">\n<dt class=\"field-odd\">Parameters</dt>\n<dd class=\"field-odd\"><p><strong>name</strong> (<a class=\"reference external\" href=\"https://docs.python.org/3/library/stdtypes.html#str\" title=\"(in Python v3.8)\"><em>str</em></a>) \u2013 The name of the job.</p>\n</dd>\n<dt class=\"field-even\">Returns</dt>\n<dd class=\"field-even\"><p>bool</p>\n</dd>\n</dl>\n</dd></dl>\n\n<dl class=\"py method\">\n<dt id=\"dagster.RepositoryDefinition.job_names\">\n<em class=\"property\"><span class=\"pre\">property</span> </em><code class=\"sig-name descname\"><span class=\"pre\">job_names</span></code><a class=\"headerlink\" href=\"#dagster.RepositoryDefinition.job_names\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Names of all jobs in the repository</p>\n<dl class=\"field-list simple\">\n<dt class=\"field-odd\">Type</dt>\n<dd class=\"field-odd\"><p>List[<a class=\"reference external\" href=\"https://docs.python.org/3/library/stdtypes.html#str\" title=\"(in Python v3.8)\">str</a>]</p>\n</dd>\n</dl>\n</dd></dl>\n\n</dd></dl>\n\n<dl class=\"py class\">\n<dt id=\"dagster.RepositoryData\">\n<em class=\"property\"><span class=\"pre\">class</span> </em><code class=\"sig-prename descclassname\"><span class=\"pre\">dagster.</span></code><code class=\"sig-name descname\"><span class=\"pre\">RepositoryData</span></code><a class=\"reference internal\" href=\"../../../../_modules/dagster/core/definitions/repository_definition#RepositoryData\"><span class=\"viewcode-link\"><span class=\"pre\">[source]</span></span></a><a class=\"headerlink\" href=\"#dagster.RepositoryData\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Users should usually rely on the <a class=\"reference internal\" href=\"#dagster.repository\" title=\"dagster.repository\"><code class=\"xref py py-func docutils literal notranslate\"><span class=\"pre\">&#64;repository</span></code></a> decorator to create new\nrepositories, which will in turn call the static constructors on this class. However, users may\nsubclass <a class=\"reference internal\" href=\"#dagster.RepositoryData\" title=\"dagster.RepositoryData\"><code class=\"xref py py-class docutils literal notranslate\"><span class=\"pre\">RepositoryData</span></code></a> for fine-grained control over access to and lazy creation\nof repository members.</p>\n</dd></dl>\n\n</div>\n", "current_page_name": "sections/api/apidocs/repositories", "customsidebar": null, "display_toc": false, "meta": null, "metatags": "", "next": {"link": "../resources/", "title": "Resources"}, "page_source_suffix": ".rst", "parents": [], "prev": {"link": "../presets/", "title": "[Legacy] Presets"}, "rellinks": [["genindex", "General Index", "I", "index"], ["py-modindex", "Python Module Index", "", "modules"], ["sections/api/apidocs/resources", "Resources", "N", "next"], ["sections/api/apidocs/presets", "[Legacy] Presets", "P", "previous"]], "sidebars": ["globaltoc.html", "searchbox.html"], "sourcename": "sections/api/apidocs/repositories.rst.txt", "title": "Repositories", "toc": "<ul>\n<li><a class=\"reference internal\" href=\"#\">Repositories</a></li>\n</ul>\n"}, "resources": {"alabaster_version": "0.7.12", "body": "<div class=\"section\" id=\"resources\">\n<h1>Resources<a class=\"headerlink\" href=\"#resources\" title=\"Permalink to this headline\">\u00b6</a></h1>\n<dl class=\"py function\">\n<dt id=\"dagster.resource\">\n<code class=\"sig-prename descclassname\"><span class=\"pre\">&#64;</span></code><code class=\"sig-prename descclassname\"><span class=\"pre\">dagster.</span></code><code class=\"sig-name descname\"><span class=\"pre\">resource</span></code><span class=\"sig-paren\">(</span><em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">config_schema</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">None</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">description</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">None</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">required_resource_keys</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">None</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">version</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">None</span></span></em><span class=\"sig-paren\">)</span><a class=\"reference internal\" href=\"../../../../_modules/dagster/core/definitions/resource_definition#resource\"><span class=\"viewcode-link\"><span class=\"pre\">[source]</span></span></a><a class=\"headerlink\" href=\"#dagster.resource\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Define a resource.</p>\n<p>The decorated function should accept an <a class=\"reference internal\" href=\"#dagster.InitResourceContext\" title=\"dagster.InitResourceContext\"><code class=\"xref py py-class docutils literal notranslate\"><span class=\"pre\">InitResourceContext</span></code></a> and return an instance of\nthe resource. This function will become the <code class=\"docutils literal notranslate\"><span class=\"pre\">resource_fn</span></code> of an underlying\n<a class=\"reference internal\" href=\"#dagster.ResourceDefinition\" title=\"dagster.ResourceDefinition\"><code class=\"xref py py-class docutils literal notranslate\"><span class=\"pre\">ResourceDefinition</span></code></a>.</p>\n<p>If the decorated function yields once rather than returning (in the manner of functions\ndecorable with <a class=\"reference external\" href=\"https://docs.python.org/3/library/contextlib.html#contextlib.contextmanager\" title=\"(in Python v3.8)\"><code class=\"xref py py-func docutils literal notranslate\"><span class=\"pre\">&#64;contextlib.contextmanager</span></code></a>) then\nthe body of the function after the yield will be run after execution resolves, allowing users\nto write their own teardown/cleanup logic.</p>\n<dl class=\"field-list simple\">\n<dt class=\"field-odd\">Parameters</dt>\n<dd class=\"field-odd\"><ul class=\"simple\">\n<li><p><strong>config_schema</strong> (<em>Optional</em><em>[</em><a class=\"reference internal\" href=\"config#dagster.ConfigSchema\" title=\"dagster.ConfigSchema\"><em>ConfigSchema</em></a><em>]</em>) \u2013 The schema for the config. Configuration data available in\n<cite>init_context.resource_config</cite>. If not set, Dagster will accept any config provided.</p></li>\n<li><p><strong>description</strong> (<em>Optional</em><em>[</em><a class=\"reference external\" href=\"https://docs.python.org/3/library/stdtypes.html#str\" title=\"(in Python v3.8)\"><em>str</em></a><em>]</em>) \u2013 A human-readable description of the resource.</p></li>\n<li><p><strong>version</strong> (<em>Optional</em><em>[</em><a class=\"reference external\" href=\"https://docs.python.org/3/library/stdtypes.html#str\" title=\"(in Python v3.8)\"><em>str</em></a><em>]</em>) \u2013 (Experimental) The version of a resource function. Two wrapped\nresource functions should only have the same version if they produce the same resource\ndefinition when provided with the same inputs.</p></li>\n<li><p><strong>required_resource_keys</strong> (<em>Optional</em><em>[</em><em>Set</em><em>[</em><a class=\"reference external\" href=\"https://docs.python.org/3/library/stdtypes.html#str\" title=\"(in Python v3.8)\"><em>str</em></a><em>]</em><em>]</em>) \u2013 Keys for the resources required by this resource.</p></li>\n</ul>\n</dd>\n</dl>\n</dd></dl>\n\n<dl class=\"py class\">\n<dt id=\"dagster.ResourceDefinition\">\n<em class=\"property\"><span class=\"pre\">class</span> </em><code class=\"sig-prename descclassname\"><span class=\"pre\">dagster.</span></code><code class=\"sig-name descname\"><span class=\"pre\">ResourceDefinition</span></code><span class=\"sig-paren\">(</span><em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">resource_fn</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">config_schema</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">None</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">description</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">None</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">required_resource_keys</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">None</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">version</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">None</span></span></em><span class=\"sig-paren\">)</span><a class=\"reference internal\" href=\"../../../../_modules/dagster/core/definitions/resource_definition#ResourceDefinition\"><span class=\"viewcode-link\"><span class=\"pre\">[source]</span></span></a><a class=\"headerlink\" href=\"#dagster.ResourceDefinition\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Core class for defining resources.</p>\n<p>Resources are scoped ways to make external resources (like database connections) available to\nduring job execution and to clean up after execution resolves.</p>\n<p>If resource_fn yields once rather than returning (in the manner of functions decorable with\n<a class=\"reference external\" href=\"https://docs.python.org/3/library/contextlib.html#contextlib.contextmanager\" title=\"(in Python v3.8)\"><code class=\"xref py py-func docutils literal notranslate\"><span class=\"pre\">&#64;contextlib.contextmanager</span></code></a>) then the body of the\nfunction after the yield will be run after execution resolves, allowing users to write their\nown teardown/cleanup logic.</p>\n<p>Depending on your executor, resources may be instantiated and cleaned up more than once in a\njob execution.</p>\n<dl class=\"field-list simple\">\n<dt class=\"field-odd\">Parameters</dt>\n<dd class=\"field-odd\"><ul class=\"simple\">\n<li><p><strong>resource_fn</strong> (<em>Callable</em><em>[</em><em>[</em><a class=\"reference internal\" href=\"#dagster.InitResourceContext\" title=\"dagster.InitResourceContext\"><em>InitResourceContext</em></a><em>]</em><em>, </em><em>Any</em><em>]</em>) \u2013 User-provided function to instantiate\nthe resource, which will be made available to executions keyed on the\n<code class=\"docutils literal notranslate\"><span class=\"pre\">context.resources</span></code> object.</p></li>\n<li><p><strong>config_schema</strong> (<em>Optional</em><em>[</em><a class=\"reference internal\" href=\"config#dagster.ConfigSchema\" title=\"dagster.ConfigSchema\"><em>ConfigSchema</em></a>) \u2013 The schema for the config. If set, Dagster will check\nthat config provided for the resource matches this schema and fail if it does not. If\nnot set, Dagster will accept any config provided for the resource.</p></li>\n<li><p><strong>description</strong> (<em>Optional</em><em>[</em><a class=\"reference external\" href=\"https://docs.python.org/3/library/stdtypes.html#str\" title=\"(in Python v3.8)\"><em>str</em></a><em>]</em>) \u2013 A human-readable description of the resource.</p></li>\n<li><p><strong>required_resource_keys</strong> \u2013 (Optional[Set[str]]) Keys for the resources required by this\nresource. A DagsterInvariantViolationError will be raised during initialization if\ndependencies are cyclic.</p></li>\n<li><p><strong>version</strong> (<em>Optional</em><em>[</em><a class=\"reference external\" href=\"https://docs.python.org/3/library/stdtypes.html#str\" title=\"(in Python v3.8)\"><em>str</em></a><em>]</em>) \u2013 (Experimental) The version of the resource\u2019s definition fn. Two\nwrapped resource functions should only have the same version if they produce the same\nresource definition when provided with the same inputs.</p></li>\n</ul>\n</dd>\n</dl>\n<dl class=\"py method\">\n<dt id=\"dagster.ResourceDefinition.configured\">\n<code class=\"sig-name descname\"><span class=\"pre\">configured</span></code><span class=\"sig-paren\">(</span><em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">config_or_config_fn</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">config_schema</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">None</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">description</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">None</span></span></em><span class=\"sig-paren\">)</span><a class=\"headerlink\" href=\"#dagster.ResourceDefinition.configured\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Wraps this object in an object of the same type that provides configuration to the inner\nobject.</p>\n<dl class=\"field-list simple\">\n<dt class=\"field-odd\">Parameters</dt>\n<dd class=\"field-odd\"><ul class=\"simple\">\n<li><p><strong>config_or_config_fn</strong> (<em>Union</em><em>[</em><em>Any</em><em>, </em><em>Callable</em><em>[</em><em>[</em><em>Any</em><em>]</em><em>, </em><em>Any</em><em>]</em><em>]</em>) \u2013 Either (1) Run configuration\nthat fully satisfies this object\u2019s config schema or (2) A function that accepts run\nconfiguration and returns run configuration that fully satisfies this object\u2019s\nconfig schema.  In the latter case, config_schema must be specified.  When\npassing a function, it\u2019s easiest to use <a class=\"reference internal\" href=\"config#dagster.configured\" title=\"dagster.configured\"><code class=\"xref py py-func docutils literal notranslate\"><span class=\"pre\">configured()</span></code></a>.</p></li>\n<li><p><strong>config_schema</strong> (<a class=\"reference internal\" href=\"config#dagster.ConfigSchema\" title=\"dagster.ConfigSchema\"><em>ConfigSchema</em></a>) \u2013 If config_or_config_fn is a function, the config schema\nthat its input must satisfy.</p></li>\n<li><p><strong>description</strong> (<em>Optional</em><em>[</em><a class=\"reference external\" href=\"https://docs.python.org/3/library/stdtypes.html#str\" title=\"(in Python v3.8)\"><em>str</em></a><em>]</em>) \u2013 Description of the new definition. If not specified,\ninherits the description of the definition being configured.</p></li>\n</ul>\n</dd>\n</dl>\n<p>Returns (ConfigurableDefinition): A configured version of this object.</p>\n</dd></dl>\n\n<dl class=\"py method\">\n<dt id=\"dagster.ResourceDefinition.hardcoded_resource\">\n<em class=\"property\"><span class=\"pre\">static</span> </em><code class=\"sig-name descname\"><span class=\"pre\">hardcoded_resource</span></code><span class=\"sig-paren\">(</span><em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">value</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">description</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">None</span></span></em><span class=\"sig-paren\">)</span><a class=\"reference internal\" href=\"../../../../_modules/dagster/core/definitions/resource_definition#ResourceDefinition.hardcoded_resource\"><span class=\"viewcode-link\"><span class=\"pre\">[source]</span></span></a><a class=\"headerlink\" href=\"#dagster.ResourceDefinition.hardcoded_resource\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>A helper function that creates a <code class=\"docutils literal notranslate\"><span class=\"pre\">ResourceDefinition</span></code> with a hardcoded object.</p>\n<dl class=\"field-list simple\">\n<dt class=\"field-odd\">Parameters</dt>\n<dd class=\"field-odd\"><ul class=\"simple\">\n<li><p><strong>value</strong> (<em>Any</em>) \u2013 The value that will be accessible via context.resources.resource_name.</p></li>\n<li><p><strong>description</strong> (<em>[</em><em>Optional</em><em>[</em><a class=\"reference external\" href=\"https://docs.python.org/3/library/stdtypes.html#str\" title=\"(in Python v3.8)\"><em>str</em></a><em>]</em><em>]</em>) \u2013 The description of the resource. Defaults to None.</p></li>\n</ul>\n</dd>\n<dt class=\"field-even\">Returns</dt>\n<dd class=\"field-even\"><p>A hardcoded resource.</p>\n</dd>\n<dt class=\"field-odd\">Return type</dt>\n<dd class=\"field-odd\"><p>[<a class=\"reference internal\" href=\"#dagster.ResourceDefinition\" title=\"dagster.ResourceDefinition\">ResourceDefinition</a>]</p>\n</dd>\n</dl>\n</dd></dl>\n\n<dl class=\"py method\">\n<dt id=\"dagster.ResourceDefinition.mock_resource\">\n<em class=\"property\"><span class=\"pre\">static</span> </em><code class=\"sig-name descname\"><span class=\"pre\">mock_resource</span></code><span class=\"sig-paren\">(</span><em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">description</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">None</span></span></em><span class=\"sig-paren\">)</span><a class=\"reference internal\" href=\"../../../../_modules/dagster/core/definitions/resource_definition#ResourceDefinition.mock_resource\"><span class=\"viewcode-link\"><span class=\"pre\">[source]</span></span></a><a class=\"headerlink\" href=\"#dagster.ResourceDefinition.mock_resource\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>A helper function that creates a <code class=\"docutils literal notranslate\"><span class=\"pre\">ResourceDefinition</span></code> which wraps a <code class=\"docutils literal notranslate\"><span class=\"pre\">mock.MagicMock</span></code>.</p>\n<dl class=\"field-list simple\">\n<dt class=\"field-odd\">Parameters</dt>\n<dd class=\"field-odd\"><p><strong>description</strong> (<em>[</em><em>Optional</em><em>[</em><a class=\"reference external\" href=\"https://docs.python.org/3/library/stdtypes.html#str\" title=\"(in Python v3.8)\"><em>str</em></a><em>]</em><em>]</em>) \u2013 The description of the resource. Defaults to None.</p>\n</dd>\n<dt class=\"field-even\">Returns</dt>\n<dd class=\"field-even\"><p><dl class=\"simple\">\n<dt>A resource that creates the magic methods automatically and helps</dt><dd><p>you mock existing resources.</p>\n</dd>\n</dl>\n</p>\n</dd>\n<dt class=\"field-odd\">Return type</dt>\n<dd class=\"field-odd\"><p>[<a class=\"reference internal\" href=\"#dagster.ResourceDefinition\" title=\"dagster.ResourceDefinition\">ResourceDefinition</a>]</p>\n</dd>\n</dl>\n</dd></dl>\n\n<dl class=\"py method\">\n<dt id=\"dagster.ResourceDefinition.none_resource\">\n<em class=\"property\"><span class=\"pre\">static</span> </em><code class=\"sig-name descname\"><span class=\"pre\">none_resource</span></code><span class=\"sig-paren\">(</span><em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">description</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">None</span></span></em><span class=\"sig-paren\">)</span><a class=\"reference internal\" href=\"../../../../_modules/dagster/core/definitions/resource_definition#ResourceDefinition.none_resource\"><span class=\"viewcode-link\"><span class=\"pre\">[source]</span></span></a><a class=\"headerlink\" href=\"#dagster.ResourceDefinition.none_resource\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>A helper function that returns a none resource.</p>\n<dl class=\"field-list simple\">\n<dt class=\"field-odd\">Parameters</dt>\n<dd class=\"field-odd\"><p><strong>description</strong> (<em>[</em><em>Optional</em><em>[</em><a class=\"reference external\" href=\"https://docs.python.org/3/library/stdtypes.html#str\" title=\"(in Python v3.8)\"><em>str</em></a><em>]</em><em>]</em>) \u2013 The description of the resource. Defaults to None.</p>\n</dd>\n<dt class=\"field-even\">Returns</dt>\n<dd class=\"field-even\"><p>A resource that does nothing.</p>\n</dd>\n<dt class=\"field-odd\">Return type</dt>\n<dd class=\"field-odd\"><p>[<a class=\"reference internal\" href=\"#dagster.ResourceDefinition\" title=\"dagster.ResourceDefinition\">ResourceDefinition</a>]</p>\n</dd>\n</dl>\n</dd></dl>\n\n</dd></dl>\n\n<dl class=\"py class\">\n<dt id=\"dagster.InitResourceContext\">\n<em class=\"property\"><span class=\"pre\">class</span> </em><code class=\"sig-prename descclassname\"><span class=\"pre\">dagster.</span></code><code class=\"sig-name descname\"><span class=\"pre\">InitResourceContext</span></code><span class=\"sig-paren\">(</span><em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">resource_config</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">resources</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">resource_def</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">None</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">instance</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">None</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">dagster_run</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">None</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">pipeline_run</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">None</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">log_manager</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">None</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">pipeline_def_for_backwards_compat</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">None</span></span></em><span class=\"sig-paren\">)</span><a class=\"reference internal\" href=\"../../../../_modules/dagster/core/execution/context/init#InitResourceContext\"><span class=\"viewcode-link\"><span class=\"pre\">[source]</span></span></a><a class=\"headerlink\" href=\"#dagster.InitResourceContext\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Resource-specific initialization context.</p>\n<dl class=\"py attribute\">\n<dt id=\"dagster.InitResourceContext.resource_config\">\n<code class=\"sig-name descname\"><span class=\"pre\">resource_config</span></code><a class=\"headerlink\" href=\"#dagster.InitResourceContext.resource_config\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>The configuration data provided by the run config. The schema\nfor this data is defined by the <code class=\"docutils literal notranslate\"><span class=\"pre\">config_field</span></code> argument to\n<a class=\"reference internal\" href=\"#dagster.ResourceDefinition\" title=\"dagster.ResourceDefinition\"><code class=\"xref py py-class docutils literal notranslate\"><span class=\"pre\">ResourceDefinition</span></code></a>.</p>\n<dl class=\"field-list simple\">\n<dt class=\"field-odd\">Type</dt>\n<dd class=\"field-odd\"><p>Any</p>\n</dd>\n</dl>\n</dd></dl>\n\n<dl class=\"py attribute\">\n<dt id=\"dagster.InitResourceContext.resource_def\">\n<code class=\"sig-name descname\"><span class=\"pre\">resource_def</span></code><a class=\"headerlink\" href=\"#dagster.InitResourceContext.resource_def\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>The definition of the resource currently being\nconstructed.</p>\n<dl class=\"field-list simple\">\n<dt class=\"field-odd\">Type</dt>\n<dd class=\"field-odd\"><p><a class=\"reference internal\" href=\"#dagster.ResourceDefinition\" title=\"dagster.ResourceDefinition\">ResourceDefinition</a></p>\n</dd>\n</dl>\n</dd></dl>\n\n<dl class=\"py attribute\">\n<dt id=\"dagster.InitResourceContext.log_manager\">\n<code class=\"sig-name descname\"><span class=\"pre\">log_manager</span></code><a class=\"headerlink\" href=\"#dagster.InitResourceContext.log_manager\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>The log manager for this run of the job or pipeline</p>\n<dl class=\"field-list simple\">\n<dt class=\"field-odd\">Type</dt>\n<dd class=\"field-odd\"><p><a class=\"reference internal\" href=\"loggers#dagster.DagsterLogManager\" title=\"dagster.DagsterLogManager\">DagsterLogManager</a></p>\n</dd>\n</dl>\n</dd></dl>\n\n<dl class=\"py attribute\">\n<dt id=\"dagster.InitResourceContext.resources\">\n<code class=\"sig-name descname\"><span class=\"pre\">resources</span></code><a class=\"headerlink\" href=\"#dagster.InitResourceContext.resources\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>The resources that are available to the resource that we are\ninitalizing.</p>\n<dl class=\"field-list simple\">\n<dt class=\"field-odd\">Type</dt>\n<dd class=\"field-odd\"><p>ScopedResources</p>\n</dd>\n</dl>\n</dd></dl>\n\n<dl class=\"py attribute\">\n<dt id=\"dagster.InitResourceContext.dagster_run\">\n<code class=\"sig-name descname\"><span class=\"pre\">dagster_run</span></code><a class=\"headerlink\" href=\"#dagster.InitResourceContext.dagster_run\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>The dagster run to use. When initializing resources\noutside of execution context, this will be None.</p>\n<dl class=\"field-list simple\">\n<dt class=\"field-odd\">Type</dt>\n<dd class=\"field-odd\"><p>Optional[<a class=\"reference internal\" href=\"internals#dagster.PipelineRun\" title=\"dagster.PipelineRun\">PipelineRun</a>]</p>\n</dd>\n</dl>\n</dd></dl>\n\n<dl class=\"py attribute\">\n<dt id=\"dagster.InitResourceContext.run_id\">\n<code class=\"sig-name descname\"><span class=\"pre\">run_id</span></code><a class=\"headerlink\" href=\"#dagster.InitResourceContext.run_id\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>The id for this run of the job or pipeline. When initializing resources\noutside of execution context, this will be None.</p>\n<dl class=\"field-list simple\">\n<dt class=\"field-odd\">Type</dt>\n<dd class=\"field-odd\"><p>Optional[<a class=\"reference external\" href=\"https://docs.python.org/3/library/stdtypes.html#str\" title=\"(in Python v3.8)\">str</a>]</p>\n</dd>\n</dl>\n</dd></dl>\n\n<dl class=\"py attribute\">\n<dt id=\"dagster.InitResourceContext.pipeline_run\">\n<code class=\"sig-name descname\"><span class=\"pre\">pipeline_run</span></code><a class=\"headerlink\" href=\"#dagster.InitResourceContext.pipeline_run\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>(legacy) The dagster run to use. When initializing resources\noutside of execution context, this will be None.</p>\n<dl class=\"field-list simple\">\n<dt class=\"field-odd\">Type</dt>\n<dd class=\"field-odd\"><p>Optional[<a class=\"reference internal\" href=\"internals#dagster.PipelineRun\" title=\"dagster.PipelineRun\">PipelineRun</a>]</p>\n</dd>\n</dl>\n</dd></dl>\n\n</dd></dl>\n\n<dl class=\"py function\">\n<dt id=\"dagster.make_values_resource\">\n<code class=\"sig-prename descclassname\"><span class=\"pre\">dagster.</span></code><code class=\"sig-name descname\"><span class=\"pre\">make_values_resource</span></code><span class=\"sig-paren\">(</span><em class=\"sig-param\"><span class=\"o\"><span class=\"pre\">**</span></span><span class=\"n\"><span class=\"pre\">kwargs</span></span></em><span class=\"sig-paren\">)</span><a class=\"reference internal\" href=\"../../../../_modules/dagster/core/definitions/resource_definition#make_values_resource\"><span class=\"viewcode-link\"><span class=\"pre\">[source]</span></span></a><a class=\"headerlink\" href=\"#dagster.make_values_resource\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>A helper function that creates a <code class=\"docutils literal notranslate\"><span class=\"pre\">ResourceDefinition</span></code> to take in user-defined values.</p>\n<blockquote>\n<div><p>This is useful for sharing values between ops.</p>\n</div></blockquote>\n<dl class=\"field-list simple\">\n<dt class=\"field-odd\">Parameters</dt>\n<dd class=\"field-odd\"><p><strong>**kwargs</strong> \u2013 Arbitrary keyword arguments that will be passed to the config schema of the\nreturned resource definition. If not set, Dagster will accept any config provided for\nthe resource.</p>\n</dd>\n</dl>\n<p>For example:</p>\n<div class=\"highlight-python notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"nd\">@op</span><span class=\"p\">(</span><span class=\"n\">required_resource_keys</span><span class=\"o\">=</span><span class=\"p\">{</span><span class=\"s2\">&quot;globals&quot;</span><span class=\"p\">})</span>\n<span class=\"k\">def</span> <span class=\"nf\">my_op</span><span class=\"p\">(</span><span class=\"n\">context</span><span class=\"p\">):</span>\n    <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"n\">context</span><span class=\"o\">.</span><span class=\"n\">resources</span><span class=\"o\">.</span><span class=\"n\">globals</span><span class=\"p\">[</span><span class=\"s2\">&quot;my_str_var&quot;</span><span class=\"p\">])</span>\n\n<span class=\"nd\">@job</span><span class=\"p\">(</span><span class=\"n\">resource_defs</span><span class=\"o\">=</span><span class=\"p\">{</span><span class=\"s2\">&quot;globals&quot;</span><span class=\"p\">:</span> <span class=\"n\">make_values_resource</span><span class=\"p\">(</span><span class=\"n\">my_str_var</span><span class=\"o\">=</span><span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"n\">my_int_var</span><span class=\"o\">=</span><span class=\"nb\">int</span><span class=\"p\">)})</span>\n<span class=\"k\">def</span> <span class=\"nf\">my_job</span><span class=\"p\">():</span>\n    <span class=\"n\">my_op</span><span class=\"p\">()</span>\n</pre></div>\n</div>\n<dl class=\"field-list simple\">\n<dt class=\"field-odd\">Returns</dt>\n<dd class=\"field-odd\"><p>A resource that passes in user-defined values.</p>\n</dd>\n<dt class=\"field-even\">Return type</dt>\n<dd class=\"field-even\"><p><a class=\"reference internal\" href=\"#dagster.ResourceDefinition\" title=\"dagster.ResourceDefinition\">ResourceDefinition</a></p>\n</dd>\n</dl>\n</dd></dl>\n\n<dl class=\"py function\">\n<dt id=\"dagster.build_init_resource_context\">\n<code class=\"sig-prename descclassname\"><span class=\"pre\">dagster.</span></code><code class=\"sig-name descname\"><span class=\"pre\">build_init_resource_context</span></code><span class=\"sig-paren\">(</span><em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">config</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">None</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">resources</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">None</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">instance</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">None</span></span></em><span class=\"sig-paren\">)</span><a class=\"reference internal\" href=\"../../../../_modules/dagster/core/execution/context/init#build_init_resource_context\"><span class=\"viewcode-link\"><span class=\"pre\">[source]</span></span></a><a class=\"headerlink\" href=\"#dagster.build_init_resource_context\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Builds resource initialization context from provided parameters.</p>\n<p><code class=\"docutils literal notranslate\"><span class=\"pre\">build_init_resource_context</span></code> can be used as either a function or context manager. If there is a\nprovided resource to <code class=\"docutils literal notranslate\"><span class=\"pre\">build_init_resource_context</span></code> that is a context manager, then it must be\nused as a context manager. This function can be used to provide the context argument to the\ninvocation of a resource.</p>\n<dl class=\"field-list simple\">\n<dt class=\"field-odd\">Parameters</dt>\n<dd class=\"field-odd\"><ul class=\"simple\">\n<li><p><strong>resources</strong> (<em>Optional</em><em>[</em><em>Dict</em><em>[</em><a class=\"reference external\" href=\"https://docs.python.org/3/library/stdtypes.html#str\" title=\"(in Python v3.8)\"><em>str</em></a><em>, </em><em>Any</em><em>]</em><em>]</em>) \u2013 The resources to provide to the context. These can be\neither values or resource definitions.</p></li>\n<li><p><strong>config</strong> (<em>Optional</em><em>[</em><em>Any</em><em>]</em>) \u2013 The resource config to provide to the context.</p></li>\n<li><p><strong>instance</strong> (<em>Optional</em><em>[</em><a class=\"reference internal\" href=\"internals#dagster.DagsterInstance\" title=\"dagster.DagsterInstance\"><em>DagsterInstance</em></a><em>]</em>) \u2013 The dagster instance configured for the context.\nDefaults to DagsterInstance.ephemeral().</p></li>\n</ul>\n</dd>\n</dl>\n<p class=\"rubric\">Examples</p>\n<div class=\"highlight-python notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"n\">context</span> <span class=\"o\">=</span> <span class=\"n\">build_init_resource_context</span><span class=\"p\">()</span>\n<span class=\"n\">resource_to_init</span><span class=\"p\">(</span><span class=\"n\">context</span><span class=\"p\">)</span>\n\n<span class=\"k\">with</span> <span class=\"n\">build_init_resource_context</span><span class=\"p\">(</span>\n    <span class=\"n\">resources</span><span class=\"o\">=</span><span class=\"p\">{</span><span class=\"s2\">&quot;foo&quot;</span><span class=\"p\">:</span> <span class=\"n\">context_manager_resource</span><span class=\"p\">}</span>\n<span class=\"p\">)</span> <span class=\"k\">as</span> <span class=\"n\">context</span><span class=\"p\">:</span>\n    <span class=\"n\">resource_to_init</span><span class=\"p\">(</span><span class=\"n\">context</span><span class=\"p\">)</span>\n</pre></div>\n</div>\n</dd></dl>\n\n<dl class=\"py function\">\n<dt id=\"dagster.build_resources\">\n<code class=\"sig-prename descclassname\"><span class=\"pre\">dagster.</span></code><code class=\"sig-name descname\"><span class=\"pre\">build_resources</span></code><span class=\"sig-paren\">(</span><em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">resources</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">instance</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">None</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">resource_config</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">None</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">pipeline_run</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">None</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">log_manager</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">None</span></span></em><span class=\"sig-paren\">)</span><a class=\"reference internal\" href=\"../../../../_modules/dagster/core/execution/build_resources#build_resources\"><span class=\"viewcode-link\"><span class=\"pre\">[source]</span></span></a><a class=\"headerlink\" href=\"#dagster.build_resources\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Context manager that yields resources using provided resource definitions and run config.</p>\n<p>This API allows for using resources in an independent context. Resources will be initialized\nwith the provided run config, and optionally, pipeline_run. The resulting resources will be\nyielded on a dictionary keyed identically to that provided for <cite>resource_defs</cite>. Upon exiting the\ncontext, resources will also be torn down safely.</p>\n<dl class=\"field-list simple\">\n<dt class=\"field-odd\">Parameters</dt>\n<dd class=\"field-odd\"><ul class=\"simple\">\n<li><p><strong>resources</strong> (<em>Dict</em><em>[</em><a class=\"reference external\" href=\"https://docs.python.org/3/library/stdtypes.html#str\" title=\"(in Python v3.8)\"><em>str</em></a><em>, </em><em>Any</em><em>]</em>) \u2013 Resource instances or definitions to build. All\nrequired resource dependencies to a given resource must be contained within this\ndictionary, or the resource build will fail.</p></li>\n<li><p><strong>instance</strong> (<em>Optional</em><em>[</em><a class=\"reference internal\" href=\"internals#dagster.DagsterInstance\" title=\"dagster.DagsterInstance\"><em>DagsterInstance</em></a><em>]</em>) \u2013 The dagster instance configured to instantiate\nresources on.</p></li>\n<li><p><strong>resource_config</strong> (<em>Optional</em><em>[</em><em>Dict</em><em>[</em><a class=\"reference external\" href=\"https://docs.python.org/3/library/stdtypes.html#str\" title=\"(in Python v3.8)\"><em>str</em></a><em>, </em><em>Any</em><em>]</em><em>]</em>) \u2013 A dict representing the config to be\nprovided to each resource during initialization and teardown.</p></li>\n<li><p><strong>pipeline_run</strong> (<em>Optional</em><em>[</em><a class=\"reference internal\" href=\"internals#dagster.PipelineRun\" title=\"dagster.PipelineRun\"><em>PipelineRun</em></a><em>]</em>) \u2013 The pipeline run to provide during resource\ninitialization and teardown. If the provided resources require either the <cite>pipeline_run</cite>\nor <cite>run_id</cite> attributes of the provided context during resource initialization and/or\nteardown, this must be provided, or initialization will fail.</p></li>\n<li><p><strong>log_manager</strong> (<em>Optional</em><em>[</em><a class=\"reference internal\" href=\"loggers#dagster.DagsterLogManager\" title=\"dagster.DagsterLogManager\"><em>DagsterLogManager</em></a><em>]</em>) \u2013 Log Manager to use during resource\ninitialization. Defaults to system log manager.</p></li>\n</ul>\n</dd>\n</dl>\n<p>Examples:</p>\n<div class=\"highlight-python notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"kn\">from</span> <span class=\"nn\">dagster</span> <span class=\"kn\">import</span> <span class=\"n\">resource</span><span class=\"p\">,</span> <span class=\"n\">build_resources</span>\n\n<span class=\"nd\">@resource</span>\n<span class=\"k\">def</span> <span class=\"nf\">the_resource</span><span class=\"p\">():</span>\n    <span class=\"k\">return</span> <span class=\"s2\">&quot;foo&quot;</span>\n\n<span class=\"k\">with</span> <span class=\"n\">build_resources</span><span class=\"p\">(</span><span class=\"n\">resources</span><span class=\"o\">=</span><span class=\"p\">{</span><span class=\"s2\">&quot;from_def&quot;</span><span class=\"p\">:</span> <span class=\"n\">the_resource</span><span class=\"p\">,</span> <span class=\"s2\">&quot;from_val&quot;</span><span class=\"p\">:</span> <span class=\"s2\">&quot;bar&quot;</span><span class=\"p\">})</span> <span class=\"k\">as</span> <span class=\"n\">resources</span><span class=\"p\">:</span>\n    <span class=\"k\">assert</span> <span class=\"n\">resources</span><span class=\"o\">.</span><span class=\"n\">from_def</span> <span class=\"o\">==</span> <span class=\"s2\">&quot;foo&quot;</span>\n    <span class=\"k\">assert</span> <span class=\"n\">resources</span><span class=\"o\">.</span><span class=\"n\">from_val</span> <span class=\"o\">==</span> <span class=\"s2\">&quot;bar&quot;</span>\n</pre></div>\n</div>\n</dd></dl>\n\n<dl class=\"py function\">\n<dt id=\"dagster.with_resources\">\n<code class=\"sig-prename descclassname\"><span class=\"pre\">dagster.</span></code><code class=\"sig-name descname\"><span class=\"pre\">with_resources</span></code><span class=\"sig-paren\">(</span><em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">definitions</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">resource_defs</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">resource_config_by_key</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">None</span></span></em><span class=\"sig-paren\">)</span><a class=\"reference internal\" href=\"../../../../_modules/dagster/core/execution/with_resources#with_resources\"><span class=\"viewcode-link\"><span class=\"pre\">[source]</span></span></a><a class=\"headerlink\" href=\"#dagster.with_resources\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Adds dagster resources to copies of resource-requiring dagster definitions.</p>\n<p>An error will be thrown if any provided definitions have a conflicting\nresource definition provided for a key provided to resource_defs. Resource\nconfig can be provided, with keys in the config dictionary corresponding to\nthe keys for each resource definition. If any definition has unsatisfied\nresource keys after applying with_resources, an error will be thrown.</p>\n<dl class=\"field-list simple\">\n<dt class=\"field-odd\">Parameters</dt>\n<dd class=\"field-odd\"><ul class=\"simple\">\n<li><p><strong>definitions</strong> (<em>Iterable</em><em>[</em><em>ResourceAddable</em><em>]</em>) \u2013 Dagster definitions to provide resources to.</p></li>\n<li><p><strong>resource_defs</strong> (<em>Mapping</em><em>[</em><a class=\"reference external\" href=\"https://docs.python.org/3/library/stdtypes.html#str\" title=\"(in Python v3.8)\"><em>str</em></a><em>, </em><a class=\"reference internal\" href=\"#dagster.ResourceDefinition\" title=\"dagster.ResourceDefinition\"><em>ResourceDefinition</em></a><em>]</em>) \u2013 Mapping of resource keys to ResourceDefinition objects to satisfy\nresource requirements of provided dagster definitions.</p></li>\n<li><p><strong>resource_config_by_key</strong> (<em>Optional</em><em>[</em><em>Mapping</em><em>[</em><a class=\"reference external\" href=\"https://docs.python.org/3/library/stdtypes.html#str\" title=\"(in Python v3.8)\"><em>str</em></a><em>, </em><em>Any</em><em>]</em><em>]</em>) \u2013 Specifies config for provided resources. The key in this dictionary\ncorresponds to configuring the same key in the resource_defs\ndictionary.</p></li>\n</ul>\n</dd>\n</dl>\n<p>Examples:</p>\n<div class=\"highlight-python notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"kn\">from</span> <span class=\"nn\">dagster</span> <span class=\"kn\">import</span> <span class=\"n\">asset</span><span class=\"p\">,</span> <span class=\"n\">resource</span><span class=\"p\">,</span> <span class=\"n\">with_resources</span>\n\n<span class=\"nd\">@resource</span><span class=\"p\">(</span><span class=\"n\">config_schema</span><span class=\"o\">=</span><span class=\"p\">{</span><span class=\"s2\">&quot;bar&quot;</span><span class=\"p\">:</span> <span class=\"nb\">str</span><span class=\"p\">})</span>\n<span class=\"k\">def</span> <span class=\"nf\">foo_resource</span><span class=\"p\">():</span>\n    <span class=\"o\">...</span>\n\n<span class=\"nd\">@asset</span><span class=\"p\">(</span><span class=\"n\">required_resource_keys</span><span class=\"o\">=</span><span class=\"p\">{</span><span class=\"s2\">&quot;foo&quot;</span><span class=\"p\">})</span>\n<span class=\"k\">def</span> <span class=\"nf\">asset1</span><span class=\"p\">(</span><span class=\"n\">context</span><span class=\"p\">):</span>\n    <span class=\"n\">foo</span> <span class=\"o\">=</span> <span class=\"n\">context</span><span class=\"o\">.</span><span class=\"n\">resources</span><span class=\"o\">.</span><span class=\"n\">foo</span>\n    <span class=\"o\">...</span>\n\n<span class=\"nd\">@asset</span><span class=\"p\">(</span><span class=\"n\">required_resource_keys</span><span class=\"o\">=</span><span class=\"p\">{</span><span class=\"s2\">&quot;foo&quot;</span><span class=\"p\">})</span>\n<span class=\"k\">def</span> <span class=\"nf\">asset2</span><span class=\"p\">(</span><span class=\"n\">context</span><span class=\"p\">):</span>\n    <span class=\"n\">foo</span> <span class=\"o\">=</span> <span class=\"n\">context</span><span class=\"o\">.</span><span class=\"n\">resources</span><span class=\"o\">.</span><span class=\"n\">foo</span>\n    <span class=\"o\">...</span>\n\n<span class=\"n\">asset1_with_foo</span><span class=\"p\">,</span> <span class=\"n\">asset2_with_foo</span> <span class=\"o\">=</span> <span class=\"n\">with_resources</span><span class=\"p\">(</span>\n    <span class=\"p\">[</span><span class=\"n\">the_asset</span><span class=\"p\">,</span> <span class=\"n\">other_asset</span><span class=\"p\">],</span>\n    <span class=\"n\">resource_config_by_key</span><span class=\"o\">=</span><span class=\"p\">{</span>\n        <span class=\"s2\">&quot;foo&quot;</span><span class=\"p\">:</span> <span class=\"p\">{</span>\n            <span class=\"s2\">&quot;config&quot;</span><span class=\"p\">:</span> <span class=\"p\">{</span><span class=\"s2\">&quot;bar&quot;</span><span class=\"p\">:</span> <span class=\"o\">...</span><span class=\"p\">}</span>\n        <span class=\"p\">}</span>\n    <span class=\"p\">}</span>\n<span class=\"p\">)</span>\n</pre></div>\n</div>\n</dd></dl>\n\n</div>\n", "current_page_name": "sections/api/apidocs/resources", "customsidebar": null, "display_toc": false, "meta": null, "metatags": "", "next": {"link": "../schedules-sensors/", "title": "Run Requests"}, "page_source_suffix": ".rst", "parents": [], "prev": {"link": "../repositories/", "title": "Repositories"}, "rellinks": [["genindex", "General Index", "I", "index"], ["py-modindex", "Python Module Index", "", "modules"], ["sections/api/apidocs/schedules-sensors", "Run Requests", "N", "next"], ["sections/api/apidocs/repositories", "Repositories", "P", "previous"]], "sidebars": ["globaltoc.html", "searchbox.html"], "sourcename": "sections/api/apidocs/resources.rst.txt", "title": "Resources", "toc": "<ul>\n<li><a class=\"reference internal\" href=\"#\">Resources</a></li>\n</ul>\n"}, "schedules-sensors": {"alabaster_version": "0.7.12", "body": "<div class=\"section\" id=\"run-requests\">\n<h1>Run Requests<a class=\"headerlink\" href=\"#run-requests\" title=\"Permalink to this headline\">\u00b6</a></h1>\n<dl class=\"py class\">\n<dt id=\"dagster.RunRequest\">\n<em class=\"property\"><span class=\"pre\">class</span> </em><code class=\"sig-prename descclassname\"><span class=\"pre\">dagster.</span></code><code class=\"sig-name descname\"><span class=\"pre\">RunRequest</span></code><span class=\"sig-paren\">(</span><em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">run_key</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">run_config</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">None</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">tags</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">None</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">job_name</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">None</span></span></em><span class=\"sig-paren\">)</span><a class=\"reference internal\" href=\"../../../../_modules/dagster/core/definitions/run_request#RunRequest\"><span class=\"viewcode-link\"><span class=\"pre\">[source]</span></span></a><a class=\"headerlink\" href=\"#dagster.RunRequest\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Represents all the information required to launch a single run.  Must be returned by a\nSensorDefinition or ScheduleDefinition\u2019s evaluation function for a run to be launched.</p>\n<dl class=\"py attribute\">\n<dt id=\"dagster.RunRequest.run_key\">\n<code class=\"sig-name descname\"><span class=\"pre\">run_key</span></code><a class=\"headerlink\" href=\"#dagster.RunRequest.run_key\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>A string key to identify this launched run. For sensors, ensures that\nonly one run is created per run key across all sensor evaluations.  For schedules,\nensures that one run is created per tick, across failure recoveries. Passing in a <cite>None</cite>\nvalue means that a run will always be launched per evaluation.</p>\n<dl class=\"field-list simple\">\n<dt class=\"field-odd\">Type</dt>\n<dd class=\"field-odd\"><p>str | None</p>\n</dd>\n</dl>\n</dd></dl>\n\n<dl class=\"py attribute\">\n<dt id=\"dagster.RunRequest.run_config\">\n<code class=\"sig-name descname\"><span class=\"pre\">run_config</span></code><a class=\"headerlink\" href=\"#dagster.RunRequest.run_config\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>The config that parameterizes the run execution to\nbe launched, as a dict.</p>\n<dl class=\"field-list simple\">\n<dt class=\"field-odd\">Type</dt>\n<dd class=\"field-odd\"><p>Optional[Dict]</p>\n</dd>\n</dl>\n</dd></dl>\n\n<dl class=\"py attribute\">\n<dt id=\"dagster.RunRequest.tags\">\n<code class=\"sig-name descname\"><span class=\"pre\">tags</span></code><a class=\"headerlink\" href=\"#dagster.RunRequest.tags\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>A dictionary of tags (string key-value pairs) to attach\nto the launched run.</p>\n<dl class=\"field-list simple\">\n<dt class=\"field-odd\">Type</dt>\n<dd class=\"field-odd\"><p>Optional[Dict[<a class=\"reference external\" href=\"https://docs.python.org/3/library/stdtypes.html#str\" title=\"(in Python v3.8)\">str</a>, <a class=\"reference external\" href=\"https://docs.python.org/3/library/stdtypes.html#str\" title=\"(in Python v3.8)\">str</a>]]</p>\n</dd>\n</dl>\n</dd></dl>\n\n<dl class=\"py attribute\">\n<dt id=\"dagster.RunRequest.job_name\">\n<code class=\"sig-name descname\"><span class=\"pre\">job_name</span></code><a class=\"headerlink\" href=\"#dagster.RunRequest.job_name\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>(Experimental) The name of the job this run request will launch.\nRequired for sensors that target multiple jobs.</p>\n<dl class=\"field-list simple\">\n<dt class=\"field-odd\">Type</dt>\n<dd class=\"field-odd\"><p>Optional[<a class=\"reference external\" href=\"https://docs.python.org/3/library/stdtypes.html#str\" title=\"(in Python v3.8)\">str</a>]</p>\n</dd>\n</dl>\n</dd></dl>\n\n</dd></dl>\n\n<dl class=\"py class\">\n<dt id=\"dagster.SkipReason\">\n<em class=\"property\"><span class=\"pre\">class</span> </em><code class=\"sig-prename descclassname\"><span class=\"pre\">dagster.</span></code><code class=\"sig-name descname\"><span class=\"pre\">SkipReason</span></code><span class=\"sig-paren\">(</span><em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">skip_message</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">None</span></span></em><span class=\"sig-paren\">)</span><a class=\"reference internal\" href=\"../../../../_modules/dagster/core/definitions/run_request#SkipReason\"><span class=\"viewcode-link\"><span class=\"pre\">[source]</span></span></a><a class=\"headerlink\" href=\"#dagster.SkipReason\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Represents a skipped evaluation, where no runs are requested. May contain a message to indicate\nwhy no runs were requested.</p>\n<dl class=\"py attribute\">\n<dt id=\"dagster.SkipReason.skip_message\">\n<code class=\"sig-name descname\"><span class=\"pre\">skip_message</span></code><a class=\"headerlink\" href=\"#dagster.SkipReason.skip_message\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>A message displayed in dagit for why this evaluation resulted\nin no requested runs.</p>\n<dl class=\"field-list simple\">\n<dt class=\"field-odd\">Type</dt>\n<dd class=\"field-odd\"><p>Optional[<a class=\"reference external\" href=\"https://docs.python.org/3/library/stdtypes.html#str\" title=\"(in Python v3.8)\">str</a>]</p>\n</dd>\n</dl>\n</dd></dl>\n\n</dd></dl>\n\n</div>\n<div class=\"section\" id=\"schedules\">\n<h1>Schedules<a class=\"headerlink\" href=\"#schedules\" title=\"Permalink to this headline\">\u00b6</a></h1>\n<dl class=\"py function\">\n<dt id=\"dagster.schedule\">\n<code class=\"sig-prename descclassname\"><span class=\"pre\">&#64;</span></code><code class=\"sig-prename descclassname\"><span class=\"pre\">dagster.</span></code><code class=\"sig-name descname\"><span class=\"pre\">schedule</span></code><span class=\"sig-paren\">(</span><em class=\"sig-param\"><span class=\"pre\">cron_schedule</span></em>, <em class=\"sig-param\"><span class=\"pre\">pipeline_name=None</span></em>, <em class=\"sig-param\"><span class=\"pre\">name=None</span></em>, <em class=\"sig-param\"><span class=\"pre\">tags=None</span></em>, <em class=\"sig-param\"><span class=\"pre\">tags_fn=None</span></em>, <em class=\"sig-param\"><span class=\"pre\">solid_selection=None</span></em>, <em class=\"sig-param\"><span class=\"pre\">mode='default'</span></em>, <em class=\"sig-param\"><span class=\"pre\">should_execute=None</span></em>, <em class=\"sig-param\"><span class=\"pre\">environment_vars=None</span></em>, <em class=\"sig-param\"><span class=\"pre\">execution_timezone=None</span></em>, <em class=\"sig-param\"><span class=\"pre\">description=None</span></em>, <em class=\"sig-param\"><span class=\"pre\">job=None</span></em>, <em class=\"sig-param\"><span class=\"pre\">default_status=&lt;DefaultScheduleStatus.STOPPED:</span> <span class=\"pre\">'STOPPED'&gt;</span></em><span class=\"sig-paren\">)</span><a class=\"reference internal\" href=\"../../../../_modules/dagster/core/definitions/decorators/schedule_decorator#schedule\"><span class=\"viewcode-link\"><span class=\"pre\">[source]</span></span></a><a class=\"headerlink\" href=\"#dagster.schedule\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Creates a schedule following the provided cron schedule and requests runs for the provided job.</p>\n<p>The decorated function takes in a <a class=\"reference internal\" href=\"#dagster.ScheduleEvaluationContext\" title=\"dagster.ScheduleEvaluationContext\"><code class=\"xref py py-class docutils literal notranslate\"><span class=\"pre\">ScheduleEvaluationContext</span></code></a> as its only\nargument, and does one of the following:</p>\n<ol class=\"arabic simple\">\n<li><p>Return a <cite>RunRequest</cite> object.</p></li>\n<li><p>Return a list of <cite>RunRequest</cite> objects.</p></li>\n<li><p>Return a <cite>SkipReason</cite> object, providing a descriptive message of why no runs were requested.</p></li>\n<li><p>Return nothing (skipping without providing a reason)</p></li>\n<li><p>Return a run config dictionary.</p></li>\n<li><p>Yield a <cite>SkipReason</cite> or yield one ore more <cite>RunRequest</cite> objects.</p></li>\n</ol>\n<p>Returns a <a class=\"reference internal\" href=\"#dagster.ScheduleDefinition\" title=\"dagster.ScheduleDefinition\"><code class=\"xref py py-class docutils literal notranslate\"><span class=\"pre\">ScheduleDefinition</span></code></a>.</p>\n<dl class=\"field-list simple\">\n<dt class=\"field-odd\">Parameters</dt>\n<dd class=\"field-odd\"><ul class=\"simple\">\n<li><p><strong>cron_schedule</strong> (<a class=\"reference external\" href=\"https://docs.python.org/3/library/stdtypes.html#str\" title=\"(in Python v3.8)\"><em>str</em></a>) \u2013 A valid cron string specifying when the schedule will run, e.g.,\n<code class=\"docutils literal notranslate\"><span class=\"pre\">'45</span> <span class=\"pre\">23</span> <span class=\"pre\">*</span> <span class=\"pre\">*</span> <span class=\"pre\">6'</span></code> for a schedule that runs at 11:45 PM every Saturday.</p></li>\n<li><p><strong>pipeline_name</strong> (<em>Optional</em><em>[</em><a class=\"reference external\" href=\"https://docs.python.org/3/library/stdtypes.html#str\" title=\"(in Python v3.8)\"><em>str</em></a><em>]</em>) \u2013 (legacy)  The name of the pipeline to execute when the\nschedule runs.</p></li>\n<li><p><strong>name</strong> (<em>Optional</em><em>[</em><a class=\"reference external\" href=\"https://docs.python.org/3/library/stdtypes.html#str\" title=\"(in Python v3.8)\"><em>str</em></a><em>]</em>) \u2013 The name of the schedule to create.</p></li>\n<li><p><strong>tags</strong> (<em>Optional</em><em>[</em><em>Dict</em><em>[</em><a class=\"reference external\" href=\"https://docs.python.org/3/library/stdtypes.html#str\" title=\"(in Python v3.8)\"><em>str</em></a><em>, </em><a class=\"reference external\" href=\"https://docs.python.org/3/library/stdtypes.html#str\" title=\"(in Python v3.8)\"><em>str</em></a><em>]</em><em>]</em>) \u2013 A dictionary of tags (string key-value pairs) to attach\nto the scheduled runs.</p></li>\n<li><p><strong>tags_fn</strong> (<em>Optional</em><em>[</em><em>Callable</em><em>[</em><em>[</em><a class=\"reference internal\" href=\"#dagster.ScheduleEvaluationContext\" title=\"dagster.ScheduleEvaluationContext\"><em>ScheduleEvaluationContext</em></a><em>]</em><em>, </em><em>Optional</em><em>[</em><em>Dict</em><em>[</em><a class=\"reference external\" href=\"https://docs.python.org/3/library/stdtypes.html#str\" title=\"(in Python v3.8)\"><em>str</em></a><em>, </em><a class=\"reference external\" href=\"https://docs.python.org/3/library/stdtypes.html#str\" title=\"(in Python v3.8)\"><em>str</em></a><em>]</em><em>]</em><em>]</em><em>]</em>) \u2013 A function\nthat generates tags to attach to the schedules runs. Takes a\n<a class=\"reference internal\" href=\"#dagster.ScheduleEvaluationContext\" title=\"dagster.ScheduleEvaluationContext\"><code class=\"xref py py-class docutils literal notranslate\"><span class=\"pre\">ScheduleEvaluationContext</span></code></a> and returns a dictionary of tags (string\nkey-value pairs). You may set only one of <code class=\"docutils literal notranslate\"><span class=\"pre\">tags</span></code> and <code class=\"docutils literal notranslate\"><span class=\"pre\">tags_fn</span></code>.</p></li>\n<li><p><strong>solid_selection</strong> (<em>Optional</em><em>[</em><em>List</em><em>[</em><a class=\"reference external\" href=\"https://docs.python.org/3/library/stdtypes.html#str\" title=\"(in Python v3.8)\"><em>str</em></a><em>]</em><em>]</em>) \u2013 A list of solid subselection (including single\nsolid names) to execute when the schedule runs. e.g. <code class=\"docutils literal notranslate\"><span class=\"pre\">['*some_solid+',</span> <span class=\"pre\">'other_solid']</span></code></p></li>\n<li><p><strong>mode</strong> (<em>Optional</em><em>[</em><a class=\"reference external\" href=\"https://docs.python.org/3/library/stdtypes.html#str\" title=\"(in Python v3.8)\"><em>str</em></a><em>]</em>) \u2013 The pipeline mode in which to execute this schedule.\n(Default: \u2018default\u2019)</p></li>\n<li><p><strong>should_execute</strong> (<em>Optional</em><em>[</em><em>Callable</em><em>[</em><em>[</em><a class=\"reference internal\" href=\"#dagster.ScheduleEvaluationContext\" title=\"dagster.ScheduleEvaluationContext\"><em>ScheduleEvaluationContext</em></a><em>]</em><em>, </em><a class=\"reference external\" href=\"https://docs.python.org/3/library/functions.html#bool\" title=\"(in Python v3.8)\"><em>bool</em></a><em>]</em><em>]</em>) \u2013 A function that runs at\nschedule execution time to determine whether a schedule should execute or skip. Takes a\n<a class=\"reference internal\" href=\"#dagster.ScheduleEvaluationContext\" title=\"dagster.ScheduleEvaluationContext\"><code class=\"xref py py-class docutils literal notranslate\"><span class=\"pre\">ScheduleEvaluationContext</span></code></a> and returns a boolean (<code class=\"docutils literal notranslate\"><span class=\"pre\">True</span></code> if the\nschedule should execute). Defaults to a function that always returns <code class=\"docutils literal notranslate\"><span class=\"pre\">True</span></code>.</p></li>\n<li><p><strong>environment_vars</strong> (<em>Optional</em><em>[</em><em>Dict</em><em>[</em><a class=\"reference external\" href=\"https://docs.python.org/3/library/stdtypes.html#str\" title=\"(in Python v3.8)\"><em>str</em></a><em>, </em><a class=\"reference external\" href=\"https://docs.python.org/3/library/stdtypes.html#str\" title=\"(in Python v3.8)\"><em>str</em></a><em>]</em><em>]</em>) \u2013 Any environment variables to set when executing\nthe schedule.</p></li>\n<li><p><strong>execution_timezone</strong> (<em>Optional</em><em>[</em><a class=\"reference external\" href=\"https://docs.python.org/3/library/stdtypes.html#str\" title=\"(in Python v3.8)\"><em>str</em></a><em>]</em>) \u2013 Timezone in which the schedule should run.\nSupported strings for timezones are the ones provided by the\n<cite>IANA time zone database &lt;https://www.iana.org/time-zones&gt;</cite> - e.g. \u201cAmerica/Los_Angeles\u201d.</p></li>\n<li><p><strong>description</strong> (<em>Optional</em><em>[</em><a class=\"reference external\" href=\"https://docs.python.org/3/library/stdtypes.html#str\" title=\"(in Python v3.8)\"><em>str</em></a><em>]</em>) \u2013 A human-readable description of the schedule.</p></li>\n<li><p><strong>job</strong> (<em>Optional</em><em>[</em><em>Union</em><em>[</em><a class=\"reference internal\" href=\"graphs#dagster.GraphDefinition\" title=\"dagster.GraphDefinition\"><em>GraphDefinition</em></a><em>, </em><a class=\"reference internal\" href=\"jobs#dagster.JobDefinition\" title=\"dagster.JobDefinition\"><em>JobDefinition</em></a><em>]</em><em>]</em>) \u2013 The job that should execute when this\nschedule runs.</p></li>\n<li><p><strong>default_status</strong> (<em>DefaultScheduleStatus</em>) \u2013 Whether the schedule starts as running or not. The default\nstatus can be overridden from Dagit or via the GraphQL API.</p></li>\n</ul>\n</dd>\n</dl>\n</dd></dl>\n\n<dl class=\"py class\">\n<dt id=\"dagster.ScheduleDefinition\">\n<em class=\"property\"><span class=\"pre\">class</span> </em><code class=\"sig-prename descclassname\"><span class=\"pre\">dagster.</span></code><code class=\"sig-name descname\"><span class=\"pre\">ScheduleDefinition</span></code><span class=\"sig-paren\">(</span><em class=\"sig-param\"><span class=\"pre\">name=None</span></em>, <em class=\"sig-param\"><span class=\"pre\">cron_schedule=None</span></em>, <em class=\"sig-param\"><span class=\"pre\">pipeline_name=None</span></em>, <em class=\"sig-param\"><span class=\"pre\">run_config=None</span></em>, <em class=\"sig-param\"><span class=\"pre\">run_config_fn=None</span></em>, <em class=\"sig-param\"><span class=\"pre\">tags=None</span></em>, <em class=\"sig-param\"><span class=\"pre\">tags_fn=None</span></em>, <em class=\"sig-param\"><span class=\"pre\">solid_selection=None</span></em>, <em class=\"sig-param\"><span class=\"pre\">mode='default'</span></em>, <em class=\"sig-param\"><span class=\"pre\">should_execute=None</span></em>, <em class=\"sig-param\"><span class=\"pre\">environment_vars=None</span></em>, <em class=\"sig-param\"><span class=\"pre\">execution_timezone=None</span></em>, <em class=\"sig-param\"><span class=\"pre\">execution_fn=None</span></em>, <em class=\"sig-param\"><span class=\"pre\">description=None</span></em>, <em class=\"sig-param\"><span class=\"pre\">job=None</span></em>, <em class=\"sig-param\"><span class=\"pre\">default_status=&lt;DefaultScheduleStatus.STOPPED:</span> <span class=\"pre\">'STOPPED'&gt;</span></em><span class=\"sig-paren\">)</span><a class=\"reference internal\" href=\"../../../../_modules/dagster/core/definitions/schedule_definition#ScheduleDefinition\"><span class=\"viewcode-link\"><span class=\"pre\">[source]</span></span></a><a class=\"headerlink\" href=\"#dagster.ScheduleDefinition\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Define a schedule that targets a job</p>\n<dl class=\"field-list simple\">\n<dt class=\"field-odd\">Parameters</dt>\n<dd class=\"field-odd\"><ul class=\"simple\">\n<li><p><strong>name</strong> (<em>Optional</em><em>[</em><a class=\"reference external\" href=\"https://docs.python.org/3/library/stdtypes.html#str\" title=\"(in Python v3.8)\"><em>str</em></a><em>]</em>) \u2013 The name of the schedule to create. Defaults to the job name plus\n\u201c_schedule\u201d.</p></li>\n<li><p><strong>cron_schedule</strong> (<a class=\"reference external\" href=\"https://docs.python.org/3/library/stdtypes.html#str\" title=\"(in Python v3.8)\"><em>str</em></a>) \u2013 A valid cron string specifying when the schedule will run, e.g.,\n\u201845 23 * * 6\u2019 for a schedule that runs at 11:45 PM every Saturday.</p></li>\n<li><p><strong>pipeline_name</strong> (<em>Optional</em><em>[</em><a class=\"reference external\" href=\"https://docs.python.org/3/library/stdtypes.html#str\" title=\"(in Python v3.8)\"><em>str</em></a><em>]</em>) \u2013 (legacy) The name of the pipeline to execute when the schedule runs.</p></li>\n<li><p><strong>execution_fn</strong> (<em>Callable</em><em>[</em><a class=\"reference internal\" href=\"#dagster.ScheduleEvaluationContext\" title=\"dagster.ScheduleEvaluationContext\"><em>ScheduleEvaluationContext</em></a><em>]</em>) \u2013 <p>The core evaluation function for the\nschedule, which is run at an interval to determine whether a run should be launched or\nnot. Takes a <a class=\"reference internal\" href=\"#dagster.ScheduleEvaluationContext\" title=\"dagster.ScheduleEvaluationContext\"><code class=\"xref py py-class docutils literal notranslate\"><span class=\"pre\">ScheduleEvaluationContext</span></code></a>.</p>\n<p>This function must return a generator, which must yield either a single SkipReason\nor one or more RunRequest objects.</p>\n</p></li>\n<li><p><strong>run_config</strong> (<em>Optional</em><em>[</em><em>Dict</em><em>]</em>) \u2013 The config that parameterizes this execution,\nas a dict.</p></li>\n<li><p><strong>run_config_fn</strong> (<em>Optional</em><em>[</em><em>Callable</em><em>[</em><em>[</em><a class=\"reference internal\" href=\"#dagster.ScheduleEvaluationContext\" title=\"dagster.ScheduleEvaluationContext\"><em>ScheduleEvaluationContext</em></a><em>]</em><em>, </em><em>[</em><em>Dict</em><em>]</em><em>]</em><em>]</em>) \u2013 A function that\ntakes a ScheduleEvaluationContext object and returns the run configuration that\nparameterizes this execution, as a dict. You may set only one of <code class=\"docutils literal notranslate\"><span class=\"pre\">run_config</span></code>,\n<code class=\"docutils literal notranslate\"><span class=\"pre\">run_config_fn</span></code>, and <code class=\"docutils literal notranslate\"><span class=\"pre\">execution_fn</span></code>.</p></li>\n<li><p><strong>tags</strong> (<em>Optional</em><em>[</em><em>Dict</em><em>[</em><a class=\"reference external\" href=\"https://docs.python.org/3/library/stdtypes.html#str\" title=\"(in Python v3.8)\"><em>str</em></a><em>, </em><a class=\"reference external\" href=\"https://docs.python.org/3/library/stdtypes.html#str\" title=\"(in Python v3.8)\"><em>str</em></a><em>]</em><em>]</em>) \u2013 A dictionary of tags (string key-value pairs) to attach\nto the scheduled runs.</p></li>\n<li><p><strong>tags_fn</strong> (<em>Optional</em><em>[</em><em>Callable</em><em>[</em><em>[</em><a class=\"reference internal\" href=\"#dagster.ScheduleEvaluationContext\" title=\"dagster.ScheduleEvaluationContext\"><em>ScheduleEvaluationContext</em></a><em>]</em><em>, </em><em>Optional</em><em>[</em><em>Dict</em><em>[</em><a class=\"reference external\" href=\"https://docs.python.org/3/library/stdtypes.html#str\" title=\"(in Python v3.8)\"><em>str</em></a><em>, </em><a class=\"reference external\" href=\"https://docs.python.org/3/library/stdtypes.html#str\" title=\"(in Python v3.8)\"><em>str</em></a><em>]</em><em>]</em><em>]</em><em>]</em>) \u2013 A\nfunction that generates tags to attach to the schedules runs. Takes a\n<a class=\"reference internal\" href=\"#dagster.ScheduleEvaluationContext\" title=\"dagster.ScheduleEvaluationContext\"><code class=\"xref py py-class docutils literal notranslate\"><span class=\"pre\">ScheduleEvaluationContext</span></code></a> and returns a dictionary of tags (string\nkey-value pairs). You may set only one of <code class=\"docutils literal notranslate\"><span class=\"pre\">tags</span></code>, <code class=\"docutils literal notranslate\"><span class=\"pre\">tags_fn</span></code>, and <code class=\"docutils literal notranslate\"><span class=\"pre\">execution_fn</span></code>.</p></li>\n<li><p><strong>solid_selection</strong> (<em>Optional</em><em>[</em><em>List</em><em>[</em><a class=\"reference external\" href=\"https://docs.python.org/3/library/stdtypes.html#str\" title=\"(in Python v3.8)\"><em>str</em></a><em>]</em><em>]</em>) \u2013 A list of solid subselection (including single\nsolid names) to execute when the schedule runs. e.g. <code class=\"docutils literal notranslate\"><span class=\"pre\">['*some_solid+',</span> <span class=\"pre\">'other_solid']</span></code></p></li>\n<li><p><strong>mode</strong> (<em>Optional</em><em>[</em><a class=\"reference external\" href=\"https://docs.python.org/3/library/stdtypes.html#str\" title=\"(in Python v3.8)\"><em>str</em></a><em>]</em>) \u2013 (legacy) The mode to apply when executing this schedule. (default: \u2018default\u2019)</p></li>\n<li><p><strong>should_execute</strong> (<em>Optional</em><em>[</em><em>Callable</em><em>[</em><em>[</em><a class=\"reference internal\" href=\"#dagster.ScheduleEvaluationContext\" title=\"dagster.ScheduleEvaluationContext\"><em>ScheduleEvaluationContext</em></a><em>]</em><em>, </em><a class=\"reference external\" href=\"https://docs.python.org/3/library/functions.html#bool\" title=\"(in Python v3.8)\"><em>bool</em></a><em>]</em><em>]</em>) \u2013 A function that runs\nat schedule execution time to determine whether a schedule should execute or skip. Takes\na <a class=\"reference internal\" href=\"#dagster.ScheduleEvaluationContext\" title=\"dagster.ScheduleEvaluationContext\"><code class=\"xref py py-class docutils literal notranslate\"><span class=\"pre\">ScheduleEvaluationContext</span></code></a> and returns a boolean (<code class=\"docutils literal notranslate\"><span class=\"pre\">True</span></code> if the\nschedule should execute). Defaults to a function that always returns <code class=\"docutils literal notranslate\"><span class=\"pre\">True</span></code>.</p></li>\n<li><p><strong>environment_vars</strong> (<em>Optional</em><em>[</em><a class=\"reference external\" href=\"https://docs.python.org/3/library/stdtypes.html#dict\" title=\"(in Python v3.8)\"><em>dict</em></a><em>[</em><a class=\"reference external\" href=\"https://docs.python.org/3/library/stdtypes.html#str\" title=\"(in Python v3.8)\"><em>str</em></a><em>, </em><a class=\"reference external\" href=\"https://docs.python.org/3/library/stdtypes.html#str\" title=\"(in Python v3.8)\"><em>str</em></a><em>]</em><em>]</em>) \u2013 The environment variables to set for the\nschedule</p></li>\n<li><p><strong>execution_timezone</strong> (<em>Optional</em><em>[</em><a class=\"reference external\" href=\"https://docs.python.org/3/library/stdtypes.html#str\" title=\"(in Python v3.8)\"><em>str</em></a><em>]</em>) \u2013 Timezone in which the schedule should run.\nSupported strings for timezones are the ones provided by the\n<cite>IANA time zone database &lt;https://www.iana.org/time-zones&gt;</cite> - e.g. \u201cAmerica/Los_Angeles\u201d.</p></li>\n<li><p><strong>description</strong> (<em>Optional</em><em>[</em><a class=\"reference external\" href=\"https://docs.python.org/3/library/stdtypes.html#str\" title=\"(in Python v3.8)\"><em>str</em></a><em>]</em>) \u2013 A human-readable description of the schedule.</p></li>\n<li><p><strong>job</strong> (<em>Optional</em><em>[</em><em>Union</em><em>[</em><a class=\"reference internal\" href=\"graphs#dagster.GraphDefinition\" title=\"dagster.GraphDefinition\"><em>GraphDefinition</em></a><em>, </em><a class=\"reference internal\" href=\"jobs#dagster.JobDefinition\" title=\"dagster.JobDefinition\"><em>JobDefinition</em></a><em>]</em><em>]</em>) \u2013 The job that should execute when this\nschedule runs.</p></li>\n<li><p><strong>default_status</strong> (<em>DefaultScheduleStatus</em>) \u2013 Whether the schedule starts as running or not. The default\nstatus can be overridden from Dagit or via the GraphQL API.</p></li>\n</ul>\n</dd>\n</dl>\n</dd></dl>\n\n<dl class=\"py class\">\n<dt id=\"dagster.ScheduleEvaluationContext\">\n<em class=\"property\"><span class=\"pre\">class</span> </em><code class=\"sig-prename descclassname\"><span class=\"pre\">dagster.</span></code><code class=\"sig-name descname\"><span class=\"pre\">ScheduleEvaluationContext</span></code><span class=\"sig-paren\">(</span><em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">instance_ref</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">scheduled_execution_time</span></span></em><span class=\"sig-paren\">)</span><a class=\"reference internal\" href=\"../../../../_modules/dagster/core/definitions/schedule_definition#ScheduleEvaluationContext\"><span class=\"viewcode-link\"><span class=\"pre\">[source]</span></span></a><a class=\"headerlink\" href=\"#dagster.ScheduleEvaluationContext\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Schedule-specific execution context.</p>\n<p>An instance of this class is made available as the first argument to various ScheduleDefinition\nfunctions. It is passed as the first argument to <code class=\"docutils literal notranslate\"><span class=\"pre\">run_config_fn</span></code>, <code class=\"docutils literal notranslate\"><span class=\"pre\">tags_fn</span></code>,\nand <code class=\"docutils literal notranslate\"><span class=\"pre\">should_execute</span></code>.</p>\n<dl class=\"py attribute\">\n<dt id=\"dagster.ScheduleEvaluationContext.instance_ref\">\n<code class=\"sig-name descname\"><span class=\"pre\">instance_ref</span></code><a class=\"headerlink\" href=\"#dagster.ScheduleEvaluationContext.instance_ref\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>The serialized instance configured to run the schedule</p>\n<dl class=\"field-list simple\">\n<dt class=\"field-odd\">Type</dt>\n<dd class=\"field-odd\"><p>Optional[<a class=\"reference internal\" href=\"internals#dagster.core.instance.InstanceRef\" title=\"dagster.core.instance.InstanceRef\">InstanceRef</a>]</p>\n</dd>\n</dl>\n</dd></dl>\n\n<dl class=\"py attribute\">\n<dt id=\"dagster.ScheduleEvaluationContext.scheduled_execution_time\">\n<code class=\"sig-name descname\"><span class=\"pre\">scheduled_execution_time</span></code><a class=\"headerlink\" href=\"#dagster.ScheduleEvaluationContext.scheduled_execution_time\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>The time in which the execution was scheduled to happen. May differ slightly\nfrom both the actual execution time and the time at which the run config is computed.\nNot available in all schedulers - currently only set in deployments using\nDagsterDaemonScheduler.</p>\n<dl class=\"field-list simple\">\n<dt class=\"field-odd\">Type</dt>\n<dd class=\"field-odd\"><p>datetime</p>\n</dd>\n</dl>\n</dd></dl>\n\n</dd></dl>\n\n<dl class=\"py function\">\n<dt id=\"dagster.build_schedule_context\">\n<code class=\"sig-prename descclassname\"><span class=\"pre\">dagster.</span></code><code class=\"sig-name descname\"><span class=\"pre\">build_schedule_context</span></code><span class=\"sig-paren\">(</span><em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">instance</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">None</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">scheduled_execution_time</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">None</span></span></em><span class=\"sig-paren\">)</span><a class=\"reference internal\" href=\"../../../../_modules/dagster/core/definitions/schedule_definition#build_schedule_context\"><span class=\"viewcode-link\"><span class=\"pre\">[source]</span></span></a><a class=\"headerlink\" href=\"#dagster.build_schedule_context\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Builds schedule execution context using the provided parameters.</p>\n<p>The instance provided to <code class=\"docutils literal notranslate\"><span class=\"pre\">build_schedule_context</span></code> must be persistent;\nDagsterInstance.ephemeral() will result in an error.</p>\n<dl class=\"field-list simple\">\n<dt class=\"field-odd\">Parameters</dt>\n<dd class=\"field-odd\"><ul class=\"simple\">\n<li><p><strong>instance</strong> (<em>Optional</em><em>[</em><a class=\"reference internal\" href=\"internals#dagster.DagsterInstance\" title=\"dagster.DagsterInstance\"><em>DagsterInstance</em></a><em>]</em>) \u2013 The dagster instance configured to run the schedule.</p></li>\n<li><p><strong>scheduled_execution_time</strong> (<em>datetime</em>) \u2013 The time in which the execution was scheduled to\nhappen. May differ slightly from both the actual execution time and the time at which\nthe run config is computed.</p></li>\n</ul>\n</dd>\n</dl>\n<p class=\"rubric\">Examples</p>\n<div class=\"highlight-python notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"n\">context</span> <span class=\"o\">=</span> <span class=\"n\">build_schedule_context</span><span class=\"p\">(</span><span class=\"n\">instance</span><span class=\"p\">)</span>\n<span class=\"n\">daily_schedule</span><span class=\"o\">.</span><span class=\"n\">evaluate_tick</span><span class=\"p\">(</span><span class=\"n\">context</span><span class=\"p\">)</span>\n</pre></div>\n</div>\n</dd></dl>\n\n<dl class=\"py data\">\n<dt id=\"dagster.core.scheduler.DagsterDaemonScheduler\">\n<code class=\"sig-prename descclassname\"><span class=\"pre\">dagster.core.scheduler.</span></code><code class=\"sig-name descname\"><span class=\"pre\">DagsterDaemonScheduler</span></code><em class=\"property\"> <span class=\"pre\">Scheduler</span></em><a class=\"reference internal\" href=\"../../../../_modules/dagster/core/scheduler/scheduler#DagsterDaemonScheduler\"><span class=\"viewcode-link\"><span class=\"pre\">[source]</span></span></a><a class=\"headerlink\" href=\"#dagster.core.scheduler.DagsterDaemonScheduler\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><div class=\"line-block\">\n<div class=\"line\"><br /></div>\n</div>\n<details class=\"summary-config-schema\">\n<summary>Config Schema:</summary><dl class=\"field-list\">\n<dt class=\"field-odd\">max_catchup_runs (dagster.IntSource, optional)</dt>\n<dd class=\"field-odd\"><p>For partitioned schedules, controls the maximum number of past\npartitions for each schedule that will be considered when looking for missing\nruns . Generally this parameter will only come into play if the scheduler\nfalls behind or launches after experiencing downtime. This parameter will not be checked for\nschedules without partition sets (for example, schedules created using the &#64;schedule\ndecorator) - only the most recent execution time will be considered for those schedules.</p>\n<p>Note that no matter what this value is, the scheduler will never launch a run from a time\nbefore the schedule was turned on (even if the start_date on the schedule is earlier) - if\nyou want to launch runs for earlier partitions, launch a backfill.</p>\n<p><strong>Default Value:</strong> 5</p>\n</dd>\n<dt class=\"field-even\">max_tick_retries (dagster.IntSource, optional)</dt>\n<dd class=\"field-even\"><p>For each schedule tick that raises an error, how many times to retry that tick</p>\n<p><strong>Default Value:</strong> 0</p>\n</dd>\n</dl>\n</details><p>Default scheduler implementation that submits runs from the <cite>dagster-daemon</cite>\nlong-lived process. Periodically checks each running schedule for execution times that don\u2019t\nhave runs yet and launches them.</p>\n</dd></dl>\n\n</div>\n<div class=\"section\" id=\"partitioned-schedules\">\n<h1>Partitioned Schedules<a class=\"headerlink\" href=\"#partitioned-schedules\" title=\"Permalink to this headline\">\u00b6</a></h1>\n<dl class=\"py function\">\n<dt id=\"dagster.build_schedule_from_partitioned_job\">\n<code class=\"sig-prename descclassname\"><span class=\"pre\">dagster.</span></code><code class=\"sig-name descname\"><span class=\"pre\">build_schedule_from_partitioned_job</span></code><span class=\"sig-paren\">(</span><em class=\"sig-param\"><span class=\"pre\">job</span></em>, <em class=\"sig-param\"><span class=\"pre\">description=None</span></em>, <em class=\"sig-param\"><span class=\"pre\">name=None</span></em>, <em class=\"sig-param\"><span class=\"pre\">minute_of_hour=None</span></em>, <em class=\"sig-param\"><span class=\"pre\">hour_of_day=None</span></em>, <em class=\"sig-param\"><span class=\"pre\">day_of_week=None</span></em>, <em class=\"sig-param\"><span class=\"pre\">day_of_month=None</span></em>, <em class=\"sig-param\"><span class=\"pre\">default_status=&lt;DefaultScheduleStatus.STOPPED:</span> <span class=\"pre\">'STOPPED'&gt;</span></em><span class=\"sig-paren\">)</span><a class=\"reference internal\" href=\"../../../../_modules/dagster/core/definitions/partitioned_schedule#build_schedule_from_partitioned_job\"><span class=\"viewcode-link\"><span class=\"pre\">[source]</span></span></a><a class=\"headerlink\" href=\"#dagster.build_schedule_from_partitioned_job\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Creates a schedule from a time window-partitioned job.</p>\n<p>The schedule executes at the cadence specified by the partitioning of the given job.</p>\n</dd></dl>\n\n<dl class=\"py class\">\n<dt id=\"dagster.PartitionScheduleDefinition\">\n<em class=\"property\"><span class=\"pre\">class</span> </em><code class=\"sig-prename descclassname\"><span class=\"pre\">dagster.</span></code><code class=\"sig-name descname\"><span class=\"pre\">PartitionScheduleDefinition</span></code><span class=\"sig-paren\">(</span><em class=\"sig-param\"><span class=\"pre\">name</span></em>, <em class=\"sig-param\"><span class=\"pre\">cron_schedule</span></em>, <em class=\"sig-param\"><span class=\"pre\">pipeline_name</span></em>, <em class=\"sig-param\"><span class=\"pre\">tags_fn</span></em>, <em class=\"sig-param\"><span class=\"pre\">solid_selection</span></em>, <em class=\"sig-param\"><span class=\"pre\">mode</span></em>, <em class=\"sig-param\"><span class=\"pre\">should_execute</span></em>, <em class=\"sig-param\"><span class=\"pre\">environment_vars</span></em>, <em class=\"sig-param\"><span class=\"pre\">partition_set</span></em>, <em class=\"sig-param\"><span class=\"pre\">run_config_fn=None</span></em>, <em class=\"sig-param\"><span class=\"pre\">execution_timezone=None</span></em>, <em class=\"sig-param\"><span class=\"pre\">execution_fn=None</span></em>, <em class=\"sig-param\"><span class=\"pre\">description=None</span></em>, <em class=\"sig-param\"><span class=\"pre\">decorated_fn=None</span></em>, <em class=\"sig-param\"><span class=\"pre\">job=None</span></em>, <em class=\"sig-param\"><span class=\"pre\">default_status=&lt;DefaultScheduleStatus.STOPPED:</span> <span class=\"pre\">'STOPPED'&gt;</span></em><span class=\"sig-paren\">)</span><a class=\"reference internal\" href=\"../../../../_modules/dagster/core/definitions/partition#PartitionScheduleDefinition\"><span class=\"viewcode-link\"><span class=\"pre\">[source]</span></span></a><a class=\"headerlink\" href=\"#dagster.PartitionScheduleDefinition\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd></dd></dl>\n\n<dl class=\"py function\">\n<dt>\n<code class=\"sig-prename descclassname\"><span class=\"pre\">&#64;</span></code><code class=\"sig-prename descclassname\"><span class=\"pre\">dagster.</span></code><code class=\"sig-name descname\"><span class=\"pre\">hourly_partitioned_config</span></code><span class=\"sig-paren\">(</span><em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">start_date</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">minute_offset</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">0</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">timezone</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">None</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">fmt</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">None</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">end_offset</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">0</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">tags_for_partition_fn</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">None</span></span></em><span class=\"sig-paren\">)</span><a class=\"reference internal\" href=\"../../../../_modules/dagster/core/definitions/time_window_partitions#hourly_partitioned_config\"><span class=\"viewcode-link\"><span class=\"pre\">[source]</span></span></a></dt>\n<dd><p>Defines run config over a set of hourly partitions.</p>\n<p>The decorated function should accept a start datetime and end datetime, which represent the date\npartition the config should delineate.</p>\n<p>The decorated function should return a run config dictionary.</p>\n<p>The resulting object created by this decorator can be provided to the config argument of a Job.\nThe first partition in the set will start at the start_date at midnight. The last partition in\nthe set will end before the current time, unless the end_offset argument is set to a positive\nnumber. If minute_offset is provided, the start and end times of each partition will be\nminute_offset past the hour.</p>\n<dl class=\"field-list simple\">\n<dt class=\"field-odd\">Parameters</dt>\n<dd class=\"field-odd\"><ul class=\"simple\">\n<li><p><strong>start_date</strong> (<em>Union</em><em>[</em><a class=\"reference external\" href=\"https://docs.python.org/3/library/datetime.html#datetime.datetime\" title=\"(in Python v3.8)\"><em>datetime.datetime</em></a><em>, </em><a class=\"reference external\" href=\"https://docs.python.org/3/library/stdtypes.html#str\" title=\"(in Python v3.8)\"><em>str</em></a><em>]</em>) \u2013 The first date in the set of partitions. Can\nprovide in either a datetime or string format.</p></li>\n<li><p><strong>minute_offset</strong> (<a class=\"reference external\" href=\"https://docs.python.org/3/library/functions.html#int\" title=\"(in Python v3.8)\"><em>int</em></a>) \u2013 Number of minutes past the hour to \u201csplit\u201d the partition. Defaults\nto 0.</p></li>\n<li><p><strong>fmt</strong> (<em>Optional</em><em>[</em><a class=\"reference external\" href=\"https://docs.python.org/3/library/stdtypes.html#str\" title=\"(in Python v3.8)\"><em>str</em></a><em>]</em>) \u2013 The date format to use. Defaults to <cite>%Y-%m-%d</cite>.</p></li>\n<li><p><strong>timezone</strong> (<em>Optional</em><em>[</em><a class=\"reference external\" href=\"https://docs.python.org/3/library/stdtypes.html#str\" title=\"(in Python v3.8)\"><em>str</em></a><em>]</em>) \u2013 The timezone in which each date should exist.\nSupported strings for timezones are the ones provided by the\n<cite>IANA time zone database &lt;https://www.iana.org/time-zones&gt;</cite> - e.g. \u201cAmerica/Los_Angeles\u201d.</p></li>\n<li><p><strong>end_offset</strong> (<a class=\"reference external\" href=\"https://docs.python.org/3/library/functions.html#int\" title=\"(in Python v3.8)\"><em>int</em></a>) \u2013 Extends the partition set by a number of partitions equal to the value\npassed. If end_offset is 0 (the default), the last partition ends before the current\ntime. If end_offset is 1, the second-to-last partition ends before the current time,\nand so on.</p></li>\n</ul>\n</dd>\n</dl>\n<div class=\"highlight-python notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"nd\">@hourly_partitioned_config</span><span class=\"p\">(</span><span class=\"n\">start_date</span><span class=\"o\">=</span><span class=\"n\">datetime</span><span class=\"p\">(</span><span class=\"mi\">2022</span><span class=\"p\">,</span> <span class=\"mi\">03</span><span class=\"p\">,</span> <span class=\"mi\">12</span><span class=\"p\">))</span>\n<span class=\"c1\"># creates partitions (2022-03-12-00:00, 2022-03-12-01:00), (2022-03-12-01:00, 2022-03-12-02:00), ...</span>\n\n<span class=\"nd\">@hourly_partitioned_config</span><span class=\"p\">(</span><span class=\"n\">start_date</span><span class=\"o\">=</span><span class=\"n\">datetime</span><span class=\"p\">(</span><span class=\"mi\">2022</span><span class=\"p\">,</span> <span class=\"mi\">03</span><span class=\"p\">,</span> <span class=\"mi\">12</span><span class=\"p\">),</span> <span class=\"n\">minute_offset</span><span class=\"o\">=</span><span class=\"mi\">15</span><span class=\"p\">)</span>\n<span class=\"c1\"># creates partitions (2022-03-12-00:15, 2022-03-12-01:15), (2022-03-12-01:15, 2022-03-12-02:15), ...</span>\n</pre></div>\n</div>\n</dd></dl>\n\n<dl class=\"py function\">\n<dt>\n<code class=\"sig-prename descclassname\"><span class=\"pre\">&#64;</span></code><code class=\"sig-prename descclassname\"><span class=\"pre\">dagster.</span></code><code class=\"sig-name descname\"><span class=\"pre\">daily_partitioned_config</span></code><span class=\"sig-paren\">(</span><em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">start_date</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">minute_offset</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">0</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">hour_offset</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">0</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">timezone</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">None</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">fmt</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">None</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">end_offset</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">0</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">tags_for_partition_fn</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">None</span></span></em><span class=\"sig-paren\">)</span><a class=\"reference internal\" href=\"../../../../_modules/dagster/core/definitions/time_window_partitions#daily_partitioned_config\"><span class=\"viewcode-link\"><span class=\"pre\">[source]</span></span></a></dt>\n<dd><p>Defines run config over a set of daily partitions.</p>\n<p>The decorated function should accept a start datetime and end datetime, which represent the bounds\nof the date partition the config should delineate.</p>\n<p>The decorated function should return a run config dictionary.</p>\n<p>The resulting object created by this decorator can be provided to the config argument of a Job.\nThe first partition in the set will start at the start_date at midnight. The last partition in\nthe set will end before the current time, unless the end_offset argument is set to a positive\nnumber. If minute_offset and/or hour_offset are used, the start and end times of each partition\nwill be hour_offset:minute_offset of each day.</p>\n<dl class=\"field-list simple\">\n<dt class=\"field-odd\">Parameters</dt>\n<dd class=\"field-odd\"><ul class=\"simple\">\n<li><p><strong>start_date</strong> (<em>Union</em><em>[</em><a class=\"reference external\" href=\"https://docs.python.org/3/library/datetime.html#datetime.datetime\" title=\"(in Python v3.8)\"><em>datetime.datetime</em></a><em>, </em><a class=\"reference external\" href=\"https://docs.python.org/3/library/stdtypes.html#str\" title=\"(in Python v3.8)\"><em>str</em></a><em>]</em>) \u2013 The first date in the set of partitions. Can\nprovide in either a datetime or string format.</p></li>\n<li><p><strong>minute_offset</strong> (<a class=\"reference external\" href=\"https://docs.python.org/3/library/functions.html#int\" title=\"(in Python v3.8)\"><em>int</em></a>) \u2013 Number of minutes past the hour to \u201csplit\u201d the partition. Defaults\nto 0.</p></li>\n<li><p><strong>hour_offset</strong> (<a class=\"reference external\" href=\"https://docs.python.org/3/library/functions.html#int\" title=\"(in Python v3.8)\"><em>int</em></a>) \u2013 Number of hours past 00:00 to \u201csplit\u201d the partition. Defaults to 0.</p></li>\n<li><p><strong>timezone</strong> (<em>Optional</em><em>[</em><a class=\"reference external\" href=\"https://docs.python.org/3/library/stdtypes.html#str\" title=\"(in Python v3.8)\"><em>str</em></a><em>]</em>) \u2013 The timezone in which each date should exist.\nSupported strings for timezones are the ones provided by the\n<cite>IANA time zone database &lt;https://www.iana.org/time-zones&gt;</cite> - e.g. \u201cAmerica/Los_Angeles\u201d.</p></li>\n<li><p><strong>fmt</strong> (<em>Optional</em><em>[</em><a class=\"reference external\" href=\"https://docs.python.org/3/library/stdtypes.html#str\" title=\"(in Python v3.8)\"><em>str</em></a><em>]</em>) \u2013 The date format to use. Defaults to <cite>%Y-%m-%d</cite>.</p></li>\n<li><p><strong>end_offset</strong> (<a class=\"reference external\" href=\"https://docs.python.org/3/library/functions.html#int\" title=\"(in Python v3.8)\"><em>int</em></a>) \u2013 Extends the partition set by a number of partitions equal to the value\npassed. If end_offset is 0 (the default), the last partition ends before the current\ntime. If end_offset is 1, the second-to-last partition ends before the current time,\nand so on.</p></li>\n</ul>\n</dd>\n</dl>\n<div class=\"highlight-python notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"nd\">@daily_partitioned_config</span><span class=\"p\">(</span><span class=\"n\">start_date</span><span class=\"o\">=</span><span class=\"s2\">&quot;2022-03-12&quot;</span><span class=\"p\">)</span>\n<span class=\"c1\"># creates partitions (2022-03-12-00:00, 2022-03-13-00:00), (2022-03-13-00:00, 2022-03-14-00:00), ...</span>\n\n<span class=\"nd\">@daily_partitioned_config</span><span class=\"p\">(</span><span class=\"n\">start_date</span><span class=\"o\">=</span><span class=\"s2\">&quot;2022-03-12&quot;</span><span class=\"p\">,</span> <span class=\"n\">minute_offset</span><span class=\"o\">=</span><span class=\"mi\">15</span><span class=\"p\">,</span> <span class=\"n\">hour_offset</span><span class=\"o\">=</span><span class=\"mi\">16</span><span class=\"p\">)</span>\n<span class=\"c1\"># creates partitions (2022-03-12-16:15, 2022-03-13-16:15), (2022-03-13-16:15, 2022-03-14-16:15), ...</span>\n</pre></div>\n</div>\n</dd></dl>\n\n<dl class=\"py function\">\n<dt>\n<code class=\"sig-prename descclassname\"><span class=\"pre\">&#64;</span></code><code class=\"sig-prename descclassname\"><span class=\"pre\">dagster.</span></code><code class=\"sig-name descname\"><span class=\"pre\">weekly_partitioned_config</span></code><span class=\"sig-paren\">(</span><em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">start_date</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">minute_offset</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">0</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">hour_offset</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">0</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">day_offset</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">0</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">timezone</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">None</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">fmt</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">None</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">end_offset</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">0</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">tags_for_partition_fn</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">None</span></span></em><span class=\"sig-paren\">)</span><a class=\"reference internal\" href=\"../../../../_modules/dagster/core/definitions/time_window_partitions#weekly_partitioned_config\"><span class=\"viewcode-link\"><span class=\"pre\">[source]</span></span></a></dt>\n<dd><p>Defines run config over a set of weekly partitions.</p>\n<p>The decorated function should accept a start datetime and end datetime, which represent the date\npartition the config should delineate.</p>\n<p>The decorated function should return a run config dictionary.</p>\n<p>The resulting object created by this decorator can be provided to the config argument of a Job.\nThe first partition in the set will start at the start_date. The last partition in the set will\nend before the current time, unless the end_offset argument is set to a positive number. If\nday_offset is provided, the start and end date of each partition will be day of the week\ncorresponding to day_offset (0 indexed with Sunday as the start of the week). If\nminute_offset and/or hour_offset are used, the start and end times of each partition will be\nhour_offset:minute_offset of each day.</p>\n<dl class=\"field-list simple\">\n<dt class=\"field-odd\">Parameters</dt>\n<dd class=\"field-odd\"><ul class=\"simple\">\n<li><p><strong>start_date</strong> (<em>Union</em><em>[</em><a class=\"reference external\" href=\"https://docs.python.org/3/library/datetime.html#datetime.datetime\" title=\"(in Python v3.8)\"><em>datetime.datetime</em></a><em>, </em><a class=\"reference external\" href=\"https://docs.python.org/3/library/stdtypes.html#str\" title=\"(in Python v3.8)\"><em>str</em></a><em>]</em>) \u2013 The first date in the set of partitions will\nSunday at midnight following start_date. Can provide in either a datetime or string\nformat.</p></li>\n<li><p><strong>minute_offset</strong> (<a class=\"reference external\" href=\"https://docs.python.org/3/library/functions.html#int\" title=\"(in Python v3.8)\"><em>int</em></a>) \u2013 Number of minutes past the hour to \u201csplit\u201d the partition. Defaults\nto 0.</p></li>\n<li><p><strong>hour_offset</strong> (<a class=\"reference external\" href=\"https://docs.python.org/3/library/functions.html#int\" title=\"(in Python v3.8)\"><em>int</em></a>) \u2013 Number of hours past 00:00 to \u201csplit\u201d the partition. Defaults to 0.</p></li>\n<li><p><strong>day_offset</strong> (<a class=\"reference external\" href=\"https://docs.python.org/3/library/functions.html#int\" title=\"(in Python v3.8)\"><em>int</em></a>) \u2013 Day of the week to \u201csplit\u201d the partition. Defaults to 0 (Sunday).</p></li>\n<li><p><strong>timezone</strong> (<em>Optional</em><em>[</em><a class=\"reference external\" href=\"https://docs.python.org/3/library/stdtypes.html#str\" title=\"(in Python v3.8)\"><em>str</em></a><em>]</em>) \u2013 The timezone in which each date should exist.\nSupported strings for timezones are the ones provided by the\n<cite>IANA time zone database &lt;https://www.iana.org/time-zones&gt;</cite> - e.g. \u201cAmerica/Los_Angeles\u201d.</p></li>\n<li><p><strong>fmt</strong> (<em>Optional</em><em>[</em><a class=\"reference external\" href=\"https://docs.python.org/3/library/stdtypes.html#str\" title=\"(in Python v3.8)\"><em>str</em></a><em>]</em>) \u2013 The date format to use. Defaults to <cite>%Y-%m-%d</cite>.</p></li>\n<li><p><strong>end_offset</strong> (<a class=\"reference external\" href=\"https://docs.python.org/3/library/functions.html#int\" title=\"(in Python v3.8)\"><em>int</em></a>) \u2013 Extends the partition set by a number of partitions equal to the value\npassed. If end_offset is 0 (the default), the last partition ends before the current\ntime. If end_offset is 1, the second-to-last partition ends before the current time,\nand so on.</p></li>\n</ul>\n</dd>\n</dl>\n<div class=\"highlight-python notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"nd\">@weekly_partitioned_config</span><span class=\"p\">(</span><span class=\"n\">start_date</span><span class=\"o\">=</span><span class=\"s2\">&quot;2022-03-12&quot;</span><span class=\"p\">)</span>\n<span class=\"c1\"># creates partitions (2022-03-13-00:00, 2022-03-20-00:00), (2022-03-20-00:00, 2022-03-27-00:00), ...</span>\n\n<span class=\"nd\">@weekly_partitioned_config</span><span class=\"p\">(</span><span class=\"n\">start_date</span><span class=\"o\">=</span><span class=\"s2\">&quot;2022-03-12&quot;</span><span class=\"p\">,</span> <span class=\"n\">minute_offset</span><span class=\"o\">=</span><span class=\"mi\">15</span><span class=\"p\">,</span> <span class=\"n\">hour_offset</span><span class=\"o\">=</span><span class=\"mi\">3</span><span class=\"p\">,</span> <span class=\"n\">day_offset</span><span class=\"o\">=</span><span class=\"mi\">6</span><span class=\"p\">)</span>\n<span class=\"c1\"># creates partitions (2022-03-12-03:15, 2022-03-19-03:15), (2022-03-19-03:15, 2022-03-26-03:15), ...</span>\n</pre></div>\n</div>\n</dd></dl>\n\n<dl class=\"py function\">\n<dt>\n<code class=\"sig-prename descclassname\"><span class=\"pre\">&#64;</span></code><code class=\"sig-prename descclassname\"><span class=\"pre\">dagster.</span></code><code class=\"sig-name descname\"><span class=\"pre\">monthly_partitioned_config</span></code><span class=\"sig-paren\">(</span><em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">start_date</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">minute_offset</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">0</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">hour_offset</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">0</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">day_offset</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">1</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">timezone</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">None</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">fmt</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">None</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">end_offset</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">0</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">tags_for_partition_fn</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">None</span></span></em><span class=\"sig-paren\">)</span><a class=\"reference internal\" href=\"../../../../_modules/dagster/core/definitions/time_window_partitions#monthly_partitioned_config\"><span class=\"viewcode-link\"><span class=\"pre\">[source]</span></span></a></dt>\n<dd><p>Defines run config over a set of monthly partitions.</p>\n<p>The decorated function should accept a start datetime and end datetime, which represent the date\npartition the config should delineate.</p>\n<p>The decorated function should return a run config dictionary.</p>\n<p>The resulting object created by this decorator can be provided to the config argument of a Job.\nThe first partition in the set will start at midnight on the soonest first of the month after\nstart_date. The last partition in the set will end before the current time, unless the\nend_offset argument is set to a positive number. If day_offset is provided, the start and end\ndate of each partition will be day_offset. If minute_offset and/or hour_offset are used, the\nstart and end times of each partition will be hour_offset:minute_offset of each day.</p>\n<dl class=\"field-list simple\">\n<dt class=\"field-odd\">Parameters</dt>\n<dd class=\"field-odd\"><ul class=\"simple\">\n<li><p><strong>start_date</strong> (<em>Union</em><em>[</em><a class=\"reference external\" href=\"https://docs.python.org/3/library/datetime.html#datetime.datetime\" title=\"(in Python v3.8)\"><em>datetime.datetime</em></a><em>, </em><a class=\"reference external\" href=\"https://docs.python.org/3/library/stdtypes.html#str\" title=\"(in Python v3.8)\"><em>str</em></a><em>]</em>) \u2013 The first date in the set of partitions will be\nmidnight the sonnest first of the month following start_date. Can provide in either a\ndatetime or string format.</p></li>\n<li><p><strong>minute_offset</strong> (<a class=\"reference external\" href=\"https://docs.python.org/3/library/functions.html#int\" title=\"(in Python v3.8)\"><em>int</em></a>) \u2013 Number of minutes past the hour to \u201csplit\u201d the partition. Defaults\nto 0.</p></li>\n<li><p><strong>hour_offset</strong> (<a class=\"reference external\" href=\"https://docs.python.org/3/library/functions.html#int\" title=\"(in Python v3.8)\"><em>int</em></a>) \u2013 Number of hours past 00:00 to \u201csplit\u201d the partition. Defaults to 0.</p></li>\n<li><p><strong>day_offset</strong> (<a class=\"reference external\" href=\"https://docs.python.org/3/library/functions.html#int\" title=\"(in Python v3.8)\"><em>int</em></a>) \u2013 Day of the month to \u201csplit\u201d the partition. Defaults to 1.</p></li>\n<li><p><strong>timezone</strong> (<em>Optional</em><em>[</em><a class=\"reference external\" href=\"https://docs.python.org/3/library/stdtypes.html#str\" title=\"(in Python v3.8)\"><em>str</em></a><em>]</em>) \u2013 The timezone in which each date should exist.\nSupported strings for timezones are the ones provided by the\n<cite>IANA time zone database &lt;https://www.iana.org/time-zones&gt;</cite> - e.g. \u201cAmerica/Los_Angeles\u201d.</p></li>\n<li><p><strong>fmt</strong> (<em>Optional</em><em>[</em><a class=\"reference external\" href=\"https://docs.python.org/3/library/stdtypes.html#str\" title=\"(in Python v3.8)\"><em>str</em></a><em>]</em>) \u2013 The date format to use. Defaults to <cite>%Y-%m-%d</cite>.</p></li>\n<li><p><strong>end_offset</strong> (<a class=\"reference external\" href=\"https://docs.python.org/3/library/functions.html#int\" title=\"(in Python v3.8)\"><em>int</em></a>) \u2013 Extends the partition set by a number of partitions equal to the value\npassed. If end_offset is 0 (the default), the last partition ends before the current\ntime. If end_offset is 1, the second-to-last partition ends before the current time,\nand so on.</p></li>\n</ul>\n</dd>\n</dl>\n<div class=\"highlight-python notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"nd\">@monthly_partitioned_config</span><span class=\"p\">(</span><span class=\"n\">start_date</span><span class=\"o\">=</span><span class=\"s2\">&quot;2022-03-12&quot;</span><span class=\"p\">)</span>\n<span class=\"c1\"># creates partitions (2022-04-01-00:00, 2022-05-01-00:00), (2022-05-01-00:00, 2022-06-01-00:00), ...</span>\n\n<span class=\"nd\">@monthly_partitioned_config</span><span class=\"p\">(</span><span class=\"n\">start_date</span><span class=\"o\">=</span><span class=\"s2\">&quot;2022-03-12&quot;</span><span class=\"p\">,</span> <span class=\"n\">minute_offset</span><span class=\"o\">=</span><span class=\"mi\">15</span><span class=\"p\">,</span> <span class=\"n\">hour_offset</span><span class=\"o\">=</span><span class=\"mi\">3</span><span class=\"p\">,</span> <span class=\"n\">day_offset</span><span class=\"o\">=</span><span class=\"mi\">5</span><span class=\"p\">)</span>\n<span class=\"c1\"># creates partitions (2022-04-05-03:15, 2022-05-05-03:15), (2022-05-05-03:15, 2022-06-05-03:15), ...</span>\n</pre></div>\n</div>\n</dd></dl>\n\n</div>\n<div class=\"section\" id=\"sensors\">\n<h1>Sensors<a class=\"headerlink\" href=\"#sensors\" title=\"Permalink to this headline\">\u00b6</a></h1>\n<dl class=\"py function\">\n<dt id=\"dagster.sensor\">\n<code class=\"sig-prename descclassname\"><span class=\"pre\">&#64;</span></code><code class=\"sig-prename descclassname\"><span class=\"pre\">dagster.</span></code><code class=\"sig-name descname\"><span class=\"pre\">sensor</span></code><span class=\"sig-paren\">(</span><em class=\"sig-param\"><span class=\"pre\">pipeline_name=None</span></em>, <em class=\"sig-param\"><span class=\"pre\">name=None</span></em>, <em class=\"sig-param\"><span class=\"pre\">solid_selection=None</span></em>, <em class=\"sig-param\"><span class=\"pre\">mode=None</span></em>, <em class=\"sig-param\"><span class=\"pre\">minimum_interval_seconds=None</span></em>, <em class=\"sig-param\"><span class=\"pre\">description=None</span></em>, <em class=\"sig-param\"><span class=\"pre\">job=None</span></em>, <em class=\"sig-param\"><span class=\"pre\">jobs=None</span></em>, <em class=\"sig-param\"><span class=\"pre\">default_status=&lt;DefaultSensorStatus.STOPPED:</span> <span class=\"pre\">'STOPPED'&gt;</span></em><span class=\"sig-paren\">)</span><a class=\"reference internal\" href=\"../../../../_modules/dagster/core/definitions/decorators/sensor_decorator#sensor\"><span class=\"viewcode-link\"><span class=\"pre\">[source]</span></span></a><a class=\"headerlink\" href=\"#dagster.sensor\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Creates a sensor where the decorated function is used as the sensor\u2019s evaluation function.  The\ndecorated function may:</p>\n<ol class=\"arabic simple\">\n<li><p>Return a <cite>RunRequest</cite> object.</p></li>\n<li><p>Return a list of <cite>RunRequest</cite> objects.</p></li>\n<li><p>Return a <cite>SkipReason</cite> object, providing a descriptive message of why no runs were requested.</p></li>\n<li><p>Return nothing (skipping without providing a reason)</p></li>\n<li><p>Yield a <cite>SkipReason</cite> or yield one ore more <cite>RunRequest</cite> objects.</p></li>\n</ol>\n<p>Takes a <a class=\"reference internal\" href=\"#dagster.SensorEvaluationContext\" title=\"dagster.SensorEvaluationContext\"><code class=\"xref py py-class docutils literal notranslate\"><span class=\"pre\">SensorEvaluationContext</span></code></a>.</p>\n<dl class=\"field-list simple\">\n<dt class=\"field-odd\">Parameters</dt>\n<dd class=\"field-odd\"><ul class=\"simple\">\n<li><p><strong>pipeline_name</strong> (<em>Optional</em><em>[</em><a class=\"reference external\" href=\"https://docs.python.org/3/library/stdtypes.html#str\" title=\"(in Python v3.8)\"><em>str</em></a><em>]</em>) \u2013 (legacy) Name of the target pipeline. Cannot be used in\nconjunction with <cite>job</cite> or <cite>jobs</cite> parameters.</p></li>\n<li><p><strong>name</strong> (<em>Optional</em><em>[</em><a class=\"reference external\" href=\"https://docs.python.org/3/library/stdtypes.html#str\" title=\"(in Python v3.8)\"><em>str</em></a><em>]</em>) \u2013 The name of the sensor. Defaults to the name of the decorated\nfunction.</p></li>\n<li><p><strong>solid_selection</strong> (<em>Optional</em><em>[</em><em>List</em><em>[</em><a class=\"reference external\" href=\"https://docs.python.org/3/library/stdtypes.html#str\" title=\"(in Python v3.8)\"><em>str</em></a><em>]</em><em>]</em>) \u2013 (legacy) A list of solid subselection (including single\nsolid names) to execute for runs for this sensor e.g.\n<code class=\"docutils literal notranslate\"><span class=\"pre\">['*some_solid+',</span> <span class=\"pre\">'other_solid']</span></code>.\nCannot be used in conjunction with <cite>job</cite> or <cite>jobs</cite> parameters.</p></li>\n<li><p><strong>mode</strong> (<em>Optional</em><em>[</em><a class=\"reference external\" href=\"https://docs.python.org/3/library/stdtypes.html#str\" title=\"(in Python v3.8)\"><em>str</em></a><em>]</em>) \u2013 (legacy) The mode to apply when executing runs for this sensor. Cannot be used\nin conjunction with <cite>job</cite> or <cite>jobs</cite> parameters.\n(default: \u2018default\u2019)</p></li>\n<li><p><strong>minimum_interval_seconds</strong> (<em>Optional</em><em>[</em><a class=\"reference external\" href=\"https://docs.python.org/3/library/functions.html#int\" title=\"(in Python v3.8)\"><em>int</em></a><em>]</em>) \u2013 The minimum number of seconds that will elapse\nbetween sensor evaluations.</p></li>\n<li><p><strong>description</strong> (<em>Optional</em><em>[</em><a class=\"reference external\" href=\"https://docs.python.org/3/library/stdtypes.html#str\" title=\"(in Python v3.8)\"><em>str</em></a><em>]</em>) \u2013 A human-readable description of the sensor.</p></li>\n<li><p><strong>job</strong> (<em>Optional</em><em>[</em><em>Union</em><em>[</em><a class=\"reference internal\" href=\"graphs#dagster.GraphDefinition\" title=\"dagster.GraphDefinition\"><em>GraphDefinition</em></a><em>, </em><a class=\"reference internal\" href=\"jobs#dagster.JobDefinition\" title=\"dagster.JobDefinition\"><em>JobDefinition</em></a><em>]</em><em>]</em>) \u2013 The job to be executed when the sensor fires.</p></li>\n<li><p><strong>jobs</strong> (<em>Optional</em><em>[</em><em>Sequence</em><em>[</em><em>Union</em><em>[</em><a class=\"reference internal\" href=\"graphs#dagster.GraphDefinition\" title=\"dagster.GraphDefinition\"><em>GraphDefinition</em></a><em>, </em><a class=\"reference internal\" href=\"jobs#dagster.JobDefinition\" title=\"dagster.JobDefinition\"><em>JobDefinition</em></a><em>]</em><em>]</em><em>]</em>) \u2013 (experimental) A list of jobs to be executed when the sensor fires.</p></li>\n<li><p><strong>default_status</strong> (<em>DefaultSensorStatus</em>) \u2013 Whether the sensor starts as running or not. The default\nstatus can be overridden from Dagit or via the GraphQL API.</p></li>\n</ul>\n</dd>\n</dl>\n</dd></dl>\n\n<dl class=\"py class\">\n<dt id=\"dagster.SensorDefinition\">\n<em class=\"property\"><span class=\"pre\">class</span> </em><code class=\"sig-prename descclassname\"><span class=\"pre\">dagster.</span></code><code class=\"sig-name descname\"><span class=\"pre\">SensorDefinition</span></code><span class=\"sig-paren\">(</span><em class=\"sig-param\"><span class=\"pre\">name=None</span></em>, <em class=\"sig-param\"><span class=\"pre\">evaluation_fn=None</span></em>, <em class=\"sig-param\"><span class=\"pre\">pipeline_name=None</span></em>, <em class=\"sig-param\"><span class=\"pre\">solid_selection=None</span></em>, <em class=\"sig-param\"><span class=\"pre\">mode=None</span></em>, <em class=\"sig-param\"><span class=\"pre\">minimum_interval_seconds=None</span></em>, <em class=\"sig-param\"><span class=\"pre\">description=None</span></em>, <em class=\"sig-param\"><span class=\"pre\">job=None</span></em>, <em class=\"sig-param\"><span class=\"pre\">jobs=None</span></em>, <em class=\"sig-param\"><span class=\"pre\">default_status=&lt;DefaultSensorStatus.STOPPED:</span> <span class=\"pre\">'STOPPED'&gt;</span></em><span class=\"sig-paren\">)</span><a class=\"reference internal\" href=\"../../../../_modules/dagster/core/definitions/sensor_definition#SensorDefinition\"><span class=\"viewcode-link\"><span class=\"pre\">[source]</span></span></a><a class=\"headerlink\" href=\"#dagster.SensorDefinition\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Define a sensor that initiates a set of runs based on some external state</p>\n<dl class=\"field-list simple\">\n<dt class=\"field-odd\">Parameters</dt>\n<dd class=\"field-odd\"><ul class=\"simple\">\n<li><p><strong>evaluation_fn</strong> (<em>Callable</em><em>[</em><em>[</em><a class=\"reference internal\" href=\"#dagster.SensorEvaluationContext\" title=\"dagster.SensorEvaluationContext\"><em>SensorEvaluationContext</em></a><em>]</em><em>]</em>) \u2013 <p>The core evaluation function for the\nsensor, which is run at an interval to determine whether a run should be launched or\nnot. Takes a <a class=\"reference internal\" href=\"#dagster.SensorEvaluationContext\" title=\"dagster.SensorEvaluationContext\"><code class=\"xref py py-class docutils literal notranslate\"><span class=\"pre\">SensorEvaluationContext</span></code></a>.</p>\n<p>This function must return a generator, which must yield either a single SkipReason\nor one or more RunRequest objects.</p>\n</p></li>\n<li><p><strong>name</strong> (<em>Optional</em><em>[</em><a class=\"reference external\" href=\"https://docs.python.org/3/library/stdtypes.html#str\" title=\"(in Python v3.8)\"><em>str</em></a><em>]</em>) \u2013 The name of the sensor to create. Defaults to name of evaluation_fn</p></li>\n<li><p><strong>pipeline_name</strong> (<em>Optional</em><em>[</em><a class=\"reference external\" href=\"https://docs.python.org/3/library/stdtypes.html#str\" title=\"(in Python v3.8)\"><em>str</em></a><em>]</em>) \u2013 (legacy) The name of the pipeline to execute when the sensor\nfires. Cannot be used in conjunction with <cite>job</cite> or <cite>jobs</cite> parameters.</p></li>\n<li><p><strong>solid_selection</strong> (<em>Optional</em><em>[</em><em>List</em><em>[</em><a class=\"reference external\" href=\"https://docs.python.org/3/library/stdtypes.html#str\" title=\"(in Python v3.8)\"><em>str</em></a><em>]</em><em>]</em>) \u2013 (legacy) A list of solid subselection (including single\nsolid names) to execute when the sensor runs. e.g. <code class=\"docutils literal notranslate\"><span class=\"pre\">['*some_solid+',</span> <span class=\"pre\">'other_solid']</span></code>.\nCannot be used in conjunction with <cite>job</cite> or <cite>jobs</cite> parameters.</p></li>\n<li><p><strong>mode</strong> (<em>Optional</em><em>[</em><a class=\"reference external\" href=\"https://docs.python.org/3/library/stdtypes.html#str\" title=\"(in Python v3.8)\"><em>str</em></a><em>]</em>) \u2013 (legacy) The mode to apply when executing runs triggered by this\nsensor. Cannot be used in conjunction with <cite>job</cite> or <cite>jobs</cite> parameters. (default:\n\u2018default\u2019)</p></li>\n<li><p><strong>minimum_interval_seconds</strong> (<em>Optional</em><em>[</em><a class=\"reference external\" href=\"https://docs.python.org/3/library/functions.html#int\" title=\"(in Python v3.8)\"><em>int</em></a><em>]</em>) \u2013 The minimum number of seconds that will elapse\nbetween sensor evaluations.</p></li>\n<li><p><strong>description</strong> (<em>Optional</em><em>[</em><a class=\"reference external\" href=\"https://docs.python.org/3/library/stdtypes.html#str\" title=\"(in Python v3.8)\"><em>str</em></a><em>]</em>) \u2013 A human-readable description of the sensor.</p></li>\n<li><p><strong>job</strong> (<em>Optional</em><em>[</em><a class=\"reference internal\" href=\"graphs#dagster.GraphDefinition\" title=\"dagster.GraphDefinition\"><em>GraphDefinition</em></a><em>, </em><a class=\"reference internal\" href=\"jobs#dagster.JobDefinition\" title=\"dagster.JobDefinition\"><em>JobDefinition</em></a><em>]</em>) \u2013 The job to execute when this sensor fires.</p></li>\n<li><p><strong>jobs</strong> (<em>Optional</em><em>[</em><em>Sequence</em><em>[</em><a class=\"reference internal\" href=\"graphs#dagster.GraphDefinition\" title=\"dagster.GraphDefinition\"><em>GraphDefinition</em></a><em>, </em><a class=\"reference internal\" href=\"jobs#dagster.JobDefinition\" title=\"dagster.JobDefinition\"><em>JobDefinition</em></a><em>]</em><em>]</em>) \u2013 (experimental) A list of jobs to execute when this sensor fires.</p></li>\n<li><p><strong>default_status</strong> (<em>DefaultSensorStatus</em>) \u2013 Whether the sensor starts as running or not. The default\nstatus can be overridden from Dagit or via the GraphQL API.</p></li>\n</ul>\n</dd>\n</dl>\n</dd></dl>\n\n<dl class=\"py class\">\n<dt id=\"dagster.SensorEvaluationContext\">\n<em class=\"property\"><span class=\"pre\">class</span> </em><code class=\"sig-prename descclassname\"><span class=\"pre\">dagster.</span></code><code class=\"sig-name descname\"><span class=\"pre\">SensorEvaluationContext</span></code><span class=\"sig-paren\">(</span><em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">instance_ref</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">last_completion_time</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">last_run_key</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">cursor</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">repository_name</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">instance</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">None</span></span></em><span class=\"sig-paren\">)</span><a class=\"reference internal\" href=\"../../../../_modules/dagster/core/definitions/sensor_definition#SensorEvaluationContext\"><span class=\"viewcode-link\"><span class=\"pre\">[source]</span></span></a><a class=\"headerlink\" href=\"#dagster.SensorEvaluationContext\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Sensor execution context.</p>\n<p>An instance of this class is made available as the first argument to the evaluation function\non SensorDefinition.</p>\n<dl class=\"py attribute\">\n<dt id=\"dagster.SensorEvaluationContext.instance_ref\">\n<code class=\"sig-name descname\"><span class=\"pre\">instance_ref</span></code><a class=\"headerlink\" href=\"#dagster.SensorEvaluationContext.instance_ref\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>The serialized instance configured to run the schedule</p>\n<dl class=\"field-list simple\">\n<dt class=\"field-odd\">Type</dt>\n<dd class=\"field-odd\"><p>Optional[<a class=\"reference internal\" href=\"internals#dagster.core.instance.InstanceRef\" title=\"dagster.core.instance.InstanceRef\">InstanceRef</a>]</p>\n</dd>\n</dl>\n</dd></dl>\n\n<dl class=\"py attribute\">\n<dt id=\"dagster.SensorEvaluationContext.cursor\">\n<code class=\"sig-name descname\"><span class=\"pre\">cursor</span></code><a class=\"headerlink\" href=\"#dagster.SensorEvaluationContext.cursor\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>The cursor, passed back from the last sensor evaluation via\nthe cursor attribute of SkipReason and RunRequest</p>\n<dl class=\"field-list simple\">\n<dt class=\"field-odd\">Type</dt>\n<dd class=\"field-odd\"><p>Optional[<a class=\"reference external\" href=\"https://docs.python.org/3/library/stdtypes.html#str\" title=\"(in Python v3.8)\">str</a>]</p>\n</dd>\n</dl>\n</dd></dl>\n\n<dl class=\"py attribute\">\n<dt id=\"dagster.SensorEvaluationContext.last_completion_time\">\n<code class=\"sig-name descname\"><span class=\"pre\">last_completion_time</span></code><a class=\"headerlink\" href=\"#dagster.SensorEvaluationContext.last_completion_time\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>DEPRECATED The last time that the sensor was evaluated (UTC).</p>\n<dl class=\"field-list simple\">\n<dt class=\"field-odd\">Type</dt>\n<dd class=\"field-odd\"><p><a class=\"reference external\" href=\"https://docs.python.org/3/library/functions.html#float\" title=\"(in Python v3.8)\">float</a></p>\n</dd>\n</dl>\n</dd></dl>\n\n<dl class=\"py attribute\">\n<dt id=\"dagster.SensorEvaluationContext.last_run_key\">\n<code class=\"sig-name descname\"><span class=\"pre\">last_run_key</span></code><a class=\"headerlink\" href=\"#dagster.SensorEvaluationContext.last_run_key\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>DEPRECATED The run key of the RunRequest most recently created by this\nsensor. Use the preferred <cite>cursor</cite> attribute instead.</p>\n<dl class=\"field-list simple\">\n<dt class=\"field-odd\">Type</dt>\n<dd class=\"field-odd\"><p><a class=\"reference external\" href=\"https://docs.python.org/3/library/stdtypes.html#str\" title=\"(in Python v3.8)\">str</a></p>\n</dd>\n</dl>\n</dd></dl>\n\n<dl class=\"py attribute\">\n<dt id=\"dagster.SensorEvaluationContext.repository_name\">\n<code class=\"sig-name descname\"><span class=\"pre\">repository_name</span></code><a class=\"headerlink\" href=\"#dagster.SensorEvaluationContext.repository_name\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>The name of the repository that the sensor belongs to.</p>\n<dl class=\"field-list simple\">\n<dt class=\"field-odd\">Type</dt>\n<dd class=\"field-odd\"><p>Optional[<a class=\"reference external\" href=\"https://docs.python.org/3/library/stdtypes.html#str\" title=\"(in Python v3.8)\">str</a>]</p>\n</dd>\n</dl>\n</dd></dl>\n\n<dl class=\"py attribute\">\n<dt id=\"dagster.SensorEvaluationContext.instance\">\n<code class=\"sig-name descname\"><span class=\"pre\">instance</span></code><a class=\"headerlink\" href=\"#dagster.SensorEvaluationContext.instance\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>The deserialized instance can also be passed in\ndirectly (primarily useful in testing contexts).</p>\n<dl class=\"field-list simple\">\n<dt class=\"field-odd\">Type</dt>\n<dd class=\"field-odd\"><p>Optional[<a class=\"reference internal\" href=\"internals#dagster.DagsterInstance\" title=\"dagster.DagsterInstance\">DagsterInstance</a>]</p>\n</dd>\n</dl>\n</dd></dl>\n\n</dd></dl>\n\n<dl class=\"py function\">\n<dt id=\"dagster.build_sensor_context\">\n<code class=\"sig-prename descclassname\"><span class=\"pre\">dagster.</span></code><code class=\"sig-name descname\"><span class=\"pre\">build_sensor_context</span></code><span class=\"sig-paren\">(</span><em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">instance</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">None</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">cursor</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">None</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">repository_name</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">None</span></span></em><span class=\"sig-paren\">)</span><a class=\"reference internal\" href=\"../../../../_modules/dagster/core/definitions/sensor_definition#build_sensor_context\"><span class=\"viewcode-link\"><span class=\"pre\">[source]</span></span></a><a class=\"headerlink\" href=\"#dagster.build_sensor_context\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Builds sensor execution context using the provided parameters.</p>\n<p>This function can be used to provide a context to the invocation of a sensor definition.If\nprovided, the dagster instance must be persistent; DagsterInstance.ephemeral() will result in an\nerror.</p>\n<dl class=\"field-list simple\">\n<dt class=\"field-odd\">Parameters</dt>\n<dd class=\"field-odd\"><ul class=\"simple\">\n<li><p><strong>instance</strong> (<em>Optional</em><em>[</em><a class=\"reference internal\" href=\"internals#dagster.DagsterInstance\" title=\"dagster.DagsterInstance\"><em>DagsterInstance</em></a><em>]</em>) \u2013 The dagster instance configured to run the sensor.</p></li>\n<li><p><strong>cursor</strong> (<em>Optional</em><em>[</em><a class=\"reference external\" href=\"https://docs.python.org/3/library/stdtypes.html#str\" title=\"(in Python v3.8)\"><em>str</em></a><em>]</em>) \u2013 A cursor value to provide to the evaluation of the sensor.</p></li>\n<li><p><strong>repository_name</strong> (<em>Optional</em><em>[</em><a class=\"reference external\" href=\"https://docs.python.org/3/library/stdtypes.html#str\" title=\"(in Python v3.8)\"><em>str</em></a><em>]</em>) \u2013 The name of the repository that the sensor belongs to.</p></li>\n</ul>\n</dd>\n</dl>\n<p class=\"rubric\">Examples</p>\n<div class=\"highlight-python notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"n\">context</span> <span class=\"o\">=</span> <span class=\"n\">build_sensor_context</span><span class=\"p\">()</span>\n<span class=\"n\">my_sensor</span><span class=\"p\">(</span><span class=\"n\">context</span><span class=\"p\">)</span>\n</pre></div>\n</div>\n</dd></dl>\n\n<dl class=\"py class\">\n<dt id=\"dagster.AssetSensorDefinition\">\n<em class=\"property\"><span class=\"pre\">class</span> </em><code class=\"sig-prename descclassname\"><span class=\"pre\">dagster.</span></code><code class=\"sig-name descname\"><span class=\"pre\">AssetSensorDefinition</span></code><span class=\"sig-paren\">(</span><em class=\"sig-param\"><span class=\"pre\">name</span></em>, <em class=\"sig-param\"><span class=\"pre\">asset_key</span></em>, <em class=\"sig-param\"><span class=\"pre\">pipeline_name</span></em>, <em class=\"sig-param\"><span class=\"pre\">asset_materialization_fn</span></em>, <em class=\"sig-param\"><span class=\"pre\">solid_selection=None</span></em>, <em class=\"sig-param\"><span class=\"pre\">mode=None</span></em>, <em class=\"sig-param\"><span class=\"pre\">minimum_interval_seconds=None</span></em>, <em class=\"sig-param\"><span class=\"pre\">description=None</span></em>, <em class=\"sig-param\"><span class=\"pre\">job=None</span></em>, <em class=\"sig-param\"><span class=\"pre\">jobs=None</span></em>, <em class=\"sig-param\"><span class=\"pre\">default_status=&lt;DefaultSensorStatus.STOPPED:</span> <span class=\"pre\">'STOPPED'&gt;</span></em><span class=\"sig-paren\">)</span><a class=\"reference internal\" href=\"../../../../_modules/dagster/core/definitions/sensor_definition#AssetSensorDefinition\"><span class=\"viewcode-link\"><span class=\"pre\">[source]</span></span></a><a class=\"headerlink\" href=\"#dagster.AssetSensorDefinition\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Define an asset sensor that initiates a set of runs based on the materialization of a given\nasset.</p>\n<dl class=\"field-list simple\">\n<dt class=\"field-odd\">Parameters</dt>\n<dd class=\"field-odd\"><ul class=\"simple\">\n<li><p><strong>name</strong> (<a class=\"reference external\" href=\"https://docs.python.org/3/library/stdtypes.html#str\" title=\"(in Python v3.8)\"><em>str</em></a>) \u2013 The name of the sensor to create.</p></li>\n<li><p><strong>asset_key</strong> (<a class=\"reference internal\" href=\"ops#dagster.AssetKey\" title=\"dagster.AssetKey\"><em>AssetKey</em></a>) \u2013 The asset_key this sensor monitors.</p></li>\n<li><p><strong>pipeline_name</strong> (<em>Optional</em><em>[</em><a class=\"reference external\" href=\"https://docs.python.org/3/library/stdtypes.html#str\" title=\"(in Python v3.8)\"><em>str</em></a><em>]</em>) \u2013 (legacy) The name of the pipeline to execute when the sensor\nfires. Cannot be used in conjunction with <cite>job</cite> or <cite>jobs</cite> parameters.</p></li>\n<li><p><strong>asset_materialization_fn</strong> (<em>Callable</em><em>[</em><em>[</em><a class=\"reference internal\" href=\"#dagster.SensorEvaluationContext\" title=\"dagster.SensorEvaluationContext\"><em>SensorEvaluationContext</em></a><em>, </em><a class=\"reference internal\" href=\"internals#dagster.core.storage.event_log.EventLogEntry\" title=\"dagster.core.storage.event_log.EventLogEntry\"><em>EventLogEntry</em></a><em>]</em><em>, </em><em>Union</em><em>[</em><em>Iterator</em><em>[</em><em>Union</em><em>[</em><a class=\"reference internal\" href=\"#dagster.RunRequest\" title=\"dagster.RunRequest\"><em>RunRequest</em></a><em>, </em><a class=\"reference internal\" href=\"#dagster.SkipReason\" title=\"dagster.SkipReason\"><em>SkipReason</em></a><em>]</em><em>]</em><em>, </em><a class=\"reference internal\" href=\"#dagster.RunRequest\" title=\"dagster.RunRequest\"><em>RunRequest</em></a><em>, </em><a class=\"reference internal\" href=\"#dagster.SkipReason\" title=\"dagster.SkipReason\"><em>SkipReason</em></a><em>]</em><em>]</em>) \u2013 <p>The core\nevaluation function for the sensor, which is run at an interval to determine whether a\nrun should be launched or not. Takes a <a class=\"reference internal\" href=\"#dagster.SensorEvaluationContext\" title=\"dagster.SensorEvaluationContext\"><code class=\"xref py py-class docutils literal notranslate\"><span class=\"pre\">SensorEvaluationContext</span></code></a> and\nan EventLogEntry corresponding to an AssetMaterialization event.</p>\n<p>This function must return a generator, which must yield either a single SkipReason\nor one or more RunRequest objects.</p>\n</p></li>\n<li><p><strong>solid_selection</strong> (<em>Optional</em><em>[</em><em>List</em><em>[</em><a class=\"reference external\" href=\"https://docs.python.org/3/library/stdtypes.html#str\" title=\"(in Python v3.8)\"><em>str</em></a><em>]</em><em>]</em>) \u2013 (legacy) A list of solid subselection (including single\nsolid names) to execute when the sensor runs. e.g. <code class=\"docutils literal notranslate\"><span class=\"pre\">['*some_solid+',</span> <span class=\"pre\">'other_solid']</span></code>.\nCannot be used in conjunction with <cite>job</cite> or <cite>jobs</cite> parameters.</p></li>\n<li><p><strong>mode</strong> (<em>Optional</em><em>[</em><a class=\"reference external\" href=\"https://docs.python.org/3/library/stdtypes.html#str\" title=\"(in Python v3.8)\"><em>str</em></a><em>]</em>) \u2013 (legacy) The mode to apply when executing runs triggered by this sensor.\n(default: \u2018default\u2019).\nCannot be used in conjunction with <cite>job</cite> or <cite>jobs</cite> parameters.</p></li>\n<li><p><strong>minimum_interval_seconds</strong> (<em>Optional</em><em>[</em><a class=\"reference external\" href=\"https://docs.python.org/3/library/functions.html#int\" title=\"(in Python v3.8)\"><em>int</em></a><em>]</em>) \u2013 The minimum number of seconds that will elapse\nbetween sensor evaluations.</p></li>\n<li><p><strong>description</strong> (<em>Optional</em><em>[</em><a class=\"reference external\" href=\"https://docs.python.org/3/library/stdtypes.html#str\" title=\"(in Python v3.8)\"><em>str</em></a><em>]</em>) \u2013 A human-readable description of the sensor.</p></li>\n<li><p><strong>job</strong> (<em>Optional</em><em>[</em><em>Union</em><em>[</em><a class=\"reference internal\" href=\"graphs#dagster.GraphDefinition\" title=\"dagster.GraphDefinition\"><em>GraphDefinition</em></a><em>, </em><a class=\"reference internal\" href=\"jobs#dagster.JobDefinition\" title=\"dagster.JobDefinition\"><em>JobDefinition</em></a><em>]</em><em>]</em>) \u2013 The job object to target with this sensor.</p></li>\n<li><p><strong>jobs</strong> (<em>Optional</em><em>[</em><em>Sequence</em><em>[</em><em>Union</em><em>[</em><a class=\"reference internal\" href=\"graphs#dagster.GraphDefinition\" title=\"dagster.GraphDefinition\"><em>GraphDefinition</em></a><em>, </em><a class=\"reference internal\" href=\"jobs#dagster.JobDefinition\" title=\"dagster.JobDefinition\"><em>JobDefinition</em></a><em>]</em><em>]</em><em>]</em>) \u2013 (experimental) A list of jobs to be executed when the sensor fires.</p></li>\n<li><p><strong>default_status</strong> (<em>DefaultSensorStatus</em>) \u2013 Whether the sensor starts as running or not. The default\nstatus can be overridden from Dagit or via the GraphQL API.</p></li>\n</ul>\n</dd>\n</dl>\n</dd></dl>\n\n<dl class=\"py function\">\n<dt id=\"dagster.asset_sensor\">\n<code class=\"sig-prename descclassname\"><span class=\"pre\">&#64;</span></code><code class=\"sig-prename descclassname\"><span class=\"pre\">dagster.</span></code><code class=\"sig-name descname\"><span class=\"pre\">asset_sensor</span></code><span class=\"sig-paren\">(</span><em class=\"sig-param\"><span class=\"pre\">asset_key</span></em>, <em class=\"sig-param\"><span class=\"pre\">pipeline_name=None</span></em>, <em class=\"sig-param\"><span class=\"pre\">name=None</span></em>, <em class=\"sig-param\"><span class=\"pre\">solid_selection=None</span></em>, <em class=\"sig-param\"><span class=\"pre\">mode=None</span></em>, <em class=\"sig-param\"><span class=\"pre\">minimum_interval_seconds=None</span></em>, <em class=\"sig-param\"><span class=\"pre\">description=None</span></em>, <em class=\"sig-param\"><span class=\"pre\">job=None</span></em>, <em class=\"sig-param\"><span class=\"pre\">jobs=None</span></em>, <em class=\"sig-param\"><span class=\"pre\">default_status=&lt;DefaultSensorStatus.STOPPED:</span> <span class=\"pre\">'STOPPED'&gt;</span></em><span class=\"sig-paren\">)</span><a class=\"reference internal\" href=\"../../../../_modules/dagster/core/definitions/decorators/sensor_decorator#asset_sensor\"><span class=\"viewcode-link\"><span class=\"pre\">[source]</span></span></a><a class=\"headerlink\" href=\"#dagster.asset_sensor\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Creates an asset sensor where the decorated function is used as the asset sensor\u2019s evaluation\nfunction.  The decorated function may:</p>\n<ol class=\"arabic simple\">\n<li><p>Return a <cite>RunRequest</cite> object.</p></li>\n<li><p>Return a list of <cite>RunRequest</cite> objects.</p></li>\n<li><p>Return a <cite>SkipReason</cite> object, providing a descriptive message of why no runs were requested.</p></li>\n<li><p>Return nothing (skipping without providing a reason)</p></li>\n<li><p>Yield a <cite>SkipReason</cite> or yield one ore more <cite>RunRequest</cite> objects.</p></li>\n</ol>\n<p>Takes a <a class=\"reference internal\" href=\"#dagster.SensorEvaluationContext\" title=\"dagster.SensorEvaluationContext\"><code class=\"xref py py-class docutils literal notranslate\"><span class=\"pre\">SensorEvaluationContext</span></code></a> and an EventLogEntry corresponding to an\nAssetMaterialization event.</p>\n<dl class=\"field-list simple\">\n<dt class=\"field-odd\">Parameters</dt>\n<dd class=\"field-odd\"><ul class=\"simple\">\n<li><p><strong>asset_key</strong> (<a class=\"reference internal\" href=\"ops#dagster.AssetKey\" title=\"dagster.AssetKey\"><em>AssetKey</em></a>) \u2013 The asset_key this sensor monitors.</p></li>\n<li><p><strong>pipeline_name</strong> (<em>Optional</em><em>[</em><a class=\"reference external\" href=\"https://docs.python.org/3/library/stdtypes.html#str\" title=\"(in Python v3.8)\"><em>str</em></a><em>]</em>) \u2013 (legacy) Name of the target pipeline. Cannot be used in conjunction with <cite>job</cite> or <cite>jobs</cite> parameters.</p></li>\n<li><p><strong>name</strong> (<em>Optional</em><em>[</em><a class=\"reference external\" href=\"https://docs.python.org/3/library/stdtypes.html#str\" title=\"(in Python v3.8)\"><em>str</em></a><em>]</em>) \u2013 The name of the sensor. Defaults to the name of the decorated\nfunction.</p></li>\n<li><p><strong>solid_selection</strong> (<em>Optional</em><em>[</em><em>List</em><em>[</em><a class=\"reference external\" href=\"https://docs.python.org/3/library/stdtypes.html#str\" title=\"(in Python v3.8)\"><em>str</em></a><em>]</em><em>]</em>) \u2013 (legacy) A list of solid subselection (including single\nsolid names) to execute for runs for this sensor e.g.\n<code class=\"docutils literal notranslate\"><span class=\"pre\">['*some_solid+',</span> <span class=\"pre\">'other_solid']</span></code>. Cannot be used in conjunction with <cite>job</cite> or <cite>jobs</cite>\nparameters.</p></li>\n<li><p><strong>mode</strong> (<em>Optional</em><em>[</em><a class=\"reference external\" href=\"https://docs.python.org/3/library/stdtypes.html#str\" title=\"(in Python v3.8)\"><em>str</em></a><em>]</em>) \u2013 (legacy) The mode to apply when executing runs for this sensor. Cannot be used\nin conjunction with <cite>job</cite> or <cite>jobs</cite> parameters.\n(default: \u2018default\u2019)</p></li>\n<li><p><strong>minimum_interval_seconds</strong> (<em>Optional</em><em>[</em><a class=\"reference external\" href=\"https://docs.python.org/3/library/functions.html#int\" title=\"(in Python v3.8)\"><em>int</em></a><em>]</em>) \u2013 The minimum number of seconds that will elapse\nbetween sensor evaluations.</p></li>\n<li><p><strong>description</strong> (<em>Optional</em><em>[</em><a class=\"reference external\" href=\"https://docs.python.org/3/library/stdtypes.html#str\" title=\"(in Python v3.8)\"><em>str</em></a><em>]</em>) \u2013 A human-readable description of the sensor.</p></li>\n<li><p><strong>job</strong> (<em>Optional</em><em>[</em><em>Union</em><em>[</em><a class=\"reference internal\" href=\"graphs#dagster.GraphDefinition\" title=\"dagster.GraphDefinition\"><em>GraphDefinition</em></a><em>, </em><a class=\"reference internal\" href=\"jobs#dagster.JobDefinition\" title=\"dagster.JobDefinition\"><em>JobDefinition</em></a><em>]</em><em>]</em>) \u2013 The job to be executed when the sensor fires.</p></li>\n<li><p><strong>jobs</strong> (<em>Optional</em><em>[</em><em>Sequence</em><em>[</em><em>Union</em><em>[</em><a class=\"reference internal\" href=\"graphs#dagster.GraphDefinition\" title=\"dagster.GraphDefinition\"><em>GraphDefinition</em></a><em>, </em><a class=\"reference internal\" href=\"jobs#dagster.JobDefinition\" title=\"dagster.JobDefinition\"><em>JobDefinition</em></a><em>]</em><em>]</em><em>]</em>) \u2013 (experimental) A list of jobs to be executed when the sensor fires.</p></li>\n<li><p><strong>default_status</strong> (<em>DefaultSensorStatus</em>) \u2013 Whether the sensor starts as running or not. The default\nstatus can be overridden from Dagit or via the GraphQL API.</p></li>\n</ul>\n</dd>\n</dl>\n</dd></dl>\n\n<dl class=\"py class\">\n<dt id=\"dagster.RunStatusSensorDefinition\">\n<em class=\"property\"><span class=\"pre\">class</span> </em><code class=\"sig-prename descclassname\"><span class=\"pre\">dagster.</span></code><code class=\"sig-name descname\"><span class=\"pre\">RunStatusSensorDefinition</span></code><span class=\"sig-paren\">(</span><em class=\"sig-param\"><span class=\"pre\">name</span></em>, <em class=\"sig-param\"><span class=\"pre\">pipeline_run_status</span></em>, <em class=\"sig-param\"><span class=\"pre\">run_status_sensor_fn</span></em>, <em class=\"sig-param\"><span class=\"pre\">pipeline_selection=None</span></em>, <em class=\"sig-param\"><span class=\"pre\">minimum_interval_seconds=None</span></em>, <em class=\"sig-param\"><span class=\"pre\">description=None</span></em>, <em class=\"sig-param\"><span class=\"pre\">job_selection=None</span></em>, <em class=\"sig-param\"><span class=\"pre\">default_status=&lt;DefaultSensorStatus.STOPPED:</span> <span class=\"pre\">'STOPPED'&gt;</span></em><span class=\"sig-paren\">)</span><a class=\"reference internal\" href=\"../../../../_modules/dagster/core/definitions/run_status_sensor_definition#RunStatusSensorDefinition\"><span class=\"viewcode-link\"><span class=\"pre\">[source]</span></span></a><a class=\"headerlink\" href=\"#dagster.RunStatusSensorDefinition\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Define a sensor that reacts to a given status of pipeline execution, where the decorated\nfunction will be evaluated when a run is at the given status.</p>\n<dl class=\"field-list simple\">\n<dt class=\"field-odd\">Parameters</dt>\n<dd class=\"field-odd\"><ul class=\"simple\">\n<li><p><strong>name</strong> (<a class=\"reference external\" href=\"https://docs.python.org/3/library/stdtypes.html#str\" title=\"(in Python v3.8)\"><em>str</em></a>) \u2013 The name of the sensor. Defaults to the name of the decorated function.</p></li>\n<li><p><strong>pipeline_run_status</strong> (<em>PipelineRunStatus</em>) \u2013 The status of a run which will be\nmonitored by the sensor.</p></li>\n<li><p><strong>run_status_sensor_fn</strong> (<em>Callable</em><em>[</em><em>[</em><a class=\"reference internal\" href=\"#dagster.RunStatusSensorContext\" title=\"dagster.RunStatusSensorContext\"><em>RunStatusSensorContext</em></a><em>]</em><em>, </em><em>Union</em><em>[</em><a class=\"reference internal\" href=\"#dagster.SkipReason\" title=\"dagster.SkipReason\"><em>SkipReason</em></a><em>, </em><em>PipelineRunReaction</em><em>]</em><em>]</em>) \u2013 The core\nevaluation function for the sensor. Takes a <a class=\"reference internal\" href=\"#dagster.RunStatusSensorContext\" title=\"dagster.RunStatusSensorContext\"><code class=\"xref py py-class docutils literal notranslate\"><span class=\"pre\">RunStatusSensorContext</span></code></a>.</p></li>\n<li><p><strong>pipeline_selection</strong> (<em>Optional</em><em>[</em><em>List</em><em>[</em><a class=\"reference external\" href=\"https://docs.python.org/3/library/stdtypes.html#str\" title=\"(in Python v3.8)\"><em>str</em></a><em>]</em><em>]</em>) \u2013 (legacy) Names of the pipelines that will be monitored by\nthis sensor. Defaults to None, which means the alert will be sent when any pipeline in\nthe repository fails.</p></li>\n<li><p><strong>minimum_interval_seconds</strong> (<em>Optional</em><em>[</em><a class=\"reference external\" href=\"https://docs.python.org/3/library/functions.html#int\" title=\"(in Python v3.8)\"><em>int</em></a><em>]</em>) \u2013 The minimum number of seconds that will elapse\nbetween sensor evaluations.</p></li>\n<li><p><strong>description</strong> (<em>Optional</em><em>[</em><a class=\"reference external\" href=\"https://docs.python.org/3/library/stdtypes.html#str\" title=\"(in Python v3.8)\"><em>str</em></a><em>]</em>) \u2013 A human-readable description of the sensor.</p></li>\n<li><p><strong>job_selection</strong> (<em>Optional</em><em>[</em><em>List</em><em>[</em><em>Union</em><em>[</em><a class=\"reference internal\" href=\"jobs#dagster.JobDefinition\" title=\"dagster.JobDefinition\"><em>JobDefinition</em></a><em>, </em><a class=\"reference internal\" href=\"graphs#dagster.GraphDefinition\" title=\"dagster.GraphDefinition\"><em>GraphDefinition</em></a><em>]</em><em>]</em><em>]</em>) \u2013 The jobs that\nwill be monitored by this sensor. Defaults to None, which means the alert will be sent\nwhen any job in the repository fails.</p></li>\n<li><p><strong>default_status</strong> (<em>DefaultSensorStatus</em>) \u2013 Whether the sensor starts as running or not. The default\nstatus can be overridden from Dagit or via the GraphQL API.</p></li>\n</ul>\n</dd>\n</dl>\n</dd></dl>\n\n<dl class=\"py class\">\n<dt id=\"dagster.RunStatusSensorContext\">\n<em class=\"property\"><span class=\"pre\">class</span> </em><code class=\"sig-prename descclassname\"><span class=\"pre\">dagster.</span></code><code class=\"sig-name descname\"><span class=\"pre\">RunStatusSensorContext</span></code><span class=\"sig-paren\">(</span><em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">sensor_name</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">dagster_run</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">dagster_event</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">instance</span></span></em><span class=\"sig-paren\">)</span><a class=\"reference internal\" href=\"../../../../_modules/dagster/core/definitions/run_status_sensor_definition#RunStatusSensorContext\"><span class=\"viewcode-link\"><span class=\"pre\">[source]</span></span></a><a class=\"headerlink\" href=\"#dagster.RunStatusSensorContext\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>The <code class=\"docutils literal notranslate\"><span class=\"pre\">context</span></code> object available to a decorated function of <code class=\"docutils literal notranslate\"><span class=\"pre\">run_status_sensor</span></code>.</p>\n<dl class=\"py attribute\">\n<dt id=\"dagster.RunStatusSensorContext.sensor_name\">\n<code class=\"sig-name descname\"><span class=\"pre\">sensor_name</span></code><a class=\"headerlink\" href=\"#dagster.RunStatusSensorContext.sensor_name\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>the name of the sensor.</p>\n<dl class=\"field-list simple\">\n<dt class=\"field-odd\">Type</dt>\n<dd class=\"field-odd\"><p><a class=\"reference external\" href=\"https://docs.python.org/3/library/stdtypes.html#str\" title=\"(in Python v3.8)\">str</a></p>\n</dd>\n</dl>\n</dd></dl>\n\n<dl class=\"py attribute\">\n<dt id=\"dagster.RunStatusSensorContext.dagster_run\">\n<code class=\"sig-name descname\"><span class=\"pre\">dagster_run</span></code><a class=\"headerlink\" href=\"#dagster.RunStatusSensorContext.dagster_run\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>the run of the job or pipeline.</p>\n<dl class=\"field-list simple\">\n<dt class=\"field-odd\">Type</dt>\n<dd class=\"field-odd\"><p>DagsterRun</p>\n</dd>\n</dl>\n</dd></dl>\n\n<dl class=\"py attribute\">\n<dt id=\"dagster.RunStatusSensorContext.dagster_event\">\n<code class=\"sig-name descname\"><span class=\"pre\">dagster_event</span></code><a class=\"headerlink\" href=\"#dagster.RunStatusSensorContext.dagster_event\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>the event associated with the job or pipeline run status.</p>\n<dl class=\"field-list simple\">\n<dt class=\"field-odd\">Type</dt>\n<dd class=\"field-odd\"><p><a class=\"reference internal\" href=\"execution#dagster.DagsterEvent\" title=\"dagster.DagsterEvent\">DagsterEvent</a></p>\n</dd>\n</dl>\n</dd></dl>\n\n<dl class=\"py attribute\">\n<dt id=\"dagster.RunStatusSensorContext.instance\">\n<code class=\"sig-name descname\"><span class=\"pre\">instance</span></code><a class=\"headerlink\" href=\"#dagster.RunStatusSensorContext.instance\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>the current instance.</p>\n<dl class=\"field-list simple\">\n<dt class=\"field-odd\">Type</dt>\n<dd class=\"field-odd\"><p><a class=\"reference internal\" href=\"internals#dagster.DagsterInstance\" title=\"dagster.DagsterInstance\">DagsterInstance</a></p>\n</dd>\n</dl>\n</dd></dl>\n\n<dl class=\"py method\">\n<dt id=\"dagster.RunStatusSensorContext.for_run_failure\">\n<code class=\"sig-name descname\"><span class=\"pre\">for_run_failure</span></code><span class=\"sig-paren\">(</span><span class=\"sig-paren\">)</span><a class=\"reference internal\" href=\"../../../../_modules/dagster/core/definitions/run_status_sensor_definition#RunStatusSensorContext.for_run_failure\"><span class=\"viewcode-link\"><span class=\"pre\">[source]</span></span></a><a class=\"headerlink\" href=\"#dagster.RunStatusSensorContext.for_run_failure\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Converts RunStatusSensorContext to RunFailureSensorContext.</p>\n</dd></dl>\n\n</dd></dl>\n\n<dl class=\"py class\">\n<dt id=\"dagster.RunFailureSensorContext\">\n<em class=\"property\"><span class=\"pre\">class</span> </em><code class=\"sig-prename descclassname\"><span class=\"pre\">dagster.</span></code><code class=\"sig-name descname\"><span class=\"pre\">RunFailureSensorContext</span></code><span class=\"sig-paren\">(</span><em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">sensor_name</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">dagster_run</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">dagster_event</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">instance</span></span></em><span class=\"sig-paren\">)</span><a class=\"reference internal\" href=\"../../../../_modules/dagster/core/definitions/run_status_sensor_definition#RunFailureSensorContext\"><span class=\"viewcode-link\"><span class=\"pre\">[source]</span></span></a><a class=\"headerlink\" href=\"#dagster.RunFailureSensorContext\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>The <code class=\"docutils literal notranslate\"><span class=\"pre\">context</span></code> object available to a decorated function of <code class=\"docutils literal notranslate\"><span class=\"pre\">run_failure_sensor</span></code>.</p>\n<dl class=\"py attribute\">\n<dt id=\"dagster.RunFailureSensorContext.sensor_name\">\n<code class=\"sig-name descname\"><span class=\"pre\">sensor_name</span></code><a class=\"headerlink\" href=\"#dagster.RunFailureSensorContext.sensor_name\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>the name of the sensor.</p>\n<dl class=\"field-list simple\">\n<dt class=\"field-odd\">Type</dt>\n<dd class=\"field-odd\"><p><a class=\"reference external\" href=\"https://docs.python.org/3/library/stdtypes.html#str\" title=\"(in Python v3.8)\">str</a></p>\n</dd>\n</dl>\n</dd></dl>\n\n<dl class=\"py attribute\">\n<dt id=\"dagster.RunFailureSensorContext.pipeline_run\">\n<code class=\"sig-name descname\"><span class=\"pre\">pipeline_run</span></code><a class=\"headerlink\" href=\"#dagster.RunFailureSensorContext.pipeline_run\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>the failed pipeline run.</p>\n<dl class=\"field-list simple\">\n<dt class=\"field-odd\">Type</dt>\n<dd class=\"field-odd\"><p><a class=\"reference internal\" href=\"internals#dagster.PipelineRun\" title=\"dagster.PipelineRun\">PipelineRun</a></p>\n</dd>\n</dl>\n</dd></dl>\n\n<dl class=\"py attribute\">\n<dt id=\"dagster.RunFailureSensorContext.failure_event\">\n<code class=\"sig-name descname\"><span class=\"pre\">failure_event</span></code><a class=\"headerlink\" href=\"#dagster.RunFailureSensorContext.failure_event\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>the pipeline failure event.</p>\n<dl class=\"field-list simple\">\n<dt class=\"field-odd\">Type</dt>\n<dd class=\"field-odd\"><p><a class=\"reference internal\" href=\"execution#dagster.DagsterEvent\" title=\"dagster.DagsterEvent\">DagsterEvent</a></p>\n</dd>\n</dl>\n</dd></dl>\n\n</dd></dl>\n\n<dl class=\"py function\">\n<dt id=\"dagster.build_run_status_sensor_context\">\n<code class=\"sig-prename descclassname\"><span class=\"pre\">dagster.</span></code><code class=\"sig-name descname\"><span class=\"pre\">build_run_status_sensor_context</span></code><span class=\"sig-paren\">(</span><em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">sensor_name</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">dagster_event</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">dagster_instance</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">dagster_run</span></span></em><span class=\"sig-paren\">)</span><a class=\"reference internal\" href=\"../../../../_modules/dagster/core/definitions/run_status_sensor_definition#build_run_status_sensor_context\"><span class=\"viewcode-link\"><span class=\"pre\">[source]</span></span></a><a class=\"headerlink\" href=\"#dagster.build_run_status_sensor_context\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Builds run status sensor context from provided parameters.</p>\n<p>This function can be used to provide the context argument when directly invoking a function\ndecorated with <cite>&#64;run_status_sensor</cite> or <cite>&#64;run_failure_sensor</cite>, such as when writing unit tests.</p>\n<dl class=\"field-list simple\">\n<dt class=\"field-odd\">Parameters</dt>\n<dd class=\"field-odd\"><ul class=\"simple\">\n<li><p><strong>sensor_name</strong> (<a class=\"reference external\" href=\"https://docs.python.org/3/library/stdtypes.html#str\" title=\"(in Python v3.8)\"><em>str</em></a>) \u2013 The name of the sensor the context is being constructed for.</p></li>\n<li><p><strong>dagster_event</strong> (<a class=\"reference internal\" href=\"execution#dagster.DagsterEvent\" title=\"dagster.DagsterEvent\"><em>DagsterEvent</em></a>) \u2013 A DagsterEvent with the same event type as the one that\ntriggers the run_status_sensor</p></li>\n<li><p><strong>dagster_instance</strong> (<a class=\"reference internal\" href=\"internals#dagster.DagsterInstance\" title=\"dagster.DagsterInstance\"><em>DagsterInstance</em></a>) \u2013 The dagster instance configured for the context.</p></li>\n<li><p><strong>dagster_run</strong> (<em>DagsterRun</em>) \u2013 DagsterRun object from running a job</p></li>\n</ul>\n</dd>\n</dl>\n<p class=\"rubric\">Examples</p>\n<div class=\"highlight-python notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"n\">instance</span> <span class=\"o\">=</span> <span class=\"n\">DagsterInstance</span><span class=\"o\">.</span><span class=\"n\">ephemeral</span><span class=\"p\">()</span>\n<span class=\"n\">result</span> <span class=\"o\">=</span> <span class=\"n\">my_job</span><span class=\"o\">.</span><span class=\"n\">execute_in_process</span><span class=\"p\">(</span><span class=\"n\">instance</span><span class=\"o\">=</span><span class=\"n\">instance</span><span class=\"p\">)</span>\n\n<span class=\"n\">dagster_run</span> <span class=\"o\">=</span> <span class=\"n\">result</span><span class=\"o\">.</span><span class=\"n\">dagster_run</span>\n<span class=\"n\">dagster_event</span> <span class=\"o\">=</span> <span class=\"n\">result</span><span class=\"o\">.</span><span class=\"n\">get_job_success_event</span><span class=\"p\">()</span> <span class=\"c1\"># or get_job_failure_event()</span>\n\n<span class=\"n\">context</span> <span class=\"o\">=</span> <span class=\"n\">build_run_status_sensor_context</span><span class=\"p\">(</span>\n    <span class=\"n\">sensor_name</span><span class=\"o\">=</span><span class=\"s2\">&quot;run_status_sensor_to_invoke&quot;</span><span class=\"p\">,</span>\n    <span class=\"n\">dagster_instance</span><span class=\"o\">=</span><span class=\"n\">instance</span><span class=\"p\">,</span>\n    <span class=\"n\">dagster_run</span><span class=\"o\">=</span><span class=\"n\">dagster_run</span><span class=\"p\">,</span>\n    <span class=\"n\">dagster_event</span><span class=\"o\">=</span><span class=\"n\">dagster_event</span><span class=\"p\">,</span>\n<span class=\"p\">)</span>\n<span class=\"n\">run_status_sensor_to_invoke</span><span class=\"p\">(</span><span class=\"n\">context</span><span class=\"p\">)</span>\n</pre></div>\n</div>\n</dd></dl>\n\n<dl class=\"py function\">\n<dt id=\"dagster.run_status_sensor\">\n<code class=\"sig-prename descclassname\"><span class=\"pre\">&#64;</span></code><code class=\"sig-prename descclassname\"><span class=\"pre\">dagster.</span></code><code class=\"sig-name descname\"><span class=\"pre\">run_status_sensor</span></code><span class=\"sig-paren\">(</span><em class=\"sig-param\"><span class=\"pre\">pipeline_run_status</span></em>, <em class=\"sig-param\"><span class=\"pre\">pipeline_selection=None</span></em>, <em class=\"sig-param\"><span class=\"pre\">name=None</span></em>, <em class=\"sig-param\"><span class=\"pre\">minimum_interval_seconds=None</span></em>, <em class=\"sig-param\"><span class=\"pre\">description=None</span></em>, <em class=\"sig-param\"><span class=\"pre\">job_selection=None</span></em>, <em class=\"sig-param\"><span class=\"pre\">default_status=&lt;DefaultSensorStatus.STOPPED:</span> <span class=\"pre\">'STOPPED'&gt;</span></em><span class=\"sig-paren\">)</span><a class=\"reference internal\" href=\"../../../../_modules/dagster/core/definitions/run_status_sensor_definition#run_status_sensor\"><span class=\"viewcode-link\"><span class=\"pre\">[source]</span></span></a><a class=\"headerlink\" href=\"#dagster.run_status_sensor\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Creates a sensor that reacts to a given status of pipeline execution, where the decorated\nfunction will be run when a pipeline is at the given status.</p>\n<p>Takes a <a class=\"reference internal\" href=\"#dagster.RunStatusSensorContext\" title=\"dagster.RunStatusSensorContext\"><code class=\"xref py py-class docutils literal notranslate\"><span class=\"pre\">RunStatusSensorContext</span></code></a>.</p>\n<dl class=\"field-list simple\">\n<dt class=\"field-odd\">Parameters</dt>\n<dd class=\"field-odd\"><ul class=\"simple\">\n<li><p><strong>pipeline_run_status</strong> (<em>PipelineRunStatus</em>) \u2013 The status of pipeline execution which will be\nmonitored by the sensor.</p></li>\n<li><p><strong>pipeline_selection</strong> (<em>Optional</em><em>[</em><em>List</em><em>[</em><a class=\"reference external\" href=\"https://docs.python.org/3/library/stdtypes.html#str\" title=\"(in Python v3.8)\"><em>str</em></a><em>]</em><em>]</em>) \u2013 Names of the pipelines that will be monitored by\nthis sensor. Defaults to None, which means the alert will be sent when any pipeline in\nthe repository fails.</p></li>\n<li><p><strong>name</strong> (<em>Optional</em><em>[</em><a class=\"reference external\" href=\"https://docs.python.org/3/library/stdtypes.html#str\" title=\"(in Python v3.8)\"><em>str</em></a><em>]</em>) \u2013 The name of the sensor. Defaults to the name of the decorated function.</p></li>\n<li><p><strong>minimum_interval_seconds</strong> (<em>Optional</em><em>[</em><a class=\"reference external\" href=\"https://docs.python.org/3/library/functions.html#int\" title=\"(in Python v3.8)\"><em>int</em></a><em>]</em>) \u2013 The minimum number of seconds that will elapse\nbetween sensor evaluations.</p></li>\n<li><p><strong>description</strong> (<em>Optional</em><em>[</em><a class=\"reference external\" href=\"https://docs.python.org/3/library/stdtypes.html#str\" title=\"(in Python v3.8)\"><em>str</em></a><em>]</em>) \u2013 A human-readable description of the sensor.</p></li>\n<li><p><strong>job_selection</strong> (<em>Optional</em><em>[</em><em>List</em><em>[</em><em>Union</em><em>[</em><a class=\"reference internal\" href=\"pipeline#dagster.PipelineDefinition\" title=\"dagster.PipelineDefinition\"><em>PipelineDefinition</em></a><em>, </em><a class=\"reference internal\" href=\"graphs#dagster.GraphDefinition\" title=\"dagster.GraphDefinition\"><em>GraphDefinition</em></a><em>]</em><em>]</em><em>]</em>) \u2013 Jobs that will\nbe monitored by this sensor. Defaults to None, which means the alert will be sent when\nany job in the repository fails.</p></li>\n<li><p><strong>default_status</strong> (<em>DefaultSensorStatus</em>) \u2013 Whether the sensor starts as running or not. The default\nstatus can be overridden from Dagit or via the GraphQL API.</p></li>\n</ul>\n</dd>\n</dl>\n</dd></dl>\n\n<dl class=\"py function\">\n<dt id=\"dagster.run_failure_sensor\">\n<code class=\"sig-prename descclassname\"><span class=\"pre\">&#64;</span></code><code class=\"sig-prename descclassname\"><span class=\"pre\">dagster.</span></code><code class=\"sig-name descname\"><span class=\"pre\">run_failure_sensor</span></code><span class=\"sig-paren\">(</span><em class=\"sig-param\"><span class=\"pre\">name=None</span></em>, <em class=\"sig-param\"><span class=\"pre\">minimum_interval_seconds=None</span></em>, <em class=\"sig-param\"><span class=\"pre\">description=None</span></em>, <em class=\"sig-param\"><span class=\"pre\">job_selection=None</span></em>, <em class=\"sig-param\"><span class=\"pre\">pipeline_selection=None</span></em>, <em class=\"sig-param\"><span class=\"pre\">default_status=&lt;DefaultSensorStatus.STOPPED:</span> <span class=\"pre\">'STOPPED'&gt;</span></em><span class=\"sig-paren\">)</span><a class=\"reference internal\" href=\"../../../../_modules/dagster/core/definitions/run_status_sensor_definition#run_failure_sensor\"><span class=\"viewcode-link\"><span class=\"pre\">[source]</span></span></a><a class=\"headerlink\" href=\"#dagster.run_failure_sensor\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Creates a sensor that reacts to job failure events, where the decorated function will be\nrun when a run fails.</p>\n<p>Takes a <a class=\"reference internal\" href=\"#dagster.RunFailureSensorContext\" title=\"dagster.RunFailureSensorContext\"><code class=\"xref py py-class docutils literal notranslate\"><span class=\"pre\">RunFailureSensorContext</span></code></a>.</p>\n<dl class=\"field-list simple\">\n<dt class=\"field-odd\">Parameters</dt>\n<dd class=\"field-odd\"><ul class=\"simple\">\n<li><p><strong>name</strong> (<em>Optional</em><em>[</em><a class=\"reference external\" href=\"https://docs.python.org/3/library/stdtypes.html#str\" title=\"(in Python v3.8)\"><em>str</em></a><em>]</em>) \u2013 The name of the job failure sensor. Defaults to the name of the\ndecorated function.</p></li>\n<li><p><strong>minimum_interval_seconds</strong> (<em>Optional</em><em>[</em><a class=\"reference external\" href=\"https://docs.python.org/3/library/functions.html#int\" title=\"(in Python v3.8)\"><em>int</em></a><em>]</em>) \u2013 The minimum number of seconds that will elapse\nbetween sensor evaluations.</p></li>\n<li><p><strong>description</strong> (<em>Optional</em><em>[</em><a class=\"reference external\" href=\"https://docs.python.org/3/library/stdtypes.html#str\" title=\"(in Python v3.8)\"><em>str</em></a><em>]</em>) \u2013 A human-readable description of the sensor.</p></li>\n<li><p><strong>job_selection</strong> (<em>Optional</em><em>[</em><em>List</em><em>[</em><em>Union</em><em>[</em><a class=\"reference internal\" href=\"jobs#dagster.JobDefinition\" title=\"dagster.JobDefinition\"><em>JobDefinition</em></a><em>, </em><a class=\"reference internal\" href=\"graphs#dagster.GraphDefinition\" title=\"dagster.GraphDefinition\"><em>GraphDefinition</em></a><em>]</em><em>]</em><em>]</em>) \u2013 The jobs that\nwill be monitored by this failure sensor. Defaults to None, which means the alert will\nbe sent when any job in the repository fails.</p></li>\n<li><p><strong>pipeline_selection</strong> (<em>Optional</em><em>[</em><em>List</em><em>[</em><a class=\"reference external\" href=\"https://docs.python.org/3/library/stdtypes.html#str\" title=\"(in Python v3.8)\"><em>str</em></a><em>]</em><em>]</em>) \u2013 (legacy) Names of the pipelines that will be monitored by\nthis sensor. Defaults to None, which means the alert will be sent when any pipeline in\nthe repository fails.</p></li>\n<li><p><strong>default_status</strong> (<em>DefaultSensorStatus</em>) \u2013 Whether the sensor starts as running or not. The default\nstatus can be overridden from Dagit or via the GraphQL API.</p></li>\n</ul>\n</dd>\n</dl>\n</dd></dl>\n\n<div class=\"section\" id=\"legacy-apis\">\n<h2>Legacy APIs<a class=\"headerlink\" href=\"#legacy-apis\" title=\"Permalink to this headline\">\u00b6</a></h2>\n<dl class=\"py function\">\n<dt id=\"dagster.pipeline_failure_sensor\">\n<code class=\"sig-prename descclassname\"><span class=\"pre\">&#64;</span></code><code class=\"sig-prename descclassname\"><span class=\"pre\">dagster.</span></code><code class=\"sig-name descname\"><span class=\"pre\">pipeline_failure_sensor</span></code><span class=\"sig-paren\">(</span><em class=\"sig-param\"><span class=\"pre\">name=None</span></em>, <em class=\"sig-param\"><span class=\"pre\">minimum_interval_seconds=None</span></em>, <em class=\"sig-param\"><span class=\"pre\">description=None</span></em>, <em class=\"sig-param\"><span class=\"pre\">pipeline_selection=None</span></em>, <em class=\"sig-param\"><span class=\"pre\">default_status=&lt;DefaultSensorStatus.STOPPED:</span> <span class=\"pre\">'STOPPED'&gt;</span></em><span class=\"sig-paren\">)</span><a class=\"reference internal\" href=\"../../../../_modules/dagster/core/definitions/run_status_sensor_definition#pipeline_failure_sensor\"><span class=\"viewcode-link\"><span class=\"pre\">[source]</span></span></a><a class=\"headerlink\" href=\"#dagster.pipeline_failure_sensor\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Creates a sensor that reacts to pipeline failure events, where the decorated function will be\nrun when a pipeline run fails.</p>\n<p>Takes a <a class=\"reference internal\" href=\"#dagster.PipelineFailureSensorContext\" title=\"dagster.PipelineFailureSensorContext\"><code class=\"xref py py-class docutils literal notranslate\"><span class=\"pre\">PipelineFailureSensorContext</span></code></a>.</p>\n<dl class=\"field-list simple\">\n<dt class=\"field-odd\">Parameters</dt>\n<dd class=\"field-odd\"><ul class=\"simple\">\n<li><p><strong>name</strong> (<em>Optional</em><em>[</em><a class=\"reference external\" href=\"https://docs.python.org/3/library/stdtypes.html#str\" title=\"(in Python v3.8)\"><em>str</em></a><em>]</em>) \u2013 The name of the pipeline failure sensor. Defaults to the name of the\ndecorated function.</p></li>\n<li><p><strong>minimum_interval_seconds</strong> (<em>Optional</em><em>[</em><a class=\"reference external\" href=\"https://docs.python.org/3/library/functions.html#int\" title=\"(in Python v3.8)\"><em>int</em></a><em>]</em>) \u2013 The minimum number of seconds that will elapse\nbetween sensor evaluations.</p></li>\n<li><p><strong>description</strong> (<em>Optional</em><em>[</em><a class=\"reference external\" href=\"https://docs.python.org/3/library/stdtypes.html#str\" title=\"(in Python v3.8)\"><em>str</em></a><em>]</em>) \u2013 A human-readable description of the sensor.</p></li>\n<li><p><strong>pipeline_selection</strong> (<em>Optional</em><em>[</em><em>List</em><em>[</em><a class=\"reference external\" href=\"https://docs.python.org/3/library/stdtypes.html#str\" title=\"(in Python v3.8)\"><em>str</em></a><em>]</em><em>]</em>) \u2013 Names of the pipelines that will be monitored by\nthis failure sensor. Defaults to None, which means the alert will be sent when any\npipeline in the repository fails.</p></li>\n<li><p><strong>default_status</strong> (<em>DefaultSensorStatus</em>) \u2013 Whether the sensor starts as running or not. The default\nstatus can be overridden from Dagit or via the GraphQL API.</p></li>\n</ul>\n</dd>\n</dl>\n</dd></dl>\n\n<dl class=\"py class\">\n<dt id=\"dagster.PipelineFailureSensorContext\">\n<em class=\"property\"><span class=\"pre\">class</span> </em><code class=\"sig-prename descclassname\"><span class=\"pre\">dagster.</span></code><code class=\"sig-name descname\"><span class=\"pre\">PipelineFailureSensorContext</span></code><span class=\"sig-paren\">(</span><em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">sensor_name</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">dagster_run</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">dagster_event</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">instance</span></span></em><span class=\"sig-paren\">)</span><a class=\"reference internal\" href=\"../../../../_modules/dagster/core/definitions/run_status_sensor_definition#PipelineFailureSensorContext\"><span class=\"viewcode-link\"><span class=\"pre\">[source]</span></span></a><a class=\"headerlink\" href=\"#dagster.PipelineFailureSensorContext\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>The <code class=\"docutils literal notranslate\"><span class=\"pre\">context</span></code> object available to a decorated function of <code class=\"docutils literal notranslate\"><span class=\"pre\">pipeline_failure_sensor</span></code>.</p>\n<dl class=\"py attribute\">\n<dt id=\"dagster.PipelineFailureSensorContext.sensor_name\">\n<code class=\"sig-name descname\"><span class=\"pre\">sensor_name</span></code><a class=\"headerlink\" href=\"#dagster.PipelineFailureSensorContext.sensor_name\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>the name of the sensor.</p>\n<dl class=\"field-list simple\">\n<dt class=\"field-odd\">Type</dt>\n<dd class=\"field-odd\"><p><a class=\"reference external\" href=\"https://docs.python.org/3/library/stdtypes.html#str\" title=\"(in Python v3.8)\">str</a></p>\n</dd>\n</dl>\n</dd></dl>\n\n<dl class=\"py attribute\">\n<dt id=\"dagster.PipelineFailureSensorContext.pipeline_run\">\n<code class=\"sig-name descname\"><span class=\"pre\">pipeline_run</span></code><a class=\"headerlink\" href=\"#dagster.PipelineFailureSensorContext.pipeline_run\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>the failed pipeline run.</p>\n<dl class=\"field-list simple\">\n<dt class=\"field-odd\">Type</dt>\n<dd class=\"field-odd\"><p><a class=\"reference internal\" href=\"internals#dagster.PipelineRun\" title=\"dagster.PipelineRun\">PipelineRun</a></p>\n</dd>\n</dl>\n</dd></dl>\n\n<dl class=\"py attribute\">\n<dt id=\"dagster.PipelineFailureSensorContext.failure_event\">\n<code class=\"sig-name descname\"><span class=\"pre\">failure_event</span></code><a class=\"headerlink\" href=\"#dagster.PipelineFailureSensorContext.failure_event\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>the pipeline failure event.</p>\n<dl class=\"field-list simple\">\n<dt class=\"field-odd\">Type</dt>\n<dd class=\"field-odd\"><p><a class=\"reference internal\" href=\"execution#dagster.DagsterEvent\" title=\"dagster.DagsterEvent\">DagsterEvent</a></p>\n</dd>\n</dl>\n</dd></dl>\n\n</dd></dl>\n\n</div>\n</div>\n", "current_page_name": "sections/api/apidocs/schedules-sensors", "customsidebar": null, "display_toc": true, "meta": null, "metatags": "", "next": {"link": "../solids/", "title": "[Legacy] Solids"}, "page_source_suffix": ".rst", "parents": [], "prev": {"link": "../resources/", "title": "Resources"}, "rellinks": [["genindex", "General Index", "I", "index"], ["py-modindex", "Python Module Index", "", "modules"], ["sections/api/apidocs/solids", "[Legacy] Solids", "N", "next"], ["sections/api/apidocs/resources", "Resources", "P", "previous"]], "sidebars": ["globaltoc.html", "searchbox.html"], "sourcename": "sections/api/apidocs/schedules-sensors.rst.txt", "title": "Run Requests", "toc": "<ul>\n<li><a class=\"reference internal\" href=\"#\">Run Requests</a></li>\n<li><a class=\"reference internal\" href=\"#schedules\">Schedules</a></li>\n<li><a class=\"reference internal\" href=\"#partitioned-schedules\">Partitioned Schedules</a></li>\n<li><a class=\"reference internal\" href=\"#sensors\">Sensors</a><ul>\n<li><a class=\"reference internal\" href=\"#legacy-apis\">Legacy APIs</a></li>\n</ul>\n</li>\n</ul>\n"}, "solids": {"alabaster_version": "0.7.12", "body": "<div class=\"section\" id=\"legacy-solids\">\n<h1>[Legacy] Solids<a class=\"headerlink\" href=\"#legacy-solids\" title=\"Permalink to this headline\">\u00b6</a></h1>\n<p>As of Dagster 0.13.0, we recommend <cite>Ops</cite> as an alternative to <cite>Solids</cite>. They can generally be used\ninterchangeably.</p>\n<hr class=\"docutils\" />\n<div class=\"section\" id=\"defining-solids\">\n<h2>Defining solids<a class=\"headerlink\" href=\"#defining-solids\" title=\"Permalink to this headline\">\u00b6</a></h2>\n<dl class=\"py function\">\n<dt id=\"dagster.solid\">\n<code class=\"sig-prename descclassname\"><span class=\"pre\">&#64;</span></code><code class=\"sig-prename descclassname\"><span class=\"pre\">dagster.</span></code><code class=\"sig-name descname\"><span class=\"pre\">solid</span></code><span class=\"sig-paren\">(</span><em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">name</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">None</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">description</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">None</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">input_defs</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">None</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">output_defs</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">None</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">config_schema</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">None</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">required_resource_keys</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">None</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">tags</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">None</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">version</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">None</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">retry_policy</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">None</span></span></em><span class=\"sig-paren\">)</span><a class=\"reference internal\" href=\"../../../../_modules/dagster/core/definitions/decorators/solid_decorator#solid\"><span class=\"viewcode-link\"><span class=\"pre\">[source]</span></span></a><a class=\"headerlink\" href=\"#dagster.solid\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Create a solid with the specified parameters from the decorated function.</p>\n<p>This shortcut simplifies the core <a class=\"reference internal\" href=\"#dagster.SolidDefinition\" title=\"dagster.SolidDefinition\"><code class=\"xref py py-class docutils literal notranslate\"><span class=\"pre\">SolidDefinition</span></code></a> API by exploding arguments into\nkwargs of the decorated compute function and omitting additional parameters when they are not\nneeded.</p>\n<p>Input and output definitions will be inferred from the type signature of the decorated function\nif not explicitly provided.</p>\n<p>The decorated function will be used as the solid\u2019s compute function. The signature of the\ndecorated function is more flexible than that of the <code class=\"docutils literal notranslate\"><span class=\"pre\">compute_fn</span></code> in the core API; it may:</p>\n<ol class=\"arabic simple\">\n<li><p>Return a value. This value will be wrapped in an <a class=\"reference internal\" href=\"ops#dagster.Output\" title=\"dagster.Output\"><code class=\"xref py py-class docutils literal notranslate\"><span class=\"pre\">Output</span></code></a> and yielded by the compute function.</p></li>\n<li><p>Return an <a class=\"reference internal\" href=\"ops#dagster.Output\" title=\"dagster.Output\"><code class=\"xref py py-class docutils literal notranslate\"><span class=\"pre\">Output</span></code></a>. This output will be yielded by the compute function.</p></li>\n<li><p>Yield <a class=\"reference internal\" href=\"ops#dagster.Output\" title=\"dagster.Output\"><code class=\"xref py py-class docutils literal notranslate\"><span class=\"pre\">Output</span></code></a> or other <a class=\"reference internal\" href=\"ops#events\"><span class=\"std std-ref\">event objects</span></a>. Same as default compute behavior.</p></li>\n</ol>\n<p>Note that options 1) and 2) are incompatible with yielding other events \u2013 if you would like\nto decorate a function that yields events, it must also wrap its eventual output in an\n<a class=\"reference internal\" href=\"ops#dagster.Output\" title=\"dagster.Output\"><code class=\"xref py py-class docutils literal notranslate\"><span class=\"pre\">Output</span></code></a> and yield it.</p>\n<p>&#64;solid supports <code class=\"docutils literal notranslate\"><span class=\"pre\">async</span> <span class=\"pre\">def</span></code> functions as well, including async generators when yielding multiple\nevents or outputs. Note that async solids will generally be run on their own unless using a custom\n<a class=\"reference internal\" href=\"internals#dagster.Executor\" title=\"dagster.Executor\"><code class=\"xref py py-class docutils literal notranslate\"><span class=\"pre\">Executor</span></code></a> implementation that supports running them together.</p>\n<dl class=\"field-list simple\">\n<dt class=\"field-odd\">Parameters</dt>\n<dd class=\"field-odd\"><ul class=\"simple\">\n<li><p><strong>name</strong> (<em>Optional</em><em>[</em><a class=\"reference external\" href=\"https://docs.python.org/3/library/stdtypes.html#str\" title=\"(in Python v3.8)\"><em>str</em></a><em>]</em>) \u2013 Name of solid. Must be unique within any <a class=\"reference internal\" href=\"pipeline#dagster.PipelineDefinition\" title=\"dagster.PipelineDefinition\"><code class=\"xref py py-class docutils literal notranslate\"><span class=\"pre\">PipelineDefinition</span></code></a>\nusing the solid.</p></li>\n<li><p><strong>description</strong> (<em>Optional</em><em>[</em><a class=\"reference external\" href=\"https://docs.python.org/3/library/stdtypes.html#str\" title=\"(in Python v3.8)\"><em>str</em></a><em>]</em>) \u2013 Human-readable description of this solid. If not provided, and\nthe decorated function has docstring, that docstring will be used as the description.</p></li>\n<li><p><strong>input_defs</strong> (<em>Optional</em><em>[</em><em>List</em><em>[</em><a class=\"reference internal\" href=\"#dagster.InputDefinition\" title=\"dagster.InputDefinition\"><em>InputDefinition</em></a><em>]</em><em>]</em>) \u2013 Information about the inputs to the solid. Information provided here will be combined\nwith what can be inferred from the function signature, with these explicit InputDefinitions\ntaking precedence.</p></li>\n<li><p><strong>output_defs</strong> (<em>Optional</em><em>[</em><em>List</em><em>[</em><a class=\"reference internal\" href=\"#dagster.OutputDefinition\" title=\"dagster.OutputDefinition\"><em>OutputDefinition</em></a><em>]</em><em>]</em>) \u2013 Information about the solids outputs. Information provided here will be combined with\nwhat can be inferred from the return type signature if there is only one OutputDefinition\nand the function does not use yield.</p></li>\n<li><p><strong>config_schema</strong> (<em>Optional</em><em>[</em><a class=\"reference internal\" href=\"config#dagster.ConfigSchema\" title=\"dagster.ConfigSchema\"><em>ConfigSchema</em></a>) \u2013 The schema for the config. If set, Dagster will check\nthat config provided for the solid matches this schema and fail if it does not. If not\nset, Dagster will accept any config provided for the solid.</p></li>\n<li><p><strong>required_resource_keys</strong> (<em>Optional</em><em>[</em><em>Set</em><em>[</em><a class=\"reference external\" href=\"https://docs.python.org/3/library/stdtypes.html#str\" title=\"(in Python v3.8)\"><em>str</em></a><em>]</em><em>]</em>) \u2013 Set of resource handles required by this solid.</p></li>\n<li><p><strong>tags</strong> (<em>Optional</em><em>[</em><em>Dict</em><em>[</em><a class=\"reference external\" href=\"https://docs.python.org/3/library/stdtypes.html#str\" title=\"(in Python v3.8)\"><em>str</em></a><em>, </em><em>Any</em><em>]</em><em>]</em>) \u2013 Arbitrary metadata for the solid. Frameworks may\nexpect and require certain metadata to be attached to a solid. Values that are not strings\nwill be json encoded and must meet the criteria that <cite>json.loads(json.dumps(value)) == value</cite>.</p></li>\n<li><p><strong>version</strong> (<em>Optional</em><em>[</em><a class=\"reference external\" href=\"https://docs.python.org/3/library/stdtypes.html#str\" title=\"(in Python v3.8)\"><em>str</em></a><em>]</em>) \u2013 (Experimental) The version of the solid\u2019s compute_fn. Two solids should have\nthe same version if and only if they deterministically produce the same outputs when\nprovided the same inputs.</p></li>\n<li><p><strong>retry_policy</strong> (<em>Optional</em><em>[</em><a class=\"reference internal\" href=\"ops#dagster.RetryPolicy\" title=\"dagster.RetryPolicy\"><em>RetryPolicy</em></a><em>]</em>) \u2013 The retry policy for this solid.</p></li>\n</ul>\n</dd>\n</dl>\n<p class=\"rubric\">Examples</p>\n<div class=\"highlight-python notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"nd\">@solid</span>\n<span class=\"k\">def</span> <span class=\"nf\">hello_world</span><span class=\"p\">():</span>\n    <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s1\">&#39;hello&#39;</span><span class=\"p\">)</span>\n\n<span class=\"nd\">@solid</span>\n<span class=\"k\">def</span> <span class=\"nf\">hello_world</span><span class=\"p\">():</span>\n    <span class=\"k\">return</span> <span class=\"p\">{</span><span class=\"s1\">&#39;foo&#39;</span><span class=\"p\">:</span> <span class=\"s1\">&#39;bar&#39;</span><span class=\"p\">}</span>\n\n<span class=\"nd\">@solid</span>\n<span class=\"k\">def</span> <span class=\"nf\">hello_world</span><span class=\"p\">():</span>\n    <span class=\"k\">return</span> <span class=\"n\">Output</span><span class=\"p\">(</span><span class=\"n\">value</span><span class=\"o\">=</span><span class=\"p\">{</span><span class=\"s1\">&#39;foo&#39;</span><span class=\"p\">:</span> <span class=\"s1\">&#39;bar&#39;</span><span class=\"p\">})</span>\n\n<span class=\"nd\">@solid</span>\n<span class=\"k\">def</span> <span class=\"nf\">hello_world</span><span class=\"p\">():</span>\n    <span class=\"k\">yield</span> <span class=\"n\">Output</span><span class=\"p\">(</span><span class=\"n\">value</span><span class=\"o\">=</span><span class=\"p\">{</span><span class=\"s1\">&#39;foo&#39;</span><span class=\"p\">:</span> <span class=\"s1\">&#39;bar&#39;</span><span class=\"p\">})</span>\n\n<span class=\"nd\">@solid</span>\n<span class=\"k\">def</span> <span class=\"nf\">hello_world</span><span class=\"p\">(</span><span class=\"n\">foo</span><span class=\"p\">):</span>\n    <span class=\"k\">return</span> <span class=\"n\">foo</span>\n\n<span class=\"nd\">@solid</span><span class=\"p\">(</span>\n    <span class=\"n\">input_defs</span><span class=\"o\">=</span><span class=\"p\">[</span><span class=\"n\">InputDefinition</span><span class=\"p\">(</span><span class=\"n\">name</span><span class=\"o\">=</span><span class=\"s2\">&quot;foo&quot;</span><span class=\"p\">,</span> <span class=\"nb\">str</span><span class=\"p\">)],</span>\n    <span class=\"n\">output_defs</span><span class=\"o\">=</span><span class=\"p\">[</span><span class=\"n\">OutputDefinition</span><span class=\"p\">(</span><span class=\"nb\">str</span><span class=\"p\">)]</span>\n<span class=\"p\">)</span>\n<span class=\"k\">def</span> <span class=\"nf\">hello_world</span><span class=\"p\">(</span><span class=\"n\">foo</span><span class=\"p\">):</span>\n    <span class=\"c1\"># explicitly type and name inputs and outputs</span>\n    <span class=\"k\">return</span> <span class=\"n\">foo</span>\n\n<span class=\"nd\">@solid</span>\n<span class=\"k\">def</span> <span class=\"nf\">hello_world</span><span class=\"p\">(</span><span class=\"n\">foo</span><span class=\"p\">:</span> <span class=\"nb\">str</span><span class=\"p\">)</span> <span class=\"o\">-&gt;</span> <span class=\"nb\">str</span><span class=\"p\">:</span>\n    <span class=\"c1\"># same as above inferred from signature</span>\n    <span class=\"k\">return</span> <span class=\"n\">foo</span>\n\n<span class=\"nd\">@solid</span>\n<span class=\"k\">def</span> <span class=\"nf\">hello_world</span><span class=\"p\">(</span><span class=\"n\">context</span><span class=\"p\">,</span> <span class=\"n\">foo</span><span class=\"p\">):</span>\n    <span class=\"n\">context</span><span class=\"o\">.</span><span class=\"n\">log</span><span class=\"o\">.</span><span class=\"n\">info</span><span class=\"p\">(</span><span class=\"s1\">&#39;log something&#39;</span><span class=\"p\">)</span>\n    <span class=\"k\">return</span> <span class=\"n\">foo</span>\n\n<span class=\"nd\">@solid</span><span class=\"p\">(</span>\n    <span class=\"n\">config_schema</span><span class=\"o\">=</span><span class=\"p\">{</span><span class=\"s1\">&#39;str_value&#39;</span> <span class=\"p\">:</span> <span class=\"n\">Field</span><span class=\"p\">(</span><span class=\"nb\">str</span><span class=\"p\">)}</span>\n<span class=\"p\">)</span>\n<span class=\"k\">def</span> <span class=\"nf\">hello_world</span><span class=\"p\">(</span><span class=\"n\">context</span><span class=\"p\">,</span> <span class=\"n\">foo</span><span class=\"p\">):</span>\n    <span class=\"c1\"># context.solid_config is a dictionary with &#39;str_value&#39; key</span>\n    <span class=\"k\">return</span> <span class=\"n\">foo</span> <span class=\"o\">+</span> <span class=\"n\">context</span><span class=\"o\">.</span><span class=\"n\">solid_config</span><span class=\"p\">[</span><span class=\"s1\">&#39;str_value&#39;</span><span class=\"p\">]</span>\n</pre></div>\n</div>\n</dd></dl>\n\n<dl class=\"py class\">\n<dt id=\"dagster.SolidDefinition\">\n<em class=\"property\"><span class=\"pre\">class</span> </em><code class=\"sig-prename descclassname\"><span class=\"pre\">dagster.</span></code><code class=\"sig-name descname\"><span class=\"pre\">SolidDefinition</span></code><span class=\"sig-paren\">(</span><em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">name</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">input_defs</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">compute_fn</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">output_defs</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">config_schema</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">None</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">description</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">None</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">tags</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">None</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">required_resource_keys</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">None</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">version</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">None</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">retry_policy</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">None</span></span></em><span class=\"sig-paren\">)</span><a class=\"reference internal\" href=\"../../../../_modules/dagster/core/definitions/solid_definition#SolidDefinition\"><span class=\"viewcode-link\"><span class=\"pre\">[source]</span></span></a><a class=\"headerlink\" href=\"#dagster.SolidDefinition\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>The definition of a Solid that performs a user-defined computation.</p>\n<p>For more details on what a solid is, refer to the\n<a class=\"reference external\" href=\"../../overview/solids-pipelines/solids\">Solid Overview</a> .</p>\n<p>End users should prefer the <a class=\"reference internal\" href=\"#dagster.solid\" title=\"dagster.solid\"><code class=\"xref py py-func docutils literal notranslate\"><span class=\"pre\">&#64;solid</span></code></a> and <code class=\"xref py py-func docutils literal notranslate\"><span class=\"pre\">&#64;lambda_solid</span></code>\ndecorators. SolidDefinition is generally intended to be used by framework authors.</p>\n<dl class=\"field-list simple\">\n<dt class=\"field-odd\">Parameters</dt>\n<dd class=\"field-odd\"><ul class=\"simple\">\n<li><p><strong>name</strong> (<a class=\"reference external\" href=\"https://docs.python.org/3/library/stdtypes.html#str\" title=\"(in Python v3.8)\"><em>str</em></a>) \u2013 Name of the solid. Must be unique within any <a class=\"reference internal\" href=\"pipeline#dagster.PipelineDefinition\" title=\"dagster.PipelineDefinition\"><code class=\"xref py py-class docutils literal notranslate\"><span class=\"pre\">PipelineDefinition</span></code></a>\nusing the solid.</p></li>\n<li><p><strong>input_defs</strong> (<em>List</em><em>[</em><a class=\"reference internal\" href=\"#dagster.InputDefinition\" title=\"dagster.InputDefinition\"><em>InputDefinition</em></a><em>]</em>) \u2013 Inputs of the solid.</p></li>\n<li><p><strong>compute_fn</strong> (<em>Callable</em>) \u2013 <p>The core of the solid, the function that does the actual\ncomputation. The signature of this function is determined by <code class=\"docutils literal notranslate\"><span class=\"pre\">input_defs</span></code>, and\noptionally, an injected first argument, <code class=\"docutils literal notranslate\"><span class=\"pre\">context</span></code>, a collection of information provided\nby the system.</p>\n<p>This function will be coerced into a generator or an async generator, which must yield\none <a class=\"reference internal\" href=\"ops#dagster.Output\" title=\"dagster.Output\"><code class=\"xref py py-class docutils literal notranslate\"><span class=\"pre\">Output</span></code></a> for each of the solid\u2019s <code class=\"docutils literal notranslate\"><span class=\"pre\">output_defs</span></code>, and additionally may\nyield other types of Dagster events, including <code class=\"xref py py-class docutils literal notranslate\"><span class=\"pre\">Materialization</span></code> and\n<a class=\"reference internal\" href=\"ops#dagster.ExpectationResult\" title=\"dagster.ExpectationResult\"><code class=\"xref py py-class docutils literal notranslate\"><span class=\"pre\">ExpectationResult</span></code></a>.</p>\n</p></li>\n<li><p><strong>output_defs</strong> (<em>List</em><em>[</em><a class=\"reference internal\" href=\"#dagster.OutputDefinition\" title=\"dagster.OutputDefinition\"><em>OutputDefinition</em></a><em>]</em>) \u2013 Outputs of the solid.</p></li>\n<li><p><strong>config_schema</strong> (<em>Optional</em><em>[</em><a class=\"reference internal\" href=\"config#dagster.ConfigSchema\" title=\"dagster.ConfigSchema\"><em>ConfigSchema</em></a>) \u2013 The schema for the config. If set, Dagster will check\nthat config provided for the solid matches this schema and fail if it does not. If not\nset, Dagster will accept any config provided for the solid.</p></li>\n<li><p><strong>description</strong> (<em>Optional</em><em>[</em><a class=\"reference external\" href=\"https://docs.python.org/3/library/stdtypes.html#str\" title=\"(in Python v3.8)\"><em>str</em></a><em>]</em>) \u2013 Human-readable description of the solid.</p></li>\n<li><p><strong>tags</strong> (<em>Optional</em><em>[</em><em>Dict</em><em>[</em><a class=\"reference external\" href=\"https://docs.python.org/3/library/stdtypes.html#str\" title=\"(in Python v3.8)\"><em>str</em></a><em>, </em><em>Any</em><em>]</em><em>]</em>) \u2013 Arbitrary metadata for the solid. Frameworks may\nexpect and require certain metadata to be attached to a solid. Users should generally\nnot set metadata directly. Values that are not strings will be json encoded and must meet\nthe criteria that <cite>json.loads(json.dumps(value)) == value</cite>.</p></li>\n<li><p><strong>required_resource_keys</strong> (<em>Optional</em><em>[</em><em>Set</em><em>[</em><a class=\"reference external\" href=\"https://docs.python.org/3/library/stdtypes.html#str\" title=\"(in Python v3.8)\"><em>str</em></a><em>]</em><em>]</em>) \u2013 Set of resources handles required by this\nsolid.</p></li>\n<li><p><strong>version</strong> (<em>Optional</em><em>[</em><a class=\"reference external\" href=\"https://docs.python.org/3/library/stdtypes.html#str\" title=\"(in Python v3.8)\"><em>str</em></a><em>]</em>) \u2013 (Experimental) The version of the solid\u2019s compute_fn. Two solids should have\nthe same version if and only if they deterministically produce the same outputs when\nprovided the same inputs.</p></li>\n<li><p><strong>retry_policy</strong> (<em>Optional</em><em>[</em><a class=\"reference internal\" href=\"ops#dagster.RetryPolicy\" title=\"dagster.RetryPolicy\"><em>RetryPolicy</em></a><em>]</em>) \u2013 The retry policy for this solid.</p></li>\n</ul>\n</dd>\n</dl>\n<p class=\"rubric\">Examples</p>\n<div class=\"highlight-python notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"k\">def</span> <span class=\"nf\">_add_one</span><span class=\"p\">(</span><span class=\"n\">_context</span><span class=\"p\">,</span> <span class=\"n\">inputs</span><span class=\"p\">):</span>\n    <span class=\"k\">yield</span> <span class=\"n\">Output</span><span class=\"p\">(</span><span class=\"n\">inputs</span><span class=\"p\">[</span><span class=\"s2\">&quot;num&quot;</span><span class=\"p\">]</span> <span class=\"o\">+</span> <span class=\"mi\">1</span><span class=\"p\">)</span>\n\n<span class=\"n\">SolidDefinition</span><span class=\"p\">(</span>\n    <span class=\"n\">name</span><span class=\"o\">=</span><span class=\"s2\">&quot;add_one&quot;</span><span class=\"p\">,</span>\n    <span class=\"n\">input_defs</span><span class=\"o\">=</span><span class=\"p\">[</span><span class=\"n\">InputDefinition</span><span class=\"p\">(</span><span class=\"s2\">&quot;num&quot;</span><span class=\"p\">,</span> <span class=\"n\">Int</span><span class=\"p\">)],</span>\n    <span class=\"n\">output_defs</span><span class=\"o\">=</span><span class=\"p\">[</span><span class=\"n\">OutputDefinition</span><span class=\"p\">(</span><span class=\"n\">Int</span><span class=\"p\">)],</span> <span class=\"c1\"># default name (&quot;result&quot;)</span>\n    <span class=\"n\">compute_fn</span><span class=\"o\">=</span><span class=\"n\">_add_one</span><span class=\"p\">,</span>\n<span class=\"p\">)</span>\n</pre></div>\n</div>\n<dl class=\"py method\">\n<dt id=\"dagster.SolidDefinition.configured\">\n<code class=\"sig-name descname\"><span class=\"pre\">configured</span></code><span class=\"sig-paren\">(</span><em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">config_or_config_fn</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">name</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">config_schema</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">None</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">description</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">None</span></span></em><span class=\"sig-paren\">)</span><a class=\"headerlink\" href=\"#dagster.SolidDefinition.configured\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Wraps this object in an object of the same type that provides configuration to the inner\nobject.</p>\n<dl class=\"field-list simple\">\n<dt class=\"field-odd\">Parameters</dt>\n<dd class=\"field-odd\"><ul class=\"simple\">\n<li><p><strong>config_or_config_fn</strong> (<em>Union</em><em>[</em><em>Any</em><em>, </em><em>Callable</em><em>[</em><em>[</em><em>Any</em><em>]</em><em>, </em><em>Any</em><em>]</em><em>]</em>) \u2013 Either (1) Run configuration\nthat fully satisfies this object\u2019s config schema or (2) A function that accepts run\nconfiguration and returns run configuration that fully satisfies this object\u2019s\nconfig schema.  In the latter case, config_schema must be specified.  When\npassing a function, it\u2019s easiest to use <a class=\"reference internal\" href=\"config#dagster.configured\" title=\"dagster.configured\"><code class=\"xref py py-func docutils literal notranslate\"><span class=\"pre\">configured()</span></code></a>.</p></li>\n<li><p><strong>name</strong> (<a class=\"reference external\" href=\"https://docs.python.org/3/library/stdtypes.html#str\" title=\"(in Python v3.8)\"><em>str</em></a>) \u2013 Name of the new definition. This is a required argument, as this definition\ntype has a name uniqueness constraint.</p></li>\n<li><p><strong>config_schema</strong> (<a class=\"reference internal\" href=\"config#dagster.ConfigSchema\" title=\"dagster.ConfigSchema\"><em>ConfigSchema</em></a>) \u2013 If config_or_config_fn is a function, the config schema\nthat its input must satisfy.</p></li>\n<li><p><strong>description</strong> (<em>Optional</em><em>[</em><a class=\"reference external\" href=\"https://docs.python.org/3/library/stdtypes.html#str\" title=\"(in Python v3.8)\"><em>str</em></a><em>]</em>) \u2013 Description of the new definition. If not specified,\ninherits the description of the definition being configured.</p></li>\n</ul>\n</dd>\n</dl>\n<p>Returns (ConfigurableDefinition): A configured version of this object.</p>\n</dd></dl>\n\n</dd></dl>\n\n</div>\n<hr class=\"docutils\" />\n<div class=\"section\" id=\"inputs-outputs\">\n<h2>Inputs &amp; outputs<a class=\"headerlink\" href=\"#inputs-outputs\" title=\"Permalink to this headline\">\u00b6</a></h2>\n<dl class=\"py class\">\n<dt id=\"dagster.InputDefinition\">\n<em class=\"property\"><span class=\"pre\">class</span> </em><code class=\"sig-prename descclassname\"><span class=\"pre\">dagster.</span></code><code class=\"sig-name descname\"><span class=\"pre\">InputDefinition</span></code><span class=\"sig-paren\">(</span><em class=\"sig-param\"><span class=\"pre\">name=None</span></em>, <em class=\"sig-param\"><span class=\"pre\">dagster_type=None</span></em>, <em class=\"sig-param\"><span class=\"pre\">description=None</span></em>, <em class=\"sig-param\"><span class=\"pre\">default_value=&lt;class</span> <span class=\"pre\">'dagster.core.definitions.utils.NoValueSentinel'&gt;</span></em>, <em class=\"sig-param\"><span class=\"pre\">root_manager_key=None</span></em>, <em class=\"sig-param\"><span class=\"pre\">metadata=None</span></em>, <em class=\"sig-param\"><span class=\"pre\">asset_key=None</span></em>, <em class=\"sig-param\"><span class=\"pre\">asset_partitions=None</span></em><span class=\"sig-paren\">)</span><a class=\"reference internal\" href=\"../../../../_modules/dagster/core/definitions/input#InputDefinition\"><span class=\"viewcode-link\"><span class=\"pre\">[source]</span></span></a><a class=\"headerlink\" href=\"#dagster.InputDefinition\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Defines an argument to a solid\u2019s compute function.</p>\n<p>Inputs may flow from previous solids\u2019 outputs, or be stubbed using config. They may optionally\nbe typed using the Dagster type system.</p>\n<dl class=\"field-list simple\">\n<dt class=\"field-odd\">Parameters</dt>\n<dd class=\"field-odd\"><ul class=\"simple\">\n<li><p><strong>name</strong> (<a class=\"reference external\" href=\"https://docs.python.org/3/library/stdtypes.html#str\" title=\"(in Python v3.8)\"><em>str</em></a>) \u2013 Name of the input.</p></li>\n<li><p><strong>dagster_type</strong> (<em>Optional</em><em>[</em><em>Union</em><em>[</em><em>Type</em><em>, </em><a class=\"reference internal\" href=\"types#dagster.DagsterType\" title=\"dagster.DagsterType\"><em>DagsterType</em></a><em>]</em><em>]</em><em>]</em>) \u2013 The type of this input.\nUsers should provide the Python type of the objects that they expect to be passed for\nthis input, or a <a class=\"reference internal\" href=\"types#dagster.DagsterType\" title=\"dagster.DagsterType\"><code class=\"xref py py-class docutils literal notranslate\"><span class=\"pre\">DagsterType</span></code></a> that defines a runtime check that they want\nto be run on this input. Defaults to <code class=\"xref py py-class docutils literal notranslate\"><span class=\"pre\">Any</span></code>.</p></li>\n<li><p><strong>description</strong> (<em>Optional</em><em>[</em><a class=\"reference external\" href=\"https://docs.python.org/3/library/stdtypes.html#str\" title=\"(in Python v3.8)\"><em>str</em></a><em>]</em>) \u2013 Human-readable description of the input.</p></li>\n<li><p><strong>default_value</strong> (<em>Optional</em><em>[</em><em>Any</em><em>]</em>) \u2013 The default value to use if no input is provided.</p></li>\n<li><p><strong>root_manager_key</strong> (<em>Optional</em><em>[</em><a class=\"reference external\" href=\"https://docs.python.org/3/library/stdtypes.html#str\" title=\"(in Python v3.8)\"><em>str</em></a><em>]</em>) \u2013 (Experimental) The resource key for the\n<a class=\"reference internal\" href=\"io-managers#dagster.RootInputManager\" title=\"dagster.RootInputManager\"><code class=\"xref py py-class docutils literal notranslate\"><span class=\"pre\">RootInputManager</span></code></a> used for loading this input when it is not connected to an\nupstream output.</p></li>\n<li><p><strong>metadata</strong> (<em>Optional</em><em>[</em><em>Dict</em><em>[</em><a class=\"reference external\" href=\"https://docs.python.org/3/library/stdtypes.html#str\" title=\"(in Python v3.8)\"><em>str</em></a><em>, </em><em>Any</em><em>]</em><em>]</em>) \u2013 A dict of metadata for the input.</p></li>\n<li><p><strong>asset_key</strong> (<em>Optional</em><em>[</em><em>Union</em><em>[</em><a class=\"reference internal\" href=\"ops#dagster.AssetKey\" title=\"dagster.AssetKey\"><em>AssetKey</em></a><em>, </em><em>InputContext -&gt; AssetKey</em><em>]</em><em>]</em>) \u2013 (Experimental) An AssetKey\n(or function that produces an AssetKey from the InputContext) which should be associated\nwith this InputDefinition. Used for tracking lineage information through Dagster.</p></li>\n<li><p><strong>asset_partitions</strong> (<em>Optional</em><em>[</em><em>Union</em><em>[</em><em>Set</em><em>[</em><a class=\"reference external\" href=\"https://docs.python.org/3/library/stdtypes.html#str\" title=\"(in Python v3.8)\"><em>str</em></a><em>]</em><em>, </em><em>InputContext -&gt; Set</em><em>[</em><a class=\"reference external\" href=\"https://docs.python.org/3/library/stdtypes.html#str\" title=\"(in Python v3.8)\"><em>str</em></a><em>]</em><em>]</em><em>]</em>) \u2013 (Experimental) A\nset of partitions of the given asset_key (or a function that produces this list of\npartitions from the InputContext) which should be associated with this InputDefinition.</p></li>\n</ul>\n</dd>\n</dl>\n</dd></dl>\n\n<dl class=\"py class\">\n<dt id=\"dagster.OutputDefinition\">\n<em class=\"property\"><span class=\"pre\">class</span> </em><code class=\"sig-prename descclassname\"><span class=\"pre\">dagster.</span></code><code class=\"sig-name descname\"><span class=\"pre\">OutputDefinition</span></code><span class=\"sig-paren\">(</span><em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">dagster_type</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">None</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">name</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">None</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">description</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">None</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">is_required</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">True</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">io_manager_key</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">None</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">metadata</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">None</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">asset_key</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">None</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">asset_partitions</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">None</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">asset_partitions_def</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">None</span></span></em><span class=\"sig-paren\">)</span><a class=\"reference internal\" href=\"../../../../_modules/dagster/core/definitions/output#OutputDefinition\"><span class=\"viewcode-link\"><span class=\"pre\">[source]</span></span></a><a class=\"headerlink\" href=\"#dagster.OutputDefinition\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Defines an output from a solid\u2019s compute function.</p>\n<p>Solids can have multiple outputs, in which case outputs cannot be anonymous.</p>\n<p>Many solids have only one output, in which case the user can provide a single output definition\nthat will be given the default name, \u201cresult\u201d.</p>\n<p>Output definitions may be typed using the Dagster type system.</p>\n<dl class=\"field-list simple\">\n<dt class=\"field-odd\">Parameters</dt>\n<dd class=\"field-odd\"><ul class=\"simple\">\n<li><p><strong>dagster_type</strong> (<em>Optional</em><em>[</em><em>Union</em><em>[</em><em>Type</em><em>, </em><a class=\"reference internal\" href=\"types#dagster.DagsterType\" title=\"dagster.DagsterType\"><em>DagsterType</em></a><em>]</em><em>]</em><em>]</em>) \u2013 The type of this output.\nUsers should provide the Python type of the objects that they expect the solid to yield\nfor this output, or a <a class=\"reference internal\" href=\"types#dagster.DagsterType\" title=\"dagster.DagsterType\"><code class=\"xref py py-class docutils literal notranslate\"><span class=\"pre\">DagsterType</span></code></a> that defines a runtime check that they\nwant to be run on this output. Defaults to <code class=\"xref py py-class docutils literal notranslate\"><span class=\"pre\">Any</span></code>.</p></li>\n<li><p><strong>name</strong> (<em>Optional</em><em>[</em><a class=\"reference external\" href=\"https://docs.python.org/3/library/stdtypes.html#str\" title=\"(in Python v3.8)\"><em>str</em></a><em>]</em>) \u2013 Name of the output. (default: \u201cresult\u201d)</p></li>\n<li><p><strong>description</strong> (<em>Optional</em><em>[</em><a class=\"reference external\" href=\"https://docs.python.org/3/library/stdtypes.html#str\" title=\"(in Python v3.8)\"><em>str</em></a><em>]</em>) \u2013 Human-readable description of the output.</p></li>\n<li><p><strong>is_required</strong> (<em>Optional</em><em>[</em><a class=\"reference external\" href=\"https://docs.python.org/3/library/functions.html#bool\" title=\"(in Python v3.8)\"><em>bool</em></a><em>]</em>) \u2013 Whether the presence of this field is required. (default: True)</p></li>\n<li><p><strong>io_manager_key</strong> (<em>Optional</em><em>[</em><a class=\"reference external\" href=\"https://docs.python.org/3/library/stdtypes.html#str\" title=\"(in Python v3.8)\"><em>str</em></a><em>]</em>) \u2013 The resource key of the IOManager used for storing this\noutput and loading it in downstream steps (default: \u201cio_manager\u201d).</p></li>\n<li><p><strong>metadata</strong> (<em>Optional</em><em>[</em><em>Dict</em><em>[</em><a class=\"reference external\" href=\"https://docs.python.org/3/library/stdtypes.html#str\" title=\"(in Python v3.8)\"><em>str</em></a><em>, </em><em>Any</em><em>]</em><em>]</em>) \u2013 A dict of the metadata for the output.\nFor example, users can provide a file path if the data object will be stored in a\nfilesystem, or provide information of a database table when it is going to load the data\ninto the table.</p></li>\n<li><p><strong>asset_key</strong> (<em>Optional</em><em>[</em><a class=\"reference internal\" href=\"ops#dagster.AssetKey\" title=\"dagster.AssetKey\"><em>AssetKey</em></a><em>]</em><em>]</em>) \u2013 (Experimental) An AssetKey which should be associated\nwith this OutputDefinition. Used for tracking lineage information through Dagster.</p></li>\n<li><p><strong>asset_partitions</strong> (<em>Optional</em><em>[</em><em>Union</em><em>[</em><em>Set</em><em>[</em><a class=\"reference external\" href=\"https://docs.python.org/3/library/stdtypes.html#str\" title=\"(in Python v3.8)\"><em>str</em></a><em>]</em><em>, </em><em>OutputContext -&gt; Set</em><em>[</em><a class=\"reference external\" href=\"https://docs.python.org/3/library/stdtypes.html#str\" title=\"(in Python v3.8)\"><em>str</em></a><em>]</em><em>]</em><em>]</em>) \u2013 (Experimental) A\nset of partitions of the given asset_key (or a function that produces this list of\npartitions from the OutputContext) which should be associated with this OutputDefinition.</p></li>\n</ul>\n</dd>\n</dl>\n</dd></dl>\n\n</div>\n<hr class=\"docutils\" />\n<div class=\"section\" id=\"retries\">\n<h2>Retries<a class=\"headerlink\" href=\"#retries\" title=\"Permalink to this headline\">\u00b6</a></h2>\n<dl class=\"py class\">\n<dt>\n<em class=\"property\"><span class=\"pre\">class</span> </em><code class=\"sig-prename descclassname\"><span class=\"pre\">dagster.</span></code><code class=\"sig-name descname\"><span class=\"pre\">RetryPolicy</span></code><span class=\"sig-paren\">(</span><em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">max_retries</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">1</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">delay</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">None</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">backoff</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">None</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">jitter</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">None</span></span></em><span class=\"sig-paren\">)</span><a class=\"reference internal\" href=\"../../../../_modules/dagster/core/definitions/policy#RetryPolicy\"><span class=\"viewcode-link\"><span class=\"pre\">[source]</span></span></a></dt>\n<dd><p>A declarative policy for when to request retries when an exception occurs during op execution.</p>\n<dl class=\"field-list simple\">\n<dt class=\"field-odd\">Parameters</dt>\n<dd class=\"field-odd\"><ul class=\"simple\">\n<li><p><strong>max_retries</strong> (<a class=\"reference external\" href=\"https://docs.python.org/3/library/functions.html#int\" title=\"(in Python v3.8)\"><em>int</em></a>) \u2013 The maximum number of retries to attempt. Defaults to 1.</p></li>\n<li><p><strong>delay</strong> (<em>Optional</em><em>[</em><em>Union</em><em>[</em><a class=\"reference external\" href=\"https://docs.python.org/3/library/functions.html#int\" title=\"(in Python v3.8)\"><em>int</em></a><em>,</em><a class=\"reference external\" href=\"https://docs.python.org/3/library/functions.html#float\" title=\"(in Python v3.8)\"><em>float</em></a><em>]</em><em>]</em>) \u2013 The time in seconds to wait between the retry being requested and the next attempt\nbeing started. This unit of time can be modulated as a function of attempt number\nwith backoff and randomly with jitter.</p></li>\n<li><p><strong>backoff</strong> (<em>Optional</em><em>[</em><a class=\"reference internal\" href=\"ops#dagster.Backoff\" title=\"dagster.Backoff\"><em>Backoff</em></a><em>]</em>) \u2013 A modifier for delay as a function of retry attempt number.</p></li>\n<li><p><strong>jitter</strong> (<em>Optional</em><em>[</em><a class=\"reference internal\" href=\"ops#dagster.Jitter\" title=\"dagster.Jitter\"><em>Jitter</em></a><em>]</em>) \u2013 A randomizing modifier for delay, applied after backoff calculation.</p></li>\n</ul>\n</dd>\n</dl>\n</dd></dl>\n\n<dl class=\"py class\">\n<dt>\n<em class=\"property\"><span class=\"pre\">class</span> </em><code class=\"sig-prename descclassname\"><span class=\"pre\">dagster.</span></code><code class=\"sig-name descname\"><span class=\"pre\">Backoff</span></code><span class=\"sig-paren\">(</span><em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">value</span></span></em><span class=\"sig-paren\">)</span><a class=\"reference internal\" href=\"../../../../_modules/dagster/core/definitions/policy#Backoff\"><span class=\"viewcode-link\"><span class=\"pre\">[source]</span></span></a></dt>\n<dd><p>A modifier for delay as a function of attempt number.</p>\n<p>LINEAR: <cite>attempt_num * delay</cite>\nEXPONENTIAL: <cite>((2 ^ attempt_num) - 1) * delay</cite></p>\n</dd></dl>\n\n<dl class=\"py class\">\n<dt>\n<em class=\"property\"><span class=\"pre\">class</span> </em><code class=\"sig-prename descclassname\"><span class=\"pre\">dagster.</span></code><code class=\"sig-name descname\"><span class=\"pre\">Jitter</span></code><span class=\"sig-paren\">(</span><em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">value</span></span></em><span class=\"sig-paren\">)</span><a class=\"reference internal\" href=\"../../../../_modules/dagster/core/definitions/policy#Jitter\"><span class=\"viewcode-link\"><span class=\"pre\">[source]</span></span></a></dt>\n<dd><p>A randomizing modifier for delay, applied after backoff calculation.</p>\n<p>FULL: between 0 and the calculated delay based on backoff: <cite>random() * backoff_delay</cite>\nPLUS_MINUS: +/- the delay: <cite>backoff_delay + ((2 * (random() * delay)) - delay)</cite></p>\n</dd></dl>\n\n</div>\n<div class=\"section\" id=\"execution\">\n<h2>Execution<a class=\"headerlink\" href=\"#execution\" title=\"Permalink to this headline\">\u00b6</a></h2>\n<dl class=\"py function\">\n<dt id=\"dagster.execute_solid\">\n<code class=\"sig-prename descclassname\"><span class=\"pre\">dagster.</span></code><code class=\"sig-name descname\"><span class=\"pre\">execute_solid</span></code><span class=\"sig-paren\">(</span><em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">solid_def</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">mode_def</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">None</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">input_values</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">None</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">tags</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">None</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">run_config</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">None</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">raise_on_error</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">True</span></span></em><span class=\"sig-paren\">)</span><a class=\"reference internal\" href=\"../../../../_modules/dagster/utils/test#execute_solid\"><span class=\"viewcode-link\"><span class=\"pre\">[source]</span></span></a><a class=\"headerlink\" href=\"#dagster.execute_solid\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Execute a single solid in an ephemeral pipeline.</p>\n<p>Intended to support unit tests. Input values may be passed directly, and no pipeline need be\nspecified \u2013 an ephemeral pipeline will be constructed.</p>\n<dl class=\"field-list simple\">\n<dt class=\"field-odd\">Parameters</dt>\n<dd class=\"field-odd\"><ul class=\"simple\">\n<li><p><strong>solid_def</strong> (<a class=\"reference internal\" href=\"#dagster.SolidDefinition\" title=\"dagster.SolidDefinition\"><em>SolidDefinition</em></a>) \u2013 The solid to execute.</p></li>\n<li><p><strong>mode_def</strong> (<em>Optional</em><em>[</em><a class=\"reference internal\" href=\"modes#dagster.ModeDefinition\" title=\"dagster.ModeDefinition\"><em>ModeDefinition</em></a><em>]</em>) \u2013 The mode within which to execute the solid. Use this\nif, e.g., custom resources, loggers, or executors are desired.</p></li>\n<li><p><strong>input_values</strong> (<em>Optional</em><em>[</em><em>Dict</em><em>[</em><a class=\"reference external\" href=\"https://docs.python.org/3/library/stdtypes.html#str\" title=\"(in Python v3.8)\"><em>str</em></a><em>, </em><em>Any</em><em>]</em><em>]</em>) \u2013 A dict of input names to input values, used to\npass inputs to the solid directly. You may also use the <code class=\"docutils literal notranslate\"><span class=\"pre\">run_config</span></code> to\nconfigure any inputs that are configurable.</p></li>\n<li><p><strong>tags</strong> (<em>Optional</em><em>[</em><em>Dict</em><em>[</em><a class=\"reference external\" href=\"https://docs.python.org/3/library/stdtypes.html#str\" title=\"(in Python v3.8)\"><em>str</em></a><em>, </em><em>Any</em><em>]</em><em>]</em>) \u2013 Arbitrary key-value pairs that will be added to pipeline\nlogs.</p></li>\n<li><p><strong>run_config</strong> (<em>Optional</em><em>[</em><a class=\"reference external\" href=\"https://docs.python.org/3/library/stdtypes.html#dict\" title=\"(in Python v3.8)\"><em>dict</em></a><em>]</em>) \u2013 The configuration that parameterized this\nexecution, as a dict.</p></li>\n<li><p><strong>raise_on_error</strong> (<em>Optional</em><em>[</em><a class=\"reference external\" href=\"https://docs.python.org/3/library/functions.html#bool\" title=\"(in Python v3.8)\"><em>bool</em></a><em>]</em>) \u2013 Whether or not to raise exceptions when they occur.\nDefaults to <code class=\"docutils literal notranslate\"><span class=\"pre\">True</span></code>, since this is the most useful behavior in test.</p></li>\n</ul>\n</dd>\n<dt class=\"field-even\">Returns</dt>\n<dd class=\"field-even\"><p>The result of executing the\nsolid.</p>\n</dd>\n<dt class=\"field-odd\">Return type</dt>\n<dd class=\"field-odd\"><p>Union[<a class=\"reference internal\" href=\"#dagster.CompositeSolidExecutionResult\" title=\"dagster.CompositeSolidExecutionResult\">CompositeSolidExecutionResult</a>, <a class=\"reference internal\" href=\"#dagster.SolidExecutionResult\" title=\"dagster.SolidExecutionResult\">SolidExecutionResult</a>]</p>\n</dd>\n</dl>\n</dd></dl>\n\n<dl class=\"py function\">\n<dt id=\"dagster.execute_solid_within_pipeline\">\n<code class=\"sig-prename descclassname\"><span class=\"pre\">dagster.</span></code><code class=\"sig-name descname\"><span class=\"pre\">execute_solid_within_pipeline</span></code><span class=\"sig-paren\">(</span><em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">pipeline_def</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">solid_name</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">inputs</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">None</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">run_config</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">None</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">mode</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">None</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">preset</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">None</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">tags</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">None</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">instance</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">None</span></span></em><span class=\"sig-paren\">)</span><a class=\"reference internal\" href=\"../../../../_modules/dagster/utils/test#execute_solid_within_pipeline\"><span class=\"viewcode-link\"><span class=\"pre\">[source]</span></span></a><a class=\"headerlink\" href=\"#dagster.execute_solid_within_pipeline\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Execute a single solid within an existing pipeline.</p>\n<p>Intended to support tests. Input values may be passed directly.</p>\n<dl class=\"field-list simple\">\n<dt class=\"field-odd\">Parameters</dt>\n<dd class=\"field-odd\"><ul class=\"simple\">\n<li><p><strong>pipeline_def</strong> (<a class=\"reference internal\" href=\"pipeline#dagster.PipelineDefinition\" title=\"dagster.PipelineDefinition\"><em>PipelineDefinition</em></a>) \u2013 The pipeline within which to execute the solid.</p></li>\n<li><p><strong>solid_name</strong> (<a class=\"reference external\" href=\"https://docs.python.org/3/library/stdtypes.html#str\" title=\"(in Python v3.8)\"><em>str</em></a>) \u2013 The name of the solid, or the aliased solid, to execute.</p></li>\n<li><p><strong>inputs</strong> (<em>Optional</em><em>[</em><em>Dict</em><em>[</em><a class=\"reference external\" href=\"https://docs.python.org/3/library/stdtypes.html#str\" title=\"(in Python v3.8)\"><em>str</em></a><em>, </em><em>Any</em><em>]</em><em>]</em>) \u2013 A dict of input names to input values, used to\npass input values to the solid directly. You may also use the <code class=\"docutils literal notranslate\"><span class=\"pre\">run_config</span></code> to\nconfigure any inputs that are configurable.</p></li>\n<li><p><strong>run_config</strong> (<em>Optional</em><em>[</em><a class=\"reference external\" href=\"https://docs.python.org/3/library/stdtypes.html#dict\" title=\"(in Python v3.8)\"><em>dict</em></a><em>]</em>) \u2013 The configuration that parameterized this\nexecution, as a dict.</p></li>\n<li><p><strong>mode</strong> (<em>Optional</em><em>[</em><a class=\"reference external\" href=\"https://docs.python.org/3/library/stdtypes.html#str\" title=\"(in Python v3.8)\"><em>str</em></a><em>]</em>) \u2013 The name of the pipeline mode to use. You may not set both <code class=\"docutils literal notranslate\"><span class=\"pre\">mode</span></code>\nand <code class=\"docutils literal notranslate\"><span class=\"pre\">preset</span></code>.</p></li>\n<li><p><strong>preset</strong> (<em>Optional</em><em>[</em><a class=\"reference external\" href=\"https://docs.python.org/3/library/stdtypes.html#str\" title=\"(in Python v3.8)\"><em>str</em></a><em>]</em>) \u2013 The name of the pipeline preset to use. You may not set both\n<code class=\"docutils literal notranslate\"><span class=\"pre\">mode</span></code> and <code class=\"docutils literal notranslate\"><span class=\"pre\">preset</span></code>.</p></li>\n<li><p><strong>tags</strong> (<em>Optional</em><em>[</em><em>Dict</em><em>[</em><a class=\"reference external\" href=\"https://docs.python.org/3/library/stdtypes.html#str\" title=\"(in Python v3.8)\"><em>str</em></a><em>, </em><em>Any</em><em>]</em><em>]</em>) \u2013 Arbitrary key-value pairs that will be added to pipeline\nlogs.</p></li>\n<li><p><strong>instance</strong> (<em>Optional</em><em>[</em><a class=\"reference internal\" href=\"internals#dagster.DagsterInstance\" title=\"dagster.DagsterInstance\"><em>DagsterInstance</em></a><em>]</em>) \u2013 The instance to execute against. If this is <code class=\"docutils literal notranslate\"><span class=\"pre\">None</span></code>,\nan ephemeral instance will be used, and no artifacts will be persisted from the run.</p></li>\n</ul>\n</dd>\n<dt class=\"field-even\">Returns</dt>\n<dd class=\"field-even\"><p>The result of executing the\nsolid.</p>\n</dd>\n<dt class=\"field-odd\">Return type</dt>\n<dd class=\"field-odd\"><p>Union[<a class=\"reference internal\" href=\"#dagster.CompositeSolidExecutionResult\" title=\"dagster.CompositeSolidExecutionResult\">CompositeSolidExecutionResult</a>, <a class=\"reference internal\" href=\"#dagster.SolidExecutionResult\" title=\"dagster.SolidExecutionResult\">SolidExecutionResult</a>]</p>\n</dd>\n</dl>\n</dd></dl>\n\n<dl class=\"py function\">\n<dt id=\"dagster.execute_solids_within_pipeline\">\n<code class=\"sig-prename descclassname\"><span class=\"pre\">dagster.</span></code><code class=\"sig-name descname\"><span class=\"pre\">execute_solids_within_pipeline</span></code><span class=\"sig-paren\">(</span><em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">pipeline_def</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">solid_names</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">inputs</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">None</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">run_config</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">None</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">mode</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">None</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">preset</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">None</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">tags</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">None</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">instance</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">None</span></span></em><span class=\"sig-paren\">)</span><a class=\"reference internal\" href=\"../../../../_modules/dagster/utils/test#execute_solids_within_pipeline\"><span class=\"viewcode-link\"><span class=\"pre\">[source]</span></span></a><a class=\"headerlink\" href=\"#dagster.execute_solids_within_pipeline\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Execute a set of solids within an existing pipeline.</p>\n<p>Intended to support tests. Input values may be passed directly.</p>\n<dl class=\"field-list simple\">\n<dt class=\"field-odd\">Parameters</dt>\n<dd class=\"field-odd\"><ul class=\"simple\">\n<li><p><strong>pipeline_def</strong> (<a class=\"reference internal\" href=\"pipeline#dagster.PipelineDefinition\" title=\"dagster.PipelineDefinition\"><em>PipelineDefinition</em></a>) \u2013 The pipeline within which to execute the solid.</p></li>\n<li><p><strong>solid_names</strong> (<em>FrozenSet</em><em>[</em><a class=\"reference external\" href=\"https://docs.python.org/3/library/stdtypes.html#str\" title=\"(in Python v3.8)\"><em>str</em></a><em>]</em>) \u2013 A set of the solid names, or the aliased solids, to execute.</p></li>\n<li><p><strong>inputs</strong> (<em>Optional</em><em>[</em><em>Dict</em><em>[</em><a class=\"reference external\" href=\"https://docs.python.org/3/library/stdtypes.html#str\" title=\"(in Python v3.8)\"><em>str</em></a><em>, </em><em>Dict</em><em>[</em><a class=\"reference external\" href=\"https://docs.python.org/3/library/stdtypes.html#str\" title=\"(in Python v3.8)\"><em>str</em></a><em>, </em><em>Any</em><em>]</em><em>]</em><em>]</em>) \u2013 A dict keyed on solid names, whose values are\ndicts of input names to input values, used to pass input values to the solids directly.\nYou may also use the <code class=\"docutils literal notranslate\"><span class=\"pre\">run_config</span></code> to configure any inputs that are configurable.</p></li>\n<li><p><strong>run_config</strong> (<em>Optional</em><em>[</em><a class=\"reference external\" href=\"https://docs.python.org/3/library/stdtypes.html#dict\" title=\"(in Python v3.8)\"><em>dict</em></a><em>]</em>) \u2013 The configuration that parameterized this\nexecution, as a dict.</p></li>\n<li><p><strong>mode</strong> (<em>Optional</em><em>[</em><a class=\"reference external\" href=\"https://docs.python.org/3/library/stdtypes.html#str\" title=\"(in Python v3.8)\"><em>str</em></a><em>]</em>) \u2013 The name of the pipeline mode to use. You may not set both <code class=\"docutils literal notranslate\"><span class=\"pre\">mode</span></code>\nand <code class=\"docutils literal notranslate\"><span class=\"pre\">preset</span></code>.</p></li>\n<li><p><strong>preset</strong> (<em>Optional</em><em>[</em><a class=\"reference external\" href=\"https://docs.python.org/3/library/stdtypes.html#str\" title=\"(in Python v3.8)\"><em>str</em></a><em>]</em>) \u2013 The name of the pipeline preset to use. You may not set both\n<code class=\"docutils literal notranslate\"><span class=\"pre\">mode</span></code> and <code class=\"docutils literal notranslate\"><span class=\"pre\">preset</span></code>.</p></li>\n<li><p><strong>tags</strong> (<em>Optional</em><em>[</em><em>Dict</em><em>[</em><a class=\"reference external\" href=\"https://docs.python.org/3/library/stdtypes.html#str\" title=\"(in Python v3.8)\"><em>str</em></a><em>, </em><em>Any</em><em>]</em><em>]</em>) \u2013 Arbitrary key-value pairs that will be added to pipeline\nlogs.</p></li>\n<li><p><strong>instance</strong> (<em>Optional</em><em>[</em><a class=\"reference internal\" href=\"internals#dagster.DagsterInstance\" title=\"dagster.DagsterInstance\"><em>DagsterInstance</em></a><em>]</em>) \u2013 The instance to execute against. If this is <code class=\"docutils literal notranslate\"><span class=\"pre\">None</span></code>,\nan ephemeral instance will be used, and no artifacts will be persisted from the run.</p></li>\n</ul>\n</dd>\n<dt class=\"field-even\">Returns</dt>\n<dd class=\"field-even\"><p>The results of\nexecuting the solids, keyed by solid name.</p>\n</dd>\n<dt class=\"field-odd\">Return type</dt>\n<dd class=\"field-odd\"><p>Dict[<a class=\"reference external\" href=\"https://docs.python.org/3/library/stdtypes.html#str\" title=\"(in Python v3.8)\">str</a>, Union[<a class=\"reference internal\" href=\"#dagster.CompositeSolidExecutionResult\" title=\"dagster.CompositeSolidExecutionResult\">CompositeSolidExecutionResult</a>, <a class=\"reference internal\" href=\"#dagster.SolidExecutionResult\" title=\"dagster.SolidExecutionResult\">SolidExecutionResult</a>]]</p>\n</dd>\n</dl>\n</dd></dl>\n\n<dl class=\"py class\">\n<dt id=\"dagster.SolidExecutionResult\">\n<em class=\"property\"><span class=\"pre\">class</span> </em><code class=\"sig-prename descclassname\"><span class=\"pre\">dagster.</span></code><code class=\"sig-name descname\"><span class=\"pre\">SolidExecutionResult</span></code><span class=\"sig-paren\">(</span><em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">solid</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">step_events_by_kind</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">reconstruct_context</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">pipeline_def</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">output_capture</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">None</span></span></em><span class=\"sig-paren\">)</span><a class=\"reference internal\" href=\"../../../../_modules/dagster/core/execution/results#SolidExecutionResult\"><span class=\"viewcode-link\"><span class=\"pre\">[source]</span></span></a><a class=\"headerlink\" href=\"#dagster.SolidExecutionResult\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Execution result for a leaf solid in a pipeline.</p>\n<p>Users should not instantiate this class.</p>\n<dl class=\"py method\">\n<dt id=\"dagster.SolidExecutionResult.compute_input_event_dict\">\n<em class=\"property\"><span class=\"pre\">property</span> </em><code class=\"sig-name descname\"><span class=\"pre\">compute_input_event_dict</span></code><a class=\"headerlink\" href=\"#dagster.SolidExecutionResult.compute_input_event_dict\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>All events of type <code class=\"docutils literal notranslate\"><span class=\"pre\">STEP_INPUT</span></code>, keyed by input name.</p>\n<dl class=\"field-list simple\">\n<dt class=\"field-odd\">Type</dt>\n<dd class=\"field-odd\"><p>Dict[<a class=\"reference external\" href=\"https://docs.python.org/3/library/stdtypes.html#str\" title=\"(in Python v3.8)\">str</a>, <a class=\"reference internal\" href=\"execution#dagster.DagsterEvent\" title=\"dagster.DagsterEvent\">DagsterEvent</a>]</p>\n</dd>\n</dl>\n</dd></dl>\n\n<dl class=\"py method\">\n<dt id=\"dagster.SolidExecutionResult.compute_output_events_dict\">\n<em class=\"property\"><span class=\"pre\">property</span> </em><code class=\"sig-name descname\"><span class=\"pre\">compute_output_events_dict</span></code><a class=\"headerlink\" href=\"#dagster.SolidExecutionResult.compute_output_events_dict\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>All events of type <code class=\"docutils literal notranslate\"><span class=\"pre\">STEP_OUTPUT</span></code>, keyed by output name</p>\n<dl class=\"field-list simple\">\n<dt class=\"field-odd\">Type</dt>\n<dd class=\"field-odd\"><p>Dict[<a class=\"reference external\" href=\"https://docs.python.org/3/library/stdtypes.html#str\" title=\"(in Python v3.8)\">str</a>, List[<a class=\"reference internal\" href=\"execution#dagster.DagsterEvent\" title=\"dagster.DagsterEvent\">DagsterEvent</a>]]</p>\n</dd>\n</dl>\n</dd></dl>\n\n<dl class=\"py method\">\n<dt id=\"dagster.SolidExecutionResult.compute_step_events\">\n<em class=\"property\"><span class=\"pre\">property</span> </em><code class=\"sig-name descname\"><span class=\"pre\">compute_step_events</span></code><a class=\"headerlink\" href=\"#dagster.SolidExecutionResult.compute_step_events\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>All events generated by execution of the solid compute function.</p>\n<dl class=\"field-list simple\">\n<dt class=\"field-odd\">Type</dt>\n<dd class=\"field-odd\"><p>List[<a class=\"reference internal\" href=\"execution#dagster.DagsterEvent\" title=\"dagster.DagsterEvent\">DagsterEvent</a>]</p>\n</dd>\n</dl>\n</dd></dl>\n\n<dl class=\"py method\">\n<dt id=\"dagster.SolidExecutionResult.compute_step_failure_event\">\n<em class=\"property\"><span class=\"pre\">property</span> </em><code class=\"sig-name descname\"><span class=\"pre\">compute_step_failure_event</span></code><a class=\"headerlink\" href=\"#dagster.SolidExecutionResult.compute_step_failure_event\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>The <code class=\"docutils literal notranslate\"><span class=\"pre\">STEP_FAILURE</span></code> event, throws if it did not fail.</p>\n<dl class=\"field-list simple\">\n<dt class=\"field-odd\">Type</dt>\n<dd class=\"field-odd\"><p><a class=\"reference internal\" href=\"execution#dagster.DagsterEvent\" title=\"dagster.DagsterEvent\">DagsterEvent</a></p>\n</dd>\n</dl>\n</dd></dl>\n\n<dl class=\"py method\">\n<dt id=\"dagster.SolidExecutionResult.expectation_events_during_compute\">\n<em class=\"property\"><span class=\"pre\">property</span> </em><code class=\"sig-name descname\"><span class=\"pre\">expectation_events_during_compute</span></code><a class=\"headerlink\" href=\"#dagster.SolidExecutionResult.expectation_events_during_compute\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>All events of type <code class=\"docutils literal notranslate\"><span class=\"pre\">STEP_EXPECTATION_RESULT</span></code>.</p>\n<dl class=\"field-list simple\">\n<dt class=\"field-odd\">Type</dt>\n<dd class=\"field-odd\"><p>List[<a class=\"reference internal\" href=\"execution#dagster.DagsterEvent\" title=\"dagster.DagsterEvent\">DagsterEvent</a>]</p>\n</dd>\n</dl>\n</dd></dl>\n\n<dl class=\"py method\">\n<dt id=\"dagster.SolidExecutionResult.expectation_results_during_compute\">\n<em class=\"property\"><span class=\"pre\">property</span> </em><code class=\"sig-name descname\"><span class=\"pre\">expectation_results_during_compute</span></code><a class=\"headerlink\" href=\"#dagster.SolidExecutionResult.expectation_results_during_compute\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>All expectation results yielded by the solid</p>\n<dl class=\"field-list simple\">\n<dt class=\"field-odd\">Type</dt>\n<dd class=\"field-odd\"><p>List[<a class=\"reference internal\" href=\"ops#dagster.ExpectationResult\" title=\"dagster.ExpectationResult\">ExpectationResult</a>]</p>\n</dd>\n</dl>\n</dd></dl>\n\n<dl class=\"py method\">\n<dt id=\"dagster.SolidExecutionResult.failure_data\">\n<em class=\"property\"><span class=\"pre\">property</span> </em><code class=\"sig-name descname\"><span class=\"pre\">failure_data</span></code><a class=\"headerlink\" href=\"#dagster.SolidExecutionResult.failure_data\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Any data corresponding to this step\u2019s failure, if it\nfailed.</p>\n<dl class=\"field-list simple\">\n<dt class=\"field-odd\">Type</dt>\n<dd class=\"field-odd\"><p>Union[<a class=\"reference external\" href=\"https://docs.python.org/3/library/constants.html#None\" title=\"(in Python v3.8)\">None</a>, StepFailureData]</p>\n</dd>\n</dl>\n</dd></dl>\n\n<dl class=\"py method\">\n<dt id=\"dagster.SolidExecutionResult.get_output_event_for_compute\">\n<code class=\"sig-name descname\"><span class=\"pre\">get_output_event_for_compute</span></code><span class=\"sig-paren\">(</span><em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">output_name</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">'result'</span></span></em><span class=\"sig-paren\">)</span><a class=\"reference internal\" href=\"../../../../_modules/dagster/core/execution/results#SolidExecutionResult.get_output_event_for_compute\"><span class=\"viewcode-link\"><span class=\"pre\">[source]</span></span></a><a class=\"headerlink\" href=\"#dagster.SolidExecutionResult.get_output_event_for_compute\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>The <code class=\"docutils literal notranslate\"><span class=\"pre\">STEP_OUTPUT</span></code> event for the given output name.</p>\n<p>Throws if not present.</p>\n<dl class=\"field-list simple\">\n<dt class=\"field-odd\">Parameters</dt>\n<dd class=\"field-odd\"><p><strong>output_name</strong> (<em>Optional</em><em>[</em><a class=\"reference external\" href=\"https://docs.python.org/3/library/stdtypes.html#str\" title=\"(in Python v3.8)\"><em>str</em></a><em>]</em>) \u2013 The name of the output. (default: \u2018result\u2019)</p>\n</dd>\n<dt class=\"field-even\">Returns</dt>\n<dd class=\"field-even\"><p>The corresponding event.</p>\n</dd>\n<dt class=\"field-odd\">Return type</dt>\n<dd class=\"field-odd\"><p><a class=\"reference internal\" href=\"execution#dagster.DagsterEvent\" title=\"dagster.DagsterEvent\">DagsterEvent</a></p>\n</dd>\n</dl>\n</dd></dl>\n\n<dl class=\"py method\">\n<dt id=\"dagster.SolidExecutionResult.get_output_events_for_compute\">\n<code class=\"sig-name descname\"><span class=\"pre\">get_output_events_for_compute</span></code><span class=\"sig-paren\">(</span><em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">output_name</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">'result'</span></span></em><span class=\"sig-paren\">)</span><a class=\"reference internal\" href=\"../../../../_modules/dagster/core/execution/results#SolidExecutionResult.get_output_events_for_compute\"><span class=\"viewcode-link\"><span class=\"pre\">[source]</span></span></a><a class=\"headerlink\" href=\"#dagster.SolidExecutionResult.get_output_events_for_compute\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>The <code class=\"docutils literal notranslate\"><span class=\"pre\">STEP_OUTPUT</span></code> event for the given output name.</p>\n<p>Throws if not present.</p>\n<dl class=\"field-list simple\">\n<dt class=\"field-odd\">Parameters</dt>\n<dd class=\"field-odd\"><p><strong>output_name</strong> (<em>Optional</em><em>[</em><a class=\"reference external\" href=\"https://docs.python.org/3/library/stdtypes.html#str\" title=\"(in Python v3.8)\"><em>str</em></a><em>]</em>) \u2013 The name of the output. (default: \u2018result\u2019)</p>\n</dd>\n<dt class=\"field-even\">Returns</dt>\n<dd class=\"field-even\"><p>The corresponding events.</p>\n</dd>\n<dt class=\"field-odd\">Return type</dt>\n<dd class=\"field-odd\"><p>List[<a class=\"reference internal\" href=\"execution#dagster.DagsterEvent\" title=\"dagster.DagsterEvent\">DagsterEvent</a>]</p>\n</dd>\n</dl>\n</dd></dl>\n\n<dl class=\"py method\">\n<dt id=\"dagster.SolidExecutionResult.get_step_success_event\">\n<code class=\"sig-name descname\"><span class=\"pre\">get_step_success_event</span></code><span class=\"sig-paren\">(</span><span class=\"sig-paren\">)</span><a class=\"reference internal\" href=\"../../../../_modules/dagster/core/execution/results#SolidExecutionResult.get_step_success_event\"><span class=\"viewcode-link\"><span class=\"pre\">[source]</span></span></a><a class=\"headerlink\" href=\"#dagster.SolidExecutionResult.get_step_success_event\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>DagsterEvent: The <code class=\"docutils literal notranslate\"><span class=\"pre\">STEP_SUCCESS</span></code> event, throws if not present.</p>\n</dd></dl>\n\n<dl class=\"py method\">\n<dt id=\"dagster.SolidExecutionResult.input_events_during_compute\">\n<em class=\"property\"><span class=\"pre\">property</span> </em><code class=\"sig-name descname\"><span class=\"pre\">input_events_during_compute</span></code><a class=\"headerlink\" href=\"#dagster.SolidExecutionResult.input_events_during_compute\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>All events of type <code class=\"docutils literal notranslate\"><span class=\"pre\">STEP_INPUT</span></code>.</p>\n<dl class=\"field-list simple\">\n<dt class=\"field-odd\">Type</dt>\n<dd class=\"field-odd\"><p>List[<a class=\"reference internal\" href=\"execution#dagster.DagsterEvent\" title=\"dagster.DagsterEvent\">DagsterEvent</a>]</p>\n</dd>\n</dl>\n</dd></dl>\n\n<dl class=\"py method\">\n<dt id=\"dagster.SolidExecutionResult.materialization_events_during_compute\">\n<em class=\"property\"><span class=\"pre\">property</span> </em><code class=\"sig-name descname\"><span class=\"pre\">materialization_events_during_compute</span></code><a class=\"headerlink\" href=\"#dagster.SolidExecutionResult.materialization_events_during_compute\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>All events of type <code class=\"docutils literal notranslate\"><span class=\"pre\">ASSET_MATERIALIZATION</span></code>.</p>\n<dl class=\"field-list simple\">\n<dt class=\"field-odd\">Type</dt>\n<dd class=\"field-odd\"><p>List[<a class=\"reference internal\" href=\"execution#dagster.DagsterEvent\" title=\"dagster.DagsterEvent\">DagsterEvent</a>]</p>\n</dd>\n</dl>\n</dd></dl>\n\n<dl class=\"py method\">\n<dt id=\"dagster.SolidExecutionResult.materializations_during_compute\">\n<em class=\"property\"><span class=\"pre\">property</span> </em><code class=\"sig-name descname\"><span class=\"pre\">materializations_during_compute</span></code><a class=\"headerlink\" href=\"#dagster.SolidExecutionResult.materializations_during_compute\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>All materializations yielded by the solid.</p>\n<dl class=\"field-list simple\">\n<dt class=\"field-odd\">Type</dt>\n<dd class=\"field-odd\"><p>List[Materialization]</p>\n</dd>\n</dl>\n</dd></dl>\n\n<dl class=\"py method\">\n<dt id=\"dagster.SolidExecutionResult.output_events_during_compute\">\n<em class=\"property\"><span class=\"pre\">property</span> </em><code class=\"sig-name descname\"><span class=\"pre\">output_events_during_compute</span></code><a class=\"headerlink\" href=\"#dagster.SolidExecutionResult.output_events_during_compute\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>All events of type <code class=\"docutils literal notranslate\"><span class=\"pre\">STEP_OUTPUT</span></code>.</p>\n<dl class=\"field-list simple\">\n<dt class=\"field-odd\">Type</dt>\n<dd class=\"field-odd\"><p>List[<a class=\"reference internal\" href=\"execution#dagster.DagsterEvent\" title=\"dagster.DagsterEvent\">DagsterEvent</a>]</p>\n</dd>\n</dl>\n</dd></dl>\n\n<dl class=\"py method\">\n<dt id=\"dagster.SolidExecutionResult.output_value\">\n<code class=\"sig-name descname\"><span class=\"pre\">output_value</span></code><span class=\"sig-paren\">(</span><em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">output_name</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">'result'</span></span></em><span class=\"sig-paren\">)</span><a class=\"reference internal\" href=\"../../../../_modules/dagster/core/execution/results#SolidExecutionResult.output_value\"><span class=\"viewcode-link\"><span class=\"pre\">[source]</span></span></a><a class=\"headerlink\" href=\"#dagster.SolidExecutionResult.output_value\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Get a computed output value.</p>\n<p>Note that calling this method will reconstruct the pipeline context (including, e.g.,\nresources) to retrieve materialized output values.</p>\n<dl class=\"field-list simple\">\n<dt class=\"field-odd\">Parameters</dt>\n<dd class=\"field-odd\"><p><strong>output_name</strong> (<a class=\"reference external\" href=\"https://docs.python.org/3/library/stdtypes.html#str\" title=\"(in Python v3.8)\"><em>str</em></a>) \u2013 The output name for which to retrieve the value. (default: \u2018result\u2019)</p>\n</dd>\n<dt class=\"field-even\">Returns</dt>\n<dd class=\"field-even\"><p><dl class=\"simple\">\n<dt><code class=\"docutils literal notranslate\"><span class=\"pre\">None</span></code> if execution did not succeed, the output value</dt><dd><p>in the normal case, and a dict of mapping keys to values in the mapped case.</p>\n</dd>\n</dl>\n</p>\n</dd>\n<dt class=\"field-odd\">Return type</dt>\n<dd class=\"field-odd\"><p>Union[<a class=\"reference external\" href=\"https://docs.python.org/3/library/constants.html#None\" title=\"(in Python v3.8)\">None</a>, Any, Dict[<a class=\"reference external\" href=\"https://docs.python.org/3/library/stdtypes.html#str\" title=\"(in Python v3.8)\">str</a>, Any]]</p>\n</dd>\n</dl>\n</dd></dl>\n\n<dl class=\"py method\">\n<dt id=\"dagster.SolidExecutionResult.output_values\">\n<em class=\"property\"><span class=\"pre\">property</span> </em><code class=\"sig-name descname\"><span class=\"pre\">output_values</span></code><a class=\"headerlink\" href=\"#dagster.SolidExecutionResult.output_values\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>The computed output values.</p>\n<p>Returns <code class=\"docutils literal notranslate\"><span class=\"pre\">None</span></code> if execution did not succeed.</p>\n<dl class=\"simple\">\n<dt>Returns a dictionary where keys are output names and the values are:</dt><dd><ul class=\"simple\">\n<li><p>the output values in the normal case</p></li>\n<li><p>a dictionary from mapping key to corresponding value in the mapped case</p></li>\n</ul>\n</dd>\n</dl>\n<p>Note that accessing this property will reconstruct the pipeline context (including, e.g.,\nresources) to retrieve materialized output values.</p>\n<dl class=\"field-list simple\">\n<dt class=\"field-odd\">Type</dt>\n<dd class=\"field-odd\"><p>Union[<a class=\"reference external\" href=\"https://docs.python.org/3/library/constants.html#None\" title=\"(in Python v3.8)\">None</a>, Dict[<a class=\"reference external\" href=\"https://docs.python.org/3/library/stdtypes.html#str\" title=\"(in Python v3.8)\">str</a>, Union[Any, Dict[<a class=\"reference external\" href=\"https://docs.python.org/3/library/stdtypes.html#str\" title=\"(in Python v3.8)\">str</a>, Any]]]</p>\n</dd>\n</dl>\n</dd></dl>\n\n<dl class=\"py method\">\n<dt id=\"dagster.SolidExecutionResult.retry_attempts\">\n<em class=\"property\"><span class=\"pre\">property</span> </em><code class=\"sig-name descname\"><span class=\"pre\">retry_attempts</span></code><a class=\"headerlink\" href=\"#dagster.SolidExecutionResult.retry_attempts\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Number of times this step retried</p>\n</dd></dl>\n\n<dl class=\"py method\">\n<dt id=\"dagster.SolidExecutionResult.skipped\">\n<em class=\"property\"><span class=\"pre\">property</span> </em><code class=\"sig-name descname\"><span class=\"pre\">skipped</span></code><a class=\"headerlink\" href=\"#dagster.SolidExecutionResult.skipped\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Whether solid execution was skipped.</p>\n<dl class=\"field-list simple\">\n<dt class=\"field-odd\">Type</dt>\n<dd class=\"field-odd\"><p><a class=\"reference external\" href=\"https://docs.python.org/3/library/functions.html#bool\" title=\"(in Python v3.8)\">bool</a></p>\n</dd>\n</dl>\n</dd></dl>\n\n<dl class=\"py method\">\n<dt id=\"dagster.SolidExecutionResult.success\">\n<em class=\"property\"><span class=\"pre\">property</span> </em><code class=\"sig-name descname\"><span class=\"pre\">success</span></code><a class=\"headerlink\" href=\"#dagster.SolidExecutionResult.success\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Whether solid execution was successful.</p>\n<dl class=\"field-list simple\">\n<dt class=\"field-odd\">Type</dt>\n<dd class=\"field-odd\"><p><a class=\"reference external\" href=\"https://docs.python.org/3/library/functions.html#bool\" title=\"(in Python v3.8)\">bool</a></p>\n</dd>\n</dl>\n</dd></dl>\n\n</dd></dl>\n\n<dl class=\"py class\">\n<dt id=\"dagster.CompositeSolidExecutionResult\">\n<em class=\"property\"><span class=\"pre\">class</span> </em><code class=\"sig-prename descclassname\"><span class=\"pre\">dagster.</span></code><code class=\"sig-name descname\"><span class=\"pre\">CompositeSolidExecutionResult</span></code><span class=\"sig-paren\">(</span><em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">solid</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">event_list</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">step_events_by_kind</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">reconstruct_context</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">pipeline_def</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">handle</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">None</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">output_capture</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">None</span></span></em><span class=\"sig-paren\">)</span><a class=\"reference internal\" href=\"../../../../_modules/dagster/core/execution/results#CompositeSolidExecutionResult\"><span class=\"viewcode-link\"><span class=\"pre\">[source]</span></span></a><a class=\"headerlink\" href=\"#dagster.CompositeSolidExecutionResult\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Execution result for a composite solid in a pipeline.</p>\n<p>Users should not instantiate this class directly.</p>\n<dl class=\"py method\">\n<dt id=\"dagster.CompositeSolidExecutionResult.output_for_solid\">\n<code class=\"sig-name descname\"><span class=\"pre\">output_for_solid</span></code><span class=\"sig-paren\">(</span><em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">handle_str</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">output_name</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">'result'</span></span></em><span class=\"sig-paren\">)</span><a class=\"headerlink\" href=\"#dagster.CompositeSolidExecutionResult.output_for_solid\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Get the output of a solid by its solid handle string and output name.</p>\n<dl class=\"field-list simple\">\n<dt class=\"field-odd\">Parameters</dt>\n<dd class=\"field-odd\"><ul class=\"simple\">\n<li><p><strong>handle_str</strong> (<a class=\"reference external\" href=\"https://docs.python.org/3/library/stdtypes.html#str\" title=\"(in Python v3.8)\"><em>str</em></a>) \u2013 The string handle for the solid.</p></li>\n<li><p><strong>output_name</strong> (<a class=\"reference external\" href=\"https://docs.python.org/3/library/stdtypes.html#str\" title=\"(in Python v3.8)\"><em>str</em></a>) \u2013 Optional. The name of the output, default to DEFAULT_OUTPUT.</p></li>\n</ul>\n</dd>\n<dt class=\"field-even\">Returns</dt>\n<dd class=\"field-even\"><p>The output value for the handle and output_name.</p>\n</dd>\n</dl>\n</dd></dl>\n\n<dl class=\"py method\">\n<dt id=\"dagster.CompositeSolidExecutionResult.result_for_handle\">\n<code class=\"sig-name descname\"><span class=\"pre\">result_for_handle</span></code><span class=\"sig-paren\">(</span><em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">handle</span></span></em><span class=\"sig-paren\">)</span><a class=\"headerlink\" href=\"#dagster.CompositeSolidExecutionResult.result_for_handle\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Get the result of a solid by its solid handle.</p>\n<p>This allows indexing into top-level solids to retrieve the results of children of\ncomposite solids.</p>\n<dl class=\"field-list simple\">\n<dt class=\"field-odd\">Parameters</dt>\n<dd class=\"field-odd\"><p><strong>handle</strong> (<em>Union</em><em>[</em><a class=\"reference external\" href=\"https://docs.python.org/3/library/stdtypes.html#str\" title=\"(in Python v3.8)\"><em>str</em></a><em>,</em><em>NodeHandle</em><em>]</em>) \u2013 The handle for the solid.</p>\n</dd>\n<dt class=\"field-even\">Returns</dt>\n<dd class=\"field-even\"><p>The result of the given\nsolid.</p>\n</dd>\n<dt class=\"field-odd\">Return type</dt>\n<dd class=\"field-odd\"><p>Union[<a class=\"reference internal\" href=\"#dagster.CompositeSolidExecutionResult\" title=\"dagster.CompositeSolidExecutionResult\">CompositeSolidExecutionResult</a>, <a class=\"reference internal\" href=\"#dagster.SolidExecutionResult\" title=\"dagster.SolidExecutionResult\">SolidExecutionResult</a>]</p>\n</dd>\n</dl>\n</dd></dl>\n\n<dl class=\"py method\">\n<dt id=\"dagster.CompositeSolidExecutionResult.result_for_solid\">\n<code class=\"sig-name descname\"><span class=\"pre\">result_for_solid</span></code><span class=\"sig-paren\">(</span><em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">name</span></span></em><span class=\"sig-paren\">)</span><a class=\"headerlink\" href=\"#dagster.CompositeSolidExecutionResult.result_for_solid\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Get the result of a top level solid.</p>\n<dl class=\"field-list simple\">\n<dt class=\"field-odd\">Parameters</dt>\n<dd class=\"field-odd\"><p><strong>name</strong> (<a class=\"reference external\" href=\"https://docs.python.org/3/library/stdtypes.html#str\" title=\"(in Python v3.8)\"><em>str</em></a>) \u2013 The name of the top-level solid or aliased solid for which to retrieve the\nresult.</p>\n</dd>\n<dt class=\"field-even\">Returns</dt>\n<dd class=\"field-even\"><p>The result of the solid\nexecution within the pipeline.</p>\n</dd>\n<dt class=\"field-odd\">Return type</dt>\n<dd class=\"field-odd\"><p>Union[<a class=\"reference internal\" href=\"#dagster.CompositeSolidExecutionResult\" title=\"dagster.CompositeSolidExecutionResult\">CompositeSolidExecutionResult</a>, <a class=\"reference internal\" href=\"#dagster.SolidExecutionResult\" title=\"dagster.SolidExecutionResult\">SolidExecutionResult</a>]</p>\n</dd>\n</dl>\n</dd></dl>\n\n<dl class=\"py method\">\n<dt id=\"dagster.CompositeSolidExecutionResult.solid_result_list\">\n<em class=\"property\"><span class=\"pre\">property</span> </em><code class=\"sig-name descname\"><span class=\"pre\">solid_result_list</span></code><a class=\"headerlink\" href=\"#dagster.CompositeSolidExecutionResult.solid_result_list\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>The results for each\ntop level solid.</p>\n<dl class=\"field-list simple\">\n<dt class=\"field-odd\">Type</dt>\n<dd class=\"field-odd\"><p>List[Union[<a class=\"reference internal\" href=\"#dagster.CompositeSolidExecutionResult\" title=\"dagster.CompositeSolidExecutionResult\">CompositeSolidExecutionResult</a>, <a class=\"reference internal\" href=\"#dagster.SolidExecutionResult\" title=\"dagster.SolidExecutionResult\">SolidExecutionResult</a>]]</p>\n</dd>\n</dl>\n</dd></dl>\n\n<dl class=\"py method\">\n<dt id=\"dagster.CompositeSolidExecutionResult.step_event_list\">\n<em class=\"property\"><span class=\"pre\">property</span> </em><code class=\"sig-name descname\"><span class=\"pre\">step_event_list</span></code><a class=\"headerlink\" href=\"#dagster.CompositeSolidExecutionResult.step_event_list\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>List[DagsterEvent] The full list of events generated by steps in the execution.</p>\n<p>Excludes events generated by the pipeline lifecycle, e.g., <code class=\"docutils literal notranslate\"><span class=\"pre\">PIPELINE_START</span></code>.</p>\n</dd></dl>\n\n<dl class=\"py method\">\n<dt id=\"dagster.CompositeSolidExecutionResult.success\">\n<em class=\"property\"><span class=\"pre\">property</span> </em><code class=\"sig-name descname\"><span class=\"pre\">success</span></code><a class=\"headerlink\" href=\"#dagster.CompositeSolidExecutionResult.success\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Whether all steps in the execution were successful.</p>\n<dl class=\"field-list simple\">\n<dt class=\"field-odd\">Type</dt>\n<dd class=\"field-odd\"><p><a class=\"reference external\" href=\"https://docs.python.org/3/library/functions.html#bool\" title=\"(in Python v3.8)\">bool</a></p>\n</dd>\n</dl>\n</dd></dl>\n\n</dd></dl>\n\n</div>\n<div class=\"section\" id=\"execution-context\">\n<h2>Execution context<a class=\"headerlink\" href=\"#execution-context\" title=\"Permalink to this headline\">\u00b6</a></h2>\n<dl class=\"py class\">\n<dt id=\"dagster.SolidExecutionContext\">\n<em class=\"property\"><span class=\"pre\">class</span> </em><code class=\"sig-prename descclassname\"><span class=\"pre\">dagster.</span></code><code class=\"sig-name descname\"><span class=\"pre\">SolidExecutionContext</span></code><span class=\"sig-paren\">(</span><em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">step_execution_context</span></span></em><span class=\"sig-paren\">)</span><a class=\"reference internal\" href=\"../../../../_modules/dagster/core/execution/context/compute#SolidExecutionContext\"><span class=\"viewcode-link\"><span class=\"pre\">[source]</span></span></a><a class=\"headerlink\" href=\"#dagster.SolidExecutionContext\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>The <code class=\"docutils literal notranslate\"><span class=\"pre\">context</span></code> object that can be made available as the first argument to a solid\u2019s compute\nfunction.</p>\n<p>The context object provides system information such as resources, config, and logging to a\nsolid\u2019s compute function. Users should not instantiate this object directly.</p>\n<p>Example:</p>\n<div class=\"highlight-python notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"nd\">@solid</span>\n<span class=\"k\">def</span> <span class=\"nf\">hello_world</span><span class=\"p\">(</span><span class=\"n\">context</span><span class=\"p\">:</span> <span class=\"n\">SolidExecutionContext</span><span class=\"p\">):</span>\n    <span class=\"n\">context</span><span class=\"o\">.</span><span class=\"n\">log</span><span class=\"o\">.</span><span class=\"n\">info</span><span class=\"p\">(</span><span class=\"s2\">&quot;Hello, world!&quot;</span><span class=\"p\">)</span>\n</pre></div>\n</div>\n<dl class=\"py method\">\n<dt id=\"dagster.SolidExecutionContext.add_output_metadata\">\n<code class=\"sig-name descname\"><span class=\"pre\">add_output_metadata</span></code><span class=\"sig-paren\">(</span><em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">metadata</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">output_name</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">None</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">mapping_key</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">None</span></span></em><span class=\"sig-paren\">)</span><a class=\"reference internal\" href=\"../../../../_modules/dagster/core/execution/context/compute#SolidExecutionContext.add_output_metadata\"><span class=\"viewcode-link\"><span class=\"pre\">[source]</span></span></a><a class=\"headerlink\" href=\"#dagster.SolidExecutionContext.add_output_metadata\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Add metadata to one of the outputs of an op.</p>\n<p>This can only be used once per output in the body of an op. Using this method with the same output_name more than once within an op will result in an error.</p>\n<dl class=\"field-list simple\">\n<dt class=\"field-odd\">Parameters</dt>\n<dd class=\"field-odd\"><ul class=\"simple\">\n<li><p><strong>metadata</strong> (<em>Mapping</em><em>[</em><a class=\"reference external\" href=\"https://docs.python.org/3/library/stdtypes.html#str\" title=\"(in Python v3.8)\"><em>str</em></a><em>, </em><em>Any</em><em>]</em>) \u2013 The metadata to attach to the output</p></li>\n<li><p><strong>output_name</strong> (<em>Optional</em><em>[</em><a class=\"reference external\" href=\"https://docs.python.org/3/library/stdtypes.html#str\" title=\"(in Python v3.8)\"><em>str</em></a><em>]</em>) \u2013 The name of the output to attach metadata to. If there is only one output on the op, then this argument does not need to be provided. The metadata will automatically be attached to the only output.</p></li>\n</ul>\n</dd>\n</dl>\n<p><strong>Examples:</strong></p>\n<div class=\"highlight-python notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"kn\">from</span> <span class=\"nn\">dagster</span> <span class=\"kn\">import</span> <span class=\"n\">Out</span><span class=\"p\">,</span> <span class=\"n\">op</span>\n<span class=\"kn\">from</span> <span class=\"nn\">typing</span> <span class=\"kn\">import</span> <span class=\"n\">Tuple</span>\n\n<span class=\"nd\">@op</span>\n<span class=\"k\">def</span> <span class=\"nf\">add_metadata</span><span class=\"p\">(</span><span class=\"n\">context</span><span class=\"p\">):</span>\n    <span class=\"n\">context</span><span class=\"o\">.</span><span class=\"n\">add_output_metadata</span><span class=\"p\">({</span><span class=\"s2\">&quot;foo&quot;</span><span class=\"p\">,</span> <span class=\"s2\">&quot;bar&quot;</span><span class=\"p\">})</span>\n    <span class=\"k\">return</span> <span class=\"mi\">5</span> <span class=\"c1\"># Since the default output is called &quot;result&quot;, metadata will be attached to the output &quot;result&quot;.</span>\n\n<span class=\"nd\">@op</span><span class=\"p\">(</span><span class=\"n\">out</span><span class=\"o\">=</span><span class=\"p\">{</span><span class=\"s2\">&quot;a&quot;</span><span class=\"p\">:</span> <span class=\"n\">Out</span><span class=\"p\">(),</span> <span class=\"s2\">&quot;b&quot;</span><span class=\"p\">:</span> <span class=\"n\">Out</span><span class=\"p\">()})</span>\n<span class=\"k\">def</span> <span class=\"nf\">add_metadata_two_outputs</span><span class=\"p\">(</span><span class=\"n\">context</span><span class=\"p\">)</span> <span class=\"o\">-&gt;</span> <span class=\"n\">Tuple</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"nb\">int</span><span class=\"p\">]:</span>\n    <span class=\"n\">context</span><span class=\"o\">.</span><span class=\"n\">add_output_metadata</span><span class=\"p\">({</span><span class=\"s2\">&quot;foo&quot;</span><span class=\"p\">:</span> <span class=\"s2\">&quot;bar&quot;</span><span class=\"p\">},</span> <span class=\"n\">output_name</span><span class=\"o\">=</span><span class=\"s2\">&quot;b&quot;</span><span class=\"p\">)</span>\n    <span class=\"n\">context</span><span class=\"o\">.</span><span class=\"n\">add_output_metadata</span><span class=\"p\">({</span><span class=\"s2\">&quot;baz&quot;</span><span class=\"p\">:</span> <span class=\"s2\">&quot;bat&quot;</span><span class=\"p\">},</span> <span class=\"n\">output_name</span><span class=\"o\">=</span><span class=\"s2\">&quot;a&quot;</span><span class=\"p\">)</span>\n\n    <span class=\"k\">return</span> <span class=\"p\">(</span><span class=\"s2\">&quot;dog&quot;</span><span class=\"p\">,</span> <span class=\"mi\">5</span><span class=\"p\">)</span>\n</pre></div>\n</div>\n</dd></dl>\n\n<dl class=\"py method\">\n<dt id=\"dagster.SolidExecutionContext.asset_partition_key_for_output\">\n<code class=\"sig-name descname\"><span class=\"pre\">asset_partition_key_for_output</span></code><span class=\"sig-paren\">(</span><em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">output_name</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">'result'</span></span></em><span class=\"sig-paren\">)</span><a class=\"reference internal\" href=\"../../../../_modules/dagster/core/execution/context/compute#SolidExecutionContext.asset_partition_key_for_output\"><span class=\"viewcode-link\"><span class=\"pre\">[source]</span></span></a><a class=\"headerlink\" href=\"#dagster.SolidExecutionContext.asset_partition_key_for_output\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Returns the asset partition key for the given output. Defaults to \u201cresult\u201d, which is the\nname of the default output.</p>\n</dd></dl>\n\n<dl class=\"py method\">\n<dt id=\"dagster.SolidExecutionContext.asset_partitions_time_window_for_output\">\n<code class=\"sig-name descname\"><span class=\"pre\">asset_partitions_time_window_for_output</span></code><span class=\"sig-paren\">(</span><em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">output_name</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">'result'</span></span></em><span class=\"sig-paren\">)</span><a class=\"reference internal\" href=\"../../../../_modules/dagster/core/execution/context/compute#SolidExecutionContext.asset_partitions_time_window_for_output\"><span class=\"viewcode-link\"><span class=\"pre\">[source]</span></span></a><a class=\"headerlink\" href=\"#dagster.SolidExecutionContext.asset_partitions_time_window_for_output\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>The time window for the partitions of the output asset.</p>\n<p>Raises an error if either of the following are true:\n- The output asset has no partitioning.\n- The output asset is not partitioned with a TimeWindowPartitionsDefinition.</p>\n</dd></dl>\n\n<dl class=\"py method\">\n<dt id=\"dagster.SolidExecutionContext.consume_events\">\n<code class=\"sig-name descname\"><span class=\"pre\">consume_events</span></code><span class=\"sig-paren\">(</span><span class=\"sig-paren\">)</span><a class=\"reference internal\" href=\"../../../../_modules/dagster/core/execution/context/compute#SolidExecutionContext.consume_events\"><span class=\"viewcode-link\"><span class=\"pre\">[source]</span></span></a><a class=\"headerlink\" href=\"#dagster.SolidExecutionContext.consume_events\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Pops and yields all user-generated events that have been recorded from this context.</p>\n<p>If consume_events has not yet been called, this will yield all logged events since the beginning of the op\u2019s computation. If consume_events has been called, it will yield all events since the last time consume_events was called. Designed for internal use. Users should never need to invoke this method.</p>\n</dd></dl>\n\n<dl class=\"py method\">\n<dt id=\"dagster.SolidExecutionContext.get_mapping_key\">\n<code class=\"sig-name descname\"><span class=\"pre\">get_mapping_key</span></code><span class=\"sig-paren\">(</span><span class=\"sig-paren\">)</span><a class=\"reference internal\" href=\"../../../../_modules/dagster/core/execution/context/compute#SolidExecutionContext.get_mapping_key\"><span class=\"viewcode-link\"><span class=\"pre\">[source]</span></span></a><a class=\"headerlink\" href=\"#dagster.SolidExecutionContext.get_mapping_key\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Which mapping_key this execution is for if downstream of a DynamicOutput, otherwise None.</p>\n</dd></dl>\n\n<dl class=\"py method\">\n<dt id=\"dagster.SolidExecutionContext.get_tag\">\n<code class=\"sig-name descname\"><span class=\"pre\">get_tag</span></code><span class=\"sig-paren\">(</span><em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">key</span></span></em><span class=\"sig-paren\">)</span><a class=\"reference internal\" href=\"../../../../_modules/dagster/core/execution/context/compute#SolidExecutionContext.get_tag\"><span class=\"viewcode-link\"><span class=\"pre\">[source]</span></span></a><a class=\"headerlink\" href=\"#dagster.SolidExecutionContext.get_tag\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Get a logging tag.</p>\n<dl class=\"field-list simple\">\n<dt class=\"field-odd\">Parameters</dt>\n<dd class=\"field-odd\"><p><strong>key</strong> (<em>tag</em>) \u2013 The tag to get.</p>\n</dd>\n<dt class=\"field-even\">Returns</dt>\n<dd class=\"field-even\"><p>The value of the tag, if present.</p>\n</dd>\n<dt class=\"field-odd\">Return type</dt>\n<dd class=\"field-odd\"><p>Optional[<a class=\"reference external\" href=\"https://docs.python.org/3/library/stdtypes.html#str\" title=\"(in Python v3.8)\">str</a>]</p>\n</dd>\n</dl>\n</dd></dl>\n\n<dl class=\"py method\">\n<dt id=\"dagster.SolidExecutionContext.has_partition_key\">\n<em class=\"property\"><span class=\"pre\">property</span> </em><code class=\"sig-name descname\"><span class=\"pre\">has_partition_key</span></code><a class=\"headerlink\" href=\"#dagster.SolidExecutionContext.has_partition_key\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Whether the current run is a partitioned run</p>\n</dd></dl>\n\n<dl class=\"py method\">\n<dt id=\"dagster.SolidExecutionContext.has_tag\">\n<code class=\"sig-name descname\"><span class=\"pre\">has_tag</span></code><span class=\"sig-paren\">(</span><em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">key</span></span></em><span class=\"sig-paren\">)</span><a class=\"reference internal\" href=\"../../../../_modules/dagster/core/execution/context/compute#SolidExecutionContext.has_tag\"><span class=\"viewcode-link\"><span class=\"pre\">[source]</span></span></a><a class=\"headerlink\" href=\"#dagster.SolidExecutionContext.has_tag\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Check if a logging tag is set.</p>\n<dl class=\"field-list simple\">\n<dt class=\"field-odd\">Parameters</dt>\n<dd class=\"field-odd\"><p><strong>key</strong> (<a class=\"reference external\" href=\"https://docs.python.org/3/library/stdtypes.html#str\" title=\"(in Python v3.8)\"><em>str</em></a>) \u2013 The tag to check.</p>\n</dd>\n<dt class=\"field-even\">Returns</dt>\n<dd class=\"field-even\"><p>Whether the tag is set.</p>\n</dd>\n<dt class=\"field-odd\">Return type</dt>\n<dd class=\"field-odd\"><p><a class=\"reference external\" href=\"https://docs.python.org/3/library/functions.html#bool\" title=\"(in Python v3.8)\">bool</a></p>\n</dd>\n</dl>\n</dd></dl>\n\n<dl class=\"py method\">\n<dt id=\"dagster.SolidExecutionContext.instance\">\n<em class=\"property\"><span class=\"pre\">property</span> </em><code class=\"sig-name descname\"><span class=\"pre\">instance</span></code><a class=\"headerlink\" href=\"#dagster.SolidExecutionContext.instance\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>The current Dagster instance</p>\n<dl class=\"field-list simple\">\n<dt class=\"field-odd\">Type</dt>\n<dd class=\"field-odd\"><p><a class=\"reference internal\" href=\"internals#dagster.DagsterInstance\" title=\"dagster.DagsterInstance\">DagsterInstance</a></p>\n</dd>\n</dl>\n</dd></dl>\n\n<dl class=\"py method\">\n<dt id=\"dagster.SolidExecutionContext.job_def\">\n<em class=\"property\"><span class=\"pre\">property</span> </em><code class=\"sig-name descname\"><span class=\"pre\">job_def</span></code><a class=\"headerlink\" href=\"#dagster.SolidExecutionContext.job_def\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>The currently executing job.</p>\n<dl class=\"field-list simple\">\n<dt class=\"field-odd\">Type</dt>\n<dd class=\"field-odd\"><p><a class=\"reference internal\" href=\"jobs#dagster.JobDefinition\" title=\"dagster.JobDefinition\">JobDefinition</a></p>\n</dd>\n</dl>\n</dd></dl>\n\n<dl class=\"py method\">\n<dt id=\"dagster.SolidExecutionContext.job_name\">\n<em class=\"property\"><span class=\"pre\">property</span> </em><code class=\"sig-name descname\"><span class=\"pre\">job_name</span></code><a class=\"headerlink\" href=\"#dagster.SolidExecutionContext.job_name\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>The name of the currently executing job.</p>\n<dl class=\"field-list simple\">\n<dt class=\"field-odd\">Type</dt>\n<dd class=\"field-odd\"><p><a class=\"reference external\" href=\"https://docs.python.org/3/library/stdtypes.html#str\" title=\"(in Python v3.8)\">str</a></p>\n</dd>\n</dl>\n</dd></dl>\n\n<dl class=\"py method\">\n<dt id=\"dagster.SolidExecutionContext.log\">\n<em class=\"property\"><span class=\"pre\">property</span> </em><code class=\"sig-name descname\"><span class=\"pre\">log</span></code><a class=\"headerlink\" href=\"#dagster.SolidExecutionContext.log\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>The log manager available in the execution context.</p>\n<dl class=\"field-list simple\">\n<dt class=\"field-odd\">Type</dt>\n<dd class=\"field-odd\"><p><a class=\"reference internal\" href=\"loggers#dagster.DagsterLogManager\" title=\"dagster.DagsterLogManager\">DagsterLogManager</a></p>\n</dd>\n</dl>\n</dd></dl>\n\n<dl class=\"py method\">\n<dt id=\"dagster.SolidExecutionContext.log_event\">\n<code class=\"sig-name descname\"><span class=\"pre\">log_event</span></code><span class=\"sig-paren\">(</span><em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">event</span></span></em><span class=\"sig-paren\">)</span><a class=\"reference internal\" href=\"../../../../_modules/dagster/core/execution/context/compute#SolidExecutionContext.log_event\"><span class=\"viewcode-link\"><span class=\"pre\">[source]</span></span></a><a class=\"headerlink\" href=\"#dagster.SolidExecutionContext.log_event\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Log an AssetMaterialization, AssetObservation, or ExpectationResult from within the body of an op.</p>\n<p>Events logged with this method will appear in the list of DagsterEvents, as well as the event log.</p>\n<dl class=\"field-list simple\">\n<dt class=\"field-odd\">Parameters</dt>\n<dd class=\"field-odd\"><p><strong>event</strong> (<em>Union</em><em>[</em><a class=\"reference internal\" href=\"ops#dagster.AssetMaterialization\" title=\"dagster.AssetMaterialization\"><em>AssetMaterialization</em></a><em>, </em><em>Materialization</em><em>, </em><em>AssetObservation</em><em>, </em><a class=\"reference internal\" href=\"ops#dagster.ExpectationResult\" title=\"dagster.ExpectationResult\"><em>ExpectationResult</em></a><em>]</em>) \u2013 The event to log.</p>\n</dd>\n</dl>\n<p><strong>Examples:</strong></p>\n<div class=\"highlight-python notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"kn\">from</span> <span class=\"nn\">dagster</span> <span class=\"kn\">import</span> <span class=\"n\">op</span><span class=\"p\">,</span> <span class=\"n\">AssetMaterialization</span>\n\n<span class=\"nd\">@op</span>\n<span class=\"k\">def</span> <span class=\"nf\">log_materialization</span><span class=\"p\">(</span><span class=\"n\">context</span><span class=\"p\">):</span>\n    <span class=\"n\">context</span><span class=\"o\">.</span><span class=\"n\">log_event</span><span class=\"p\">(</span><span class=\"n\">AssetMaterialization</span><span class=\"p\">(</span><span class=\"s2\">&quot;foo&quot;</span><span class=\"p\">))</span>\n</pre></div>\n</div>\n</dd></dl>\n\n<dl class=\"py method\">\n<dt id=\"dagster.SolidExecutionContext.mode_def\">\n<em class=\"property\"><span class=\"pre\">property</span> </em><code class=\"sig-name descname\"><span class=\"pre\">mode_def</span></code><a class=\"headerlink\" href=\"#dagster.SolidExecutionContext.mode_def\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>The mode of the current execution.</p>\n<dl class=\"field-list simple\">\n<dt class=\"field-odd\">Type</dt>\n<dd class=\"field-odd\"><p><a class=\"reference internal\" href=\"modes#dagster.ModeDefinition\" title=\"dagster.ModeDefinition\">ModeDefinition</a></p>\n</dd>\n</dl>\n</dd></dl>\n\n<dl class=\"py method\">\n<dt id=\"dagster.SolidExecutionContext.op_def\">\n<em class=\"property\"><span class=\"pre\">property</span> </em><code class=\"sig-name descname\"><span class=\"pre\">op_def</span></code><a class=\"headerlink\" href=\"#dagster.SolidExecutionContext.op_def\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>The current op definition.</p>\n<dl class=\"field-list simple\">\n<dt class=\"field-odd\">Type</dt>\n<dd class=\"field-odd\"><p><a class=\"reference internal\" href=\"ops#dagster.OpDefinition\" title=\"dagster.OpDefinition\">OpDefinition</a></p>\n</dd>\n</dl>\n</dd></dl>\n\n<dl class=\"py method\">\n<dt id=\"dagster.SolidExecutionContext.partition_key\">\n<em class=\"property\"><span class=\"pre\">property</span> </em><code class=\"sig-name descname\"><span class=\"pre\">partition_key</span></code><a class=\"headerlink\" href=\"#dagster.SolidExecutionContext.partition_key\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>The partition key for the current run.</p>\n<p>Raises an error if the current run is not a partitioned run.</p>\n</dd></dl>\n\n<dl class=\"py method\">\n<dt id=\"dagster.SolidExecutionContext.partition_time_window\">\n<em class=\"property\"><span class=\"pre\">property</span> </em><code class=\"sig-name descname\"><span class=\"pre\">partition_time_window</span></code><a class=\"headerlink\" href=\"#dagster.SolidExecutionContext.partition_time_window\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>The partition time window for the current run.</p>\n<p>Raises an error if the current run is not a partitioned run, or if the job\u2019s partition\ndefinition is not a TimeWindowPartitionsDefinition.</p>\n</dd></dl>\n\n<dl class=\"py method\">\n<dt id=\"dagster.SolidExecutionContext.pdb\">\n<em class=\"property\"><span class=\"pre\">property</span> </em><code class=\"sig-name descname\"><span class=\"pre\">pdb</span></code><a class=\"headerlink\" href=\"#dagster.SolidExecutionContext.pdb\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Gives access to pdb debugging from within the op.</p>\n<p>Example:</p>\n<div class=\"highlight-python notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"nd\">@op</span>\n<span class=\"k\">def</span> <span class=\"nf\">debug</span><span class=\"p\">(</span><span class=\"n\">context</span><span class=\"p\">):</span>\n    <span class=\"n\">context</span><span class=\"o\">.</span><span class=\"n\">pdb</span><span class=\"o\">.</span><span class=\"n\">set_trace</span><span class=\"p\">()</span>\n</pre></div>\n</div>\n<dl class=\"field-list simple\">\n<dt class=\"field-odd\">Type</dt>\n<dd class=\"field-odd\"><p><a class=\"reference internal\" href=\"utilities#dagster.utils.forked_pdb.ForkedPdb\" title=\"dagster.utils.forked_pdb.ForkedPdb\">dagster.utils.forked_pdb.ForkedPdb</a></p>\n</dd>\n</dl>\n</dd></dl>\n\n<dl class=\"py method\">\n<dt id=\"dagster.SolidExecutionContext.pipeline_def\">\n<em class=\"property\"><span class=\"pre\">property</span> </em><code class=\"sig-name descname\"><span class=\"pre\">pipeline_def</span></code><a class=\"headerlink\" href=\"#dagster.SolidExecutionContext.pipeline_def\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>The currently executing pipeline.</p>\n<dl class=\"field-list simple\">\n<dt class=\"field-odd\">Type</dt>\n<dd class=\"field-odd\"><p><a class=\"reference internal\" href=\"pipeline#dagster.PipelineDefinition\" title=\"dagster.PipelineDefinition\">PipelineDefinition</a></p>\n</dd>\n</dl>\n</dd></dl>\n\n<dl class=\"py method\">\n<dt id=\"dagster.SolidExecutionContext.pipeline_name\">\n<em class=\"property\"><span class=\"pre\">property</span> </em><code class=\"sig-name descname\"><span class=\"pre\">pipeline_name</span></code><a class=\"headerlink\" href=\"#dagster.SolidExecutionContext.pipeline_name\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>The name of the currently executing pipeline.</p>\n<dl class=\"field-list simple\">\n<dt class=\"field-odd\">Type</dt>\n<dd class=\"field-odd\"><p><a class=\"reference external\" href=\"https://docs.python.org/3/library/stdtypes.html#str\" title=\"(in Python v3.8)\">str</a></p>\n</dd>\n</dl>\n</dd></dl>\n\n<dl class=\"py method\">\n<dt id=\"dagster.SolidExecutionContext.pipeline_run\">\n<em class=\"property\"><span class=\"pre\">property</span> </em><code class=\"sig-name descname\"><span class=\"pre\">pipeline_run</span></code><a class=\"headerlink\" href=\"#dagster.SolidExecutionContext.pipeline_run\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>The current pipeline run</p>\n<dl class=\"field-list simple\">\n<dt class=\"field-odd\">Type</dt>\n<dd class=\"field-odd\"><p><a class=\"reference internal\" href=\"internals#dagster.PipelineRun\" title=\"dagster.PipelineRun\">PipelineRun</a></p>\n</dd>\n</dl>\n</dd></dl>\n\n<dl class=\"py method\">\n<dt id=\"dagster.SolidExecutionContext.resources\">\n<em class=\"property\"><span class=\"pre\">property</span> </em><code class=\"sig-name descname\"><span class=\"pre\">resources</span></code><a class=\"headerlink\" href=\"#dagster.SolidExecutionContext.resources\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>The currently available resources.</p>\n<dl class=\"field-list simple\">\n<dt class=\"field-odd\">Type</dt>\n<dd class=\"field-odd\"><p>Resources</p>\n</dd>\n</dl>\n</dd></dl>\n\n<dl class=\"py method\">\n<dt id=\"dagster.SolidExecutionContext.retry_number\">\n<em class=\"property\"><span class=\"pre\">property</span> </em><code class=\"sig-name descname\"><span class=\"pre\">retry_number</span></code><a class=\"headerlink\" href=\"#dagster.SolidExecutionContext.retry_number\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Which retry attempt is currently executing i.e. 0 for initial attempt, 1 for first retry, etc.</p>\n</dd></dl>\n\n<dl class=\"py method\">\n<dt id=\"dagster.SolidExecutionContext.run\">\n<em class=\"property\"><span class=\"pre\">property</span> </em><code class=\"sig-name descname\"><span class=\"pre\">run</span></code><a class=\"headerlink\" href=\"#dagster.SolidExecutionContext.run\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>The current run</p>\n<dl class=\"field-list simple\">\n<dt class=\"field-odd\">Type</dt>\n<dd class=\"field-odd\"><p>DagsterRun</p>\n</dd>\n</dl>\n</dd></dl>\n\n<dl class=\"py method\">\n<dt id=\"dagster.SolidExecutionContext.run_config\">\n<em class=\"property\"><span class=\"pre\">property</span> </em><code class=\"sig-name descname\"><span class=\"pre\">run_config</span></code><a class=\"headerlink\" href=\"#dagster.SolidExecutionContext.run_config\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>The run config for the current execution.</p>\n<dl class=\"field-list simple\">\n<dt class=\"field-odd\">Type</dt>\n<dd class=\"field-odd\"><p><a class=\"reference external\" href=\"https://docs.python.org/3/library/stdtypes.html#dict\" title=\"(in Python v3.8)\">dict</a></p>\n</dd>\n</dl>\n</dd></dl>\n\n<dl class=\"py method\">\n<dt id=\"dagster.SolidExecutionContext.run_id\">\n<em class=\"property\"><span class=\"pre\">property</span> </em><code class=\"sig-name descname\"><span class=\"pre\">run_id</span></code><a class=\"headerlink\" href=\"#dagster.SolidExecutionContext.run_id\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>The id of the current execution\u2019s run.</p>\n<dl class=\"field-list simple\">\n<dt class=\"field-odd\">Type</dt>\n<dd class=\"field-odd\"><p><a class=\"reference external\" href=\"https://docs.python.org/3/library/stdtypes.html#str\" title=\"(in Python v3.8)\">str</a></p>\n</dd>\n</dl>\n</dd></dl>\n\n<dl class=\"py method\">\n<dt id=\"dagster.SolidExecutionContext.solid_config\">\n<em class=\"property\"><span class=\"pre\">property</span> </em><code class=\"sig-name descname\"><span class=\"pre\">solid_config</span></code><a class=\"headerlink\" href=\"#dagster.SolidExecutionContext.solid_config\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>The parsed config specific to this solid.</p>\n</dd></dl>\n\n<dl class=\"py method\">\n<dt id=\"dagster.SolidExecutionContext.solid_def\">\n<em class=\"property\"><span class=\"pre\">property</span> </em><code class=\"sig-name descname\"><span class=\"pre\">solid_def</span></code><a class=\"headerlink\" href=\"#dagster.SolidExecutionContext.solid_def\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>The current solid definition.</p>\n<dl class=\"field-list simple\">\n<dt class=\"field-odd\">Type</dt>\n<dd class=\"field-odd\"><p><a class=\"reference internal\" href=\"#dagster.SolidDefinition\" title=\"dagster.SolidDefinition\">SolidDefinition</a></p>\n</dd>\n</dl>\n</dd></dl>\n\n<dl class=\"py method\">\n<dt id=\"dagster.SolidExecutionContext.step_launcher\">\n<em class=\"property\"><span class=\"pre\">property</span> </em><code class=\"sig-name descname\"><span class=\"pre\">step_launcher</span></code><a class=\"headerlink\" href=\"#dagster.SolidExecutionContext.step_launcher\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>The current step launcher, if any.</p>\n<dl class=\"field-list simple\">\n<dt class=\"field-odd\">Type</dt>\n<dd class=\"field-odd\"><p>Optional[StepLauncher]</p>\n</dd>\n</dl>\n</dd></dl>\n\n</dd></dl>\n\n<dl class=\"py function\">\n<dt id=\"dagster.build_solid_context\">\n<code class=\"sig-prename descclassname\"><span class=\"pre\">dagster.</span></code><code class=\"sig-name descname\"><span class=\"pre\">build_solid_context</span></code><span class=\"sig-paren\">(</span><em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">resources</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">None</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">solid_config</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">None</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">resources_config</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">None</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">instance</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">None</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">config</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">None</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">partition_key</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">None</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">mapping_key</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">None</span></span></em><span class=\"sig-paren\">)</span><a class=\"reference internal\" href=\"../../../../_modules/dagster/core/execution/context/invocation#build_solid_context\"><span class=\"viewcode-link\"><span class=\"pre\">[source]</span></span></a><a class=\"headerlink\" href=\"#dagster.build_solid_context\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Builds solid execution context from provided parameters.</p>\n<p><code class=\"docutils literal notranslate\"><span class=\"pre\">build_solid_context</span></code> can be used as either a function or context manager. If there is a\nprovided resource that is a context manager, then <code class=\"docutils literal notranslate\"><span class=\"pre\">build_solid_context</span></code> must be used as a\ncontext manager. This function can be used to provide the context argument when directly\ninvoking a solid.</p>\n<dl class=\"field-list simple\">\n<dt class=\"field-odd\">Parameters</dt>\n<dd class=\"field-odd\"><ul class=\"simple\">\n<li><p><strong>resources</strong> (<em>Optional</em><em>[</em><em>Dict</em><em>[</em><a class=\"reference external\" href=\"https://docs.python.org/3/library/stdtypes.html#str\" title=\"(in Python v3.8)\"><em>str</em></a><em>, </em><em>Any</em><em>]</em><em>]</em>) \u2013 The resources to provide to the context. These can be\neither values or resource definitions.</p></li>\n<li><p><strong>solid_config</strong> (<em>Optional</em><em>[</em><em>Any</em><em>]</em>) \u2013 The solid config to provide to the context. The value provided\nhere will be available as <code class=\"docutils literal notranslate\"><span class=\"pre\">context.solid_config</span></code>.</p></li>\n<li><p><strong>resources_config</strong> (<em>Optional</em><em>[</em><em>Dict</em><em>[</em><a class=\"reference external\" href=\"https://docs.python.org/3/library/stdtypes.html#str\" title=\"(in Python v3.8)\"><em>str</em></a><em>, </em><em>Any</em><em>]</em><em>]</em>) \u2013 Configuration for any resource definitions\nprovided to the resources arg. The configuration under a specific key should match the\nresource under a specific key in the resources dictionary.</p></li>\n<li><p><strong>instance</strong> (<em>Optional</em><em>[</em><a class=\"reference internal\" href=\"internals#dagster.DagsterInstance\" title=\"dagster.DagsterInstance\"><em>DagsterInstance</em></a><em>]</em>) \u2013 The dagster instance configured for the context.\nDefaults to DagsterInstance.ephemeral().</p></li>\n</ul>\n</dd>\n</dl>\n<p class=\"rubric\">Examples</p>\n<div class=\"highlight-python notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"n\">context</span> <span class=\"o\">=</span> <span class=\"n\">build_solid_context</span><span class=\"p\">()</span>\n<span class=\"n\">solid_to_invoke</span><span class=\"p\">(</span><span class=\"n\">context</span><span class=\"p\">)</span>\n\n<span class=\"k\">with</span> <span class=\"n\">build_solid_context</span><span class=\"p\">(</span><span class=\"n\">resources</span><span class=\"o\">=</span><span class=\"p\">{</span><span class=\"s2\">&quot;foo&quot;</span><span class=\"p\">:</span> <span class=\"n\">context_manager_resource</span><span class=\"p\">})</span> <span class=\"k\">as</span> <span class=\"n\">context</span><span class=\"p\">:</span>\n    <span class=\"n\">solid_to_invoke</span><span class=\"p\">(</span><span class=\"n\">context</span><span class=\"p\">)</span>\n</pre></div>\n</div>\n</dd></dl>\n\n</div>\n<hr class=\"docutils\" />\n<div class=\"section\" id=\"composing-solids\">\n<h2>Composing solids<a class=\"headerlink\" href=\"#composing-solids\" title=\"Permalink to this headline\">\u00b6</a></h2>\n<dl class=\"py function\">\n<dt id=\"dagster.composite_solid\">\n<code class=\"sig-prename descclassname\"><span class=\"pre\">&#64;</span></code><code class=\"sig-prename descclassname\"><span class=\"pre\">dagster.</span></code><code class=\"sig-name descname\"><span class=\"pre\">composite_solid</span></code><span class=\"sig-paren\">(</span><em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">name</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">None</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">input_defs</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">None</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">output_defs</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">None</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">description</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">None</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">config_schema</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">None</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">config_fn</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">None</span></span></em><span class=\"sig-paren\">)</span><a class=\"reference internal\" href=\"../../../../_modules/dagster/core/definitions/decorators/composite_solid_decorator#composite_solid\"><span class=\"viewcode-link\"><span class=\"pre\">[source]</span></span></a><a class=\"headerlink\" href=\"#dagster.composite_solid\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Create a composite solid with the specified parameters from the decorated composition\nfunction.</p>\n<p>Using this decorator allows you to build up the dependency graph of the composite by writing a\nfunction that invokes solids and passes the output to other solids. This is similar to the use\nof the <a class=\"reference internal\" href=\"pipeline#dagster.pipeline\" title=\"dagster.pipeline\"><code class=\"xref py py-func docutils literal notranslate\"><span class=\"pre\">&#64;pipeline</span></code></a> decorator, with the additional ability to remap inputs,\noutputs, and config across the composite boundary.</p>\n<dl class=\"field-list simple\">\n<dt class=\"field-odd\">Parameters</dt>\n<dd class=\"field-odd\"><ul class=\"simple\">\n<li><p><strong>name</strong> (<em>Optional</em><em>[</em><a class=\"reference external\" href=\"https://docs.python.org/3/library/stdtypes.html#str\" title=\"(in Python v3.8)\"><em>str</em></a><em>]</em>) \u2013 Name for the new composite solid. Must be unique within any\n<a class=\"reference internal\" href=\"pipeline#dagster.PipelineDefinition\" title=\"dagster.PipelineDefinition\"><code class=\"xref py py-class docutils literal notranslate\"><span class=\"pre\">PipelineDefinition</span></code></a> using the solid.</p></li>\n<li><p><strong>description</strong> (<em>Optional</em><em>[</em><a class=\"reference external\" href=\"https://docs.python.org/3/library/stdtypes.html#str\" title=\"(in Python v3.8)\"><em>str</em></a><em>]</em>) \u2013 Human-readable description of the new composite solid.</p></li>\n<li><p><strong>input_defs</strong> (<em>Optional</em><em>[</em><em>List</em><em>[</em><a class=\"reference internal\" href=\"#dagster.InputDefinition\" title=\"dagster.InputDefinition\"><em>InputDefinition</em></a><em>]</em><em>]</em>) \u2013 <p>Information about the inputs that this composite solid maps. Information provided here\nwill be combined with what can be inferred from the function signature, with these\nexplicit InputDefinitions taking precedence.</p>\n<p>Uses of inputs in the body of the decorated composition function will determine\nthe <a class=\"reference internal\" href=\"#dagster.InputMapping\" title=\"dagster.InputMapping\"><code class=\"xref py py-class docutils literal notranslate\"><span class=\"pre\">InputMappings</span></code></a> passed to the underlying\n<a class=\"reference internal\" href=\"#dagster.CompositeSolidDefinition\" title=\"dagster.CompositeSolidDefinition\"><code class=\"xref py py-class docutils literal notranslate\"><span class=\"pre\">CompositeSolidDefinition</span></code></a>.</p>\n</p></li>\n<li><p><strong>output_defs</strong> (<em>Optional</em><em>[</em><em>List</em><em>[</em><a class=\"reference internal\" href=\"#dagster.OutputDefinition\" title=\"dagster.OutputDefinition\"><em>OutputDefinition</em></a><em>]</em><em>]</em>) \u2013 <p>Information about the outputs this composite solid maps. Information provided here\nwill be combined with what can be inferred from the return type signature if there\nis only one OutputDefinition.</p>\n<p>Uses of these outputs in the body of the decorated composition function, as well as the\nreturn value of the decorated function, will be used to infer the appropriate set of\n<a class=\"reference internal\" href=\"#dagster.OutputMapping\" title=\"dagster.OutputMapping\"><code class=\"xref py py-class docutils literal notranslate\"><span class=\"pre\">OutputMappings</span></code></a> for the underlying\n<a class=\"reference internal\" href=\"#dagster.CompositeSolidDefinition\" title=\"dagster.CompositeSolidDefinition\"><code class=\"xref py py-class docutils literal notranslate\"><span class=\"pre\">CompositeSolidDefinition</span></code></a>.</p>\n<p>To map multiple outputs, return a dictionary from the composition function.</p>\n</p></li>\n<li><p><strong>config_schema</strong> (<em>Optional</em><em>[</em><a class=\"reference internal\" href=\"config#dagster.ConfigSchema\" title=\"dagster.ConfigSchema\"><em>ConfigSchema</em></a><em>]</em>) \u2013 If the <cite>config_fn</cite> argument is provided, this\nargument can be provided to set the schema for outer config that is passed to the\n<cite>config_fn</cite>. If <cite>config_fn</cite> is provided, but this argument is not provided, any config\nwill be accepted.</p></li>\n<li><p><strong>config_fn</strong> (<em>Callable</em><em>[</em><em>[</em><a class=\"reference external\" href=\"https://docs.python.org/3/library/stdtypes.html#dict\" title=\"(in Python v3.8)\"><em>dict</em></a><em>]</em><em>, </em><a class=\"reference external\" href=\"https://docs.python.org/3/library/stdtypes.html#dict\" title=\"(in Python v3.8)\"><em>dict</em></a><em>]</em>) \u2013 <p>By specifying a config mapping\nfunction, you can override the configuration for the child solids contained within this\ncomposite solid.  <code class=\"docutils literal notranslate\"><span class=\"pre\">config_fn</span></code>, maps the config provided to the\ncomposite solid to the config that will be provided to the child solids.</p>\n<p>If this argument is provided, the <cite>config_schema</cite> argument can also be provided to limit\nwhat config values can be passed to the composite solid.</p>\n</p></li>\n</ul>\n</dd>\n</dl>\n<p class=\"rubric\">Examples</p>\n<div class=\"highlight-python notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"nd\">@lambda_solid</span>\n<span class=\"k\">def</span> <span class=\"nf\">add_one</span><span class=\"p\">(</span><span class=\"n\">num</span><span class=\"p\">:</span> <span class=\"nb\">int</span><span class=\"p\">)</span> <span class=\"o\">-&gt;</span> <span class=\"nb\">int</span><span class=\"p\">:</span>\n    <span class=\"k\">return</span> <span class=\"n\">num</span> <span class=\"o\">+</span> <span class=\"mi\">1</span>\n\n<span class=\"nd\">@composite_solid</span>\n<span class=\"k\">def</span> <span class=\"nf\">add_two</span><span class=\"p\">(</span><span class=\"n\">num</span><span class=\"p\">:</span> <span class=\"nb\">int</span><span class=\"p\">)</span> <span class=\"o\">-&gt;</span> <span class=\"nb\">int</span><span class=\"p\">:</span>\n    <span class=\"n\">adder_1</span> <span class=\"o\">=</span> <span class=\"n\">add_one</span><span class=\"o\">.</span><span class=\"n\">alias</span><span class=\"p\">(</span><span class=\"s1\">&#39;adder_1&#39;</span><span class=\"p\">)</span>\n    <span class=\"n\">adder_2</span> <span class=\"o\">=</span> <span class=\"n\">add_one</span><span class=\"o\">.</span><span class=\"n\">alias</span><span class=\"p\">(</span><span class=\"s1\">&#39;adder_2&#39;</span><span class=\"p\">)</span>\n\n    <span class=\"k\">return</span> <span class=\"n\">adder_2</span><span class=\"p\">(</span><span class=\"n\">adder_1</span><span class=\"p\">(</span><span class=\"n\">num</span><span class=\"p\">))</span>\n</pre></div>\n</div>\n</dd></dl>\n\n<dl class=\"py class\">\n<dt id=\"dagster.CompositeSolidDefinition\">\n<em class=\"property\"><span class=\"pre\">class</span> </em><code class=\"sig-prename descclassname\"><span class=\"pre\">dagster.</span></code><code class=\"sig-name descname\"><span class=\"pre\">CompositeSolidDefinition</span></code><span class=\"sig-paren\">(</span><em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">name</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">solid_defs</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">input_mappings</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">None</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">output_mappings</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">None</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">config_mapping</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">None</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">dependencies</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">None</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">description</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">None</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">tags</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">None</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">positional_inputs</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">None</span></span></em><span class=\"sig-paren\">)</span><a class=\"reference internal\" href=\"../../../../_modules/dagster/core/definitions/solid_definition#CompositeSolidDefinition\"><span class=\"viewcode-link\"><span class=\"pre\">[source]</span></span></a><a class=\"headerlink\" href=\"#dagster.CompositeSolidDefinition\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>The core unit of composition and abstraction, composite solids allow you to\ndefine a solid from a graph of solids.</p>\n<p>In the same way you would refactor a block of code in to a function to deduplicate, organize,\nor manage complexity - you can refactor solids in a pipeline in to a composite solid.</p>\n<dl class=\"field-list simple\">\n<dt class=\"field-odd\">Parameters</dt>\n<dd class=\"field-odd\"><ul class=\"simple\">\n<li><p><strong>name</strong> (<a class=\"reference external\" href=\"https://docs.python.org/3/library/stdtypes.html#str\" title=\"(in Python v3.8)\"><em>str</em></a>) \u2013 The name of this composite solid. Must be unique within any\n<a class=\"reference internal\" href=\"pipeline#dagster.PipelineDefinition\" title=\"dagster.PipelineDefinition\"><code class=\"xref py py-class docutils literal notranslate\"><span class=\"pre\">PipelineDefinition</span></code></a> using the solid.</p></li>\n<li><p><strong>solid_defs</strong> (<em>List</em><em>[</em><em>Union</em><em>[</em><a class=\"reference internal\" href=\"#dagster.SolidDefinition\" title=\"dagster.SolidDefinition\"><em>SolidDefinition</em></a><em>, </em><a class=\"reference internal\" href=\"#dagster.CompositeSolidDefinition\" title=\"dagster.CompositeSolidDefinition\"><em>CompositeSolidDefinition</em></a><em>]</em><em>]</em>) \u2013 The set of solid\ndefinitions used in this composite solid. Composites may be arbitrarily nested.</p></li>\n<li><p><strong>input_mappings</strong> (<em>Optional</em><em>[</em><em>List</em><em>[</em><a class=\"reference internal\" href=\"#dagster.InputMapping\" title=\"dagster.InputMapping\"><em>InputMapping</em></a><em>]</em><em>]</em>) \u2013 Define the inputs to the composite solid,\nand how they map to the inputs of its constituent solids.</p></li>\n<li><p><strong>output_mappings</strong> (<em>Optional</em><em>[</em><em>List</em><em>[</em><a class=\"reference internal\" href=\"#dagster.OutputMapping\" title=\"dagster.OutputMapping\"><em>OutputMapping</em></a><em>]</em><em>]</em>) \u2013 Define the outputs of the composite solid,\nand how they map from the outputs of its constituent solids.</p></li>\n<li><p><strong>config_mapping</strong> (<em>Optional</em><em>[</em><a class=\"reference internal\" href=\"config#dagster.ConfigMapping\" title=\"dagster.ConfigMapping\"><em>ConfigMapping</em></a><em>]</em>) \u2013 By specifying a config mapping, you can override\nthe configuration for the child solids contained within this composite solid. Config\nmappings require both a configuration field to be specified, which is exposed as the\nconfiguration for the composite solid, and a configuration mapping function, which\nis called to map the configuration of the composite solid into the configuration that\nis applied to any child solids.</p></li>\n<li><p><strong>dependencies</strong> (<em>Optional</em><em>[</em><em>Dict</em><em>[</em><em>Union</em><em>[</em><a class=\"reference external\" href=\"https://docs.python.org/3/library/stdtypes.html#str\" title=\"(in Python v3.8)\"><em>str</em></a><em>, </em><a class=\"reference internal\" href=\"graphs#dagster.NodeInvocation\" title=\"dagster.NodeInvocation\"><em>NodeInvocation</em></a><em>]</em><em>, </em><em>Dict</em><em>[</em><a class=\"reference external\" href=\"https://docs.python.org/3/library/stdtypes.html#str\" title=\"(in Python v3.8)\"><em>str</em></a><em>, </em><a class=\"reference internal\" href=\"graphs#dagster.DependencyDefinition\" title=\"dagster.DependencyDefinition\"><em>DependencyDefinition</em></a><em>]</em><em>]</em><em>]</em>) \u2013 A structure that declares where each solid gets its inputs. The keys at the top\nlevel dict are either string names of solids or NodeInvocations. The values\nare dicts that map input names to DependencyDefinitions.</p></li>\n<li><p><strong>description</strong> (<em>Optional</em><em>[</em><a class=\"reference external\" href=\"https://docs.python.org/3/library/stdtypes.html#str\" title=\"(in Python v3.8)\"><em>str</em></a><em>]</em>) \u2013 Human readable description of this composite solid.</p></li>\n<li><p><strong>tags</strong> (<em>Optional</em><em>[</em><em>Dict</em><em>[</em><a class=\"reference external\" href=\"https://docs.python.org/3/library/stdtypes.html#str\" title=\"(in Python v3.8)\"><em>str</em></a><em>, </em><em>Any</em><em>]</em><em>]</em>) \u2013 Arbitrary metadata for the solid. Frameworks may\nexpect and require certain metadata to be attached to a solid. Users should generally\nnot set metadata directly. Values that are not strings will be json encoded and must meet\nthe criteria that <cite>json.loads(json.dumps(value)) == value</cite>.\nmay expect and require certain metadata to be attached to a solid.</p></li>\n<li><p><strong>positional_inputs</strong> (<em>Optional</em><em>[</em><em>List</em><em>[</em><a class=\"reference external\" href=\"https://docs.python.org/3/library/stdtypes.html#str\" title=\"(in Python v3.8)\"><em>str</em></a><em>]</em><em>]</em>) \u2013 The positional order of the inputs if it\ndiffers from the order of the input mappings</p></li>\n</ul>\n</dd>\n</dl>\n<p class=\"rubric\">Examples</p>\n<div class=\"highlight-python notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"nd\">@lambda_solid</span>\n<span class=\"k\">def</span> <span class=\"nf\">add_one</span><span class=\"p\">(</span><span class=\"n\">num</span><span class=\"p\">:</span> <span class=\"nb\">int</span><span class=\"p\">)</span> <span class=\"o\">-&gt;</span> <span class=\"nb\">int</span><span class=\"p\">:</span>\n    <span class=\"k\">return</span> <span class=\"n\">num</span> <span class=\"o\">+</span> <span class=\"mi\">1</span>\n\n<span class=\"n\">add_two</span> <span class=\"o\">=</span> <span class=\"n\">CompositeSolidDefinition</span><span class=\"p\">(</span>\n    <span class=\"s1\">&#39;add_two&#39;</span><span class=\"p\">,</span>\n    <span class=\"n\">solid_defs</span><span class=\"o\">=</span><span class=\"p\">[</span><span class=\"n\">add_one</span><span class=\"p\">],</span>\n    <span class=\"n\">dependencies</span><span class=\"o\">=</span><span class=\"p\">{</span>\n        <span class=\"n\">NodeInvocation</span><span class=\"p\">(</span><span class=\"s1\">&#39;add_one&#39;</span><span class=\"p\">,</span> <span class=\"s1\">&#39;adder_1&#39;</span><span class=\"p\">):</span> <span class=\"p\">{},</span>\n        <span class=\"n\">NodeInvocation</span><span class=\"p\">(</span><span class=\"s1\">&#39;add_one&#39;</span><span class=\"p\">,</span> <span class=\"s1\">&#39;adder_2&#39;</span><span class=\"p\">):</span> <span class=\"p\">{</span><span class=\"s1\">&#39;num&#39;</span><span class=\"p\">:</span> <span class=\"n\">DependencyDefinition</span><span class=\"p\">(</span><span class=\"s1\">&#39;adder_1&#39;</span><span class=\"p\">)},</span>\n    <span class=\"p\">},</span>\n    <span class=\"n\">input_mappings</span><span class=\"o\">=</span><span class=\"p\">[</span><span class=\"n\">InputDefinition</span><span class=\"p\">(</span><span class=\"s1\">&#39;num&#39;</span><span class=\"p\">,</span> <span class=\"n\">Int</span><span class=\"p\">)</span><span class=\"o\">.</span><span class=\"n\">mapping_to</span><span class=\"p\">(</span><span class=\"s1\">&#39;adder_1&#39;</span><span class=\"p\">,</span> <span class=\"s1\">&#39;num&#39;</span><span class=\"p\">)],</span>\n    <span class=\"n\">output_mappings</span><span class=\"o\">=</span><span class=\"p\">[</span><span class=\"n\">OutputDefinition</span><span class=\"p\">(</span><span class=\"n\">Int</span><span class=\"p\">)</span><span class=\"o\">.</span><span class=\"n\">mapping_from</span><span class=\"p\">(</span><span class=\"s1\">&#39;adder_2&#39;</span><span class=\"p\">)],</span>\n<span class=\"p\">)</span>\n</pre></div>\n</div>\n<dl class=\"py method\">\n<dt id=\"dagster.CompositeSolidDefinition.configured\">\n<code class=\"sig-name descname\"><span class=\"pre\">configured</span></code><span class=\"sig-paren\">(</span><em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">config_or_config_fn</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">name</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">config_schema</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">None</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">description</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">None</span></span></em><span class=\"sig-paren\">)</span><a class=\"headerlink\" href=\"#dagster.CompositeSolidDefinition.configured\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Wraps this object in an object of the same type that provides configuration to the inner\nobject.</p>\n<dl class=\"field-list simple\">\n<dt class=\"field-odd\">Parameters</dt>\n<dd class=\"field-odd\"><ul class=\"simple\">\n<li><p><strong>config_or_config_fn</strong> (<em>Union</em><em>[</em><em>Any</em><em>, </em><em>Callable</em><em>[</em><em>[</em><em>Any</em><em>]</em><em>, </em><em>Any</em><em>]</em><em>]</em>) \u2013 Either (1) Run configuration\nthat fully satisfies this object\u2019s config schema or (2) A function that accepts run\nconfiguration and returns run configuration that fully satisfies this object\u2019s\nconfig schema.  In the latter case, config_schema must be specified.  When\npassing a function, it\u2019s easiest to use <a class=\"reference internal\" href=\"config#dagster.configured\" title=\"dagster.configured\"><code class=\"xref py py-func docutils literal notranslate\"><span class=\"pre\">configured()</span></code></a>.</p></li>\n<li><p><strong>name</strong> (<a class=\"reference external\" href=\"https://docs.python.org/3/library/stdtypes.html#str\" title=\"(in Python v3.8)\"><em>str</em></a>) \u2013 Name of the new definition. This is a required argument, as this definition\ntype has a name uniqueness constraint.</p></li>\n<li><p><strong>config_schema</strong> (<a class=\"reference internal\" href=\"config#dagster.ConfigSchema\" title=\"dagster.ConfigSchema\"><em>ConfigSchema</em></a>) \u2013 If config_or_config_fn is a function, the config schema\nthat its input must satisfy.</p></li>\n<li><p><strong>description</strong> (<em>Optional</em><em>[</em><a class=\"reference external\" href=\"https://docs.python.org/3/library/stdtypes.html#str\" title=\"(in Python v3.8)\"><em>str</em></a><em>]</em>) \u2013 Description of the new definition. If not specified,\ninherits the description of the definition being configured.</p></li>\n</ul>\n</dd>\n</dl>\n<p>Returns (ConfigurableDefinition): A configured version of this object.</p>\n</dd></dl>\n\n</dd></dl>\n\n<dl class=\"py class\">\n<dt id=\"dagster.InputMapping\">\n<em class=\"property\"><span class=\"pre\">class</span> </em><code class=\"sig-prename descclassname\"><span class=\"pre\">dagster.</span></code><code class=\"sig-name descname\"><span class=\"pre\">InputMapping</span></code><span class=\"sig-paren\">(</span><em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">definition</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">maps_to</span></span></em><span class=\"sig-paren\">)</span><a class=\"reference internal\" href=\"../../../../_modules/dagster/core/definitions/input#InputMapping\"><span class=\"viewcode-link\"><span class=\"pre\">[source]</span></span></a><a class=\"headerlink\" href=\"#dagster.InputMapping\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Defines an input mapping for a composite solid.</p>\n<dl class=\"field-list simple\">\n<dt class=\"field-odd\">Parameters</dt>\n<dd class=\"field-odd\"><ul class=\"simple\">\n<li><p><strong>definition</strong> (<a class=\"reference internal\" href=\"#dagster.InputDefinition\" title=\"dagster.InputDefinition\"><em>InputDefinition</em></a>) \u2013 Defines the input to the composite solid.</p></li>\n<li><p><strong>solid_name</strong> (<a class=\"reference external\" href=\"https://docs.python.org/3/library/stdtypes.html#str\" title=\"(in Python v3.8)\"><em>str</em></a>) \u2013 The name of the child solid onto which to map the input.</p></li>\n<li><p><strong>input_name</strong> (<a class=\"reference external\" href=\"https://docs.python.org/3/library/stdtypes.html#str\" title=\"(in Python v3.8)\"><em>str</em></a>) \u2013 The name of the input to the child solid onto which to map the input.</p></li>\n</ul>\n</dd>\n</dl>\n</dd></dl>\n\n<dl class=\"py class\">\n<dt id=\"dagster.OutputMapping\">\n<em class=\"property\"><span class=\"pre\">class</span> </em><code class=\"sig-prename descclassname\"><span class=\"pre\">dagster.</span></code><code class=\"sig-name descname\"><span class=\"pre\">OutputMapping</span></code><span class=\"sig-paren\">(</span><em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">definition</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">maps_from</span></span></em><span class=\"sig-paren\">)</span><a class=\"reference internal\" href=\"../../../../_modules/dagster/core/definitions/output#OutputMapping\"><span class=\"viewcode-link\"><span class=\"pre\">[source]</span></span></a><a class=\"headerlink\" href=\"#dagster.OutputMapping\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Defines an output mapping for a composite solid.</p>\n<dl class=\"field-list simple\">\n<dt class=\"field-odd\">Parameters</dt>\n<dd class=\"field-odd\"><ul class=\"simple\">\n<li><p><strong>definition</strong> (<a class=\"reference internal\" href=\"#dagster.OutputDefinition\" title=\"dagster.OutputDefinition\"><em>OutputDefinition</em></a>) \u2013 Defines the output of the composite solid.</p></li>\n<li><p><strong>solid_name</strong> (<a class=\"reference external\" href=\"https://docs.python.org/3/library/stdtypes.html#str\" title=\"(in Python v3.8)\"><em>str</em></a>) \u2013 The name of the child solid from which to map the output.</p></li>\n<li><p><strong>output_name</strong> (<a class=\"reference external\" href=\"https://docs.python.org/3/library/stdtypes.html#str\" title=\"(in Python v3.8)\"><em>str</em></a>) \u2013 The name of the child solid\u2019s output from which to map the output.</p></li>\n</ul>\n</dd>\n</dl>\n</dd></dl>\n\n<dl class=\"py class\">\n<dt>\n<em class=\"property\"><span class=\"pre\">class</span> </em><code class=\"sig-prename descclassname\"><span class=\"pre\">dagster.</span></code><code class=\"sig-name descname\"><span class=\"pre\">ConfigMapping</span></code><span class=\"sig-paren\">(</span><em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">config_fn</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">config_schema</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">None</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">receive_processed_config_values</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">None</span></span></em><span class=\"sig-paren\">)</span><a class=\"reference internal\" href=\"../../../../_modules/dagster/core/definitions/config#ConfigMapping\"><span class=\"viewcode-link\"><span class=\"pre\">[source]</span></span></a></dt>\n<dd><p>Defines a config mapping for a graph (or job).</p>\n<p>By specifying a config mapping function, you can override the configuration for the child\nops and graphs contained within a graph.</p>\n<p>Config mappings require the configuration schema to be specified as <code class=\"docutils literal notranslate\"><span class=\"pre\">config_schema</span></code>, which will\nbe exposed as the configuration schema for the graph, as well as a configuration mapping\nfunction, <code class=\"docutils literal notranslate\"><span class=\"pre\">config_fn</span></code>, which maps the config provided to the composite solid to the config\nthat will be provided to the child nodes.</p>\n<dl class=\"field-list simple\">\n<dt class=\"field-odd\">Parameters</dt>\n<dd class=\"field-odd\"><ul class=\"simple\">\n<li><p><strong>config_fn</strong> (<em>Callable</em><em>[</em><em>[</em><a class=\"reference external\" href=\"https://docs.python.org/3/library/stdtypes.html#dict\" title=\"(in Python v3.8)\"><em>dict</em></a><em>]</em><em>, </em><a class=\"reference external\" href=\"https://docs.python.org/3/library/stdtypes.html#dict\" title=\"(in Python v3.8)\"><em>dict</em></a><em>]</em>) \u2013 The function that will be called\nto map the graph config to a config appropriate for the child nodes.</p></li>\n<li><p><strong>config_schema</strong> (<a class=\"reference internal\" href=\"config#dagster.ConfigSchema\" title=\"dagster.ConfigSchema\"><em>ConfigSchema</em></a>) \u2013 The schema of the graph config.</p></li>\n<li><p><strong>receive_processed_config_values</strong> (<em>Optional</em><em>[</em><a class=\"reference external\" href=\"https://docs.python.org/3/library/functions.html#bool\" title=\"(in Python v3.8)\"><em>bool</em></a><em>]</em>) \u2013 If true, config values provided to the config_fn\nwill be converted to their dagster types before being passed in. For example, if this\nvalue is true, enum config passed to config_fn will be actual enums, while if false,\nthen enum config passed to config_fn will be strings.</p></li>\n</ul>\n</dd>\n</dl>\n</dd></dl>\n\n</div>\n<div class=\"section\" id=\"events\">\n<span id=\"solid-events\"></span><h2>Events<a class=\"headerlink\" href=\"#events\" title=\"Permalink to this headline\">\u00b6</a></h2>\n<p>The objects that can be yielded by the body of solids\u2019 compute functions to communicate with the\nDagster framework.</p>\n<p>(Note that <a class=\"reference internal\" href=\"ops#dagster.Failure\" title=\"dagster.Failure\"><code class=\"xref py py-class docutils literal notranslate\"><span class=\"pre\">Failure</span></code></a> and <a class=\"reference internal\" href=\"ops#dagster.RetryRequested\" title=\"dagster.RetryRequested\"><code class=\"xref py py-class docutils literal notranslate\"><span class=\"pre\">RetryRequested</span></code></a> are intended to be raised from solids rather than yielded.)</p>\n<div class=\"section\" id=\"event-types\">\n<h3>Event types<a class=\"headerlink\" href=\"#event-types\" title=\"Permalink to this headline\">\u00b6</a></h3>\n<dl class=\"py class\">\n<dt>\n<em class=\"property\"><span class=\"pre\">class</span> </em><code class=\"sig-prename descclassname\"><span class=\"pre\">dagster.</span></code><code class=\"sig-name descname\"><span class=\"pre\">Output</span></code><span class=\"sig-paren\">(</span><em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">value</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">output_name</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">'result'</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">metadata_entries</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">None</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">metadata</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">None</span></span></em><span class=\"sig-paren\">)</span><a class=\"reference internal\" href=\"../../../../_modules/dagster/core/definitions/events#Output\"><span class=\"viewcode-link\"><span class=\"pre\">[source]</span></span></a></dt>\n<dd><p>Event corresponding to one of a op\u2019s outputs.</p>\n<p>Op compute functions must explicitly yield events of this type when they have more than\none output, or when they also yield events of other types, or when defining a op using the\n<a class=\"reference internal\" href=\"ops#dagster.OpDefinition\" title=\"dagster.OpDefinition\"><code class=\"xref py py-class docutils literal notranslate\"><span class=\"pre\">OpDefinition</span></code></a> API directly.</p>\n<p>Outputs are values produced by ops that will be consumed by downstream ops in a job.\nThey are type-checked at op boundaries when their corresponding <a class=\"reference internal\" href=\"ops#dagster.Out\" title=\"dagster.Out\"><code class=\"xref py py-class docutils literal notranslate\"><span class=\"pre\">Out</span></code></a>\nor the downstream <a class=\"reference internal\" href=\"ops#dagster.In\" title=\"dagster.In\"><code class=\"xref py py-class docutils literal notranslate\"><span class=\"pre\">In</span></code></a> is typed.</p>\n<dl class=\"field-list simple\">\n<dt class=\"field-odd\">Parameters</dt>\n<dd class=\"field-odd\"><ul class=\"simple\">\n<li><p><strong>value</strong> (<em>Any</em>) \u2013 The value returned by the compute function.</p></li>\n<li><p><strong>output_name</strong> (<em>Optional</em><em>[</em><a class=\"reference external\" href=\"https://docs.python.org/3/library/stdtypes.html#str\" title=\"(in Python v3.8)\"><em>str</em></a><em>]</em>) \u2013 Name of the corresponding out. (default:\n\u201cresult\u201d)</p></li>\n<li><p><strong>metadata_entries</strong> (<em>Optional</em><em>[</em><em>Union</em><em>[</em><a class=\"reference internal\" href=\"ops#dagster.MetadataEntry\" title=\"dagster.MetadataEntry\"><em>MetadataEntry</em></a><em>, </em><em>PartitionMetadataEntry</em><em>]</em><em>]</em>) \u2013 (Experimental) A set of metadata entries to attach to events related to this Output.</p></li>\n<li><p><strong>metadata</strong> (<em>Optional</em><em>[</em><em>Dict</em><em>[</em><a class=\"reference external\" href=\"https://docs.python.org/3/library/stdtypes.html#str\" title=\"(in Python v3.8)\"><em>str</em></a><em>, </em><em>Union</em><em>[</em><a class=\"reference external\" href=\"https://docs.python.org/3/library/stdtypes.html#str\" title=\"(in Python v3.8)\"><em>str</em></a><em>, </em><a class=\"reference external\" href=\"https://docs.python.org/3/library/functions.html#float\" title=\"(in Python v3.8)\"><em>float</em></a><em>, </em><a class=\"reference external\" href=\"https://docs.python.org/3/library/functions.html#int\" title=\"(in Python v3.8)\"><em>int</em></a><em>, </em><em>Dict</em><em>, </em><a class=\"reference internal\" href=\"ops#dagster.MetadataValue\" title=\"dagster.MetadataValue\"><em>MetadataValue</em></a><em>]</em><em>]</em><em>]</em>) \u2013 Arbitrary metadata about the failure.  Keys are displayed string labels, and values are\none of the following: string, float, int, JSON-serializable dict, JSON-serializable\nlist, and one of the data classes returned by a MetadataValue static method.</p></li>\n</ul>\n</dd>\n</dl>\n</dd></dl>\n\n<dl class=\"py class\">\n<dt>\n<em class=\"property\"><span class=\"pre\">class</span> </em><code class=\"sig-prename descclassname\"><span class=\"pre\">dagster.</span></code><code class=\"sig-name descname\"><span class=\"pre\">AssetMaterialization</span></code><span class=\"sig-paren\">(</span><em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">asset_key</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">description</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">None</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">metadata_entries</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">None</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">partition</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">None</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">metadata</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">None</span></span></em><span class=\"sig-paren\">)</span><a class=\"reference internal\" href=\"../../../../_modules/dagster/core/definitions/events#AssetMaterialization\"><span class=\"viewcode-link\"><span class=\"pre\">[source]</span></span></a></dt>\n<dd><p>Event indicating that an op has materialized an asset.</p>\n<p>Op compute functions may yield events of this type whenever they wish to indicate to the\nDagster framework (and the end user) that they have produced a materialized value as a\nside effect of computation. Unlike outputs, asset materializations can not be passed to other\nops, and their persistence is controlled by op logic, rather than by the Dagster\nframework.</p>\n<p>Op authors should use these events to organize metadata about the side effects of their\ncomputations, enabling tooling like the Assets dashboard in Dagit.</p>\n<dl class=\"field-list simple\">\n<dt class=\"field-odd\">Parameters</dt>\n<dd class=\"field-odd\"><ul class=\"simple\">\n<li><p><strong>asset_key</strong> (<em>Union</em><em>[</em><a class=\"reference external\" href=\"https://docs.python.org/3/library/stdtypes.html#str\" title=\"(in Python v3.8)\"><em>str</em></a><em>, </em><em>List</em><em>[</em><a class=\"reference external\" href=\"https://docs.python.org/3/library/stdtypes.html#str\" title=\"(in Python v3.8)\"><em>str</em></a><em>]</em><em>, </em><a class=\"reference internal\" href=\"ops#dagster.AssetKey\" title=\"dagster.AssetKey\"><em>AssetKey</em></a><em>]</em>) \u2013 A key to identify the materialized asset across job\nruns</p></li>\n<li><p><strong>description</strong> (<em>Optional</em><em>[</em><a class=\"reference external\" href=\"https://docs.python.org/3/library/stdtypes.html#str\" title=\"(in Python v3.8)\"><em>str</em></a><em>]</em>) \u2013 A longer human-readable description of the materialized value.</p></li>\n<li><p><strong>metadata_entries</strong> (<em>Optional</em><em>[</em><em>List</em><em>[</em><em>Union</em><em>[</em><a class=\"reference internal\" href=\"ops#dagster.MetadataEntry\" title=\"dagster.MetadataEntry\"><em>MetadataEntry</em></a><em>, </em><em>PartitionMetadataEntry</em><em>]</em><em>]</em><em>]</em>) \u2013 Arbitrary metadata about the\nmaterialized value.</p></li>\n<li><p><strong>partition</strong> (<em>Optional</em><em>[</em><a class=\"reference external\" href=\"https://docs.python.org/3/library/stdtypes.html#str\" title=\"(in Python v3.8)\"><em>str</em></a><em>]</em>) \u2013 The name of the partition that was materialized.</p></li>\n<li><p><strong>metadata</strong> (<em>Optional</em><em>[</em><em>Dict</em><em>[</em><a class=\"reference external\" href=\"https://docs.python.org/3/library/stdtypes.html#str\" title=\"(in Python v3.8)\"><em>str</em></a><em>, </em><em>RawMetadataValue</em><em>]</em><em>]</em>) \u2013 Arbitrary metadata about the asset.  Keys are displayed string labels, and values are\none of the following: string, float, int, JSON-serializable dict, JSON-serializable\nlist, and one of the data classes returned by a MetadataValue static method.</p></li>\n</ul>\n</dd>\n</dl>\n<dl class=\"py method\">\n<dt>\n<em class=\"property\"><span class=\"pre\">static</span> </em><code class=\"sig-name descname\"><span class=\"pre\">file</span></code><span class=\"sig-paren\">(</span><em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">path</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">description</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">None</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">asset_key</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">None</span></span></em><span class=\"sig-paren\">)</span><a class=\"reference internal\" href=\"../../../../_modules/dagster/core/definitions/events#AssetMaterialization.file\"><span class=\"viewcode-link\"><span class=\"pre\">[source]</span></span></a></dt>\n<dd><p>Static constructor for standard materializations corresponding to files on disk.</p>\n<dl class=\"field-list simple\">\n<dt class=\"field-odd\">Parameters</dt>\n<dd class=\"field-odd\"><ul class=\"simple\">\n<li><p><strong>path</strong> (<a class=\"reference external\" href=\"https://docs.python.org/3/library/stdtypes.html#str\" title=\"(in Python v3.8)\"><em>str</em></a>) \u2013 The path to the file.</p></li>\n<li><p><strong>description</strong> (<em>Optional</em><em>[</em><a class=\"reference external\" href=\"https://docs.python.org/3/library/stdtypes.html#str\" title=\"(in Python v3.8)\"><em>str</em></a><em>]</em>) \u2013 A human-readable description of the materialization.</p></li>\n</ul>\n</dd>\n</dl>\n</dd></dl>\n\n</dd></dl>\n\n<dl class=\"py class\">\n<dt>\n<em class=\"property\"><span class=\"pre\">class</span> </em><code class=\"sig-prename descclassname\"><span class=\"pre\">dagster.</span></code><code class=\"sig-name descname\"><span class=\"pre\">ExpectationResult</span></code><span class=\"sig-paren\">(</span><em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">success</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">label</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">None</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">description</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">None</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">metadata_entries</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">None</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">metadata</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">None</span></span></em><span class=\"sig-paren\">)</span><a class=\"reference internal\" href=\"../../../../_modules/dagster/core/definitions/events#ExpectationResult\"><span class=\"viewcode-link\"><span class=\"pre\">[source]</span></span></a></dt>\n<dd><p>Event corresponding to a data quality test.</p>\n<p>Op compute functions may yield events of this type whenever they wish to indicate to the\nDagster framework (and the end user) that a data quality test has produced a (positive or\nnegative) result.</p>\n<dl class=\"field-list simple\">\n<dt class=\"field-odd\">Parameters</dt>\n<dd class=\"field-odd\"><ul class=\"simple\">\n<li><p><strong>success</strong> (<a class=\"reference external\" href=\"https://docs.python.org/3/library/functions.html#bool\" title=\"(in Python v3.8)\"><em>bool</em></a>) \u2013 Whether the expectation passed or not.</p></li>\n<li><p><strong>label</strong> (<em>Optional</em><em>[</em><a class=\"reference external\" href=\"https://docs.python.org/3/library/stdtypes.html#str\" title=\"(in Python v3.8)\"><em>str</em></a><em>]</em>) \u2013 Short display name for expectation. Defaults to \u201cresult\u201d.</p></li>\n<li><p><strong>description</strong> (<em>Optional</em><em>[</em><a class=\"reference external\" href=\"https://docs.python.org/3/library/stdtypes.html#str\" title=\"(in Python v3.8)\"><em>str</em></a><em>]</em>) \u2013 A longer human-readable description of the expectation.</p></li>\n<li><p><strong>metadata_entries</strong> (<em>Optional</em><em>[</em><em>List</em><em>[</em><a class=\"reference internal\" href=\"ops#dagster.MetadataEntry\" title=\"dagster.MetadataEntry\"><em>MetadataEntry</em></a><em>]</em><em>]</em>) \u2013 Arbitrary metadata about the\nexpectation.</p></li>\n<li><p><strong>metadata</strong> (<em>Optional</em><em>[</em><em>Dict</em><em>[</em><a class=\"reference external\" href=\"https://docs.python.org/3/library/stdtypes.html#str\" title=\"(in Python v3.8)\"><em>str</em></a><em>, </em><em>RawMetadataValue</em><em>]</em><em>]</em>) \u2013 Arbitrary metadata about the failure.  Keys are displayed string labels, and values are\none of the following: string, float, int, JSON-serializable dict, JSON-serializable\nlist, and one of the data classes returned by a MetadataValue static method.</p></li>\n</ul>\n</dd>\n</dl>\n</dd></dl>\n\n<dl class=\"py class\">\n<dt>\n<em class=\"property\"><span class=\"pre\">class</span> </em><code class=\"sig-prename descclassname\"><span class=\"pre\">dagster.</span></code><code class=\"sig-name descname\"><span class=\"pre\">TypeCheck</span></code><span class=\"sig-paren\">(</span><em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">success</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">description</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">None</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">metadata_entries</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">None</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">metadata</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">None</span></span></em><span class=\"sig-paren\">)</span><a class=\"reference internal\" href=\"../../../../_modules/dagster/core/definitions/events#TypeCheck\"><span class=\"viewcode-link\"><span class=\"pre\">[source]</span></span></a></dt>\n<dd><p>Event corresponding to a successful typecheck.</p>\n<p>Events of this type should be returned by user-defined type checks when they need to encapsulate\nadditional metadata about a type check\u2019s success or failure. (i.e., when using\n<code class=\"xref py py-func docutils literal notranslate\"><span class=\"pre\">as_dagster_type()</span></code>, <code class=\"xref py py-func docutils literal notranslate\"><span class=\"pre\">&#64;usable_as_dagster_type</span></code>, or the underlying\n<a class=\"reference internal\" href=\"types#dagster.PythonObjectDagsterType\" title=\"dagster.PythonObjectDagsterType\"><code class=\"xref py py-func docutils literal notranslate\"><span class=\"pre\">PythonObjectDagsterType()</span></code></a> API.)</p>\n<p>Solid compute functions should generally avoid yielding events of this type to avoid confusion.</p>\n<dl class=\"field-list simple\">\n<dt class=\"field-odd\">Parameters</dt>\n<dd class=\"field-odd\"><ul class=\"simple\">\n<li><p><strong>success</strong> (<a class=\"reference external\" href=\"https://docs.python.org/3/library/functions.html#bool\" title=\"(in Python v3.8)\"><em>bool</em></a>) \u2013 <code class=\"docutils literal notranslate\"><span class=\"pre\">True</span></code> if the type check succeeded, <code class=\"docutils literal notranslate\"><span class=\"pre\">False</span></code> otherwise.</p></li>\n<li><p><strong>description</strong> (<em>Optional</em><em>[</em><a class=\"reference external\" href=\"https://docs.python.org/3/library/stdtypes.html#str\" title=\"(in Python v3.8)\"><em>str</em></a><em>]</em>) \u2013 A human-readable description of the type check.</p></li>\n<li><p><strong>metadata_entries</strong> (<em>Optional</em><em>[</em><em>List</em><em>[</em><a class=\"reference internal\" href=\"ops#dagster.MetadataEntry\" title=\"dagster.MetadataEntry\"><em>MetadataEntry</em></a><em>]</em><em>]</em>) \u2013 Arbitrary metadata about the\ntype check.</p></li>\n<li><p><strong>metadata</strong> (<em>Optional</em><em>[</em><em>Dict</em><em>[</em><a class=\"reference external\" href=\"https://docs.python.org/3/library/stdtypes.html#str\" title=\"(in Python v3.8)\"><em>str</em></a><em>, </em><em>RawMetadataValue</em><em>]</em><em>]</em>) \u2013 Arbitrary metadata about the failure.  Keys are displayed string labels, and values are\none of the following: string, float, int, JSON-serializable dict, JSON-serializable\nlist, and one of the data classes returned by a MetadataValue static method.</p></li>\n</ul>\n</dd>\n</dl>\n</dd></dl>\n\n<dl class=\"py class\">\n<dt>\n<em class=\"property\"><span class=\"pre\">class</span> </em><code class=\"sig-prename descclassname\"><span class=\"pre\">dagster.</span></code><code class=\"sig-name descname\"><span class=\"pre\">Failure</span></code><span class=\"sig-paren\">(</span><em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">description</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">None</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">metadata_entries</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">None</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">metadata</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">None</span></span></em><span class=\"sig-paren\">)</span><a class=\"reference internal\" href=\"../../../../_modules/dagster/core/definitions/events#Failure\"><span class=\"viewcode-link\"><span class=\"pre\">[source]</span></span></a></dt>\n<dd><p>Event indicating op failure.</p>\n<p>Raise events of this type from within op compute functions or custom type checks in order to\nindicate an unrecoverable failure in user code to the Dagster machinery and return\nstructured metadata about the failure.</p>\n<dl class=\"field-list simple\">\n<dt class=\"field-odd\">Parameters</dt>\n<dd class=\"field-odd\"><ul class=\"simple\">\n<li><p><strong>description</strong> (<em>Optional</em><em>[</em><a class=\"reference external\" href=\"https://docs.python.org/3/library/stdtypes.html#str\" title=\"(in Python v3.8)\"><em>str</em></a><em>]</em>) \u2013 A human-readable description of the failure.</p></li>\n<li><p><strong>metadata_entries</strong> (<em>Optional</em><em>[</em><em>List</em><em>[</em><a class=\"reference internal\" href=\"ops#dagster.MetadataEntry\" title=\"dagster.MetadataEntry\"><em>MetadataEntry</em></a><em>]</em><em>]</em>) \u2013 Arbitrary metadata about the\nfailure.</p></li>\n<li><p><strong>metadata</strong> (<em>Optional</em><em>[</em><em>Dict</em><em>[</em><a class=\"reference external\" href=\"https://docs.python.org/3/library/stdtypes.html#str\" title=\"(in Python v3.8)\"><em>str</em></a><em>, </em><em>RawMetadataValue</em><em>]</em><em>]</em>) \u2013 Arbitrary metadata about the failure.  Keys are displayed string labels, and values are\none of the following: string, float, int, JSON-serializable dict, JSON-serializable\nlist, and one of the data classes returned by a MetadataValue static method.</p></li>\n</ul>\n</dd>\n</dl>\n</dd></dl>\n\n<dl class=\"py class\">\n<dt>\n<em class=\"property\"><span class=\"pre\">class</span> </em><code class=\"sig-prename descclassname\"><span class=\"pre\">dagster.</span></code><code class=\"sig-name descname\"><span class=\"pre\">RetryRequested</span></code><span class=\"sig-paren\">(</span><em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">max_retries</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">1</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">seconds_to_wait</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">None</span></span></em><span class=\"sig-paren\">)</span><a class=\"reference internal\" href=\"../../../../_modules/dagster/core/definitions/events#RetryRequested\"><span class=\"viewcode-link\"><span class=\"pre\">[source]</span></span></a></dt>\n<dd><p>An exception to raise from an op to indicate that it should be retried.</p>\n<dl class=\"field-list simple\">\n<dt class=\"field-odd\">Parameters</dt>\n<dd class=\"field-odd\"><ul class=\"simple\">\n<li><p><strong>max_retries</strong> (<em>Optional</em><em>[</em><a class=\"reference external\" href=\"https://docs.python.org/3/library/functions.html#int\" title=\"(in Python v3.8)\"><em>int</em></a><em>]</em>) \u2013 The max number of retries this step should attempt before failing</p></li>\n<li><p><strong>seconds_to_wait</strong> (<em>Optional</em><em>[</em><em>Union</em><em>[</em><a class=\"reference external\" href=\"https://docs.python.org/3/library/functions.html#float\" title=\"(in Python v3.8)\"><em>float</em></a><em>,</em><a class=\"reference external\" href=\"https://docs.python.org/3/library/functions.html#int\" title=\"(in Python v3.8)\"><em>int</em></a><em>]</em><em>]</em>) \u2013 Seconds to wait before restarting the step after putting the step in\nto the up_for_retry state</p></li>\n</ul>\n</dd>\n</dl>\n<p class=\"rubric\">Example</p>\n<div class=\"highlight-python notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"nd\">@op</span>\n<span class=\"k\">def</span> <span class=\"nf\">flakes</span><span class=\"p\">():</span>\n    <span class=\"k\">try</span><span class=\"p\">:</span>\n        <span class=\"n\">flakey_operation</span><span class=\"p\">()</span>\n    <span class=\"k\">except</span> <span class=\"ne\">Exception</span> <span class=\"k\">as</span> <span class=\"n\">e</span><span class=\"p\">:</span>\n        <span class=\"k\">raise</span> <span class=\"n\">RetryRequested</span><span class=\"p\">(</span><span class=\"n\">max_retries</span><span class=\"o\">=</span><span class=\"mi\">3</span><span class=\"p\">)</span> <span class=\"kn\">from</span> <span class=\"nn\">e</span>\n</pre></div>\n</div>\n</dd></dl>\n\n</div>\n<hr class=\"docutils\" />\n<div class=\"section\" id=\"metadata\">\n<h3>Metadata<a class=\"headerlink\" href=\"#metadata\" title=\"Permalink to this headline\">\u00b6</a></h3>\n<p>Dagster uses metadata to communicate arbitrary user-specified metadata about structured\nevents.</p>\n<dl class=\"py class\">\n<dt>\n<em class=\"property\"><span class=\"pre\">class</span> </em><code class=\"sig-prename descclassname\"><span class=\"pre\">dagster.</span></code><code class=\"sig-name descname\"><span class=\"pre\">MetadataValue</span></code><a class=\"reference internal\" href=\"../../../../_modules/dagster/core/definitions/metadata#MetadataValue\"><span class=\"viewcode-link\"><span class=\"pre\">[source]</span></span></a></dt>\n<dd><p>Utility class to wrap metadata values passed into Dagster events so that they can be\ndisplayed in Dagit and other tooling.</p>\n<div class=\"highlight-python notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"nd\">@op</span>\n<span class=\"k\">def</span> <span class=\"nf\">emit_metadata</span><span class=\"p\">(</span><span class=\"n\">context</span><span class=\"p\">,</span> <span class=\"n\">df</span><span class=\"p\">):</span>\n    <span class=\"k\">yield</span> <span class=\"n\">AssetMaterialization</span><span class=\"p\">(</span>\n        <span class=\"n\">asset_key</span><span class=\"o\">=</span><span class=\"s2\">&quot;my_dataset&quot;</span><span class=\"p\">,</span>\n        <span class=\"n\">metadata</span><span class=\"o\">=</span><span class=\"p\">{</span>\n            <span class=\"s2\">&quot;my_text_label&quot;</span><span class=\"p\">:</span> <span class=\"s2\">&quot;hello&quot;</span><span class=\"p\">,</span>\n            <span class=\"s2\">&quot;dashboard_url&quot;</span><span class=\"p\">:</span> <span class=\"n\">MetadataValue</span><span class=\"o\">.</span><span class=\"n\">url</span><span class=\"p\">(</span><span class=\"s2\">&quot;http://mycoolsite.com/my_dashboard&quot;</span><span class=\"p\">),</span>\n            <span class=\"s2\">&quot;num_rows&quot;</span><span class=\"p\">:</span> <span class=\"mi\">0</span><span class=\"p\">,</span>\n        <span class=\"p\">},</span>\n    <span class=\"p\">)</span>\n</pre></div>\n</div>\n<dl class=\"py method\">\n<dt>\n<em class=\"property\"><span class=\"pre\">static</span> </em><code class=\"sig-name descname\"><span class=\"pre\">asset</span></code><span class=\"sig-paren\">(</span><em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">asset_key</span></span></em><span class=\"sig-paren\">)</span><a class=\"reference internal\" href=\"../../../../_modules/dagster/core/definitions/metadata#MetadataValue.asset\"><span class=\"viewcode-link\"><span class=\"pre\">[source]</span></span></a></dt>\n<dd><p>Static constructor for a metadata value referencing a Dagster asset, by key.</p>\n<p>For example:</p>\n<div class=\"highlight-python notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"nd\">@op</span>\n<span class=\"k\">def</span> <span class=\"nf\">validate_table</span><span class=\"p\">(</span><span class=\"n\">context</span><span class=\"p\">,</span> <span class=\"n\">df</span><span class=\"p\">):</span>\n    <span class=\"k\">yield</span> <span class=\"n\">AssetMaterialization</span><span class=\"p\">(</span>\n        <span class=\"n\">asset_key</span><span class=\"o\">=</span><span class=\"n\">AssetKey</span><span class=\"p\">(</span><span class=\"s2\">&quot;my_table&quot;</span><span class=\"p\">),</span>\n        <span class=\"n\">metadata</span><span class=\"o\">=</span><span class=\"p\">{</span>\n            <span class=\"s2\">&quot;Related asset&quot;</span><span class=\"p\">:</span> <span class=\"n\">MetadataValue</span><span class=\"o\">.</span><span class=\"n\">asset</span><span class=\"p\">(</span><span class=\"n\">AssetKey</span><span class=\"p\">(</span><span class=\"s1\">&#39;my_other_table&#39;</span><span class=\"p\">)),</span>\n        <span class=\"p\">},</span>\n    <span class=\"p\">)</span>\n</pre></div>\n</div>\n<dl class=\"field-list simple\">\n<dt class=\"field-odd\">Parameters</dt>\n<dd class=\"field-odd\"><p><strong>asset_key</strong> (<a class=\"reference internal\" href=\"ops#dagster.AssetKey\" title=\"dagster.AssetKey\"><em>AssetKey</em></a>) \u2013 The asset key referencing the asset.</p>\n</dd>\n</dl>\n</dd></dl>\n\n<dl class=\"py method\">\n<dt>\n<em class=\"property\"><span class=\"pre\">static</span> </em><code class=\"sig-name descname\"><span class=\"pre\">bool</span></code><span class=\"sig-paren\">(</span><em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">value</span></span></em><span class=\"sig-paren\">)</span><a class=\"reference internal\" href=\"../../../../_modules/dagster/core/definitions/metadata#MetadataValue.bool\"><span class=\"viewcode-link\"><span class=\"pre\">[source]</span></span></a></dt>\n<dd><p>Static constructor for a metadata value wrapping a bool as\n<code class=\"xref py py-class docutils literal notranslate\"><span class=\"pre\">BoolMetadataValuye</span></code>. Can be used as the value type for the <cite>metadata</cite>\nparameter for supported events. For example:</p>\n<div class=\"highlight-python notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"nd\">@op</span>\n<span class=\"k\">def</span> <span class=\"nf\">emit_metadata</span><span class=\"p\">(</span><span class=\"n\">context</span><span class=\"p\">,</span> <span class=\"n\">df</span><span class=\"p\">):</span>\n    <span class=\"k\">yield</span> <span class=\"n\">AssetMaterialization</span><span class=\"p\">(</span>\n        <span class=\"n\">asset_key</span><span class=\"o\">=</span><span class=\"s2\">&quot;my_dataset&quot;</span><span class=\"p\">,</span>\n        <span class=\"n\">metadata</span><span class=\"o\">=</span><span class=\"p\">{</span>\n            <span class=\"s2\">&quot;num rows &gt; 1000&quot;</span><span class=\"p\">:</span> <span class=\"n\">MetadataValue</span><span class=\"o\">.</span><span class=\"n\">bool</span><span class=\"p\">(</span><span class=\"nb\">len</span><span class=\"p\">(</span><span class=\"n\">df</span><span class=\"p\">)</span> <span class=\"o\">&gt;</span> <span class=\"mi\">1000</span><span class=\"p\">),</span>\n        <span class=\"p\">},</span>\n    <span class=\"p\">)</span>\n</pre></div>\n</div>\n<dl class=\"field-list simple\">\n<dt class=\"field-odd\">Parameters</dt>\n<dd class=\"field-odd\"><p><strong>value</strong> (<a class=\"reference external\" href=\"https://docs.python.org/3/library/functions.html#bool\" title=\"(in Python v3.8)\"><em>bool</em></a>) \u2013 The bool value for a metadata entry.</p>\n</dd>\n</dl>\n</dd></dl>\n\n<dl class=\"py method\">\n<dt>\n<em class=\"property\"><span class=\"pre\">static</span> </em><code class=\"sig-name descname\"><span class=\"pre\">dagster_run</span></code><span class=\"sig-paren\">(</span><em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">run_id</span></span></em><span class=\"sig-paren\">)</span><a class=\"reference internal\" href=\"../../../../_modules/dagster/core/definitions/metadata#MetadataValue.dagster_run\"><span class=\"viewcode-link\"><span class=\"pre\">[source]</span></span></a></dt>\n<dd><p>Static constructor for a metadata value wrapping a reference to a Dagster run.</p>\n<dl class=\"field-list simple\">\n<dt class=\"field-odd\">Parameters</dt>\n<dd class=\"field-odd\"><p><strong>run_id</strong> (<a class=\"reference external\" href=\"https://docs.python.org/3/library/stdtypes.html#str\" title=\"(in Python v3.8)\"><em>str</em></a>) \u2013 The ID of the run.</p>\n</dd>\n</dl>\n</dd></dl>\n\n<dl class=\"py method\">\n<dt>\n<em class=\"property\"><span class=\"pre\">static</span> </em><code class=\"sig-name descname\"><span class=\"pre\">float</span></code><span class=\"sig-paren\">(</span><em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">value</span></span></em><span class=\"sig-paren\">)</span><a class=\"reference internal\" href=\"../../../../_modules/dagster/core/definitions/metadata#MetadataValue.float\"><span class=\"viewcode-link\"><span class=\"pre\">[source]</span></span></a></dt>\n<dd><p>Static constructor for a metadata value wrapping a float as\n<a class=\"reference internal\" href=\"ops#dagster.FloatMetadataValue\" title=\"dagster.FloatMetadataValue\"><code class=\"xref py py-class docutils literal notranslate\"><span class=\"pre\">FloatMetadataValue</span></code></a>. Can be used as the value type for the <cite>metadata</cite>\nparameter for supported events. For example:</p>\n<div class=\"highlight-python notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"nd\">@op</span>\n<span class=\"k\">def</span> <span class=\"nf\">emit_metadata</span><span class=\"p\">(</span><span class=\"n\">context</span><span class=\"p\">,</span> <span class=\"n\">df</span><span class=\"p\">):</span>\n    <span class=\"k\">yield</span> <span class=\"n\">AssetMaterialization</span><span class=\"p\">(</span>\n        <span class=\"n\">asset_key</span><span class=\"o\">=</span><span class=\"s2\">&quot;my_dataset&quot;</span><span class=\"p\">,</span>\n        <span class=\"n\">metadata</span><span class=\"o\">=</span><span class=\"p\">{</span>\n            <span class=\"s2\">&quot;size (bytes)&quot;</span><span class=\"p\">:</span> <span class=\"n\">MetadataValue</span><span class=\"o\">.</span><span class=\"n\">float</span><span class=\"p\">(</span><span class=\"n\">calculate_bytes</span><span class=\"p\">(</span><span class=\"n\">df</span><span class=\"p\">)),</span>\n        <span class=\"p\">}</span>\n    <span class=\"p\">)</span>\n</pre></div>\n</div>\n<dl class=\"field-list simple\">\n<dt class=\"field-odd\">Parameters</dt>\n<dd class=\"field-odd\"><p><strong>value</strong> (<a class=\"reference external\" href=\"https://docs.python.org/3/library/functions.html#float\" title=\"(in Python v3.8)\"><em>float</em></a>) \u2013 The float value for a metadata entry.</p>\n</dd>\n</dl>\n</dd></dl>\n\n<dl class=\"py method\">\n<dt>\n<em class=\"property\"><span class=\"pre\">static</span> </em><code class=\"sig-name descname\"><span class=\"pre\">int</span></code><span class=\"sig-paren\">(</span><em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">value</span></span></em><span class=\"sig-paren\">)</span><a class=\"reference internal\" href=\"../../../../_modules/dagster/core/definitions/metadata#MetadataValue.int\"><span class=\"viewcode-link\"><span class=\"pre\">[source]</span></span></a></dt>\n<dd><p>Static constructor for a metadata value wrapping an int as\n<a class=\"reference internal\" href=\"ops#dagster.IntMetadataValue\" title=\"dagster.IntMetadataValue\"><code class=\"xref py py-class docutils literal notranslate\"><span class=\"pre\">IntMetadataValue</span></code></a>. Can be used as the value type for the <cite>metadata</cite>\nparameter for supported events. For example:</p>\n<div class=\"highlight-python notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"nd\">@op</span>\n<span class=\"k\">def</span> <span class=\"nf\">emit_metadata</span><span class=\"p\">(</span><span class=\"n\">context</span><span class=\"p\">,</span> <span class=\"n\">df</span><span class=\"p\">):</span>\n    <span class=\"k\">yield</span> <span class=\"n\">AssetMaterialization</span><span class=\"p\">(</span>\n        <span class=\"n\">asset_key</span><span class=\"o\">=</span><span class=\"s2\">&quot;my_dataset&quot;</span><span class=\"p\">,</span>\n        <span class=\"n\">metadata</span><span class=\"o\">=</span><span class=\"p\">{</span>\n            <span class=\"s2\">&quot;number of rows&quot;</span><span class=\"p\">:</span> <span class=\"n\">MetadataValue</span><span class=\"o\">.</span><span class=\"n\">int</span><span class=\"p\">(</span><span class=\"nb\">len</span><span class=\"p\">(</span><span class=\"n\">df</span><span class=\"p\">)),</span>\n        <span class=\"p\">},</span>\n    <span class=\"p\">)</span>\n</pre></div>\n</div>\n<dl class=\"field-list simple\">\n<dt class=\"field-odd\">Parameters</dt>\n<dd class=\"field-odd\"><p><strong>value</strong> (<a class=\"reference external\" href=\"https://docs.python.org/3/library/functions.html#int\" title=\"(in Python v3.8)\"><em>int</em></a>) \u2013 The int value for a metadata entry.</p>\n</dd>\n</dl>\n</dd></dl>\n\n<dl class=\"py method\">\n<dt>\n<em class=\"property\"><span class=\"pre\">static</span> </em><code class=\"sig-name descname\"><span class=\"pre\">json</span></code><span class=\"sig-paren\">(</span><em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">data</span></span></em><span class=\"sig-paren\">)</span><a class=\"reference internal\" href=\"../../../../_modules/dagster/core/definitions/metadata#MetadataValue.json\"><span class=\"viewcode-link\"><span class=\"pre\">[source]</span></span></a></dt>\n<dd><p>Static constructor for a metadata value wrapping a path as\n<a class=\"reference internal\" href=\"ops#dagster.JsonMetadataValue\" title=\"dagster.JsonMetadataValue\"><code class=\"xref py py-class docutils literal notranslate\"><span class=\"pre\">JsonMetadataValue</span></code></a>. Can be used as the value type for the <cite>metadata</cite>\nparameter for supported events. For example:</p>\n<div class=\"highlight-python notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"nd\">@op</span>\n<span class=\"k\">def</span> <span class=\"nf\">emit_metadata</span><span class=\"p\">(</span><span class=\"n\">context</span><span class=\"p\">):</span>\n    <span class=\"k\">yield</span> <span class=\"n\">ExpectationResult</span><span class=\"p\">(</span>\n        <span class=\"n\">success</span><span class=\"o\">=</span><span class=\"ow\">not</span> <span class=\"n\">missing_things</span><span class=\"p\">,</span>\n        <span class=\"n\">label</span><span class=\"o\">=</span><span class=\"s2\">&quot;is_present&quot;</span><span class=\"p\">,</span>\n        <span class=\"n\">metadata</span><span class=\"o\">=</span><span class=\"p\">{</span>\n            <span class=\"s2\">&quot;about my dataset&quot;</span><span class=\"p\">:</span> <span class=\"n\">MetadataValue</span><span class=\"o\">.</span><span class=\"n\">json</span><span class=\"p\">({</span><span class=\"s2\">&quot;missing_columns&quot;</span><span class=\"p\">:</span> <span class=\"n\">missing_things</span><span class=\"p\">})</span>\n        <span class=\"p\">},</span>\n    <span class=\"p\">)</span>\n</pre></div>\n</div>\n<dl class=\"field-list simple\">\n<dt class=\"field-odd\">Parameters</dt>\n<dd class=\"field-odd\"><p><strong>data</strong> (<em>Dict</em><em>[</em><a class=\"reference external\" href=\"https://docs.python.org/3/library/stdtypes.html#str\" title=\"(in Python v3.8)\"><em>str</em></a><em>, </em><em>Any</em><em>]</em>) \u2013 The JSON data for a metadata entry.</p>\n</dd>\n</dl>\n</dd></dl>\n\n<dl class=\"py method\">\n<dt>\n<em class=\"property\"><span class=\"pre\">static</span> </em><code class=\"sig-name descname\"><span class=\"pre\">md</span></code><span class=\"sig-paren\">(</span><em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">data</span></span></em><span class=\"sig-paren\">)</span><a class=\"reference internal\" href=\"../../../../_modules/dagster/core/definitions/metadata#MetadataValue.md\"><span class=\"viewcode-link\"><span class=\"pre\">[source]</span></span></a></dt>\n<dd><p>Static constructor for a metadata value wrapping markdown data as\n<a class=\"reference internal\" href=\"ops#dagster.MarkdownMetadataValue\" title=\"dagster.MarkdownMetadataValue\"><code class=\"xref py py-class docutils literal notranslate\"><span class=\"pre\">MarkdownMetadataValue</span></code></a>. Can be used as the value type for the <cite>metadata</cite>\nparameter for supported events. For example:</p>\n<div class=\"highlight-python notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"nd\">@op</span>\n<span class=\"k\">def</span> <span class=\"nf\">emit_metadata</span><span class=\"p\">(</span><span class=\"n\">context</span><span class=\"p\">,</span> <span class=\"n\">md_str</span><span class=\"p\">):</span>\n    <span class=\"k\">yield</span> <span class=\"n\">AssetMaterialization</span><span class=\"p\">(</span>\n        <span class=\"n\">asset_key</span><span class=\"o\">=</span><span class=\"s2\">&quot;info&quot;</span><span class=\"p\">,</span>\n        <span class=\"n\">metadata</span><span class=\"o\">=</span><span class=\"p\">{</span>\n            <span class=\"s1\">&#39;Details&#39;</span><span class=\"p\">:</span> <span class=\"n\">MetadataValue</span><span class=\"o\">.</span><span class=\"n\">md</span><span class=\"p\">(</span><span class=\"n\">md_str</span><span class=\"p\">)</span>\n        <span class=\"p\">},</span>\n    <span class=\"p\">)</span>\n</pre></div>\n</div>\n<dl class=\"field-list simple\">\n<dt class=\"field-odd\">Parameters</dt>\n<dd class=\"field-odd\"><p><strong>md_str</strong> (<a class=\"reference external\" href=\"https://docs.python.org/3/library/stdtypes.html#str\" title=\"(in Python v3.8)\"><em>str</em></a>) \u2013 The markdown for a metadata entry.</p>\n</dd>\n</dl>\n</dd></dl>\n\n<dl class=\"py method\">\n<dt>\n<em class=\"property\"><span class=\"pre\">static</span> </em><code class=\"sig-name descname\"><span class=\"pre\">path</span></code><span class=\"sig-paren\">(</span><em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">path</span></span></em><span class=\"sig-paren\">)</span><a class=\"reference internal\" href=\"../../../../_modules/dagster/core/definitions/metadata#MetadataValue.path\"><span class=\"viewcode-link\"><span class=\"pre\">[source]</span></span></a></dt>\n<dd><p>Static constructor for a metadata value wrapping a path as\n<a class=\"reference internal\" href=\"ops#dagster.PathMetadataValue\" title=\"dagster.PathMetadataValue\"><code class=\"xref py py-class docutils literal notranslate\"><span class=\"pre\">PathMetadataValue</span></code></a>. For example:</p>\n<div class=\"highlight-python notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"nd\">@op</span>\n<span class=\"k\">def</span> <span class=\"nf\">emit_metadata</span><span class=\"p\">(</span><span class=\"n\">context</span><span class=\"p\">):</span>\n    <span class=\"k\">yield</span> <span class=\"n\">AssetMaterialization</span><span class=\"p\">(</span>\n        <span class=\"n\">asset_key</span><span class=\"o\">=</span><span class=\"s2\">&quot;my_dataset&quot;</span><span class=\"p\">,</span>\n        <span class=\"n\">metadata</span><span class=\"o\">=</span><span class=\"p\">{</span>\n            <span class=\"s2\">&quot;filepath&quot;</span><span class=\"p\">:</span> <span class=\"n\">MetadataValue</span><span class=\"o\">.</span><span class=\"n\">path</span><span class=\"p\">(</span><span class=\"s2\">&quot;path/to/file&quot;</span><span class=\"p\">),</span>\n        <span class=\"p\">}</span>\n    <span class=\"p\">)</span>\n</pre></div>\n</div>\n<dl class=\"field-list simple\">\n<dt class=\"field-odd\">Parameters</dt>\n<dd class=\"field-odd\"><p><strong>path</strong> (<a class=\"reference external\" href=\"https://docs.python.org/3/library/stdtypes.html#str\" title=\"(in Python v3.8)\"><em>str</em></a>) \u2013 The path for a metadata entry.</p>\n</dd>\n</dl>\n</dd></dl>\n\n<dl class=\"py method\">\n<dt>\n<em class=\"property\"><span class=\"pre\">static</span> </em><code class=\"sig-name descname\"><span class=\"pre\">python_artifact</span></code><span class=\"sig-paren\">(</span><em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">python_artifact</span></span></em><span class=\"sig-paren\">)</span><a class=\"reference internal\" href=\"../../../../_modules/dagster/core/definitions/metadata#MetadataValue.python_artifact\"><span class=\"viewcode-link\"><span class=\"pre\">[source]</span></span></a></dt>\n<dd><p>Static constructor for a metadata value wrapping a python artifact as\n<a class=\"reference internal\" href=\"ops#dagster.PythonArtifactMetadataValue\" title=\"dagster.PythonArtifactMetadataValue\"><code class=\"xref py py-class docutils literal notranslate\"><span class=\"pre\">PythonArtifactMetadataValue</span></code></a>. Can be used as the value type for the\n<cite>metadata</cite> parameter for supported events. For example:</p>\n<div class=\"highlight-python notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"nd\">@op</span>\n<span class=\"k\">def</span> <span class=\"nf\">emit_metadata</span><span class=\"p\">(</span><span class=\"n\">context</span><span class=\"p\">,</span> <span class=\"n\">df</span><span class=\"p\">):</span>\n    <span class=\"k\">yield</span> <span class=\"n\">AssetMaterialization</span><span class=\"p\">(</span>\n        <span class=\"n\">asset_key</span><span class=\"o\">=</span><span class=\"s2\">&quot;my_dataset&quot;</span><span class=\"p\">,</span>\n        <span class=\"n\">metadata</span><span class=\"o\">=</span><span class=\"p\">{</span>\n            <span class=\"s2\">&quot;class&quot;</span><span class=\"p\">:</span> <span class=\"n\">MetadataValue</span><span class=\"o\">.</span><span class=\"n\">python_artifact</span><span class=\"p\">(</span><span class=\"n\">MyClass</span><span class=\"p\">),</span>\n            <span class=\"s2\">&quot;function&quot;</span><span class=\"p\">:</span> <span class=\"n\">MetadataValue</span><span class=\"o\">.</span><span class=\"n\">python_artifact</span><span class=\"p\">(</span><span class=\"n\">my_function</span><span class=\"p\">),</span>\n        <span class=\"p\">}</span>\n    <span class=\"p\">)</span>\n</pre></div>\n</div>\n<dl class=\"field-list simple\">\n<dt class=\"field-odd\">Parameters</dt>\n<dd class=\"field-odd\"><p><strong>value</strong> (<em>Callable</em>) \u2013 The python class or function for a metadata entry.</p>\n</dd>\n</dl>\n</dd></dl>\n\n<dl class=\"py method\">\n<dt>\n<em class=\"property\"><span class=\"pre\">static</span> </em><code class=\"sig-name descname\"><span class=\"pre\">table</span></code><span class=\"sig-paren\">(</span><em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">records</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">schema</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">None</span></span></em><span class=\"sig-paren\">)</span><a class=\"reference internal\" href=\"../../../../_modules/dagster/core/definitions/metadata#MetadataValue.table\"><span class=\"viewcode-link\"><span class=\"pre\">[source]</span></span></a></dt>\n<dd><p>Static constructor for a metadata value wrapping arbitrary tabular data as\n<a class=\"reference internal\" href=\"ops#dagster.TableMetadataValue\" title=\"dagster.TableMetadataValue\"><code class=\"xref py py-class docutils literal notranslate\"><span class=\"pre\">TableMetadataValue</span></code></a>. Can be used as the value type for the <cite>metadata</cite>\nparameter for supported events. For example:</p>\n<div class=\"highlight-python notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"nd\">@op</span>\n<span class=\"k\">def</span> <span class=\"nf\">emit_metadata</span><span class=\"p\">(</span><span class=\"n\">context</span><span class=\"p\">):</span>\n    <span class=\"k\">yield</span> <span class=\"n\">ExpectationResult</span><span class=\"p\">(</span>\n        <span class=\"n\">success</span><span class=\"o\">=</span><span class=\"ow\">not</span> <span class=\"n\">has_errors</span><span class=\"p\">,</span>\n        <span class=\"n\">label</span><span class=\"o\">=</span><span class=\"s2\">&quot;is_valid&quot;</span><span class=\"p\">,</span>\n        <span class=\"n\">metadata</span><span class=\"o\">=</span><span class=\"p\">{</span>\n            <span class=\"s2\">&quot;errors&quot;</span><span class=\"p\">:</span> <span class=\"n\">MetadataValue</span><span class=\"o\">.</span><span class=\"n\">table</span><span class=\"p\">(</span>\n                <span class=\"n\">records</span><span class=\"o\">=</span><span class=\"p\">[</span>\n                    <span class=\"n\">TableRecord</span><span class=\"p\">(</span><span class=\"n\">code</span><span class=\"o\">=</span><span class=\"s2\">&quot;invalid-data-type&quot;</span><span class=\"p\">,</span> <span class=\"n\">row</span><span class=\"o\">=</span><span class=\"mi\">2</span><span class=\"p\">,</span> <span class=\"n\">col</span><span class=\"o\">=</span><span class=\"s2\">&quot;name&quot;</span><span class=\"p\">}]</span>\n                <span class=\"p\">],</span>\n                <span class=\"n\">schema</span><span class=\"o\">=</span><span class=\"n\">TableSchema</span><span class=\"p\">(</span>\n                    <span class=\"n\">columns</span><span class=\"o\">=</span><span class=\"p\">[</span>\n                        <span class=\"n\">TableColumn</span><span class=\"p\">(</span><span class=\"n\">name</span><span class=\"o\">=</span><span class=\"s2\">&quot;code&quot;</span><span class=\"p\">,</span> <span class=\"nb\">type</span><span class=\"o\">=</span><span class=\"s2\">&quot;string&quot;</span><span class=\"p\">),</span>\n                        <span class=\"n\">TableColumn</span><span class=\"p\">(</span><span class=\"n\">name</span><span class=\"o\">=</span><span class=\"s2\">&quot;row&quot;</span><span class=\"p\">,</span> <span class=\"nb\">type</span><span class=\"o\">=</span><span class=\"s2\">&quot;int&quot;</span><span class=\"p\">),</span>\n                        <span class=\"n\">TableColumn</span><span class=\"p\">(</span><span class=\"n\">name</span><span class=\"o\">=</span><span class=\"s2\">&quot;col&quot;</span><span class=\"p\">,</span> <span class=\"nb\">type</span><span class=\"o\">=</span><span class=\"s2\">&quot;string&quot;</span><span class=\"p\">),</span>\n                    <span class=\"p\">]</span>\n                <span class=\"p\">)</span>\n            <span class=\"p\">),</span>\n        <span class=\"p\">},</span>\n    <span class=\"p\">)</span>\n</pre></div>\n</div>\n<dl class=\"field-list simple\">\n<dt class=\"field-odd\">Parameters</dt>\n<dd class=\"field-odd\"><ul class=\"simple\">\n<li><p><strong>records</strong> (<em>List</em><em>[</em><a class=\"reference internal\" href=\"ops#dagster.TableRecord\" title=\"dagster.TableRecord\"><em>TableRecord</em></a><em>]</em>) \u2013 The data as a list of records (i.e. rows).</p></li>\n<li><p><strong>schema</strong> (<em>Optional</em><em>[</em><a class=\"reference internal\" href=\"ops#dagster.TableSchema\" title=\"dagster.TableSchema\"><em>TableSchema</em></a><em>]</em>) \u2013 A schema for the table.</p></li>\n</ul>\n</dd>\n</dl>\n</dd></dl>\n\n<dl class=\"py method\">\n<dt>\n<em class=\"property\"><span class=\"pre\">static</span> </em><code class=\"sig-name descname\"><span class=\"pre\">table_schema</span></code><span class=\"sig-paren\">(</span><em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">schema</span></span></em><span class=\"sig-paren\">)</span><a class=\"reference internal\" href=\"../../../../_modules/dagster/core/definitions/metadata#MetadataValue.table_schema\"><span class=\"viewcode-link\"><span class=\"pre\">[source]</span></span></a></dt>\n<dd><p>Static constructor for a metadata value wrapping a table schema as\n<a class=\"reference internal\" href=\"ops#dagster.TableSchemaMetadataValue\" title=\"dagster.TableSchemaMetadataValue\"><code class=\"xref py py-class docutils literal notranslate\"><span class=\"pre\">TableSchemaMetadataValue</span></code></a>. Can be used as the value type\nfor the <cite>metadata</cite> parameter for supported events. For example:</p>\n<div class=\"highlight-python notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"n\">schema</span> <span class=\"o\">=</span> <span class=\"n\">TableSchema</span><span class=\"p\">(</span>\n    <span class=\"n\">columns</span> <span class=\"o\">=</span> <span class=\"p\">[</span>\n        <span class=\"n\">TableColumn</span><span class=\"p\">(</span><span class=\"n\">name</span><span class=\"o\">=</span><span class=\"s2\">&quot;id&quot;</span><span class=\"p\">,</span> <span class=\"nb\">type</span><span class=\"o\">=</span><span class=\"s2\">&quot;int&quot;</span><span class=\"p\">),</span>\n        <span class=\"n\">TableColumn</span><span class=\"p\">(</span><span class=\"n\">name</span><span class=\"o\">=</span><span class=\"s2\">&quot;status&quot;</span><span class=\"p\">,</span> <span class=\"nb\">type</span><span class=\"o\">=</span><span class=\"s2\">&quot;bool&quot;</span><span class=\"p\">),</span>\n    <span class=\"p\">]</span>\n<span class=\"p\">)</span>\n\n<span class=\"n\">DagsterType</span><span class=\"p\">(</span>\n    <span class=\"n\">type_check_fn</span><span class=\"o\">=</span><span class=\"n\">some_validation_fn</span><span class=\"p\">,</span>\n    <span class=\"n\">name</span><span class=\"o\">=</span><span class=\"s1\">&#39;MyTable&#39;</span><span class=\"p\">,</span>\n    <span class=\"n\">metadata</span><span class=\"o\">=</span><span class=\"p\">{</span>\n        <span class=\"s1\">&#39;my_table_schema&#39;</span><span class=\"p\">:</span> <span class=\"n\">MetadataValue</span><span class=\"o\">.</span><span class=\"n\">table_schema</span><span class=\"p\">(</span><span class=\"n\">schema</span><span class=\"p\">),</span>\n    <span class=\"p\">}</span>\n<span class=\"p\">)</span>\n</pre></div>\n</div>\n<dl class=\"field-list simple\">\n<dt class=\"field-odd\">Parameters</dt>\n<dd class=\"field-odd\"><p><strong>schema</strong> (<a class=\"reference internal\" href=\"ops#dagster.TableSchema\" title=\"dagster.TableSchema\"><em>TableSchema</em></a>) \u2013 The table schema for a metadata entry.</p>\n</dd>\n</dl>\n</dd></dl>\n\n<dl class=\"py method\">\n<dt>\n<em class=\"property\"><span class=\"pre\">static</span> </em><code class=\"sig-name descname\"><span class=\"pre\">text</span></code><span class=\"sig-paren\">(</span><em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">text</span></span></em><span class=\"sig-paren\">)</span><a class=\"reference internal\" href=\"../../../../_modules/dagster/core/definitions/metadata#MetadataValue.text\"><span class=\"viewcode-link\"><span class=\"pre\">[source]</span></span></a></dt>\n<dd><p>Static constructor for a metadata value wrapping text as\n<a class=\"reference internal\" href=\"ops#dagster.TextMetadataValue\" title=\"dagster.TextMetadataValue\"><code class=\"xref py py-class docutils literal notranslate\"><span class=\"pre\">TextMetadataValue</span></code></a>. Can be used as the value type for the <cite>metadata</cite>\nparameter for supported events. For example:</p>\n<div class=\"highlight-python notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"nd\">@op</span>\n<span class=\"k\">def</span> <span class=\"nf\">emit_metadata</span><span class=\"p\">(</span><span class=\"n\">context</span><span class=\"p\">,</span> <span class=\"n\">df</span><span class=\"p\">):</span>\n    <span class=\"k\">yield</span> <span class=\"n\">AssetMaterialization</span><span class=\"p\">(</span>\n        <span class=\"n\">asset_key</span><span class=\"o\">=</span><span class=\"s2\">&quot;my_dataset&quot;</span><span class=\"p\">,</span>\n        <span class=\"n\">metadata</span><span class=\"o\">=</span><span class=\"p\">{</span>\n            <span class=\"s2\">&quot;my_text_label&quot;</span><span class=\"p\">:</span> <span class=\"n\">MetadataValue</span><span class=\"o\">.</span><span class=\"n\">text</span><span class=\"p\">(</span><span class=\"s2\">&quot;hello&quot;</span><span class=\"p\">)</span>\n        <span class=\"p\">},</span>\n    <span class=\"p\">)</span>\n</pre></div>\n</div>\n<dl class=\"field-list simple\">\n<dt class=\"field-odd\">Parameters</dt>\n<dd class=\"field-odd\"><p><strong>text</strong> (<a class=\"reference external\" href=\"https://docs.python.org/3/library/stdtypes.html#str\" title=\"(in Python v3.8)\"><em>str</em></a>) \u2013 The text string for a metadata entry.</p>\n</dd>\n</dl>\n</dd></dl>\n\n<dl class=\"py method\">\n<dt>\n<em class=\"property\"><span class=\"pre\">static</span> </em><code class=\"sig-name descname\"><span class=\"pre\">url</span></code><span class=\"sig-paren\">(</span><em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">url</span></span></em><span class=\"sig-paren\">)</span><a class=\"reference internal\" href=\"../../../../_modules/dagster/core/definitions/metadata#MetadataValue.url\"><span class=\"viewcode-link\"><span class=\"pre\">[source]</span></span></a></dt>\n<dd><p>Static constructor for a metadata value wrapping a URL as\n<a class=\"reference internal\" href=\"ops#dagster.UrlMetadataValue\" title=\"dagster.UrlMetadataValue\"><code class=\"xref py py-class docutils literal notranslate\"><span class=\"pre\">UrlMetadataValue</span></code></a>. Can be used as the value type for the <cite>metadata</cite>\nparameter for supported events. For example:</p>\n<div class=\"highlight-python notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"nd\">@op</span>\n<span class=\"k\">def</span> <span class=\"nf\">emit_metadata</span><span class=\"p\">(</span><span class=\"n\">context</span><span class=\"p\">):</span>\n    <span class=\"k\">yield</span> <span class=\"n\">AssetMaterialization</span><span class=\"p\">(</span>\n        <span class=\"n\">asset_key</span><span class=\"o\">=</span><span class=\"s2\">&quot;my_dashboard&quot;</span><span class=\"p\">,</span>\n        <span class=\"n\">metadata</span><span class=\"o\">=</span><span class=\"p\">{</span>\n            <span class=\"s2\">&quot;dashboard_url&quot;</span><span class=\"p\">:</span> <span class=\"n\">MetadataValue</span><span class=\"o\">.</span><span class=\"n\">url</span><span class=\"p\">(</span><span class=\"s2\">&quot;http://mycoolsite.com/my_dashboard&quot;</span><span class=\"p\">),</span>\n        <span class=\"p\">}</span>\n    <span class=\"p\">)</span>\n</pre></div>\n</div>\n<dl class=\"field-list simple\">\n<dt class=\"field-odd\">Parameters</dt>\n<dd class=\"field-odd\"><p><strong>url</strong> (<a class=\"reference external\" href=\"https://docs.python.org/3/library/stdtypes.html#str\" title=\"(in Python v3.8)\"><em>str</em></a>) \u2013 The URL for a metadata entry.</p>\n</dd>\n</dl>\n</dd></dl>\n\n</dd></dl>\n\n<dl class=\"py class\">\n<dt>\n<em class=\"property\"><span class=\"pre\">class</span> </em><code class=\"sig-prename descclassname\"><span class=\"pre\">dagster.</span></code><code class=\"sig-name descname\"><span class=\"pre\">MetadataEntry</span></code><span class=\"sig-paren\">(</span><em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">label</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">description</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">None</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">entry_data</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">None</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">value</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">None</span></span></em><span class=\"sig-paren\">)</span><a class=\"reference internal\" href=\"../../../../_modules/dagster/core/definitions/metadata#MetadataEntry\"><span class=\"viewcode-link\"><span class=\"pre\">[source]</span></span></a></dt>\n<dd><p>The standard structure for describing metadata for Dagster events.</p>\n<p>Lists of objects of this type can be passed as arguments to Dagster events and will be displayed\nin Dagit and other tooling.</p>\n<p>Should be yielded from within an IO manager to append metadata for a given input/output event.\nFor other event types, passing a dict with <cite>MetadataValue</cite> values to the <cite>metadata</cite> argument\nis preferred.</p>\n<dl class=\"field-list simple\">\n<dt class=\"field-odd\">Parameters</dt>\n<dd class=\"field-odd\"><ul class=\"simple\">\n<li><p><strong>label</strong> (<a class=\"reference external\" href=\"https://docs.python.org/3/library/stdtypes.html#str\" title=\"(in Python v3.8)\"><em>str</em></a>) \u2013 Short display label for this metadata entry.</p></li>\n<li><p><strong>description</strong> (<em>Optional</em><em>[</em><a class=\"reference external\" href=\"https://docs.python.org/3/library/stdtypes.html#str\" title=\"(in Python v3.8)\"><em>str</em></a><em>]</em>) \u2013 A human-readable description of this metadata entry.</p></li>\n<li><p><strong>value</strong> (<a class=\"reference internal\" href=\"ops#dagster.MetadataValue\" title=\"dagster.MetadataValue\"><em>MetadataValue</em></a>) \u2013 Typed metadata entry data. The different types allow\nfor customized display in tools like dagit.</p></li>\n</ul>\n</dd>\n</dl>\n<dl class=\"py method\">\n<dt>\n<em class=\"property\"><span class=\"pre\">static</span> </em><code class=\"sig-name descname\"><span class=\"pre\">asset</span></code><span class=\"sig-paren\">(</span><em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">asset_key</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">label</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">description</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">None</span></span></em><span class=\"sig-paren\">)</span><a class=\"reference internal\" href=\"../../../../_modules/dagster/core/definitions/metadata#MetadataEntry.asset\"><span class=\"viewcode-link\"><span class=\"pre\">[source]</span></span></a></dt>\n<dd><p>Static constructor for a metadata entry referencing a Dagster asset, by key.</p>\n<p>For example:</p>\n<div class=\"highlight-python notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"nd\">@op</span>\n<span class=\"k\">def</span> <span class=\"nf\">validate_table</span><span class=\"p\">(</span><span class=\"n\">context</span><span class=\"p\">,</span> <span class=\"n\">df</span><span class=\"p\">):</span>\n    <span class=\"k\">yield</span> <span class=\"n\">AssetMaterialization</span><span class=\"p\">(</span>\n        <span class=\"n\">asset_key</span><span class=\"o\">=</span><span class=\"n\">AssetKey</span><span class=\"p\">(</span><span class=\"s2\">&quot;my_table&quot;</span><span class=\"p\">),</span>\n        <span class=\"n\">metadata_entries</span><span class=\"o\">=</span><span class=\"p\">[</span>\n             <span class=\"n\">MetadataEntry</span><span class=\"o\">.</span><span class=\"n\">asset</span><span class=\"p\">(</span><span class=\"n\">AssetKey</span><span class=\"p\">(</span><span class=\"s1\">&#39;my_other_table&#39;</span><span class=\"p\">),</span> <span class=\"s2\">&quot;Related asset&quot;</span><span class=\"p\">),</span>\n        <span class=\"p\">],</span>\n    <span class=\"p\">)</span>\n</pre></div>\n</div>\n<dl class=\"field-list simple\">\n<dt class=\"field-odd\">Parameters</dt>\n<dd class=\"field-odd\"><ul class=\"simple\">\n<li><p><strong>asset_key</strong> (<a class=\"reference internal\" href=\"ops#dagster.AssetKey\" title=\"dagster.AssetKey\"><em>AssetKey</em></a>) \u2013 The asset key referencing the asset.</p></li>\n<li><p><strong>label</strong> (<a class=\"reference external\" href=\"https://docs.python.org/3/library/stdtypes.html#str\" title=\"(in Python v3.8)\"><em>str</em></a>) \u2013 Short display label for this metadata entry.</p></li>\n<li><p><strong>description</strong> (<em>Optional</em><em>[</em><a class=\"reference external\" href=\"https://docs.python.org/3/library/stdtypes.html#str\" title=\"(in Python v3.8)\"><em>str</em></a><em>]</em>) \u2013 A human-readable description of this metadata entry.</p></li>\n</ul>\n</dd>\n</dl>\n</dd></dl>\n\n<dl class=\"py method\">\n<dt>\n<em class=\"property\"><span class=\"pre\">static</span> </em><code class=\"sig-name descname\"><span class=\"pre\">float</span></code><span class=\"sig-paren\">(</span><em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">value</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">label</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">description</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">None</span></span></em><span class=\"sig-paren\">)</span><a class=\"reference internal\" href=\"../../../../_modules/dagster/core/definitions/metadata#MetadataEntry.float\"><span class=\"viewcode-link\"><span class=\"pre\">[source]</span></span></a></dt>\n<dd><p>Static constructor for a metadata entry containing float as\n<a class=\"reference internal\" href=\"ops#dagster.FloatMetadataValue\" title=\"dagster.FloatMetadataValue\"><code class=\"xref py py-class docutils literal notranslate\"><span class=\"pre\">FloatMetadataValue</span></code></a>. For example:</p>\n<div class=\"highlight-python notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"nd\">@op</span>\n<span class=\"k\">def</span> <span class=\"nf\">emit_metadata</span><span class=\"p\">(</span><span class=\"n\">context</span><span class=\"p\">,</span> <span class=\"n\">df</span><span class=\"p\">):</span>\n    <span class=\"k\">yield</span> <span class=\"n\">AssetMaterialization</span><span class=\"p\">(</span>\n        <span class=\"n\">asset_key</span><span class=\"o\">=</span><span class=\"s2\">&quot;my_dataset&quot;</span><span class=\"p\">,</span>\n        <span class=\"n\">metadata_entries</span><span class=\"o\">=</span><span class=\"p\">[</span><span class=\"n\">MetadataEntry</span><span class=\"o\">.</span><span class=\"n\">float</span><span class=\"p\">(</span><span class=\"n\">calculate_bytes</span><span class=\"p\">(</span><span class=\"n\">df</span><span class=\"p\">),</span> <span class=\"s2\">&quot;size (bytes)&quot;</span><span class=\"p\">)],</span>\n    <span class=\"p\">)</span>\n</pre></div>\n</div>\n<dl class=\"field-list simple\">\n<dt class=\"field-odd\">Parameters</dt>\n<dd class=\"field-odd\"><ul class=\"simple\">\n<li><p><strong>value</strong> (<em>Optional</em><em>[</em><a class=\"reference external\" href=\"https://docs.python.org/3/library/functions.html#float\" title=\"(in Python v3.8)\"><em>float</em></a><em>]</em>) \u2013 The float value contained by this metadata entry.</p></li>\n<li><p><strong>label</strong> (<a class=\"reference external\" href=\"https://docs.python.org/3/library/stdtypes.html#str\" title=\"(in Python v3.8)\"><em>str</em></a>) \u2013 Short display label for this metadata entry.</p></li>\n<li><p><strong>description</strong> (<em>Optional</em><em>[</em><a class=\"reference external\" href=\"https://docs.python.org/3/library/stdtypes.html#str\" title=\"(in Python v3.8)\"><em>str</em></a><em>]</em>) \u2013 A human-readable description of this metadata entry.</p></li>\n</ul>\n</dd>\n</dl>\n</dd></dl>\n\n<dl class=\"py method\">\n<dt>\n<em class=\"property\"><span class=\"pre\">static</span> </em><code class=\"sig-name descname\"><span class=\"pre\">fspath</span></code><span class=\"sig-paren\">(</span><em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">path</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">label</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">None</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">description</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">None</span></span></em><span class=\"sig-paren\">)</span><a class=\"reference internal\" href=\"../../../../_modules/dagster/core/definitions/metadata#MetadataEntry.fspath\"><span class=\"viewcode-link\"><span class=\"pre\">[source]</span></span></a></dt>\n<dd><p>Static constructor for a metadata entry containing a filesystem path as\n<a class=\"reference internal\" href=\"ops#dagster.PathMetadataValue\" title=\"dagster.PathMetadataValue\"><code class=\"xref py py-class docutils literal notranslate\"><span class=\"pre\">PathMetadataValue</span></code></a>. For example:</p>\n<div class=\"highlight-python notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"nd\">@op</span>\n<span class=\"k\">def</span> <span class=\"nf\">emit_metadata</span><span class=\"p\">(</span><span class=\"n\">context</span><span class=\"p\">):</span>\n    <span class=\"k\">yield</span> <span class=\"n\">AssetMaterialization</span><span class=\"p\">(</span>\n        <span class=\"n\">asset_key</span><span class=\"o\">=</span><span class=\"s2\">&quot;my_dataset&quot;</span><span class=\"p\">,</span>\n        <span class=\"n\">metadata_entries</span><span class=\"o\">=</span><span class=\"p\">[</span><span class=\"n\">MetadataEntry</span><span class=\"o\">.</span><span class=\"n\">fspath</span><span class=\"p\">(</span><span class=\"s2\">&quot;path/to/file&quot;</span><span class=\"p\">)],</span>\n    <span class=\"p\">)</span>\n</pre></div>\n</div>\n<dl class=\"field-list simple\">\n<dt class=\"field-odd\">Parameters</dt>\n<dd class=\"field-odd\"><ul class=\"simple\">\n<li><p><strong>path</strong> (<em>Optional</em><em>[</em><a class=\"reference external\" href=\"https://docs.python.org/3/library/stdtypes.html#str\" title=\"(in Python v3.8)\"><em>str</em></a><em>]</em>) \u2013 The path contained by this metadata entry.</p></li>\n<li><p><strong>label</strong> (<em>Optional</em><em>[</em><a class=\"reference external\" href=\"https://docs.python.org/3/library/stdtypes.html#str\" title=\"(in Python v3.8)\"><em>str</em></a><em>]</em>) \u2013 Short display label for this metadata entry. Defaults to the\nbase name of the path.</p></li>\n<li><p><strong>description</strong> (<em>Optional</em><em>[</em><a class=\"reference external\" href=\"https://docs.python.org/3/library/stdtypes.html#str\" title=\"(in Python v3.8)\"><em>str</em></a><em>]</em>) \u2013 A human-readable description of this metadata entry.</p></li>\n</ul>\n</dd>\n</dl>\n</dd></dl>\n\n<dl class=\"py method\">\n<dt>\n<em class=\"property\"><span class=\"pre\">static</span> </em><code class=\"sig-name descname\"><span class=\"pre\">int</span></code><span class=\"sig-paren\">(</span><em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">value</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">label</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">description</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">None</span></span></em><span class=\"sig-paren\">)</span><a class=\"reference internal\" href=\"../../../../_modules/dagster/core/definitions/metadata#MetadataEntry.int\"><span class=\"viewcode-link\"><span class=\"pre\">[source]</span></span></a></dt>\n<dd><p>Static constructor for a metadata entry containing int as\n<a class=\"reference internal\" href=\"ops#dagster.IntMetadataValue\" title=\"dagster.IntMetadataValue\"><code class=\"xref py py-class docutils literal notranslate\"><span class=\"pre\">IntMetadataValue</span></code></a>. For example:</p>\n<div class=\"highlight-python notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"nd\">@op</span>\n<span class=\"k\">def</span> <span class=\"nf\">emit_metadata</span><span class=\"p\">(</span><span class=\"n\">context</span><span class=\"p\">,</span> <span class=\"n\">df</span><span class=\"p\">):</span>\n    <span class=\"k\">yield</span> <span class=\"n\">AssetMaterialization</span><span class=\"p\">(</span>\n        <span class=\"n\">asset_key</span><span class=\"o\">=</span><span class=\"s2\">&quot;my_dataset&quot;</span><span class=\"p\">,</span>\n        <span class=\"n\">metadata_entries</span><span class=\"o\">=</span><span class=\"p\">[</span><span class=\"n\">MetadataEntry</span><span class=\"o\">.</span><span class=\"n\">int</span><span class=\"p\">(</span><span class=\"nb\">len</span><span class=\"p\">(</span><span class=\"n\">df</span><span class=\"p\">),</span> <span class=\"s2\">&quot;number of rows&quot;</span><span class=\"p\">)],</span>\n    <span class=\"p\">)</span>\n</pre></div>\n</div>\n<dl class=\"field-list simple\">\n<dt class=\"field-odd\">Parameters</dt>\n<dd class=\"field-odd\"><ul class=\"simple\">\n<li><p><strong>value</strong> (<em>Optional</em><em>[</em><a class=\"reference external\" href=\"https://docs.python.org/3/library/functions.html#int\" title=\"(in Python v3.8)\"><em>int</em></a><em>]</em>) \u2013 The int value contained by this metadata entry.</p></li>\n<li><p><strong>label</strong> (<a class=\"reference external\" href=\"https://docs.python.org/3/library/stdtypes.html#str\" title=\"(in Python v3.8)\"><em>str</em></a>) \u2013 Short display label for this metadata entry.</p></li>\n<li><p><strong>description</strong> (<em>Optional</em><em>[</em><a class=\"reference external\" href=\"https://docs.python.org/3/library/stdtypes.html#str\" title=\"(in Python v3.8)\"><em>str</em></a><em>]</em>) \u2013 A human-readable description of this metadata entry.</p></li>\n</ul>\n</dd>\n</dl>\n</dd></dl>\n\n<dl class=\"py method\">\n<dt>\n<em class=\"property\"><span class=\"pre\">static</span> </em><code class=\"sig-name descname\"><span class=\"pre\">json</span></code><span class=\"sig-paren\">(</span><em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">data</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">label</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">description</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">None</span></span></em><span class=\"sig-paren\">)</span><a class=\"reference internal\" href=\"../../../../_modules/dagster/core/definitions/metadata#MetadataEntry.json\"><span class=\"viewcode-link\"><span class=\"pre\">[source]</span></span></a></dt>\n<dd><p>Static constructor for a metadata entry containing JSON data as\n<a class=\"reference internal\" href=\"ops#dagster.JsonMetadataValue\" title=\"dagster.JsonMetadataValue\"><code class=\"xref py py-class docutils literal notranslate\"><span class=\"pre\">JsonMetadataValue</span></code></a>. For example:</p>\n<div class=\"highlight-python notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"nd\">@op</span>\n<span class=\"k\">def</span> <span class=\"nf\">emit_metadata</span><span class=\"p\">(</span><span class=\"n\">context</span><span class=\"p\">):</span>\n    <span class=\"k\">yield</span> <span class=\"n\">ExpectationResult</span><span class=\"p\">(</span>\n        <span class=\"n\">success</span><span class=\"o\">=</span><span class=\"ow\">not</span> <span class=\"n\">missing_things</span><span class=\"p\">,</span>\n        <span class=\"n\">label</span><span class=\"o\">=</span><span class=\"s2\">&quot;is_present&quot;</span><span class=\"p\">,</span>\n        <span class=\"n\">metadata_entries</span><span class=\"o\">=</span><span class=\"p\">[</span>\n            <span class=\"n\">MetadataEntry</span><span class=\"o\">.</span><span class=\"n\">json</span><span class=\"p\">(</span>\n                <span class=\"n\">label</span><span class=\"o\">=</span><span class=\"s2\">&quot;metadata&quot;</span><span class=\"p\">,</span> <span class=\"n\">data</span><span class=\"o\">=</span><span class=\"p\">{</span><span class=\"s2\">&quot;missing_columns&quot;</span><span class=\"p\">:</span> <span class=\"n\">missing_things</span><span class=\"p\">},</span>\n            <span class=\"p\">)</span>\n        <span class=\"p\">],</span>\n    <span class=\"p\">)</span>\n</pre></div>\n</div>\n<dl class=\"field-list simple\">\n<dt class=\"field-odd\">Parameters</dt>\n<dd class=\"field-odd\"><ul class=\"simple\">\n<li><p><strong>data</strong> (<em>Optional</em><em>[</em><em>Dict</em><em>[</em><a class=\"reference external\" href=\"https://docs.python.org/3/library/stdtypes.html#str\" title=\"(in Python v3.8)\"><em>str</em></a><em>, </em><em>Any</em><em>]</em><em>]</em>) \u2013 The JSON data contained by this metadata entry.</p></li>\n<li><p><strong>label</strong> (<a class=\"reference external\" href=\"https://docs.python.org/3/library/stdtypes.html#str\" title=\"(in Python v3.8)\"><em>str</em></a>) \u2013 Short display label for this metadata entry.</p></li>\n<li><p><strong>description</strong> (<em>Optional</em><em>[</em><a class=\"reference external\" href=\"https://docs.python.org/3/library/stdtypes.html#str\" title=\"(in Python v3.8)\"><em>str</em></a><em>]</em>) \u2013 A human-readable description of this metadata entry.</p></li>\n</ul>\n</dd>\n</dl>\n</dd></dl>\n\n<dl class=\"py method\">\n<dt>\n<em class=\"property\"><span class=\"pre\">static</span> </em><code class=\"sig-name descname\"><span class=\"pre\">md</span></code><span class=\"sig-paren\">(</span><em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">md_str</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">label</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">description</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">None</span></span></em><span class=\"sig-paren\">)</span><a class=\"reference internal\" href=\"../../../../_modules/dagster/core/definitions/metadata#MetadataEntry.md\"><span class=\"viewcode-link\"><span class=\"pre\">[source]</span></span></a></dt>\n<dd><p>Static constructor for a metadata entry containing markdown data as\n<a class=\"reference internal\" href=\"ops#dagster.MarkdownMetadataValue\" title=\"dagster.MarkdownMetadataValue\"><code class=\"xref py py-class docutils literal notranslate\"><span class=\"pre\">MarkdownMetadataValue</span></code></a>. For example:</p>\n<div class=\"highlight-python notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"nd\">@op</span>\n<span class=\"k\">def</span> <span class=\"nf\">emit_metadata</span><span class=\"p\">(</span><span class=\"n\">context</span><span class=\"p\">,</span> <span class=\"n\">md_str</span><span class=\"p\">):</span>\n    <span class=\"k\">yield</span> <span class=\"n\">AssetMaterialization</span><span class=\"p\">(</span>\n        <span class=\"n\">asset_key</span><span class=\"o\">=</span><span class=\"s2\">&quot;info&quot;</span><span class=\"p\">,</span>\n        <span class=\"n\">metadata_entries</span><span class=\"o\">=</span><span class=\"p\">[</span><span class=\"n\">MetadataEntry</span><span class=\"o\">.</span><span class=\"n\">md</span><span class=\"p\">(</span><span class=\"n\">md_str</span><span class=\"o\">=</span><span class=\"n\">md_str</span><span class=\"p\">)],</span>\n    <span class=\"p\">)</span>\n</pre></div>\n</div>\n<dl class=\"field-list simple\">\n<dt class=\"field-odd\">Parameters</dt>\n<dd class=\"field-odd\"><ul class=\"simple\">\n<li><p><strong>md_str</strong> (<em>Optional</em><em>[</em><a class=\"reference external\" href=\"https://docs.python.org/3/library/stdtypes.html#str\" title=\"(in Python v3.8)\"><em>str</em></a><em>]</em>) \u2013 The markdown contained by this metadata entry.</p></li>\n<li><p><strong>label</strong> (<a class=\"reference external\" href=\"https://docs.python.org/3/library/stdtypes.html#str\" title=\"(in Python v3.8)\"><em>str</em></a>) \u2013 Short display label for this metadata entry.</p></li>\n<li><p><strong>description</strong> (<em>Optional</em><em>[</em><a class=\"reference external\" href=\"https://docs.python.org/3/library/stdtypes.html#str\" title=\"(in Python v3.8)\"><em>str</em></a><em>]</em>) \u2013 A human-readable description of this metadata entry.</p></li>\n</ul>\n</dd>\n</dl>\n</dd></dl>\n\n<dl class=\"py method\">\n<dt>\n<em class=\"property\"><span class=\"pre\">static</span> </em><code class=\"sig-name descname\"><span class=\"pre\">path</span></code><span class=\"sig-paren\">(</span><em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">path</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">label</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">description</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">None</span></span></em><span class=\"sig-paren\">)</span><a class=\"reference internal\" href=\"../../../../_modules/dagster/core/definitions/metadata#MetadataEntry.path\"><span class=\"viewcode-link\"><span class=\"pre\">[source]</span></span></a></dt>\n<dd><p>Static constructor for a metadata entry containing a path as\n<a class=\"reference internal\" href=\"ops#dagster.PathMetadataValue\" title=\"dagster.PathMetadataValue\"><code class=\"xref py py-class docutils literal notranslate\"><span class=\"pre\">PathMetadataValue</span></code></a>. For example:</p>\n<div class=\"highlight-python notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"nd\">@op</span>\n<span class=\"k\">def</span> <span class=\"nf\">emit_metadata</span><span class=\"p\">(</span><span class=\"n\">context</span><span class=\"p\">):</span>\n    <span class=\"k\">yield</span> <span class=\"n\">AssetMaterialization</span><span class=\"p\">(</span>\n        <span class=\"n\">asset_key</span><span class=\"o\">=</span><span class=\"s2\">&quot;my_dataset&quot;</span><span class=\"p\">,</span>\n        <span class=\"n\">metadata_entries</span><span class=\"o\">=</span><span class=\"p\">[</span><span class=\"n\">MetadataEntry</span><span class=\"o\">.</span><span class=\"n\">path</span><span class=\"p\">(</span><span class=\"s2\">&quot;path/to/file&quot;</span><span class=\"p\">,</span> <span class=\"n\">label</span><span class=\"o\">=</span><span class=\"s2\">&quot;filepath&quot;</span><span class=\"p\">)],</span>\n    <span class=\"p\">)</span>\n</pre></div>\n</div>\n<dl class=\"field-list simple\">\n<dt class=\"field-odd\">Parameters</dt>\n<dd class=\"field-odd\"><ul class=\"simple\">\n<li><p><strong>path</strong> (<em>Optional</em><em>[</em><a class=\"reference external\" href=\"https://docs.python.org/3/library/stdtypes.html#str\" title=\"(in Python v3.8)\"><em>str</em></a><em>]</em>) \u2013 The path contained by this metadata entry.</p></li>\n<li><p><strong>label</strong> (<a class=\"reference external\" href=\"https://docs.python.org/3/library/stdtypes.html#str\" title=\"(in Python v3.8)\"><em>str</em></a>) \u2013 Short display label for this metadata entry.</p></li>\n<li><p><strong>description</strong> (<em>Optional</em><em>[</em><a class=\"reference external\" href=\"https://docs.python.org/3/library/stdtypes.html#str\" title=\"(in Python v3.8)\"><em>str</em></a><em>]</em>) \u2013 A human-readable description of this metadata entry.</p></li>\n</ul>\n</dd>\n</dl>\n</dd></dl>\n\n<dl class=\"py method\">\n<dt>\n<em class=\"property\"><span class=\"pre\">static</span> </em><code class=\"sig-name descname\"><span class=\"pre\">table</span></code><span class=\"sig-paren\">(</span><em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">records</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">label</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">description</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">None</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">schema</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">None</span></span></em><span class=\"sig-paren\">)</span><a class=\"reference internal\" href=\"../../../../_modules/dagster/core/definitions/metadata#MetadataEntry.table\"><span class=\"viewcode-link\"><span class=\"pre\">[source]</span></span></a></dt>\n<dd><p>Static constructor for a metadata entry containing tabluar data as\n<a class=\"reference internal\" href=\"ops#dagster.TableMetadataValue\" title=\"dagster.TableMetadataValue\"><code class=\"xref py py-class docutils literal notranslate\"><span class=\"pre\">TableMetadataValue</span></code></a>. For example:</p>\n<div class=\"highlight-python notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"nd\">@op</span>\n<span class=\"k\">def</span> <span class=\"nf\">emit_metadata</span><span class=\"p\">(</span><span class=\"n\">context</span><span class=\"p\">):</span>\n    <span class=\"k\">yield</span> <span class=\"n\">ExpectationResult</span><span class=\"p\">(</span>\n        <span class=\"n\">success</span><span class=\"o\">=</span><span class=\"ow\">not</span> <span class=\"n\">has_errors</span><span class=\"p\">,</span>\n        <span class=\"n\">label</span><span class=\"o\">=</span><span class=\"s2\">&quot;is_valid&quot;</span><span class=\"p\">,</span>\n        <span class=\"n\">metadata_entries</span><span class=\"o\">=</span><span class=\"p\">[</span>\n            <span class=\"n\">MetadataEntry</span><span class=\"o\">.</span><span class=\"n\">table</span><span class=\"p\">(</span>\n                <span class=\"n\">label</span><span class=\"o\">=</span><span class=\"s2\">&quot;errors&quot;</span><span class=\"p\">,</span>\n                <span class=\"n\">records</span><span class=\"o\">=</span><span class=\"p\">[</span>\n                    <span class=\"n\">TableRecord</span><span class=\"p\">(</span><span class=\"n\">code</span><span class=\"o\">=</span><span class=\"s2\">&quot;invalid-data-type&quot;</span><span class=\"p\">,</span> <span class=\"n\">row</span><span class=\"o\">=</span><span class=\"mi\">2</span><span class=\"p\">,</span> <span class=\"n\">col</span><span class=\"o\">=</span><span class=\"s2\">&quot;name&quot;</span><span class=\"p\">}]</span>\n                <span class=\"p\">],</span>\n                <span class=\"n\">schema</span><span class=\"o\">=</span><span class=\"n\">TableSchema</span><span class=\"p\">(</span>\n                    <span class=\"n\">columns</span><span class=\"o\">=</span><span class=\"p\">[</span>\n                        <span class=\"n\">TableColumn</span><span class=\"p\">(</span><span class=\"n\">name</span><span class=\"o\">=</span><span class=\"s2\">&quot;code&quot;</span><span class=\"p\">,</span> <span class=\"nb\">type</span><span class=\"o\">=</span><span class=\"s2\">&quot;string&quot;</span><span class=\"p\">),</span>\n                        <span class=\"n\">TableColumn</span><span class=\"p\">(</span><span class=\"n\">name</span><span class=\"o\">=</span><span class=\"s2\">&quot;row&quot;</span><span class=\"p\">,</span> <span class=\"nb\">type</span><span class=\"o\">=</span><span class=\"s2\">&quot;int&quot;</span><span class=\"p\">),</span>\n                        <span class=\"n\">TableColumn</span><span class=\"p\">(</span><span class=\"n\">name</span><span class=\"o\">=</span><span class=\"s2\">&quot;col&quot;</span><span class=\"p\">,</span> <span class=\"nb\">type</span><span class=\"o\">=</span><span class=\"s2\">&quot;string&quot;</span><span class=\"p\">),</span>\n                    <span class=\"p\">]</span>\n                <span class=\"p\">)</span>\n            <span class=\"p\">),</span>\n        <span class=\"p\">],</span>\n    <span class=\"p\">)</span>\n</pre></div>\n</div>\n<dl class=\"field-list simple\">\n<dt class=\"field-odd\">Parameters</dt>\n<dd class=\"field-odd\"><ul class=\"simple\">\n<li><p><strong>records</strong> (<em>List</em><em>[</em><a class=\"reference internal\" href=\"ops#dagster.TableRecord\" title=\"dagster.TableRecord\"><em>TableRecord</em></a><em>]</em>) \u2013 The data as a list of records (i.e. rows).</p></li>\n<li><p><strong>label</strong> (<a class=\"reference external\" href=\"https://docs.python.org/3/library/stdtypes.html#str\" title=\"(in Python v3.8)\"><em>str</em></a>) \u2013 Short display label for this metadata entry.</p></li>\n<li><p><strong>description</strong> (<em>Optional</em><em>[</em><a class=\"reference external\" href=\"https://docs.python.org/3/library/stdtypes.html#str\" title=\"(in Python v3.8)\"><em>str</em></a><em>]</em>) \u2013 A human-readable description of this metadata entry.</p></li>\n<li><p><strong>schema</strong> (<em>Optional</em><em>[</em><a class=\"reference internal\" href=\"ops#dagster.TableSchema\" title=\"dagster.TableSchema\"><em>TableSchema</em></a><em>]</em>) \u2013 A schema for the table. If none is provided, one will be\nautomatically generated by examining the first record. The schema will include as columns all\nfield names present in the first record, with a type of <cite>\u201cstring\u201d</cite>, <cite>\u201cint\u201d</cite>,\n<cite>\u201cbool\u201d</cite> or <cite>\u201cfloat\u201d</cite> inferred from the first record\u2019s values. If a value does\nnot directly match one of the above types, it will be treated as a string.</p></li>\n</ul>\n</dd>\n</dl>\n</dd></dl>\n\n<dl class=\"py method\">\n<dt>\n<em class=\"property\"><span class=\"pre\">static</span> </em><code class=\"sig-name descname\"><span class=\"pre\">table_schema</span></code><span class=\"sig-paren\">(</span><em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">schema</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">label</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">description</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">None</span></span></em><span class=\"sig-paren\">)</span><a class=\"reference internal\" href=\"../../../../_modules/dagster/core/definitions/metadata#MetadataEntry.table_schema\"><span class=\"viewcode-link\"><span class=\"pre\">[source]</span></span></a></dt>\n<dd><p>Static constructor for a metadata entry containing a table schema as\n<a class=\"reference internal\" href=\"ops#dagster.TableSchemaMetadataValue\" title=\"dagster.TableSchemaMetadataValue\"><code class=\"xref py py-class docutils literal notranslate\"><span class=\"pre\">TableSchemaMetadataValue</span></code></a>. For example:</p>\n<div class=\"highlight-python notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"n\">schema</span> <span class=\"o\">=</span> <span class=\"n\">TableSchema</span><span class=\"p\">(</span>\n    <span class=\"n\">columns</span> <span class=\"o\">=</span> <span class=\"p\">[</span>\n        <span class=\"n\">TableColumn</span><span class=\"p\">(</span><span class=\"n\">name</span><span class=\"o\">=</span><span class=\"s2\">&quot;id&quot;</span><span class=\"p\">,</span> <span class=\"nb\">type</span><span class=\"o\">=</span><span class=\"s2\">&quot;int&quot;</span><span class=\"p\">),</span>\n        <span class=\"n\">TableColumn</span><span class=\"p\">(</span><span class=\"n\">name</span><span class=\"o\">=</span><span class=\"s2\">&quot;status&quot;</span><span class=\"p\">,</span> <span class=\"nb\">type</span><span class=\"o\">=</span><span class=\"s2\">&quot;bool&quot;</span><span class=\"p\">),</span>\n    <span class=\"p\">]</span>\n<span class=\"p\">)</span>\n\n<span class=\"n\">DagsterType</span><span class=\"p\">(</span>\n    <span class=\"n\">type_check_fn</span><span class=\"o\">=</span><span class=\"n\">some_validation_fn</span><span class=\"p\">,</span>\n    <span class=\"n\">name</span><span class=\"o\">=</span><span class=\"s1\">&#39;MyTable&#39;</span><span class=\"p\">,</span>\n    <span class=\"n\">metadata_entries</span><span class=\"o\">=</span><span class=\"p\">[</span>\n        <span class=\"n\">MetadataEntry</span><span class=\"o\">.</span><span class=\"n\">table_schema</span><span class=\"p\">(</span>\n            <span class=\"n\">schema</span><span class=\"p\">,</span>\n            <span class=\"n\">label</span><span class=\"o\">=</span><span class=\"s1\">&#39;schema&#39;</span><span class=\"p\">,</span>\n        <span class=\"p\">)</span>\n    <span class=\"p\">]</span>\n<span class=\"p\">)</span>\n</pre></div>\n</div>\n<dl class=\"field-list simple\">\n<dt class=\"field-odd\">Parameters</dt>\n<dd class=\"field-odd\"><ul class=\"simple\">\n<li><p><strong>schema</strong> (<a class=\"reference internal\" href=\"ops#dagster.TableSchema\" title=\"dagster.TableSchema\"><em>TableSchema</em></a>) \u2013 The table schema for a metadata entry.</p></li>\n<li><p><strong>label</strong> (<a class=\"reference external\" href=\"https://docs.python.org/3/library/stdtypes.html#str\" title=\"(in Python v3.8)\"><em>str</em></a>) \u2013 Short display label for this metadata entry.</p></li>\n<li><p><strong>description</strong> (<em>Optional</em><em>[</em><a class=\"reference external\" href=\"https://docs.python.org/3/library/stdtypes.html#str\" title=\"(in Python v3.8)\"><em>str</em></a><em>]</em>) \u2013 A human-readable description of this metadata entry.</p></li>\n</ul>\n</dd>\n</dl>\n</dd></dl>\n\n<dl class=\"py method\">\n<dt>\n<em class=\"property\"><span class=\"pre\">static</span> </em><code class=\"sig-name descname\"><span class=\"pre\">text</span></code><span class=\"sig-paren\">(</span><em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">text</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">label</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">description</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">None</span></span></em><span class=\"sig-paren\">)</span><a class=\"reference internal\" href=\"../../../../_modules/dagster/core/definitions/metadata#MetadataEntry.text\"><span class=\"viewcode-link\"><span class=\"pre\">[source]</span></span></a></dt>\n<dd><p>Static constructor for a metadata entry containing text as\n<a class=\"reference internal\" href=\"ops#dagster.TextMetadataValue\" title=\"dagster.TextMetadataValue\"><code class=\"xref py py-class docutils literal notranslate\"><span class=\"pre\">TextMetadataValue</span></code></a>. For example:</p>\n<div class=\"highlight-python notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"nd\">@op</span>\n<span class=\"k\">def</span> <span class=\"nf\">emit_metadata</span><span class=\"p\">(</span><span class=\"n\">context</span><span class=\"p\">,</span> <span class=\"n\">df</span><span class=\"p\">):</span>\n    <span class=\"k\">yield</span> <span class=\"n\">AssetMaterialization</span><span class=\"p\">(</span>\n        <span class=\"n\">asset_key</span><span class=\"o\">=</span><span class=\"s2\">&quot;my_dataset&quot;</span><span class=\"p\">,</span>\n        <span class=\"n\">metadata_entries</span><span class=\"o\">=</span><span class=\"p\">[</span>\n            <span class=\"n\">MetadataEntry</span><span class=\"o\">.</span><span class=\"n\">text</span><span class=\"p\">(</span><span class=\"s2\">&quot;Text-based metadata for this event&quot;</span><span class=\"p\">,</span> <span class=\"s2\">&quot;text_metadata&quot;</span><span class=\"p\">)</span>\n        <span class=\"p\">],</span>\n    <span class=\"p\">)</span>\n</pre></div>\n</div>\n<dl class=\"field-list simple\">\n<dt class=\"field-odd\">Parameters</dt>\n<dd class=\"field-odd\"><ul class=\"simple\">\n<li><p><strong>text</strong> (<em>Optional</em><em>[</em><a class=\"reference external\" href=\"https://docs.python.org/3/library/stdtypes.html#str\" title=\"(in Python v3.8)\"><em>str</em></a><em>]</em>) \u2013 The text of this metadata entry.</p></li>\n<li><p><strong>label</strong> (<a class=\"reference external\" href=\"https://docs.python.org/3/library/stdtypes.html#str\" title=\"(in Python v3.8)\"><em>str</em></a>) \u2013 Short display label for this metadata entry.</p></li>\n<li><p><strong>description</strong> (<em>Optional</em><em>[</em><a class=\"reference external\" href=\"https://docs.python.org/3/library/stdtypes.html#str\" title=\"(in Python v3.8)\"><em>str</em></a><em>]</em>) \u2013 A human-readable description of this metadata entry.</p></li>\n</ul>\n</dd>\n</dl>\n</dd></dl>\n\n<dl class=\"py method\">\n<dt>\n<em class=\"property\"><span class=\"pre\">static</span> </em><code class=\"sig-name descname\"><span class=\"pre\">url</span></code><span class=\"sig-paren\">(</span><em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">url</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">label</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">description</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">None</span></span></em><span class=\"sig-paren\">)</span><a class=\"reference internal\" href=\"../../../../_modules/dagster/core/definitions/metadata#MetadataEntry.url\"><span class=\"viewcode-link\"><span class=\"pre\">[source]</span></span></a></dt>\n<dd><p>Static constructor for a metadata entry containing a URL as\n<a class=\"reference internal\" href=\"ops#dagster.UrlMetadataValue\" title=\"dagster.UrlMetadataValue\"><code class=\"xref py py-class docutils literal notranslate\"><span class=\"pre\">UrlMetadataValue</span></code></a>. For example:</p>\n<div class=\"highlight-python notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"nd\">@op</span>\n<span class=\"k\">def</span> <span class=\"nf\">emit_metadata</span><span class=\"p\">(</span><span class=\"n\">context</span><span class=\"p\">):</span>\n    <span class=\"k\">yield</span> <span class=\"n\">AssetMaterialization</span><span class=\"p\">(</span>\n        <span class=\"n\">asset_key</span><span class=\"o\">=</span><span class=\"s2\">&quot;my_dashboard&quot;</span><span class=\"p\">,</span>\n        <span class=\"n\">metadata_entries</span><span class=\"o\">=</span><span class=\"p\">[</span>\n            <span class=\"n\">MetadataEntry</span><span class=\"o\">.</span><span class=\"n\">url</span><span class=\"p\">(</span>\n                <span class=\"s2\">&quot;http://mycoolsite.com/my_dashboard&quot;</span><span class=\"p\">,</span> <span class=\"n\">label</span><span class=\"o\">=</span><span class=\"s2\">&quot;dashboard_url&quot;</span>\n            <span class=\"p\">),</span>\n        <span class=\"p\">],</span>\n    <span class=\"p\">)</span>\n</pre></div>\n</div>\n<dl class=\"field-list simple\">\n<dt class=\"field-odd\">Parameters</dt>\n<dd class=\"field-odd\"><ul class=\"simple\">\n<li><p><strong>url</strong> (<em>Optional</em><em>[</em><a class=\"reference external\" href=\"https://docs.python.org/3/library/stdtypes.html#str\" title=\"(in Python v3.8)\"><em>str</em></a><em>]</em>) \u2013 The URL contained by this metadata entry.</p></li>\n<li><p><strong>label</strong> (<a class=\"reference external\" href=\"https://docs.python.org/3/library/stdtypes.html#str\" title=\"(in Python v3.8)\"><em>str</em></a>) \u2013 Short display label for this metadata entry.</p></li>\n<li><p><strong>description</strong> (<em>Optional</em><em>[</em><a class=\"reference external\" href=\"https://docs.python.org/3/library/stdtypes.html#str\" title=\"(in Python v3.8)\"><em>str</em></a><em>]</em>) \u2013 A human-readable description of this metadata entry.</p></li>\n</ul>\n</dd>\n</dl>\n</dd></dl>\n\n<dl class=\"py method\">\n<dt>\n<em class=\"property\"><span class=\"pre\">property</span> </em><code class=\"sig-name descname\"><span class=\"pre\">value</span></code></dt>\n<dd><p>Alias of <cite>entry_data</cite>.</p>\n</dd></dl>\n\n</dd></dl>\n\n</div>\n<div class=\"section\" id=\"metadata-types\">\n<h3>Metadata types<a class=\"headerlink\" href=\"#metadata-types\" title=\"Permalink to this headline\">\u00b6</a></h3>\n<p>All metadata types inherit from <cite>MetadataValue</cite>. The following types are defined:</p>\n<dl class=\"py class\">\n<dt>\n<em class=\"property\"><span class=\"pre\">class</span> </em><code class=\"sig-prename descclassname\"><span class=\"pre\">dagster.</span></code><code class=\"sig-name descname\"><span class=\"pre\">DagsterAssetMetadataValue</span></code><span class=\"sig-paren\">(</span><em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">asset_key</span></span></em><span class=\"sig-paren\">)</span><a class=\"reference internal\" href=\"../../../../_modules/dagster/core/definitions/metadata#DagsterAssetMetadataValue\"><span class=\"viewcode-link\"><span class=\"pre\">[source]</span></span></a></dt>\n<dd><p>Representation of a dagster asset.</p>\n<dl class=\"field-list simple\">\n<dt class=\"field-odd\">Parameters</dt>\n<dd class=\"field-odd\"><p><strong>asset_key</strong> (<a class=\"reference internal\" href=\"ops#dagster.AssetKey\" title=\"dagster.AssetKey\"><em>AssetKey</em></a>) \u2013 The dagster asset key</p>\n</dd>\n</dl>\n</dd></dl>\n\n<dl class=\"py class\">\n<dt>\n<em class=\"property\"><span class=\"pre\">class</span> </em><code class=\"sig-prename descclassname\"><span class=\"pre\">dagster.</span></code><code class=\"sig-name descname\"><span class=\"pre\">DagsterPipelineRunMetadataValue</span></code><span class=\"sig-paren\">(</span><em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">run_id</span></span></em><span class=\"sig-paren\">)</span><a class=\"reference internal\" href=\"../../../../_modules/dagster/core/definitions/metadata#DagsterPipelineRunMetadataValue\"><span class=\"viewcode-link\"><span class=\"pre\">[source]</span></span></a></dt>\n<dd><p>Representation of a dagster pipeline run.</p>\n<dl class=\"field-list simple\">\n<dt class=\"field-odd\">Parameters</dt>\n<dd class=\"field-odd\"><p><strong>run_id</strong> (<a class=\"reference external\" href=\"https://docs.python.org/3/library/stdtypes.html#str\" title=\"(in Python v3.8)\"><em>str</em></a>) \u2013 The pipeline run id</p>\n</dd>\n</dl>\n</dd></dl>\n\n<dl class=\"py class\">\n<dt>\n<em class=\"property\"><span class=\"pre\">class</span> </em><code class=\"sig-prename descclassname\"><span class=\"pre\">dagster.</span></code><code class=\"sig-name descname\"><span class=\"pre\">FloatMetadataValue</span></code><span class=\"sig-paren\">(</span><em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">value</span></span></em><span class=\"sig-paren\">)</span><a class=\"reference internal\" href=\"../../../../_modules/dagster/core/definitions/metadata#FloatMetadataValue\"><span class=\"viewcode-link\"><span class=\"pre\">[source]</span></span></a></dt>\n<dd><p>Container class for float metadata entry data.</p>\n<dl class=\"field-list simple\">\n<dt class=\"field-odd\">Parameters</dt>\n<dd class=\"field-odd\"><p><strong>value</strong> (<em>Optional</em><em>[</em><a class=\"reference external\" href=\"https://docs.python.org/3/library/functions.html#float\" title=\"(in Python v3.8)\"><em>float</em></a><em>]</em>) \u2013 The float value.</p>\n</dd>\n</dl>\n</dd></dl>\n\n<dl class=\"py class\">\n<dt>\n<em class=\"property\"><span class=\"pre\">class</span> </em><code class=\"sig-prename descclassname\"><span class=\"pre\">dagster.</span></code><code class=\"sig-name descname\"><span class=\"pre\">IntMetadataValue</span></code><span class=\"sig-paren\">(</span><em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">value</span></span></em><span class=\"sig-paren\">)</span><a class=\"reference internal\" href=\"../../../../_modules/dagster/core/definitions/metadata#IntMetadataValue\"><span class=\"viewcode-link\"><span class=\"pre\">[source]</span></span></a></dt>\n<dd><p>Container class for int metadata entry data.</p>\n<dl class=\"field-list simple\">\n<dt class=\"field-odd\">Parameters</dt>\n<dd class=\"field-odd\"><p><strong>value</strong> (<em>Optional</em><em>[</em><a class=\"reference external\" href=\"https://docs.python.org/3/library/functions.html#int\" title=\"(in Python v3.8)\"><em>int</em></a><em>]</em>) \u2013 The int value.</p>\n</dd>\n</dl>\n</dd></dl>\n\n<dl class=\"py class\">\n<dt>\n<em class=\"property\"><span class=\"pre\">class</span> </em><code class=\"sig-prename descclassname\"><span class=\"pre\">dagster.</span></code><code class=\"sig-name descname\"><span class=\"pre\">JsonMetadataValue</span></code><span class=\"sig-paren\">(</span><em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">data</span></span></em><span class=\"sig-paren\">)</span><a class=\"reference internal\" href=\"../../../../_modules/dagster/core/definitions/metadata#JsonMetadataValue\"><span class=\"viewcode-link\"><span class=\"pre\">[source]</span></span></a></dt>\n<dd><p>Container class for JSON metadata entry data.</p>\n<dl class=\"field-list simple\">\n<dt class=\"field-odd\">Parameters</dt>\n<dd class=\"field-odd\"><p><strong>data</strong> (<em>Dict</em><em>[</em><a class=\"reference external\" href=\"https://docs.python.org/3/library/stdtypes.html#str\" title=\"(in Python v3.8)\"><em>str</em></a><em>, </em><em>Any</em><em>]</em>) \u2013 The JSON data.</p>\n</dd>\n</dl>\n</dd></dl>\n\n<dl class=\"py class\">\n<dt>\n<em class=\"property\"><span class=\"pre\">class</span> </em><code class=\"sig-prename descclassname\"><span class=\"pre\">dagster.</span></code><code class=\"sig-name descname\"><span class=\"pre\">MarkdownMetadataValue</span></code><span class=\"sig-paren\">(</span><em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">md_str</span></span></em><span class=\"sig-paren\">)</span><a class=\"reference internal\" href=\"../../../../_modules/dagster/core/definitions/metadata#MarkdownMetadataValue\"><span class=\"viewcode-link\"><span class=\"pre\">[source]</span></span></a></dt>\n<dd><p>Container class for markdown metadata entry data.</p>\n<dl class=\"field-list simple\">\n<dt class=\"field-odd\">Parameters</dt>\n<dd class=\"field-odd\"><p><strong>md_str</strong> (<em>Optional</em><em>[</em><a class=\"reference external\" href=\"https://docs.python.org/3/library/stdtypes.html#str\" title=\"(in Python v3.8)\"><em>str</em></a><em>]</em>) \u2013 The markdown as a string.</p>\n</dd>\n</dl>\n</dd></dl>\n\n<dl class=\"py class\">\n<dt>\n<em class=\"property\"><span class=\"pre\">class</span> </em><code class=\"sig-prename descclassname\"><span class=\"pre\">dagster.</span></code><code class=\"sig-name descname\"><span class=\"pre\">PathMetadataValue</span></code><span class=\"sig-paren\">(</span><em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">path</span></span></em><span class=\"sig-paren\">)</span><a class=\"reference internal\" href=\"../../../../_modules/dagster/core/definitions/metadata#PathMetadataValue\"><span class=\"viewcode-link\"><span class=\"pre\">[source]</span></span></a></dt>\n<dd><p>Container class for path metadata entry data.</p>\n<dl class=\"field-list simple\">\n<dt class=\"field-odd\">Parameters</dt>\n<dd class=\"field-odd\"><p><strong>path</strong> (<em>Optional</em><em>[</em><a class=\"reference external\" href=\"https://docs.python.org/3/library/stdtypes.html#str\" title=\"(in Python v3.8)\"><em>str</em></a><em>]</em>) \u2013 The path as a string or conforming to os.PathLike.</p>\n</dd>\n</dl>\n</dd></dl>\n\n<dl class=\"py class\">\n<dt>\n<em class=\"property\"><span class=\"pre\">class</span> </em><code class=\"sig-prename descclassname\"><span class=\"pre\">dagster.</span></code><code class=\"sig-name descname\"><span class=\"pre\">PythonArtifactMetadataValue</span></code><span class=\"sig-paren\">(</span><em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">module</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">name</span></span></em><span class=\"sig-paren\">)</span><a class=\"reference internal\" href=\"../../../../_modules/dagster/core/definitions/metadata#PythonArtifactMetadataValue\"><span class=\"viewcode-link\"><span class=\"pre\">[source]</span></span></a></dt>\n<dd><p>Container class for python artifact metadata entry data.</p>\n<dl class=\"field-list simple\">\n<dt class=\"field-odd\">Parameters</dt>\n<dd class=\"field-odd\"><ul class=\"simple\">\n<li><p><strong>module</strong> (<a class=\"reference external\" href=\"https://docs.python.org/3/library/stdtypes.html#str\" title=\"(in Python v3.8)\"><em>str</em></a>) \u2013 The module where the python artifact can be found</p></li>\n<li><p><strong>name</strong> (<a class=\"reference external\" href=\"https://docs.python.org/3/library/stdtypes.html#str\" title=\"(in Python v3.8)\"><em>str</em></a>) \u2013 The name of the python artifact</p></li>\n</ul>\n</dd>\n</dl>\n</dd></dl>\n\n<dl class=\"py class\">\n<dt>\n<em class=\"property\"><span class=\"pre\">class</span> </em><code class=\"sig-prename descclassname\"><span class=\"pre\">dagster.</span></code><code class=\"sig-name descname\"><span class=\"pre\">TableMetadataValue</span></code><span class=\"sig-paren\">(</span><em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">records</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">schema</span></span></em><span class=\"sig-paren\">)</span><a class=\"reference internal\" href=\"../../../../_modules/dagster/core/definitions/metadata#TableMetadataValue\"><span class=\"viewcode-link\"><span class=\"pre\">[source]</span></span></a></dt>\n<dd><p>Container class for table metadata entry data.</p>\n<dl class=\"field-list simple\">\n<dt class=\"field-odd\">Parameters</dt>\n<dd class=\"field-odd\"><ul class=\"simple\">\n<li><p><strong>records</strong> (<a class=\"reference internal\" href=\"ops#dagster.TableRecord\" title=\"dagster.TableRecord\"><em>TableRecord</em></a>) \u2013 The data as a list of records (i.e. rows).</p></li>\n<li><p><strong>schema</strong> (<em>Optional</em><em>[</em><a class=\"reference internal\" href=\"ops#dagster.TableSchema\" title=\"dagster.TableSchema\"><em>TableSchema</em></a><em>]</em>) \u2013 A schema for the table.</p></li>\n</ul>\n</dd>\n</dl>\n</dd></dl>\n\n<dl class=\"py class\">\n<dt>\n<em class=\"property\"><span class=\"pre\">class</span> </em><code class=\"sig-prename descclassname\"><span class=\"pre\">dagster.</span></code><code class=\"sig-name descname\"><span class=\"pre\">TableSchemaMetadataValue</span></code><span class=\"sig-paren\">(</span><em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">schema</span></span></em><span class=\"sig-paren\">)</span><a class=\"reference internal\" href=\"../../../../_modules/dagster/core/definitions/metadata#TableSchemaMetadataValue\"><span class=\"viewcode-link\"><span class=\"pre\">[source]</span></span></a></dt>\n<dd><p>Representation of a schema for arbitrary tabular data.</p>\n<dl class=\"field-list simple\">\n<dt class=\"field-odd\">Parameters</dt>\n<dd class=\"field-odd\"><p><strong>schema</strong> (<a class=\"reference internal\" href=\"ops#dagster.TableSchema\" title=\"dagster.TableSchema\"><em>TableSchema</em></a>) \u2013 The dictionary containing the schema representation.</p>\n</dd>\n</dl>\n</dd></dl>\n\n<dl class=\"py class\">\n<dt>\n<em class=\"property\"><span class=\"pre\">class</span> </em><code class=\"sig-prename descclassname\"><span class=\"pre\">dagster.</span></code><code class=\"sig-name descname\"><span class=\"pre\">TextMetadataValue</span></code><span class=\"sig-paren\">(</span><em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">text</span></span></em><span class=\"sig-paren\">)</span><a class=\"reference internal\" href=\"../../../../_modules/dagster/core/definitions/metadata#TextMetadataValue\"><span class=\"viewcode-link\"><span class=\"pre\">[source]</span></span></a></dt>\n<dd><p>Container class for text metadata entry data.</p>\n<dl class=\"field-list simple\">\n<dt class=\"field-odd\">Parameters</dt>\n<dd class=\"field-odd\"><p><strong>text</strong> (<em>Optional</em><em>[</em><a class=\"reference external\" href=\"https://docs.python.org/3/library/stdtypes.html#str\" title=\"(in Python v3.8)\"><em>str</em></a><em>]</em>) \u2013 The text data.</p>\n</dd>\n</dl>\n</dd></dl>\n\n<dl class=\"py class\">\n<dt>\n<em class=\"property\"><span class=\"pre\">class</span> </em><code class=\"sig-prename descclassname\"><span class=\"pre\">dagster.</span></code><code class=\"sig-name descname\"><span class=\"pre\">UrlMetadataValue</span></code><span class=\"sig-paren\">(</span><em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">url</span></span></em><span class=\"sig-paren\">)</span><a class=\"reference internal\" href=\"../../../../_modules/dagster/core/definitions/metadata#UrlMetadataValue\"><span class=\"viewcode-link\"><span class=\"pre\">[source]</span></span></a></dt>\n<dd><p>Container class for URL metadata entry data.</p>\n<dl class=\"field-list simple\">\n<dt class=\"field-odd\">Parameters</dt>\n<dd class=\"field-odd\"><p><strong>url</strong> (<em>Optional</em><em>[</em><a class=\"reference external\" href=\"https://docs.python.org/3/library/stdtypes.html#str\" title=\"(in Python v3.8)\"><em>str</em></a><em>]</em>) \u2013 The URL as a string.</p>\n</dd>\n</dl>\n</dd></dl>\n\n</div>\n<hr class=\"docutils\" />\n<div class=\"section\" id=\"asset-key\">\n<h3>Asset key<a class=\"headerlink\" href=\"#asset-key\" title=\"Permalink to this headline\">\u00b6</a></h3>\n<p>Dagster uses <a class=\"reference internal\" href=\"ops#dagster.AssetKey\" title=\"dagster.AssetKey\"><code class=\"xref py py-class docutils literal notranslate\"><span class=\"pre\">AssetKey</span></code></a> to build an index on <code class=\"xref py py-class docutils literal notranslate\"><span class=\"pre\">Materialization</span></code> events.\nAssets materialized with an <a class=\"reference internal\" href=\"ops#dagster.AssetKey\" title=\"dagster.AssetKey\"><code class=\"xref py py-class docutils literal notranslate\"><span class=\"pre\">AssetKey</span></code></a> are highlighted in <cite>dagit</cite> on the <cite>Assets</cite>\ndashboard.</p>\n<dl class=\"py class\">\n<dt>\n<em class=\"property\"><span class=\"pre\">class</span> </em><code class=\"sig-prename descclassname\"><span class=\"pre\">dagster.</span></code><code class=\"sig-name descname\"><span class=\"pre\">AssetKey</span></code><span class=\"sig-paren\">(</span><em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">path</span></span></em><span class=\"sig-paren\">)</span><a class=\"reference internal\" href=\"../../../../_modules/dagster/core/definitions/events#AssetKey\"><span class=\"viewcode-link\"><span class=\"pre\">[source]</span></span></a></dt>\n<dd><p>Object representing the structure of an asset key.  Takes in a sanitized string, list of\nstrings, or tuple of strings.</p>\n<p>Example usage:</p>\n<div class=\"highlight-python notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"kn\">from</span> <span class=\"nn\">dagster</span> <span class=\"kn\">import</span> <span class=\"n\">op</span>\n\n<span class=\"nd\">@op</span>\n<span class=\"k\">def</span> <span class=\"nf\">emit_metadata</span><span class=\"p\">(</span><span class=\"n\">context</span><span class=\"p\">,</span> <span class=\"n\">df</span><span class=\"p\">):</span>\n    <span class=\"k\">yield</span> <span class=\"n\">AssetMaterialization</span><span class=\"p\">(</span>\n        <span class=\"n\">asset_key</span><span class=\"o\">=</span><span class=\"n\">AssetKey</span><span class=\"p\">(</span><span class=\"s1\">&#39;flat_asset_key&#39;</span><span class=\"p\">),</span>\n        <span class=\"n\">metadata</span><span class=\"o\">=</span><span class=\"p\">{</span><span class=\"s2\">&quot;text_metadata&quot;</span><span class=\"p\">:</span> <span class=\"s2\">&quot;Text-based metadata for this event&quot;</span><span class=\"p\">},</span>\n    <span class=\"p\">)</span>\n\n<span class=\"nd\">@op</span>\n<span class=\"k\">def</span> <span class=\"nf\">structured_asset_key</span><span class=\"p\">(</span><span class=\"n\">context</span><span class=\"p\">,</span> <span class=\"n\">df</span><span class=\"p\">):</span>\n    <span class=\"k\">yield</span> <span class=\"n\">AssetMaterialization</span><span class=\"p\">(</span>\n        <span class=\"n\">asset_key</span><span class=\"o\">=</span><span class=\"n\">AssetKey</span><span class=\"p\">([</span><span class=\"s1\">&#39;parent&#39;</span><span class=\"p\">,</span> <span class=\"s1\">&#39;child&#39;</span><span class=\"p\">,</span> <span class=\"s1\">&#39;grandchild&#39;</span><span class=\"p\">]),</span>\n        <span class=\"n\">metadata</span><span class=\"o\">=</span><span class=\"p\">{</span><span class=\"s2\">&quot;text_metadata&quot;</span><span class=\"p\">:</span> <span class=\"s2\">&quot;Text-based metadata for this event&quot;</span><span class=\"p\">},</span>\n    <span class=\"p\">)</span>\n\n<span class=\"nd\">@op</span>\n<span class=\"k\">def</span> <span class=\"nf\">structured_asset_key_2</span><span class=\"p\">(</span><span class=\"n\">context</span><span class=\"p\">,</span> <span class=\"n\">df</span><span class=\"p\">):</span>\n    <span class=\"k\">yield</span> <span class=\"n\">AssetMaterialization</span><span class=\"p\">(</span>\n        <span class=\"n\">asset_key</span><span class=\"o\">=</span><span class=\"n\">AssetKey</span><span class=\"p\">((</span><span class=\"s1\">&#39;parent&#39;</span><span class=\"p\">,</span> <span class=\"s1\">&#39;child&#39;</span><span class=\"p\">,</span> <span class=\"s1\">&#39;grandchild&#39;</span><span class=\"p\">)),</span>\n        <span class=\"n\">metadata</span><span class=\"o\">=</span><span class=\"p\">{</span><span class=\"s2\">&quot;text_metadata&quot;</span><span class=\"p\">:</span> <span class=\"s2\">&quot;Text-based metadata for this event&quot;</span><span class=\"p\">},</span>\n    <span class=\"p\">)</span>\n</pre></div>\n</div>\n<dl class=\"field-list simple\">\n<dt class=\"field-odd\">Parameters</dt>\n<dd class=\"field-odd\"><p><strong>path</strong> (<em>Sequence</em><em>[</em><a class=\"reference external\" href=\"https://docs.python.org/3/library/stdtypes.html#str\" title=\"(in Python v3.8)\"><em>str</em></a><em>]</em>) \u2013 String, list of strings, or tuple of strings.  A list of strings\nrepresent the hierarchical structure of the asset_key.</p>\n</dd>\n</dl>\n<dl class=\"py method\">\n<dt>\n<code class=\"sig-name descname\"><span class=\"pre\">to_string</span></code><span class=\"sig-paren\">(</span><em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">legacy</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">False</span></span></em><span class=\"sig-paren\">)</span><a class=\"reference internal\" href=\"../../../../_modules/dagster/core/definitions/events#AssetKey.to_string\"><span class=\"viewcode-link\"><span class=\"pre\">[source]</span></span></a></dt>\n<dd><p>E.g. \u2018[\u201cfirst_component\u201d, \u201csecond_component\u201d]\u2019</p>\n</dd></dl>\n\n<dl class=\"py method\">\n<dt>\n<code class=\"sig-name descname\"><span class=\"pre\">to_user_string</span></code><span class=\"sig-paren\">(</span><span class=\"sig-paren\">)</span><a class=\"reference internal\" href=\"../../../../_modules/dagster/core/definitions/events#AssetKey.to_user_string\"><span class=\"viewcode-link\"><span class=\"pre\">[source]</span></span></a></dt>\n<dd><p>E.g. \u201cfirst_component/second_component\u201d</p>\n</dd></dl>\n\n</dd></dl>\n\n</div>\n</div>\n</div>\n", "current_page_name": "sections/api/apidocs/solids", "customsidebar": null, "display_toc": true, "meta": null, "metatags": "", "next": {"link": "../dynamic/", "title": "Dynamic Mapping &amp; Collect"}, "page_source_suffix": ".rst", "parents": [], "prev": {"link": "../schedules-sensors/", "title": "Run Requests"}, "rellinks": [["genindex", "General Index", "I", "index"], ["py-modindex", "Python Module Index", "", "modules"], ["sections/api/apidocs/dynamic", "Dynamic Mapping &amp; Collect", "N", "next"], ["sections/api/apidocs/schedules-sensors", "Run Requests", "P", "previous"]], "sidebars": ["globaltoc.html", "searchbox.html"], "sourcename": "sections/api/apidocs/solids.rst.txt", "title": "[Legacy] Solids", "toc": "<ul>\n<li><a class=\"reference internal\" href=\"#\">[Legacy] Solids</a><ul>\n<li><a class=\"reference internal\" href=\"#defining-solids\">Defining solids</a></li>\n<li><a class=\"reference internal\" href=\"#inputs-outputs\">Inputs &amp; outputs</a></li>\n<li><a class=\"reference internal\" href=\"#retries\">Retries</a></li>\n<li><a class=\"reference internal\" href=\"#execution\">Execution</a></li>\n<li><a class=\"reference internal\" href=\"#execution-context\">Execution context</a></li>\n<li><a class=\"reference internal\" href=\"#composing-solids\">Composing solids</a></li>\n<li><a class=\"reference internal\" href=\"#events\">Events</a><ul>\n<li><a class=\"reference internal\" href=\"#event-types\">Event types</a></li>\n<li><a class=\"reference internal\" href=\"#metadata\">Metadata</a></li>\n<li><a class=\"reference internal\" href=\"#metadata-types\">Metadata types</a></li>\n<li><a class=\"reference internal\" href=\"#asset-key\">Asset key</a></li>\n</ul>\n</li>\n</ul>\n</li>\n</ul>\n"}, "types": {"alabaster_version": "0.7.12", "body": "<div class=\"section\" id=\"types\">\n<h1>Types<a class=\"headerlink\" href=\"#types\" title=\"Permalink to this headline\">\u00b6</a></h1>\n<p>Dagster includes facilities for typing the input and output values of ops (\u201cruntime\u201d types).</p>\n<div class=\"section\" id=\"built-in-types\">\n<span id=\"builtin\"></span><h2>Built-in types<a class=\"headerlink\" href=\"#built-in-types\" title=\"Permalink to this headline\">\u00b6</a></h2>\n<dl class=\"py attribute\">\n<dt id=\"dagster.Nothing\">\n<code class=\"sig-prename descclassname\"><span class=\"pre\">dagster.</span></code><code class=\"sig-name descname\"><span class=\"pre\">Nothing</span></code><a class=\"headerlink\" href=\"#dagster.Nothing\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Use this type only for inputs and outputs, in order to establish an execution dependency without\ncommunicating a value. Inputs of this type will not be passed to the op compute function, so\nit is necessary to use the explicit <a class=\"reference internal\" href=\"ops#dagster.In\" title=\"dagster.In\"><code class=\"xref py py-class docutils literal notranslate\"><span class=\"pre\">In</span></code></a> API to define them rather than\nthe Python 3 type hint syntax.</p>\n<p>All values are considered to be instances of <code class=\"docutils literal notranslate\"><span class=\"pre\">Nothing</span></code>.</p>\n<p><strong>Examples:</strong></p>\n<div class=\"highlight-python notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"nd\">@op</span>\n<span class=\"k\">def</span> <span class=\"nf\">wait</span><span class=\"p\">(</span><span class=\"n\">_</span><span class=\"p\">)</span> <span class=\"o\">-&gt;</span> <span class=\"n\">Nothing</span><span class=\"p\">:</span>\n    <span class=\"n\">time</span><span class=\"o\">.</span><span class=\"n\">sleep</span><span class=\"p\">(</span><span class=\"mi\">1</span><span class=\"p\">)</span>\n    <span class=\"k\">return</span>\n\n<span class=\"nd\">@op</span><span class=\"p\">(</span>\n    <span class=\"n\">ins</span><span class=\"o\">=</span><span class=\"p\">{</span><span class=\"s2\">&quot;ready&quot;</span><span class=\"p\">:</span> <span class=\"n\">In</span><span class=\"p\">(</span><span class=\"n\">dagster_type</span><span class=\"o\">=</span><span class=\"n\">Nothing</span><span class=\"p\">)},</span>\n<span class=\"p\">)</span>\n<span class=\"k\">def</span> <span class=\"nf\">done</span><span class=\"p\">(</span><span class=\"n\">_</span><span class=\"p\">)</span> <span class=\"o\">-&gt;</span> <span class=\"nb\">str</span><span class=\"p\">:</span>\n    <span class=\"k\">return</span> <span class=\"s1\">&#39;done&#39;</span>\n\n<span class=\"nd\">@job</span>\n<span class=\"k\">def</span> <span class=\"nf\">nothing_job</span><span class=\"p\">():</span>\n    <span class=\"n\">done</span><span class=\"p\">(</span><span class=\"n\">wait</span><span class=\"p\">())</span>\n\n<span class=\"c1\"># Any value will pass the type check for Nothing</span>\n<span class=\"nd\">@op</span>\n<span class=\"k\">def</span> <span class=\"nf\">wait_int</span><span class=\"p\">(</span><span class=\"n\">_</span><span class=\"p\">)</span> <span class=\"o\">-&gt;</span> <span class=\"n\">Int</span><span class=\"p\">:</span>\n    <span class=\"n\">time</span><span class=\"o\">.</span><span class=\"n\">sleep</span><span class=\"p\">(</span><span class=\"mi\">1</span><span class=\"p\">)</span>\n    <span class=\"k\">return</span> <span class=\"mi\">1</span>\n\n<span class=\"nd\">@job</span>\n<span class=\"k\">def</span> <span class=\"nf\">nothing_int_job</span><span class=\"p\">():</span>\n    <span class=\"n\">done</span><span class=\"p\">(</span><span class=\"n\">wait_int</span><span class=\"p\">())</span>\n</pre></div>\n</div>\n</dd></dl>\n\n<dl class=\"py class\">\n<dt id=\"dagster.FileHandle\">\n<em class=\"property\"><span class=\"pre\">class</span> </em><code class=\"sig-prename descclassname\"><span class=\"pre\">dagster.</span></code><code class=\"sig-name descname\"><span class=\"pre\">FileHandle</span></code><a class=\"reference internal\" href=\"../../../../_modules/dagster/core/storage/file_manager#FileHandle\"><span class=\"viewcode-link\"><span class=\"pre\">[source]</span></span></a><a class=\"headerlink\" href=\"#dagster.FileHandle\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>A reference to a file as manipulated by a FileManager</p>\n<p>Subclasses may handle files that are resident on the local file system, in an object store, or\nin any arbitrary place where a file can be stored.</p>\n<p>This exists to handle the very common case where you wish to write a computation that reads,\ntransforms, and writes files, but where you also want the same code to work in local development\nas well as on a cluster where the files will be stored in a globally available object store\nsuch as S3.</p>\n<dl class=\"py method\">\n<dt id=\"dagster.FileHandle.path_desc\">\n<em class=\"property\"><span class=\"pre\">abstract</span> <span class=\"pre\">property</span> </em><code class=\"sig-name descname\"><span class=\"pre\">path_desc</span></code><a class=\"headerlink\" href=\"#dagster.FileHandle.path_desc\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>A representation of the file path for display purposes only.</p>\n</dd></dl>\n\n</dd></dl>\n\n<dl class=\"py class\">\n<dt id=\"dagster.LocalFileHandle\">\n<em class=\"property\"><span class=\"pre\">class</span> </em><code class=\"sig-prename descclassname\"><span class=\"pre\">dagster.</span></code><code class=\"sig-name descname\"><span class=\"pre\">LocalFileHandle</span></code><span class=\"sig-paren\">(</span><em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">path</span></span></em><span class=\"sig-paren\">)</span><a class=\"reference internal\" href=\"../../../../_modules/dagster/core/storage/file_manager#LocalFileHandle\"><span class=\"viewcode-link\"><span class=\"pre\">[source]</span></span></a><a class=\"headerlink\" href=\"#dagster.LocalFileHandle\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>A reference to a file on a local filesystem.</p>\n</dd></dl>\n\n</div>\n<div class=\"section\" id=\"making-new-types\">\n<h2>Making New Types<a class=\"headerlink\" href=\"#making-new-types\" title=\"Permalink to this headline\">\u00b6</a></h2>\n<dl class=\"py class\">\n<dt id=\"dagster.DagsterType\">\n<em class=\"property\"><span class=\"pre\">class</span> </em><code class=\"sig-prename descclassname\"><span class=\"pre\">dagster.</span></code><code class=\"sig-name descname\"><span class=\"pre\">DagsterType</span></code><span class=\"sig-paren\">(</span><em class=\"sig-param\"><span class=\"pre\">type_check_fn</span></em>, <em class=\"sig-param\"><span class=\"pre\">key=None</span></em>, <em class=\"sig-param\"><span class=\"pre\">name=None</span></em>, <em class=\"sig-param\"><span class=\"pre\">is_builtin=False</span></em>, <em class=\"sig-param\"><span class=\"pre\">description=None</span></em>, <em class=\"sig-param\"><span class=\"pre\">loader=None</span></em>, <em class=\"sig-param\"><span class=\"pre\">materializer=None</span></em>, <em class=\"sig-param\"><span class=\"pre\">required_resource_keys=None</span></em>, <em class=\"sig-param\"><span class=\"pre\">kind=&lt;DagsterTypeKind.REGULAR:</span> <span class=\"pre\">'REGULAR'&gt;</span></em>, <em class=\"sig-param\"><span class=\"pre\">typing_type=None</span></em>, <em class=\"sig-param\"><span class=\"pre\">metadata_entries=None</span></em>, <em class=\"sig-param\"><span class=\"pre\">metadata=None</span></em><span class=\"sig-paren\">)</span><a class=\"reference internal\" href=\"../../../../_modules/dagster/core/types/dagster_type#DagsterType\"><span class=\"viewcode-link\"><span class=\"pre\">[source]</span></span></a><a class=\"headerlink\" href=\"#dagster.DagsterType\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Define a type in dagster. These can be used in the inputs and outputs of ops.</p>\n<dl class=\"field-list simple\">\n<dt class=\"field-odd\">Parameters</dt>\n<dd class=\"field-odd\"><ul class=\"simple\">\n<li><p><strong>type_check_fn</strong> (<em>Callable</em><em>[</em><em>[</em><a class=\"reference internal\" href=\"execution#dagster.TypeCheckContext\" title=\"dagster.TypeCheckContext\"><em>TypeCheckContext</em></a><em>, </em><em>Any</em><em>]</em><em>, </em><em>[</em><em>Union</em><em>[</em><a class=\"reference external\" href=\"https://docs.python.org/3/library/functions.html#bool\" title=\"(in Python v3.8)\"><em>bool</em></a><em>, </em><a class=\"reference internal\" href=\"ops#dagster.TypeCheck\" title=\"dagster.TypeCheck\"><em>TypeCheck</em></a><em>]</em><em>]</em><em>]</em>) \u2013 The function that defines the type check. It takes the value flowing\nthrough the input or output of the op. If it passes, return either\n<code class=\"docutils literal notranslate\"><span class=\"pre\">True</span></code> or a <a class=\"reference internal\" href=\"ops#dagster.TypeCheck\" title=\"dagster.TypeCheck\"><code class=\"xref py py-class docutils literal notranslate\"><span class=\"pre\">TypeCheck</span></code></a> with <code class=\"docutils literal notranslate\"><span class=\"pre\">success</span></code> set to <code class=\"docutils literal notranslate\"><span class=\"pre\">True</span></code>. If it fails,\nreturn either <code class=\"docutils literal notranslate\"><span class=\"pre\">False</span></code> or a <a class=\"reference internal\" href=\"ops#dagster.TypeCheck\" title=\"dagster.TypeCheck\"><code class=\"xref py py-class docutils literal notranslate\"><span class=\"pre\">TypeCheck</span></code></a> with <code class=\"docutils literal notranslate\"><span class=\"pre\">success</span></code> set to <code class=\"docutils literal notranslate\"><span class=\"pre\">False</span></code>.\nThe first argument must be named <code class=\"docutils literal notranslate\"><span class=\"pre\">context</span></code> (or, if unused, <code class=\"docutils literal notranslate\"><span class=\"pre\">_</span></code>, <code class=\"docutils literal notranslate\"><span class=\"pre\">_context</span></code>, or <code class=\"docutils literal notranslate\"><span class=\"pre\">context_</span></code>).\nUse <code class=\"docutils literal notranslate\"><span class=\"pre\">required_resource_keys</span></code> for access to resources.</p></li>\n<li><p><strong>key</strong> (<em>Optional</em><em>[</em><a class=\"reference external\" href=\"https://docs.python.org/3/library/stdtypes.html#str\" title=\"(in Python v3.8)\"><em>str</em></a><em>]</em>) \u2013 <p>The unique key to identify types programmatically.\nThe key property always has a value. If you omit key to the argument\nto the init function, it instead receives the value of <code class=\"docutils literal notranslate\"><span class=\"pre\">name</span></code>. If\nneither <code class=\"docutils literal notranslate\"><span class=\"pre\">key</span></code> nor <code class=\"docutils literal notranslate\"><span class=\"pre\">name</span></code> is provided, a <code class=\"docutils literal notranslate\"><span class=\"pre\">CheckError</span></code> is thrown.</p>\n<p>In the case of a generic type such as <code class=\"docutils literal notranslate\"><span class=\"pre\">List</span></code> or <code class=\"docutils literal notranslate\"><span class=\"pre\">Optional</span></code>, this is\ngenerated programmatically based on the type parameters.</p>\n<p>For most use cases, name should be set and the key argument should\nnot be specified.</p>\n</p></li>\n<li><p><strong>name</strong> (<em>Optional</em><em>[</em><a class=\"reference external\" href=\"https://docs.python.org/3/library/stdtypes.html#str\" title=\"(in Python v3.8)\"><em>str</em></a><em>]</em>) \u2013 A unique name given by a user. If <code class=\"docutils literal notranslate\"><span class=\"pre\">key</span></code> is <code class=\"docutils literal notranslate\"><span class=\"pre\">None</span></code>, <code class=\"docutils literal notranslate\"><span class=\"pre\">key</span></code>\nbecomes this value. Name is not given in a case where the user does\nnot specify a unique name for this type, such as a generic class.</p></li>\n<li><p><strong>description</strong> (<em>Optional</em><em>[</em><a class=\"reference external\" href=\"https://docs.python.org/3/library/stdtypes.html#str\" title=\"(in Python v3.8)\"><em>str</em></a><em>]</em>) \u2013 A markdown-formatted string, displayed in tooling.</p></li>\n<li><p><strong>loader</strong> (<em>Optional</em><em>[</em><a class=\"reference internal\" href=\"#dagster.DagsterTypeLoader\" title=\"dagster.DagsterTypeLoader\"><em>DagsterTypeLoader</em></a><em>]</em>) \u2013 An instance of a class that\ninherits from <a class=\"reference internal\" href=\"#dagster.DagsterTypeLoader\" title=\"dagster.DagsterTypeLoader\"><code class=\"xref py py-class docutils literal notranslate\"><span class=\"pre\">DagsterTypeLoader</span></code></a> and can map config data to a value of\nthis type. Specify this argument if you will need to shim values of this type using the\nconfig machinery. As a rule, you should use the\n<a class=\"reference internal\" href=\"#dagster.dagster_type_loader\" title=\"dagster.dagster_type_loader\"><code class=\"xref py py-func docutils literal notranslate\"><span class=\"pre\">&#64;dagster_type_loader</span></code></a> decorator to construct\nthese arguments.</p></li>\n<li><p><strong>materializer</strong> (<em>Optional</em><em>[</em><a class=\"reference internal\" href=\"#dagster.DagsterTypeMaterializer\" title=\"dagster.DagsterTypeMaterializer\"><em>DagsterTypeMaterializer</em></a><em>]</em>) \u2013 An instance of a class\nthat inherits from <a class=\"reference internal\" href=\"#dagster.DagsterTypeMaterializer\" title=\"dagster.DagsterTypeMaterializer\"><code class=\"xref py py-class docutils literal notranslate\"><span class=\"pre\">DagsterTypeMaterializer</span></code></a> and can persist values of\nthis type. As a rule, you should use the\n<a class=\"reference internal\" href=\"#dagster.dagster_type_materializer\" title=\"dagster.dagster_type_materializer\"><code class=\"xref py py-func docutils literal notranslate\"><span class=\"pre\">&#64;dagster_type_materializer</span></code></a>\ndecorator to construct these arguments.</p></li>\n<li><p><strong>required_resource_keys</strong> (<em>Optional</em><em>[</em><em>Set</em><em>[</em><a class=\"reference external\" href=\"https://docs.python.org/3/library/stdtypes.html#str\" title=\"(in Python v3.8)\"><em>str</em></a><em>]</em><em>]</em>) \u2013 Resource keys required by the <code class=\"docutils literal notranslate\"><span class=\"pre\">type_check_fn</span></code>.</p></li>\n<li><p><strong>is_builtin</strong> (<a class=\"reference external\" href=\"https://docs.python.org/3/library/functions.html#bool\" title=\"(in Python v3.8)\"><em>bool</em></a>) \u2013 Defaults to False. This is used by tools to display or\nfilter built-in types (such as <code class=\"xref py py-class docutils literal notranslate\"><span class=\"pre\">String</span></code>, <code class=\"xref py py-class docutils literal notranslate\"><span class=\"pre\">Int</span></code>) to visually distinguish\nthem from user-defined types. Meant for internal use.</p></li>\n<li><p><strong>kind</strong> (<em>DagsterTypeKind</em>) \u2013 Defaults to None. This is used to determine the kind of runtime type\nfor InputDefinition and OutputDefinition type checking.</p></li>\n<li><p><strong>typing_type</strong> \u2013 Defaults to None. A valid python typing type (e.g. Optional[List[int]]) for the\nvalue contained within the DagsterType. Meant for internal use.</p></li>\n</ul>\n</dd>\n</dl>\n</dd></dl>\n\n<dl class=\"py function\">\n<dt id=\"dagster.PythonObjectDagsterType\">\n<code class=\"sig-prename descclassname\"><span class=\"pre\">dagster.</span></code><code class=\"sig-name descname\"><span class=\"pre\">PythonObjectDagsterType</span></code><span class=\"sig-paren\">(</span><em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">python_type</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">key</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">None</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">name</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">None</span></span></em>, <em class=\"sig-param\"><span class=\"o\"><span class=\"pre\">**</span></span><span class=\"n\"><span class=\"pre\">kwargs</span></span></em><span class=\"sig-paren\">)</span><a class=\"reference internal\" href=\"../../../../_modules/dagster/core/types/dagster_type#PythonObjectDagsterType\"><span class=\"viewcode-link\"><span class=\"pre\">[source]</span></span></a><a class=\"headerlink\" href=\"#dagster.PythonObjectDagsterType\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Define a type in dagster whose typecheck is an isinstance check.</p>\n<p>Specifically, the type can either be a single python type (e.g. int),\nor a tuple of types (e.g. (int, float)) which is treated as a union.</p>\n<p class=\"rubric\">Examples</p>\n<div class=\"highlight-python notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"n\">ntype</span> <span class=\"o\">=</span> <span class=\"n\">PythonObjectDagsterType</span><span class=\"p\">(</span><span class=\"n\">python_type</span><span class=\"o\">=</span><span class=\"nb\">int</span><span class=\"p\">)</span>\n<span class=\"k\">assert</span> <span class=\"n\">ntype</span><span class=\"o\">.</span><span class=\"n\">name</span> <span class=\"o\">==</span> <span class=\"s1\">&#39;int&#39;</span>\n<span class=\"n\">assert_success</span><span class=\"p\">(</span><span class=\"n\">ntype</span><span class=\"p\">,</span> <span class=\"mi\">1</span><span class=\"p\">)</span>\n<span class=\"n\">assert_failure</span><span class=\"p\">(</span><span class=\"n\">ntype</span><span class=\"p\">,</span> <span class=\"s1\">&#39;a&#39;</span><span class=\"p\">)</span>\n</pre></div>\n</div>\n<div class=\"highlight-python notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"n\">ntype</span> <span class=\"o\">=</span> <span class=\"n\">PythonObjectDagsterType</span><span class=\"p\">(</span><span class=\"n\">python_type</span><span class=\"o\">=</span><span class=\"p\">(</span><span class=\"nb\">int</span><span class=\"p\">,</span> <span class=\"nb\">float</span><span class=\"p\">))</span>\n<span class=\"k\">assert</span> <span class=\"n\">ntype</span><span class=\"o\">.</span><span class=\"n\">name</span> <span class=\"o\">==</span> <span class=\"s1\">&#39;Union[int, float]&#39;</span>\n<span class=\"n\">assert_success</span><span class=\"p\">(</span><span class=\"n\">ntype</span><span class=\"p\">,</span> <span class=\"mi\">1</span><span class=\"p\">)</span>\n<span class=\"n\">assert_success</span><span class=\"p\">(</span><span class=\"n\">ntype</span><span class=\"p\">,</span> <span class=\"mf\">1.5</span><span class=\"p\">)</span>\n<span class=\"n\">assert_failure</span><span class=\"p\">(</span><span class=\"n\">ntype</span><span class=\"p\">,</span> <span class=\"s1\">&#39;a&#39;</span><span class=\"p\">)</span>\n</pre></div>\n</div>\n<dl class=\"field-list simple\">\n<dt class=\"field-odd\">Parameters</dt>\n<dd class=\"field-odd\"><ul class=\"simple\">\n<li><p><strong>python_type</strong> (<em>Union</em><em>[</em><em>Type</em><em>, </em><em>Tuple</em><em>[</em><em>Type</em><em>, </em><em>..</em><em>]</em>) \u2013 The dagster typecheck function calls instanceof on\nthis type.</p></li>\n<li><p><strong>name</strong> (<em>Optional</em><em>[</em><a class=\"reference external\" href=\"https://docs.python.org/3/library/stdtypes.html#str\" title=\"(in Python v3.8)\"><em>str</em></a><em>]</em>) \u2013 Name the type. Defaults to the name of <code class=\"docutils literal notranslate\"><span class=\"pre\">python_type</span></code>.</p></li>\n<li><p><strong>key</strong> (<em>Optional</em><em>[</em><a class=\"reference external\" href=\"https://docs.python.org/3/library/stdtypes.html#str\" title=\"(in Python v3.8)\"><em>str</em></a><em>]</em>) \u2013 Key of the type. Defaults to name.</p></li>\n<li><p><strong>description</strong> (<em>Optional</em><em>[</em><a class=\"reference external\" href=\"https://docs.python.org/3/library/stdtypes.html#str\" title=\"(in Python v3.8)\"><em>str</em></a><em>]</em>) \u2013 A markdown-formatted string, displayed in tooling.</p></li>\n<li><p><strong>loader</strong> (<em>Optional</em><em>[</em><a class=\"reference internal\" href=\"#dagster.DagsterTypeLoader\" title=\"dagster.DagsterTypeLoader\"><em>DagsterTypeLoader</em></a><em>]</em>) \u2013 An instance of a class that\ninherits from <a class=\"reference internal\" href=\"#dagster.DagsterTypeLoader\" title=\"dagster.DagsterTypeLoader\"><code class=\"xref py py-class docutils literal notranslate\"><span class=\"pre\">DagsterTypeLoader</span></code></a> and can map config data to a value of\nthis type. Specify this argument if you will need to shim values of this type using the\nconfig machinery. As a rule, you should use the\n<a class=\"reference internal\" href=\"#dagster.dagster_type_loader\" title=\"dagster.dagster_type_loader\"><code class=\"xref py py-func docutils literal notranslate\"><span class=\"pre\">&#64;dagster_type_loader</span></code></a> decorator to construct\nthese arguments.</p></li>\n<li><p><strong>materializer</strong> (<em>Optional</em><em>[</em><a class=\"reference internal\" href=\"#dagster.DagsterTypeMaterializer\" title=\"dagster.DagsterTypeMaterializer\"><em>DagsterTypeMaterializer</em></a><em>]</em>) \u2013 An instance of a class\nthat inherits from <a class=\"reference internal\" href=\"#dagster.DagsterTypeMaterializer\" title=\"dagster.DagsterTypeMaterializer\"><code class=\"xref py py-class docutils literal notranslate\"><span class=\"pre\">DagsterTypeMaterializer</span></code></a> and can persist values of\nthis type. As a rule, you should use the\n<code class=\"xref py py-func docutils literal notranslate\"><span class=\"pre\">&#64;dagster_type_mate</span></code>\ndecorator to construct these arguments.</p></li>\n</ul>\n</dd>\n</dl>\n</dd></dl>\n\n<dl class=\"py function\">\n<dt id=\"dagster.dagster_type_loader\">\n<code class=\"sig-prename descclassname\"><span class=\"pre\">dagster.</span></code><code class=\"sig-name descname\"><span class=\"pre\">dagster_type_loader</span></code><span class=\"sig-paren\">(</span><em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">config_schema</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">required_resource_keys</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">None</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">loader_version</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">None</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">external_version_fn</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">None</span></span></em><span class=\"sig-paren\">)</span><a class=\"reference internal\" href=\"../../../../_modules/dagster/core/types/config_schema#dagster_type_loader\"><span class=\"viewcode-link\"><span class=\"pre\">[source]</span></span></a><a class=\"headerlink\" href=\"#dagster.dagster_type_loader\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Create an dagster type loader that maps config data to a runtime value.</p>\n<p>The decorated function should take the execution context and parsed config value and return the\nappropriate runtime value.</p>\n<dl class=\"field-list simple\">\n<dt class=\"field-odd\">Parameters</dt>\n<dd class=\"field-odd\"><ul class=\"simple\">\n<li><p><strong>config_schema</strong> (<a class=\"reference internal\" href=\"config#dagster.ConfigSchema\" title=\"dagster.ConfigSchema\"><em>ConfigSchema</em></a>) \u2013 The schema for the config that\u2019s passed to the decorated\nfunction.</p></li>\n<li><p><strong>loader_version</strong> (<a class=\"reference external\" href=\"https://docs.python.org/3/library/stdtypes.html#str\" title=\"(in Python v3.8)\"><em>str</em></a>) \u2013 (Experimental) The version of the decorated compute function. Two\nloading functions should have the same version if and only if they deterministically\nproduce the same outputs when provided the same inputs.</p></li>\n<li><p><strong>external_version_fn</strong> (<em>Callable</em>) \u2013 (Experimental) A function that takes in the same parameters as the loader\nfunction (config_value) and returns a representation of the version of the external\nasset (str). Two external assets with identical versions are treated as identical to one\nanother.</p></li>\n</ul>\n</dd>\n</dl>\n<p>Examples:</p>\n<div class=\"highlight-python notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"nd\">@dagster_type_loader</span><span class=\"p\">(</span><span class=\"n\">Permissive</span><span class=\"p\">())</span>\n<span class=\"k\">def</span> <span class=\"nf\">load_dict</span><span class=\"p\">(</span><span class=\"n\">_context</span><span class=\"p\">,</span> <span class=\"n\">value</span><span class=\"p\">):</span>\n    <span class=\"k\">return</span> <span class=\"n\">value</span>\n</pre></div>\n</div>\n</dd></dl>\n\n<dl class=\"py class\">\n<dt id=\"dagster.DagsterTypeLoader\">\n<em class=\"property\"><span class=\"pre\">class</span> </em><code class=\"sig-prename descclassname\"><span class=\"pre\">dagster.</span></code><code class=\"sig-name descname\"><span class=\"pre\">DagsterTypeLoader</span></code><a class=\"reference internal\" href=\"../../../../_modules/dagster/core/types/config_schema#DagsterTypeLoader\"><span class=\"viewcode-link\"><span class=\"pre\">[source]</span></span></a><a class=\"headerlink\" href=\"#dagster.DagsterTypeLoader\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Dagster type loaders are used to load unconnected inputs of the dagster type they are attached\nto.</p>\n<p>The recommended way to define a type loader is with the\n<a class=\"reference internal\" href=\"#dagster.dagster_type_loader\" title=\"dagster.dagster_type_loader\"><code class=\"xref py py-func docutils literal notranslate\"><span class=\"pre\">&#64;dagster_type_loader</span></code></a> decorator.</p>\n</dd></dl>\n\n<dl class=\"py function\">\n<dt id=\"dagster.dagster_type_materializer\">\n<code class=\"sig-prename descclassname\"><span class=\"pre\">dagster.</span></code><code class=\"sig-name descname\"><span class=\"pre\">dagster_type_materializer</span></code><span class=\"sig-paren\">(</span><em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">config_schema</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">required_resource_keys</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">None</span></span></em><span class=\"sig-paren\">)</span><a class=\"reference internal\" href=\"../../../../_modules/dagster/core/types/config_schema#dagster_type_materializer\"><span class=\"viewcode-link\"><span class=\"pre\">[source]</span></span></a><a class=\"headerlink\" href=\"#dagster.dagster_type_materializer\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Create an output materialization hydration config that configurably materializes a runtime\nvalue.</p>\n<p>The decorated function should take the execution context, the parsed config value, and the\nruntime value. It should materialize the runtime value, and should\nreturn an appropriate <a class=\"reference internal\" href=\"ops#dagster.AssetMaterialization\" title=\"dagster.AssetMaterialization\"><code class=\"xref py py-class docutils literal notranslate\"><span class=\"pre\">AssetMaterialization</span></code></a>.</p>\n<dl class=\"field-list simple\">\n<dt class=\"field-odd\">Parameters</dt>\n<dd class=\"field-odd\"><p><strong>config_schema</strong> (<a class=\"reference external\" href=\"https://docs.python.org/3/library/functions.html#object\" title=\"(in Python v3.8)\"><em>object</em></a>) \u2013 The type of the config data expected by the decorated function.</p>\n</dd>\n</dl>\n<p>Examples:</p>\n<div class=\"highlight-python notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"c1\"># Takes a list of dicts such as might be read in using csv.DictReader, as well as a config</span>\n<span class=\"n\">value</span><span class=\"p\">,</span> <span class=\"ow\">and</span> <span class=\"n\">writes</span>\n<span class=\"nd\">@dagster_type_materializer</span><span class=\"p\">(</span><span class=\"nb\">str</span><span class=\"p\">)</span>\n<span class=\"k\">def</span> <span class=\"nf\">materialize_df</span><span class=\"p\">(</span><span class=\"n\">_context</span><span class=\"p\">,</span> <span class=\"n\">path</span><span class=\"p\">,</span> <span class=\"n\">value</span><span class=\"p\">):</span>\n    <span class=\"k\">with</span> <span class=\"nb\">open</span><span class=\"p\">(</span><span class=\"n\">path</span><span class=\"p\">,</span> <span class=\"s1\">&#39;w&#39;</span><span class=\"p\">)</span> <span class=\"k\">as</span> <span class=\"n\">fd</span><span class=\"p\">:</span>\n        <span class=\"n\">writer</span> <span class=\"o\">=</span> <span class=\"n\">csv</span><span class=\"o\">.</span><span class=\"n\">DictWriter</span><span class=\"p\">(</span><span class=\"n\">fd</span><span class=\"p\">,</span> <span class=\"n\">fieldnames</span><span class=\"o\">=</span><span class=\"n\">value</span><span class=\"p\">[</span><span class=\"mi\">0</span><span class=\"p\">]</span><span class=\"o\">.</span><span class=\"n\">keys</span><span class=\"p\">())</span>\n        <span class=\"n\">writer</span><span class=\"o\">.</span><span class=\"n\">writeheader</span><span class=\"p\">()</span>\n        <span class=\"n\">writer</span><span class=\"o\">.</span><span class=\"n\">writerows</span><span class=\"p\">(</span><span class=\"n\">rowdicts</span><span class=\"o\">=</span><span class=\"n\">value</span><span class=\"p\">)</span>\n\n    <span class=\"k\">return</span> <span class=\"n\">AssetMaterialization</span><span class=\"o\">.</span><span class=\"n\">file</span><span class=\"p\">(</span><span class=\"n\">path</span><span class=\"p\">)</span>\n</pre></div>\n</div>\n</dd></dl>\n\n<dl class=\"py class\">\n<dt id=\"dagster.DagsterTypeMaterializer\">\n<em class=\"property\"><span class=\"pre\">class</span> </em><code class=\"sig-prename descclassname\"><span class=\"pre\">dagster.</span></code><code class=\"sig-name descname\"><span class=\"pre\">DagsterTypeMaterializer</span></code><a class=\"reference internal\" href=\"../../../../_modules/dagster/core/types/config_schema#DagsterTypeMaterializer\"><span class=\"viewcode-link\"><span class=\"pre\">[source]</span></span></a><a class=\"headerlink\" href=\"#dagster.DagsterTypeMaterializer\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Dagster type materializers are used to materialize outputs of the dagster type they are attached\nto.</p>\n<p>The recommended way to define a type loader is with the\n<a class=\"reference internal\" href=\"#dagster.dagster_type_materializer\" title=\"dagster.dagster_type_materializer\"><code class=\"xref py py-func docutils literal notranslate\"><span class=\"pre\">&#64;dagster_type_materializer</span></code></a> decorator.</p>\n</dd></dl>\n\n<dl class=\"py function\">\n<dt id=\"dagster.usable_as_dagster_type\">\n<code class=\"sig-prename descclassname\"><span class=\"pre\">dagster.</span></code><code class=\"sig-name descname\"><span class=\"pre\">usable_as_dagster_type</span></code><span class=\"sig-paren\">(</span><em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">name</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">None</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">description</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">None</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">loader</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">None</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">materializer</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">None</span></span></em><span class=\"sig-paren\">)</span><a class=\"reference internal\" href=\"../../../../_modules/dagster/core/types/decorator#usable_as_dagster_type\"><span class=\"viewcode-link\"><span class=\"pre\">[source]</span></span></a><a class=\"headerlink\" href=\"#dagster.usable_as_dagster_type\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Decorate a Python class to make it usable as a Dagster Type.</p>\n<p>This is intended to make it straightforward to annotate existing business logic classes to\nmake them dagster types whose typecheck is an isinstance check against that python class.</p>\n<dl class=\"field-list simple\">\n<dt class=\"field-odd\">Parameters</dt>\n<dd class=\"field-odd\"><ul class=\"simple\">\n<li><p><strong>python_type</strong> (<em>cls</em>) \u2013 The python type to make usable as python type.</p></li>\n<li><p><strong>name</strong> (<em>Optional</em><em>[</em><a class=\"reference external\" href=\"https://docs.python.org/3/library/stdtypes.html#str\" title=\"(in Python v3.8)\"><em>str</em></a><em>]</em>) \u2013 Name of the new Dagster type. If <code class=\"docutils literal notranslate\"><span class=\"pre\">None</span></code>, the name (<code class=\"docutils literal notranslate\"><span class=\"pre\">__name__</span></code>) of\nthe <code class=\"docutils literal notranslate\"><span class=\"pre\">python_type</span></code> will be used.</p></li>\n<li><p><strong>description</strong> (<em>Optional</em><em>[</em><a class=\"reference external\" href=\"https://docs.python.org/3/library/stdtypes.html#str\" title=\"(in Python v3.8)\"><em>str</em></a><em>]</em>) \u2013 A user-readable description of the type.</p></li>\n<li><p><strong>loader</strong> (<em>Optional</em><em>[</em><a class=\"reference internal\" href=\"#dagster.DagsterTypeLoader\" title=\"dagster.DagsterTypeLoader\"><em>DagsterTypeLoader</em></a><em>]</em>) \u2013 An instance of a class that\ninherits from <a class=\"reference internal\" href=\"#dagster.DagsterTypeLoader\" title=\"dagster.DagsterTypeLoader\"><code class=\"xref py py-class docutils literal notranslate\"><span class=\"pre\">DagsterTypeLoader</span></code></a> and can map config data to a value of\nthis type. Specify this argument if you will need to shim values of this type using the\nconfig machinery. As a rule, you should use the\n<a class=\"reference internal\" href=\"#dagster.dagster_type_loader\" title=\"dagster.dagster_type_loader\"><code class=\"xref py py-func docutils literal notranslate\"><span class=\"pre\">&#64;dagster_type_loader</span></code></a> decorator to construct\nthese arguments.</p></li>\n<li><p><strong>materializer</strong> (<em>Optional</em><em>[</em><a class=\"reference internal\" href=\"#dagster.DagsterTypeMaterializer\" title=\"dagster.DagsterTypeMaterializer\"><em>DagsterTypeMaterializer</em></a><em>]</em>) \u2013 An instance of a class\nthat inherits from <a class=\"reference internal\" href=\"#dagster.DagsterTypeMaterializer\" title=\"dagster.DagsterTypeMaterializer\"><code class=\"xref py py-class docutils literal notranslate\"><span class=\"pre\">DagsterTypeMaterializer</span></code></a> and can persist values of\nthis type. As a rule, you should use the\n<a class=\"reference internal\" href=\"#dagster.dagster_type_materializer\" title=\"dagster.dagster_type_materializer\"><code class=\"xref py py-func docutils literal notranslate\"><span class=\"pre\">&#64;dagster_type_materializer</span></code></a>\ndecorator to construct these arguments.</p></li>\n</ul>\n</dd>\n</dl>\n<p>Examples:</p>\n<div class=\"highlight-python notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"c1\"># dagster_aws.s3.file_manager.S3FileHandle</span>\n<span class=\"nd\">@usable_as_dagster_type</span>\n<span class=\"k\">class</span> <span class=\"nc\">S3FileHandle</span><span class=\"p\">(</span><span class=\"n\">FileHandle</span><span class=\"p\">):</span>\n    <span class=\"k\">def</span> <span class=\"fm\">__init__</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">s3_bucket</span><span class=\"p\">,</span> <span class=\"n\">s3_key</span><span class=\"p\">):</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_s3_bucket</span> <span class=\"o\">=</span> <span class=\"n\">check</span><span class=\"o\">.</span><span class=\"n\">str_param</span><span class=\"p\">(</span><span class=\"n\">s3_bucket</span><span class=\"p\">,</span> <span class=\"s1\">&#39;s3_bucket&#39;</span><span class=\"p\">)</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_s3_key</span> <span class=\"o\">=</span> <span class=\"n\">check</span><span class=\"o\">.</span><span class=\"n\">str_param</span><span class=\"p\">(</span><span class=\"n\">s3_key</span><span class=\"p\">,</span> <span class=\"s1\">&#39;s3_key&#39;</span><span class=\"p\">)</span>\n\n    <span class=\"nd\">@property</span>\n    <span class=\"k\">def</span> <span class=\"nf\">s3_bucket</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">):</span>\n        <span class=\"k\">return</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_s3_bucket</span>\n\n    <span class=\"nd\">@property</span>\n    <span class=\"k\">def</span> <span class=\"nf\">s3_key</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">):</span>\n        <span class=\"k\">return</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_s3_key</span>\n\n    <span class=\"nd\">@property</span>\n    <span class=\"k\">def</span> <span class=\"nf\">path_desc</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">):</span>\n        <span class=\"k\">return</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">s3_path</span>\n\n    <span class=\"nd\">@property</span>\n    <span class=\"k\">def</span> <span class=\"nf\">s3_path</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">):</span>\n        <span class=\"k\">return</span> <span class=\"s1\">&#39;s3://</span><span class=\"si\">{bucket}</span><span class=\"s1\">/</span><span class=\"si\">{key}</span><span class=\"s1\">&#39;</span><span class=\"o\">.</span><span class=\"n\">format</span><span class=\"p\">(</span><span class=\"n\">bucket</span><span class=\"o\">=</span><span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">s3_bucket</span><span class=\"p\">,</span> <span class=\"n\">key</span><span class=\"o\">=</span><span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">s3_key</span><span class=\"p\">)</span>\n</pre></div>\n</div>\n</dd></dl>\n\n<dl class=\"py function\">\n<dt id=\"dagster.make_python_type_usable_as_dagster_type\">\n<code class=\"sig-prename descclassname\"><span class=\"pre\">dagster.</span></code><code class=\"sig-name descname\"><span class=\"pre\">make_python_type_usable_as_dagster_type</span></code><span class=\"sig-paren\">(</span><em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">python_type</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">dagster_type</span></span></em><span class=\"sig-paren\">)</span><a class=\"reference internal\" href=\"../../../../_modules/dagster/core/types/dagster_type#make_python_type_usable_as_dagster_type\"><span class=\"viewcode-link\"><span class=\"pre\">[source]</span></span></a><a class=\"headerlink\" href=\"#dagster.make_python_type_usable_as_dagster_type\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Take any existing python type and map it to a dagster type (generally created with\n<a class=\"reference internal\" href=\"#dagster.DagsterType\" title=\"dagster.DagsterType\"><code class=\"xref py py-class docutils literal notranslate\"><span class=\"pre\">DagsterType</span></code></a>) This can only be called once\non a given python type.</p>\n</dd></dl>\n\n<div class=\"section\" id=\"testing-types\">\n<h3>Testing Types<a class=\"headerlink\" href=\"#testing-types\" title=\"Permalink to this headline\">\u00b6</a></h3>\n<dl class=\"py function\">\n<dt id=\"dagster.check_dagster_type\">\n<code class=\"sig-prename descclassname\"><span class=\"pre\">dagster.</span></code><code class=\"sig-name descname\"><span class=\"pre\">check_dagster_type</span></code><span class=\"sig-paren\">(</span><em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">dagster_type</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">value</span></span></em><span class=\"sig-paren\">)</span><a class=\"reference internal\" href=\"../../../../_modules/dagster/utils/test#check_dagster_type\"><span class=\"viewcode-link\"><span class=\"pre\">[source]</span></span></a><a class=\"headerlink\" href=\"#dagster.check_dagster_type\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Test a custom Dagster type.</p>\n<dl class=\"field-list simple\">\n<dt class=\"field-odd\">Parameters</dt>\n<dd class=\"field-odd\"><ul class=\"simple\">\n<li><p><strong>dagster_type</strong> (<em>Any</em>) \u2013 The Dagster type to test. Should be one of the\n<a class=\"reference internal\" href=\"#builtin\"><span class=\"std std-ref\">built-in types</span></a>, a dagster type explicitly constructed with\n<code class=\"xref py py-func docutils literal notranslate\"><span class=\"pre\">as_dagster_type()</span></code>, <code class=\"xref py py-func docutils literal notranslate\"><span class=\"pre\">&#64;usable_as_dagster_type</span></code>, or\n<a class=\"reference internal\" href=\"#dagster.PythonObjectDagsterType\" title=\"dagster.PythonObjectDagsterType\"><code class=\"xref py py-func docutils literal notranslate\"><span class=\"pre\">PythonObjectDagsterType()</span></code></a>, or a Python type.</p></li>\n<li><p><strong>value</strong> (<em>Any</em>) \u2013 The runtime value to test.</p></li>\n</ul>\n</dd>\n<dt class=\"field-even\">Returns</dt>\n<dd class=\"field-even\"><p>The result of the type check.</p>\n</dd>\n<dt class=\"field-odd\">Return type</dt>\n<dd class=\"field-odd\"><p><a class=\"reference internal\" href=\"ops#dagster.TypeCheck\" title=\"dagster.TypeCheck\">TypeCheck</a></p>\n</dd>\n</dl>\n<p class=\"rubric\">Examples</p>\n<div class=\"highlight-python notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"k\">assert</span> <span class=\"n\">check_dagster_type</span><span class=\"p\">(</span><span class=\"n\">Dict</span><span class=\"p\">[</span><span class=\"n\">Any</span><span class=\"p\">,</span> <span class=\"n\">Any</span><span class=\"p\">],</span> <span class=\"p\">{</span><span class=\"s1\">&#39;foo&#39;</span><span class=\"p\">:</span> <span class=\"s1\">&#39;bar&#39;</span><span class=\"p\">})</span><span class=\"o\">.</span><span class=\"n\">success</span>\n</pre></div>\n</div>\n</dd></dl>\n\n</div>\n</div>\n</div>\n", "current_page_name": "sections/api/apidocs/types", "customsidebar": null, "display_toc": true, "meta": null, "metatags": "", "next": {"link": "../utilities/", "title": "Utilities"}, "page_source_suffix": ".rst", "parents": [], "prev": {"link": "../dynamic/", "title": "Dynamic Mapping &amp; Collect"}, "rellinks": [["genindex", "General Index", "I", "index"], ["py-modindex", "Python Module Index", "", "modules"], ["sections/api/apidocs/utilities", "Utilities", "N", "next"], ["sections/api/apidocs/dynamic", "Dynamic Mapping &amp; Collect", "P", "previous"]], "sidebars": ["globaltoc.html", "searchbox.html"], "sourcename": "sections/api/apidocs/types.rst.txt", "title": "Types", "toc": "<ul>\n<li><a class=\"reference internal\" href=\"#\">Types</a><ul>\n<li><a class=\"reference internal\" href=\"#built-in-types\">Built-in types</a></li>\n<li><a class=\"reference internal\" href=\"#making-new-types\">Making New Types</a><ul>\n<li><a class=\"reference internal\" href=\"#testing-types\">Testing Types</a></li>\n</ul>\n</li>\n</ul>\n</li>\n</ul>\n"}, "utilities": {"alabaster_version": "0.7.12", "body": "<div class=\"section\" id=\"utilities\">\n<h1>Utilities<a class=\"headerlink\" href=\"#utilities\" title=\"Permalink to this headline\">\u00b6</a></h1>\n<dl class=\"py function\">\n<dt id=\"dagster.file_relative_path\">\n<code class=\"sig-prename descclassname\"><span class=\"pre\">dagster.</span></code><code class=\"sig-name descname\"><span class=\"pre\">file_relative_path</span></code><span class=\"sig-paren\">(</span><em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">dunderfile</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">relative_path</span></span></em><span class=\"sig-paren\">)</span><a class=\"reference internal\" href=\"../../../../_modules/dagster/utils#file_relative_path\"><span class=\"viewcode-link\"><span class=\"pre\">[source]</span></span></a><a class=\"headerlink\" href=\"#dagster.file_relative_path\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Get a path relative to the currently executing Python file.</p>\n<p>This function is useful when one needs to load a file that is relative to the position of\nthe current file. (Such as when you encode a configuration file path in source file and want\nin runnable in any current working directory)</p>\n<dl class=\"field-list simple\">\n<dt class=\"field-odd\">Parameters</dt>\n<dd class=\"field-odd\"><ul class=\"simple\">\n<li><p><strong>dunderfile</strong> (<a class=\"reference external\" href=\"https://docs.python.org/3/library/stdtypes.html#str\" title=\"(in Python v3.8)\"><em>str</em></a>) \u2013 Should always be <code class=\"docutils literal notranslate\"><span class=\"pre\">__file__</span></code>.</p></li>\n<li><p><strong>relative_path</strong> (<a class=\"reference external\" href=\"https://docs.python.org/3/library/stdtypes.html#str\" title=\"(in Python v3.8)\"><em>str</em></a>) \u2013 Path to get relative to the currently executing file.</p></li>\n</ul>\n</dd>\n</dl>\n<p><strong>Examples</strong>:</p>\n<div class=\"highlight-python notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"n\">file_relative_path</span><span class=\"p\">(</span><span class=\"vm\">__file__</span><span class=\"p\">,</span> <span class=\"s1\">&#39;path/relative/to/file&#39;</span><span class=\"p\">)</span>\n</pre></div>\n</div>\n</dd></dl>\n\n<dl class=\"py function\">\n<dt id=\"dagster.config_from_files\">\n<code class=\"sig-prename descclassname\"><span class=\"pre\">dagster.</span></code><code class=\"sig-name descname\"><span class=\"pre\">config_from_files</span></code><span class=\"sig-paren\">(</span><em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">config_files</span></span></em><span class=\"sig-paren\">)</span><a class=\"reference internal\" href=\"../../../../_modules/dagster/core/definitions/utils#config_from_files\"><span class=\"viewcode-link\"><span class=\"pre\">[source]</span></span></a><a class=\"headerlink\" href=\"#dagster.config_from_files\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Constructs run config from YAML files.</p>\n<dl class=\"field-list simple\">\n<dt class=\"field-odd\">Parameters</dt>\n<dd class=\"field-odd\"><p><strong>config_files</strong> (<em>List</em><em>[</em><a class=\"reference external\" href=\"https://docs.python.org/3/library/stdtypes.html#str\" title=\"(in Python v3.8)\"><em>str</em></a><em>]</em>) \u2013 List of paths or glob patterns for yaml files\nto load and parse as the run config.</p>\n</dd>\n<dt class=\"field-even\">Returns</dt>\n<dd class=\"field-even\"><p>A run config dictionary constructed from provided YAML files.</p>\n</dd>\n<dt class=\"field-odd\">Return type</dt>\n<dd class=\"field-odd\"><p>Dict[<a class=\"reference external\" href=\"https://docs.python.org/3/library/stdtypes.html#str\" title=\"(in Python v3.8)\">str</a>, Any]</p>\n</dd>\n<dt class=\"field-even\">Raises</dt>\n<dd class=\"field-even\"><ul class=\"simple\">\n<li><p><a class=\"reference external\" href=\"https://docs.python.org/3/library/exceptions.html#FileNotFoundError\" title=\"(in Python v3.8)\"><strong>FileNotFoundError</strong></a> \u2013 When a config file produces no results</p></li>\n<li><p><a class=\"reference internal\" href=\"errors#dagster.DagsterInvariantViolationError\" title=\"dagster.DagsterInvariantViolationError\"><strong>DagsterInvariantViolationError</strong></a> \u2013 When one of the YAML files is invalid and has a parse\n    error.</p></li>\n</ul>\n</dd>\n</dl>\n</dd></dl>\n\n<dl class=\"py function\">\n<dt id=\"dagster.config_from_pkg_resources\">\n<code class=\"sig-prename descclassname\"><span class=\"pre\">dagster.</span></code><code class=\"sig-name descname\"><span class=\"pre\">config_from_pkg_resources</span></code><span class=\"sig-paren\">(</span><em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">pkg_resource_defs</span></span></em><span class=\"sig-paren\">)</span><a class=\"reference internal\" href=\"../../../../_modules/dagster/core/definitions/utils#config_from_pkg_resources\"><span class=\"viewcode-link\"><span class=\"pre\">[source]</span></span></a><a class=\"headerlink\" href=\"#dagster.config_from_pkg_resources\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Load a run config from a package resource, using <code class=\"xref py py-func docutils literal notranslate\"><span class=\"pre\">pkg_resources.resource_string()</span></code>.</p>\n<p>Example:</p>\n<div class=\"highlight-python notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"n\">config_from_pkg_resources</span><span class=\"p\">(</span>\n    <span class=\"n\">pkg_resource_defs</span><span class=\"o\">=</span><span class=\"p\">[</span>\n        <span class=\"p\">(</span><span class=\"s1\">&#39;dagster_examples.airline_demo.environments&#39;</span><span class=\"p\">,</span> <span class=\"s1\">&#39;local_base.yaml&#39;</span><span class=\"p\">),</span>\n        <span class=\"p\">(</span><span class=\"s1\">&#39;dagster_examples.airline_demo.environments&#39;</span><span class=\"p\">,</span> <span class=\"s1\">&#39;local_warehouse.yaml&#39;</span><span class=\"p\">),</span>\n    <span class=\"p\">],</span>\n<span class=\"p\">)</span>\n</pre></div>\n</div>\n<dl class=\"field-list simple\">\n<dt class=\"field-odd\">Parameters</dt>\n<dd class=\"field-odd\"><p><strong>pkg_resource_defs</strong> (<em>List</em><em>[</em><em>(</em><a class=\"reference external\" href=\"https://docs.python.org/3/library/stdtypes.html#str\" title=\"(in Python v3.8)\"><em>str</em></a><em>, </em><a class=\"reference external\" href=\"https://docs.python.org/3/library/stdtypes.html#str\" title=\"(in Python v3.8)\"><em>str</em></a><em>)</em><em>]</em>) \u2013 List of pkg_resource modules/files to\nload as the run config.</p>\n</dd>\n<dt class=\"field-even\">Returns</dt>\n<dd class=\"field-even\"><p>A run config dictionary constructed from the provided yaml strings</p>\n</dd>\n<dt class=\"field-odd\">Return type</dt>\n<dd class=\"field-odd\"><p>Dict[Str, Any]</p>\n</dd>\n<dt class=\"field-even\">Raises</dt>\n<dd class=\"field-even\"><p><a class=\"reference internal\" href=\"errors#dagster.DagsterInvariantViolationError\" title=\"dagster.DagsterInvariantViolationError\"><strong>DagsterInvariantViolationError</strong></a> \u2013 When one of the YAML documents is invalid and has a\n    parse error.</p>\n</dd>\n</dl>\n</dd></dl>\n\n<dl class=\"py function\">\n<dt id=\"dagster.config_from_yaml_strings\">\n<code class=\"sig-prename descclassname\"><span class=\"pre\">dagster.</span></code><code class=\"sig-name descname\"><span class=\"pre\">config_from_yaml_strings</span></code><span class=\"sig-paren\">(</span><em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">yaml_strings</span></span></em><span class=\"sig-paren\">)</span><a class=\"reference internal\" href=\"../../../../_modules/dagster/core/definitions/utils#config_from_yaml_strings\"><span class=\"viewcode-link\"><span class=\"pre\">[source]</span></span></a><a class=\"headerlink\" href=\"#dagster.config_from_yaml_strings\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Static constructor for run configs from YAML strings.</p>\n<dl class=\"field-list simple\">\n<dt class=\"field-odd\">Parameters</dt>\n<dd class=\"field-odd\"><p><strong>yaml_strings</strong> (<em>List</em><em>[</em><a class=\"reference external\" href=\"https://docs.python.org/3/library/stdtypes.html#str\" title=\"(in Python v3.8)\"><em>str</em></a><em>]</em>) \u2013 List of yaml strings to parse as the run config.</p>\n</dd>\n<dt class=\"field-even\">Returns</dt>\n<dd class=\"field-even\"><p>A run config dictionary constructed from the provided yaml strings</p>\n</dd>\n<dt class=\"field-odd\">Return type</dt>\n<dd class=\"field-odd\"><p>Dict[Str, Any]</p>\n</dd>\n<dt class=\"field-even\">Raises</dt>\n<dd class=\"field-even\"><p><a class=\"reference internal\" href=\"errors#dagster.DagsterInvariantViolationError\" title=\"dagster.DagsterInvariantViolationError\"><strong>DagsterInvariantViolationError</strong></a> \u2013 When one of the YAML documents is invalid and has a\n    parse error.</p>\n</dd>\n</dl>\n</dd></dl>\n\n<dl class=\"py function\">\n<dt id=\"dagster.get_dagster_logger\">\n<code class=\"sig-prename descclassname\"><span class=\"pre\">dagster.</span></code><code class=\"sig-name descname\"><span class=\"pre\">get_dagster_logger</span></code><span class=\"sig-paren\">(</span><em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">name</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">None</span></span></em><span class=\"sig-paren\">)</span><a class=\"reference internal\" href=\"../../../../_modules/dagster/utils/log#get_dagster_logger\"><span class=\"viewcode-link\"><span class=\"pre\">[source]</span></span></a><a class=\"headerlink\" href=\"#dagster.get_dagster_logger\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Creates a python logger whose output messages will be captured and converted into Dagster log\nmessages. This means they will have structured information such as the step_key, run_id, etc.\nembedded into them, and will show up in the Dagster event log.</p>\n<p>This can be used as a more convenient alternative to <cite>context.log</cite> in most cases. If log level\nis not set explicitly, defaults to DEBUG.</p>\n<dl class=\"field-list simple\">\n<dt class=\"field-odd\">Parameters</dt>\n<dd class=\"field-odd\"><p><strong>name</strong> (<em>Optional</em><em>[</em><a class=\"reference external\" href=\"https://docs.python.org/3/library/stdtypes.html#str\" title=\"(in Python v3.8)\"><em>str</em></a><em>]</em>) \u2013 If supplied, will create a logger with the name \u201cdagster.builtin.{name}\u201d,\nwith properties inherited from the base Dagster logger. If omitted, the returned logger\nwill be named \u201cdagster.builtin\u201d.</p>\n</dd>\n<dt class=\"field-even\">Returns</dt>\n<dd class=\"field-even\"><p>A logger whose output will be captured by Dagster.</p>\n</dd>\n<dt class=\"field-odd\">Return type</dt>\n<dd class=\"field-odd\"><p><a class=\"reference external\" href=\"https://docs.python.org/3/library/logging.html#logging.Logger\" title=\"(in Python v3.8)\"><code class=\"xref py py-class docutils literal notranslate\"><span class=\"pre\">logging.Logger</span></code></a></p>\n</dd>\n</dl>\n<p class=\"rubric\">Example</p>\n<div class=\"highlight-python notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"kn\">from</span> <span class=\"nn\">dagster</span> <span class=\"kn\">import</span> <span class=\"n\">get_dagster_logger</span><span class=\"p\">,</span> <span class=\"n\">op</span>\n\n<span class=\"nd\">@op</span>\n<span class=\"k\">def</span> <span class=\"nf\">hello_op</span><span class=\"p\">():</span>\n    <span class=\"n\">log</span> <span class=\"o\">=</span> <span class=\"n\">get_dagster_logger</span><span class=\"p\">()</span>\n    <span class=\"k\">for</span> <span class=\"n\">i</span> <span class=\"ow\">in</span> <span class=\"nb\">range</span><span class=\"p\">(</span><span class=\"mi\">5</span><span class=\"p\">):</span>\n        <span class=\"c1\"># do something</span>\n        <span class=\"n\">log</span><span class=\"o\">.</span><span class=\"n\">info</span><span class=\"p\">(</span><span class=\"sa\">f</span><span class=\"s2\">&quot;Did </span><span class=\"si\">{</span><span class=\"n\">i</span><span class=\"o\">+</span><span class=\"mi\">1</span><span class=\"si\">}</span><span class=\"s2\"> things!&quot;</span><span class=\"p\">)</span>\n</pre></div>\n</div>\n</dd></dl>\n\n<dl class=\"py class\">\n<dt id=\"dagster.ExperimentalWarning\">\n<em class=\"property\"><span class=\"pre\">class</span> </em><code class=\"sig-prename descclassname\"><span class=\"pre\">dagster.</span></code><code class=\"sig-name descname\"><span class=\"pre\">ExperimentalWarning</span></code><a class=\"reference internal\" href=\"../../../../_modules/dagster/utils/backcompat#ExperimentalWarning\"><span class=\"viewcode-link\"><span class=\"pre\">[source]</span></span></a><a class=\"headerlink\" href=\"#dagster.ExperimentalWarning\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd></dd></dl>\n\n<dl class=\"py class\">\n<dt id=\"dagster.utils.forked_pdb.ForkedPdb\">\n<em class=\"property\"><span class=\"pre\">class</span> </em><code class=\"sig-prename descclassname\"><span class=\"pre\">dagster.utils.forked_pdb.</span></code><code class=\"sig-name descname\"><span class=\"pre\">ForkedPdb</span></code><span class=\"sig-paren\">(</span><em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">completekey</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">'tab'</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">stdin</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">None</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">stdout</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">None</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">skip</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">None</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">nosigint</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">False</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">readrc</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">True</span></span></em><span class=\"sig-paren\">)</span><a class=\"reference internal\" href=\"../../../../_modules/dagster/utils/forked_pdb#ForkedPdb\"><span class=\"viewcode-link\"><span class=\"pre\">[source]</span></span></a><a class=\"headerlink\" href=\"#dagster.utils.forked_pdb.ForkedPdb\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>A pdb subclass that may be used from a forked multiprocessing child</p>\n<p><strong>Examples</strong>:</p>\n<div class=\"highlight-python notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"kn\">from</span> <span class=\"nn\">dagster.utils.forked_pdb</span> <span class=\"kn\">import</span> <span class=\"n\">ForkedPdb</span>\n\n<span class=\"nd\">@solid</span>\n<span class=\"k\">def</span> <span class=\"nf\">complex_solid</span><span class=\"p\">(</span><span class=\"n\">_</span><span class=\"p\">):</span>\n    <span class=\"c1\"># some complicated stuff</span>\n\n    <span class=\"n\">ForkedPdb</span><span class=\"p\">()</span><span class=\"o\">.</span><span class=\"n\">set_trace</span><span class=\"p\">()</span>\n\n    <span class=\"c1\"># some other complicated stuff</span>\n</pre></div>\n</div>\n<p>You can initiate pipeline execution via dagit and use the pdb debugger to examine/step through\nexecution at the breakpoint.</p>\n</dd></dl>\n\n<dl class=\"py function\">\n<dt id=\"dagster.utils.make_email_on_run_failure_sensor\">\n<code class=\"sig-prename descclassname\"><span class=\"pre\">dagster.utils.</span></code><code class=\"sig-name descname\"><span class=\"pre\">make_email_on_run_failure_sensor</span></code><span class=\"sig-paren\">(</span><em class=\"sig-param\"><span class=\"o\"><span class=\"pre\">*</span></span><span class=\"n\"><span class=\"pre\">args</span></span></em>, <em class=\"sig-param\"><span class=\"o\"><span class=\"pre\">**</span></span><span class=\"n\"><span class=\"pre\">kwargs</span></span></em><span class=\"sig-paren\">)</span><a class=\"reference internal\" href=\"../../../../_modules/dagster/utils#make_email_on_run_failure_sensor\"><span class=\"viewcode-link\"><span class=\"pre\">[source]</span></span></a><a class=\"headerlink\" href=\"#dagster.utils.make_email_on_run_failure_sensor\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd></dd></dl>\n\n</div>\n", "current_page_name": "sections/api/apidocs/utilities", "customsidebar": null, "display_toc": false, "meta": null, "metatags": "", "next": {"link": "../memoization/", "title": "Versioning and Memoization"}, "page_source_suffix": ".rst", "parents": [], "prev": {"link": "../types/", "title": "Types"}, "rellinks": [["genindex", "General Index", "I", "index"], ["py-modindex", "Python Module Index", "", "modules"], ["sections/api/apidocs/memoization", "Versioning and Memoization", "N", "next"], ["sections/api/apidocs/types", "Types", "P", "previous"]], "sidebars": ["globaltoc.html", "searchbox.html"], "sourcename": "sections/api/apidocs/utilities.rst.txt", "title": "Utilities", "toc": "<ul>\n<li><a class=\"reference internal\" href=\"#\">Utilities</a></li>\n</ul>\n"}}}}